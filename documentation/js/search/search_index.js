var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.069,1,0.678]],["body/components/AppComponent.html",[0,0.117,1,1.15,2,0.203,3,0.173,4,0.828,5,0.771,6,0.828,7,0.144,8,2.514,9,0.771,10,1.697,11,1.59,12,1.347,13,1.086,14,4.206,15,1.086,16,4.206,17,0.203,18,0.543,19,1.692,20,0.625,21,2.203,22,1.807,23,1.068,24,1.902,25,1.323,26,3.551,27,0.682,28,2.986,29,0.57,30,0.029,31,0.601,32,0.286,33,0.421,34,0.868,35,1.027,36,1.447,37,2.986,38,0.404,39,0.203,40,3.678,41,5.285,42,2.986,43,0.828,44,0.956,45,0.771,46,2.514,47,1.383,48,1.383,49,1.188,50,2.514,51,1.104,52,0.173,53,0.126,54,2.986,55,3.541,56,2.986,57,1.786,58,0.806,59,1.281,60,2.986,61,0.713,62,1.257,63,2.112,64,1.447,65,1.188,66,1.955,67,2.986,68,4.206,69,4.206,70,2.203,71,1.188,72,2.986,73,2.986,74,2.515,75,3.541,76,4.206,77,1.287,78,4.206,79,2.986,80,1.383,81,2.514,82,4.45,83,0.495,84,3.541,85,4.691,86,2.514,87,3.541,88,2.986,89,1.971,90,2.986,91,2.514,92,2.986,93,2.986,94,2.515,95,2.986,96,2.514,97,2.986,98,2.986,99,2.986,100,2.514,101,2.986,102,2.514,103,2.514,104,1.675,105,1.631,106,2.986,107,2.986,108,2.986,109,0.89,110,2.986,111,2.986,112,2.986,113,1.086,114,2.986,115,2.986,116,2.986,117,2.444,118,2.986,119,2.986,120,2.514,121,1.971,122,1.027,123,2.514,124,2.986,125,2.986,126,2.986,127,2.986,128,1.786,129,2.514,130,2.986,131,2.986,132,2.514,133,1.281,134,2.986,135,2.986,136,2.986,137,2.986,138,0.716,139,0.741,140,1.086,141,1.167,142,1.177,143,0.828,144,0.828,145,0.616,146,0.828,147,0.616,148,0.828,149,0.616,150,0.828,151,0.616,152,1.167,153,0.616,154,0.828,155,0.616,156,0.828,157,0.616,158,0.828,159,0.616,160,0.828,161,0.616,162,0.828,163,0.616,164,0.828,165,0.57,166,0.828,167,0.616,168,0.771,169,0.828,170,0.616,171,0.616,172,0.828,173,0.017,174,0.017]],["title/modules/AppModule.html",[175,1.794,176,2.168]],["body/modules/AppModule.html",[0,0.119,1,1.326,2,0.212,3,0.181,7,0.151,30,0.029,33,0.433,38,0.46,39,0.212,43,0.864,47,1.443,48,2.007,52,0.312,53,0.093,58,0.768,61,0.535,70,2.298,83,0.39,89,2.056,138,0.747,145,1.209,147,1.24,149,1.209,151,1.209,153,1.209,155,1.209,157,1.209,159,1.209,161,1.209,163,1.209,165,1.147,167,1.209,168,0.804,170,1.24,171,1.24,173,0.018,174,0.018,175,2.366,176,4.536,177,2.056,178,4.193,179,4.193,180,2.59,181,2.622,182,2.622,183,2.622,184,3.503,185,3.647,186,3.114,187,4.331,188,2.298,189,1.862,190,4.331,191,3.114,192,2.859,193,4.98,194,4.98,195,2.056,196,4.331,197,2.622,198,2.622,199,4.331,200,2.298,201,1.152,202,3.114,203,2.298,204,3.114,205,2.298,206,3.114,207,2.298,208,3.114,209,2.298,210,3.114,211,2.298,212,3.114,213,3.114,214,3.114,215,2.298,216,4.331,217,2.298,218,4.331,219,2.298,220,3.114,221,2.298,222,3.114,223,2.298,224,2.056,225,2.298,226,3.114,227,2.298,228,3.114,229,2.622,230,4.331,231,5.858,232,0.804,233,4.331,234,4.193,235,4.331,236,2.59,237,3.114,238,3.114,239,3.114,240,3.114]],["title/classes/AppPage.html",[53,0.098,241,2.423]],["body/classes/AppPage.html",[2,0.338,3,0.288,7,0.24,12,1.591,17,0.338,27,0.949,30,0.028,38,0.338,52,0.288,53,0.175,140,1.283,173,0.024,174,0.024,189,2.972,241,4.317,242,4.184,243,1.303,244,6.419,245,6.419,246,4.97,247,0.716,248,4.97,249,4.184,250,4.97,251,4.97,252,4.97]],["title/components/BreadcrumbsComponent.html",[0,0.069,145,0.678]],["body/components/BreadcrumbsComponent.html",[0,0.123,1,0.635,2,0.209,3,0.179,4,0.854,5,0.794,6,0.854,7,0.149,9,0.794,10,1.704,11,1.584,13,1.109,15,1.109,17,0.209,18,0.552,19,1.869,20,0.458,21,2.27,22,1.74,23,1.055,25,1.428,27,0.991,29,0.82,30,0.029,31,0.661,32,0.337,33,0.495,34,0.635,35,1.478,36,1.478,38,0.383,39,0.209,43,0.854,45,0.794,47,1.426,48,1.426,51,1.138,52,0.179,53,0.092,58,0.765,61,0.661,62,1.277,63,2.156,64,1.702,65,1.224,66,1.138,77,0.685,83,0.388,138,0.738,139,0.757,140,1.109,141,1.192,142,1.193,143,0.854,144,0.854,145,1.105,146,0.854,147,0.635,148,0.854,149,0.635,150,0.854,151,0.635,152,1.192,153,0.635,154,0.854,155,0.635,156,0.854,157,0.635,158,0.854,159,0.635,160,0.854,161,0.635,162,0.854,163,0.635,164,0.854,165,0.588,166,0.854,167,0.635,168,0.794,169,0.854,170,0.635,171,0.635,172,0.854,173,0.018,174,0.02,234,4.509,243,0.957,247,0.628,253,2.591,254,1.545,255,3.616,256,3.169,257,4.295,258,3.616,259,3.616,260,2.156,261,2.959,262,5.836,263,4.295,264,4.295,265,3.535,266,1.584,267,4.295,268,3.535,269,3.535,270,3.535,271,3.077,272,4.295,273,3.077,274,3.077,275,0.854,276,3.077,277,1.584,278,3.077,279,3.077,280,2.926,281,2.926,282,3.953,283,2.569,284,2.569,285,1.842,286,2.93,287,3.616,288,3.616,289,3.077,290,1.99,291,3.266,292,3.077,293,3.077,294,2.031,295,1.84,296,2.031,297,2.031,298,0.917,299,2.031,300,2.835,301,2.835,302,3.077,303,4.295,304,3.616,305,4.295,306,3.616]],["title/pipes/BypassSanitize.html",[184,1.964,307,2.168]],["body/pipes/BypassSanitize.html",[2,0.327,3,0.279,7,0.233,9,1.241,27,0.78,29,0.918,30,0.028,31,0.757,32,0.327,33,0.481,34,1.266,38,0.39,39,0.327,52,0.279,53,0.144,65,1.914,173,0.024,174,0.024,184,3.798,188,3.548,189,2.876,225,4.234,243,1.071,247,0.64,260,2.414,307,4.048,308,3.787,309,4.049,310,4.809,311,5.738,312,4.809,313,4.809,314,6.132,315,5.738,316,5.738,317,4.809,318,4.809]],["title/components/CategoriesComponent.html",[0,0.069,147,0.678]],["body/components/CategoriesComponent.html",[0,0.126,1,0.764,2,0.252,3,0.215,4,1.027,5,0.955,6,1.027,7,0.179,9,0.955,10,1.741,11,1.618,13,1.257,15,1.257,17,0.252,18,0.543,20,0.55,22,1.103,23,1.107,25,1.461,27,0.882,29,0.93,30,0.028,31,0.713,32,0.331,33,0.544,38,0.37,39,0.252,45,0.955,51,1.369,52,0.215,53,0.111,58,0.815,59,1.588,61,0.671,62,0.955,63,2.444,64,1.273,66,1.369,77,1.212,83,0.426,104,1.273,113,1.257,138,0.888,139,0.858,140,1.257,141,1.351,142,1.287,143,1.027,144,1.027,145,0.764,146,1.027,147,1.193,148,1.027,149,0.764,150,1.027,151,0.764,152,1.351,153,0.764,154,1.027,155,0.764,156,1.027,157,0.764,158,1.027,159,0.764,160,1.027,161,0.764,162,1.027,163,0.764,164,1.027,165,0.707,166,1.027,167,0.764,168,0.955,169,1.027,170,0.764,171,0.764,172,1.027,173,0.02,174,0.02,232,1.622,243,1.084,247,0.645,266,1.559,275,1.027,319,3.116,320,4.868,321,4.868,322,4.868,323,2.731,324,3.701,325,4.099,326,3.701,327,3.701,328,1.369,329,3.701,330,4.868,331,3.116,332,4.868,333,3.701,334,0.955,335,3.701,336,3.701,337,4.868,338,2.66]],["title/interfaces/Category.html",[232,0.848,339,0.731]],["body/interfaces/Category.html",[2,0.233,3,0.199,7,0.166,12,1.096,17,0.233,18,0.515,19,2.141,22,1.56,24,1.096,25,0.762,30,0.029,32,0.398,34,1.409,38,0.356,39,0.233,43,0.95,49,1.362,52,0.34,53,0.102,59,1.468,61,0.722,65,1.362,77,1.029,83,0.268,113,1.556,122,1.178,139,0.814,173,0.019,174,0.019,201,1.266,232,1.556,247,0.515,254,2.627,275,1.554,298,1.378,334,1.35,338,2.525,339,1.303,340,1.87,341,2.597,342,3.902,343,1.109,344,2.244,345,2.32,346,2.764,347,2.141,348,2.32,349,1.096,350,1.266,351,1.266,352,2.627,353,2.047,354,1.48,355,2.047,356,2.047,357,1.02,358,2.047,359,2.047,360,2.764,361,1.02,362,2.047,363,2.047,364,2.047,365,1.586,366,2.047,367,1.87,368,2.047,369,2.047,370,2.047,371,2.047,372,2.047,373,3.499,374,2.047,375,3.129,376,2.047,377,3.499,378,2.047,379,3.129,380,2.764,381,2.047,382,2.047,383,2.764,384,2.047,385,2.764,386,2.047,387,1.839,388,2.764,389,2.525,390,2.764,391,2.764]],["title/interfaces/Course.html",[83,0.257,339,0.731]],["body/interfaces/Course.html",[2,0.181,3,0.155,7,0.129,12,0.853,17,0.181,18,0.432,19,1.241,20,0.396,23,0.47,30,0.029,31,0.329,32,0.42,33,0.625,34,1.393,38,0.181,39,0.181,44,1.977,52,0.291,53,0.08,57,1.594,58,0.838,64,1.914,71,1.543,74,1.594,77,0.863,80,1.796,83,0.522,104,1.834,105,1.456,109,1.156,113,1.001,122,1.334,133,1.663,173,0.016,174,0.016,232,0.688,236,1.594,247,0.709,275,1.632,286,2.519,298,0.794,334,1.179,339,1.118,341,1.997,343,0.93,349,1.782,350,0.986,351,0.986,354,1.241,357,1.156,361,1.496,387,1.061,392,1.594,393,3.001,394,3.001,395,3.001,396,3.001,397,3.001,398,2.742,399,3.001,400,3.1,401,3.213,402,1.594,403,1.456,404,1.594,405,1.594,406,1.594,407,1.759,408,1.759,409,1.759,410,1.759,411,1.759,412,3.017,413,1.759,414,1.594,415,1.759,416,1.759,417,1.456,418,1.594,419,1.759,420,3.04,421,1.759,422,1.759,423,1.759,424,1.594,425,1.759,426,2.152,427,1.759,428,1.947,429,1.759,430,1.759,431,1.759,432,2.559,433,1.759,434,1.759,435,1.759,436,3.017,437,3.312,438,1.759,439,1.759,440,1.759,441,2.319,442,2.118,443,3.312,444,2.559,445,2.118,446,1.759,447,2.559,448,2.733,449,2.559,450,2.559,451,2.319,452,1.759,453,1.759,454,1.759,455,1.594,456,1.594,457,1.235,458,1.594,459,1.759,460,1.759,461,1.759,462,2.497,463,2.319,464,2.319,465,1.594,466,2.117,467,1.759,468,1.759,469,1.759,470,1.796,471,1.594,472,1.947,473,1.594,474,1.947,475,1.759,476,2.118,477,1.759,478,1.759,479,1.759,480,1.759,481,1.759,482,1.759,483,3.017,484,2.573,485,2.319,486,1.338,487,1.759,488,1.338,489,2.559,490,1.594,491,0.917,492,1.594,493,1.594,494,1.759,495,1.759]],["title/components/CourseChipComponent.html",[0,0.069,149,0.678]],["body/components/CourseChipComponent.html",[0,0.12,1,0.657,2,0.216,3,0.185,4,0.883,5,0.821,6,0.883,7,0.154,9,0.821,10,1.711,11,1.59,13,1.134,15,1.134,17,0.216,18,0.49,20,0.473,22,1.802,23,1.126,25,1.346,27,0.956,29,0.839,30,0.029,31,0.704,32,0.343,33,0.504,38,0.37,39,0.216,43,0.883,44,1.018,45,0.821,51,1.176,52,0.185,53,0.095,55,3.701,58,0.801,61,0.542,62,0.821,66,1.625,83,0.515,87,3.701,109,1.31,117,1.597,138,0.763,139,0.775,140,1.134,141,1.22,142,1.27,143,0.883,144,0.883,145,0.657,146,0.883,147,0.657,148,0.883,149,1.121,150,0.883,151,0.657,152,1.22,153,0.657,154,0.883,155,0.657,156,0.883,157,0.657,158,0.883,159,0.657,160,0.883,161,0.657,162,0.883,163,0.657,164,0.883,165,0.607,166,0.883,167,0.657,168,0.821,169,0.883,170,0.657,171,0.657,172,0.883,173,0.018,174,0.018,219,4.46,243,0.979,247,0.706,266,1.407,277,1.018,285,2.33,328,1.176,398,1.738,401,2.529,426,1.364,456,1.902,457,1.474,458,1.902,496,3.99,497,2.678,498,4.395,499,4.395,500,5.897,501,3.701,502,5.433,503,1.597,504,4.395,505,3.181,506,4.395,507,3.181,508,3.181,509,3.181,510,3.181,511,3.181,512,3.181,513,3.181,514,3.181,515,5.433,516,4.395,517,3.181,518,4.395,519,2.037,520,3.181,521,3.181,522,3.181,523,3.181,524,3.181,525,3.181,526,3.181,527,2.678,528,3.181,529,3.701,530,3.181,531,3.181,532,3.181,533,3.181,534,3.181,535,3.181,536,3.181,537,3.181,538,3.181,539,3.181,540,3.243,541,3.181,542,3.181,543,3.181,544,3.181,545,3.181,546,3.181,547,3.181,548,3.181,549,3.181,550,3.181]],["title/components/CourseSelectionComponent.html",[0,0.069,151,0.678]],["body/components/CourseSelectionComponent.html",[0,0.101,1,0.427,2,0.141,3,0.12,4,0.574,5,0.534,6,0.574,7,0.155,9,0.534,10,1.605,11,1.492,13,0.828,15,0.828,17,0.141,18,0.358,20,0.308,23,1.055,24,1.62,27,0.992,29,0.966,30,0.029,31,0.651,32,0.389,33,0.442,34,0.912,35,1.103,36,1.103,38,0.267,39,0.141,44,1.027,45,0.534,49,0.824,52,0.12,53,0.062,58,0.649,59,0.888,61,0.396,62,0.534,64,2.003,65,0.824,66,2.262,71,0.824,77,1.175,83,0.521,103,1.743,104,1.74,109,1.425,113,0.534,117,1.971,121,2.117,128,1.918,133,0.888,138,0.497,139,0.692,140,0.828,141,0.89,142,1.065,143,0.574,144,0.574,145,0.427,146,0.574,147,0.427,148,0.574,149,0.427,150,0.574,151,0.912,152,0.89,153,0.427,154,0.574,155,0.427,156,0.574,157,0.427,158,0.574,159,0.427,160,0.574,161,0.427,162,0.574,163,0.427,164,0.574,165,0.395,166,0.574,167,0.427,168,0.534,169,0.574,170,0.427,171,0.427,172,0.574,173,0.022,174,0.018,201,1.451,217,4.514,232,0.534,243,0.714,247,0.668,256,1.527,260,1.61,266,1.257,275,1.327,277,1.027,280,1.752,283,1.238,285,1.375,286,1.61,287,1.743,288,1.743,290,0.959,298,0.617,306,1.743,334,1.141,349,1.531,351,1.186,393,3.155,394,3.535,395,1.918,396,1.918,398,2.763,399,3.482,400,1.039,402,1.918,420,2.144,442,1.131,445,1.131,484,0.888,486,1.61,491,0.712,496,4.038,519,0.959,529,2.7,540,2.366,551,1.527,552,3.305,553,2.7,554,2.7,555,5.276,556,4.42,557,4.782,558,4.977,559,5.451,560,4.782,561,3.925,562,3.261,563,3.207,564,3.721,565,3.207,566,2.07,567,2.07,568,2.07,569,4.42,570,2.07,571,2.07,572,3.207,573,2.07,574,4.554,575,3.528,576,3.732,577,2.07,578,3.207,579,3.207,580,2.7,581,3.207,582,3.207,583,4.42,584,3.207,585,3.207,586,2.07,587,2.07,588,2.07,589,2.07,590,2.07,591,2.07,592,2.07,593,1.743,594,2.07,595,2.07,596,2.07,597,2.07,598,2.07,599,3.157,600,4.026,601,1.743,602,2.366,603,2.07,604,2.07,605,2.07,606,1.743,607,2.07,608,2.07,609,2.07,610,3.925,611,2.07,612,3.207,613,2.07,614,1.743,615,3.207,616,1.366,617,1.366,618,2.07,619,1.743,620,2.07,621,2.07,622,2.07,623,2.07,624,2.07,625,2.591,626,2.07,627,2.07,628,2.07,629,3.207,630,1.527,631,4.42,632,2.07,633,1.743,634,1.743,635,2.07,636,1.743,637,2.07,638,2.07,639,2.07,640,3.925,641,2.07,642,2.07,643,3.207,644,3.207,645,2.07,646,2.07,647,2.07,648,3.207,649,2.07,650,3.207,651,2.07,652,3.207,653,2.07,654,2.07,655,2.07,656,2.07,657,2.07,658,2.07,659,3.207,660,3.207,661,3.207,662,3.207,663,3.207,664,3.207,665,4.42,666,3.207,667,3.207,668,3.207,669,3.207,670,3.207,671,3.207,672,3.207]],["title/injectables/CourseService.html",[23,0.579,343,0.788]],["body/injectables/CourseService.html",[2,0.168,3,0.144,7,0.12,12,0.793,17,0.168,18,0.41,19,1.176,20,0.651,23,0.647,27,1.025,29,1.071,30,0.029,31,0.711,32,0.382,33,0.589,34,1.322,35,1.506,36,1.506,38,0.168,39,0.168,44,1.845,52,0.281,53,0.074,57,2.197,58,0.825,64,1.864,71,1.462,74,1.481,77,1.079,80,1.702,83,0.528,104,1.78,105,1.353,109,1.095,113,0.948,122,1.264,133,1.575,173,0.015,174,0.015,232,0.639,236,1.481,243,0.818,247,0.728,275,1.599,277,1.402,286,1.243,298,0.738,334,1.335,339,0.975,341,1.928,343,1.05,349,1.402,350,0.916,351,0.916,354,1.176,357,1.095,361,0.738,387,0.985,392,1.481,393,1.481,394,1.481,395,1.481,396,1.481,397,1.481,398,1.353,399,1.481,400,2.955,401,3.25,402,1.481,403,1.353,404,1.481,405,1.481,406,1.481,407,3.198,408,3.198,409,3.198,410,3.198,411,3.198,412,2.89,413,1.634,414,1.481,415,1.634,416,1.634,417,1.353,418,1.481,419,1.634,420,2.961,421,1.634,422,1.634,423,1.634,424,1.481,425,1.634,426,2.078,427,1.634,428,1.844,429,1.634,430,1.634,431,1.634,432,2.425,433,1.634,434,1.634,435,2.425,436,2.89,437,3.198,438,1.634,439,1.634,440,2.425,441,2.197,442,2.007,443,3.198,444,2.425,445,2.007,446,1.634,447,2.425,448,2.619,449,2.425,450,2.425,451,2.197,452,2.425,453,1.634,454,1.634,455,1.481,456,1.481,457,1.147,458,1.481,459,2.425,460,1.634,461,1.634,462,2.392,463,2.197,464,2.197,465,1.481,466,2.029,467,2.425,468,1.634,469,1.634,470,1.702,471,1.481,472,1.844,473,1.481,474,1.844,475,1.634,476,2.007,477,1.634,478,1.634,479,1.634,480,1.634,481,2.425,482,1.634,483,2.89,484,2.525,485,2.197,486,1.243,487,1.634,488,1.243,489,2.425,490,1.481,491,0.852,492,1.481,493,1.481,494,1.634,495,1.634,562,1.827,673,3.673,674,3.673,675,3.673,676,3.673,677,3.673,678,3.673,679,2.476,680,2.476,681,2.476,682,2.476,683,2.476,684,2.476,685,2.476,686,2.476,687,2.476,688,2.476,689,2.476,690,2.476,691,2.085,692,2.476,693,2.476,694,2.085,695,2.476,696,2.476]],["title/components/CourseSidebarComponent.html",[0,0.069,153,0.678]],["body/components/CourseSidebarComponent.html",[0,0.125,1,0.666,2,0.22,3,0.187,4,0.896,5,0.833,6,0.896,7,0.156,9,0.833,10,1.714,11,1.599,13,1.146,15,1.146,17,0.22,18,0.495,20,0.48,22,1.809,23,1.129,25,1.351,27,0.929,29,0.848,30,0.029,31,0.675,32,0.345,33,0.508,38,0.39,39,0.22,43,0.896,45,0.833,51,1.194,52,0.187,53,0.133,58,0.778,61,0.548,62,1.146,66,1.877,82,2.718,83,0.525,84,4.273,85,2.718,86,2.718,104,1.527,120,3.739,138,0.774,139,0.782,140,1.31,141,1.232,142,1.217,143,0.896,144,0.896,145,0.666,146,0.896,147,0.666,148,0.896,149,0.666,150,0.896,151,0.666,152,1.232,153,1.128,154,0.896,155,0.666,156,0.896,157,0.666,158,0.896,159,0.666,160,0.896,161,0.666,162,0.896,163,0.666,164,0.896,165,0.616,166,0.896,167,0.666,168,0.833,169,0.896,170,0.666,171,0.666,172,0.896,173,0.018,174,0.018,203,4.37,243,0.989,247,0.61,266,1.422,277,1.625,280,2.987,281,2.987,328,1.194,334,1.146,354,1.422,428,2.548,496,3.91,503,1.621,694,3.739,697,2.718,698,4.44,699,4.44,700,5.467,701,5.467,702,4.44,703,5.076,704,5.467,705,3.228,706,3.228,707,3.228,708,3.228,709,3.228,710,2.718,711,3.228,712,4.44,713,2.382,714,3.228,715,3.228,716,5.732,717,3.228,718,3.228,719,5.076,720,4.44,721,3.228,722,3.228,723,2.382,724,3.228,725,3.228]],["title/interfaces/DiscoverOption.html",[339,0.731,344,1.409]],["body/interfaces/DiscoverOption.html",[2,0.225,3,0.192,7,0.16,12,1.058,17,0.225,18,0.503,19,2.132,22,1.531,24,1.058,25,0.736,30,0.029,32,0.441,33,0.451,34,1.413,38,0.349,39,0.225,43,0.917,49,1.315,52,0.335,53,0.099,59,1.417,61,0.713,65,1.315,77,1.005,83,0.259,113,1.54,122,1.136,139,0.795,173,0.018,174,0.018,201,1.222,232,1.492,247,0.503,254,2.995,275,1.655,298,1.723,334,1.492,338,2.465,339,1.287,340,1.805,341,2.508,342,3.77,343,1.082,344,2.368,345,2.901,346,3.456,347,2.677,348,2.265,349,1.058,350,1.222,351,1.222,352,2.579,353,1.975,354,1.444,355,1.975,356,1.975,357,0.985,358,1.975,359,1.975,360,2.698,361,0.985,362,1.975,363,1.975,364,1.975,365,1.531,366,1.975,367,1.805,368,1.975,369,1.975,370,1.975,371,1.975,372,1.975,373,3.456,374,1.975,375,3.072,376,1.975,377,3.456,378,1.975,379,3.072,380,2.698,381,1.975,382,1.975,383,2.698,384,1.975,385,2.698,386,1.975,387,1.795,388,2.698,389,2.465,390,2.698,391,2.698]],["title/interfaces/FixOption.html",[339,0.731,348,1.649]],["body/interfaces/FixOption.html",[2,0.225,3,0.192,7,0.16,12,1.058,17,0.225,18,0.503,19,2.132,22,1.531,24,1.058,25,0.736,30,0.029,32,0.441,33,0.451,34,1.413,38,0.349,39,0.225,43,0.917,49,1.315,52,0.335,53,0.099,59,1.417,61,0.713,65,1.315,77,1.005,83,0.259,113,1.54,122,1.136,139,0.795,173,0.018,174,0.018,201,1.222,232,1.492,247,0.503,254,2.995,275,1.655,298,1.723,334,1.492,338,2.465,339,1.287,340,1.805,341,2.508,342,3.77,343,1.082,344,2.203,345,2.901,346,3.456,347,2.677,348,2.579,349,1.058,350,1.222,351,1.222,352,2.579,353,1.975,354,1.444,355,1.975,356,1.975,357,0.985,358,1.975,359,1.975,360,2.698,361,0.985,362,1.975,363,1.975,364,1.975,365,1.531,366,1.975,367,1.805,368,1.975,369,1.975,370,1.975,371,1.975,372,1.975,373,3.456,374,1.975,375,3.072,376,1.975,377,3.456,378,1.975,379,3.072,380,2.698,381,1.975,382,1.975,383,2.698,384,1.975,385,2.698,386,1.975,387,1.795,388,2.698,389,2.465,390,2.698,391,2.698]],["title/interfaces/Issue.html",[58,0.446,339,0.731]],["body/interfaces/Issue.html",[2,0.192,3,0.164,7,0.137,12,0.904,17,0.192,18,0.451,19,1.746,20,0.42,23,0.497,30,0.029,31,0.348,32,0.351,33,0.404,34,1.377,38,0.192,39,0.192,44,1.817,52,0.299,53,0.084,57,1.688,58,0.857,64,1.952,71,1.608,74,1.688,77,0.9,80,1.872,83,0.524,104,1.876,105,1.542,109,1.204,113,1.043,122,1.39,133,1.733,173,0.017,174,0.017,232,0.728,236,1.688,247,0.715,275,1.43,286,1.417,298,0.841,334,1.408,339,1.148,341,2.051,343,0.969,349,1.511,350,1.044,351,1.044,354,1.294,357,1.204,361,0.841,387,1.123,392,1.688,393,1.688,394,1.688,395,1.688,396,1.688,397,1.688,398,1.542,399,1.688,400,3.054,401,3.292,402,3.082,403,2.815,404,1.688,405,1.688,406,1.688,407,1.863,408,1.863,409,1.863,410,1.863,411,1.863,412,3.116,413,1.863,414,1.688,415,1.863,416,1.863,417,1.542,418,1.688,419,1.863,420,3.1,421,1.863,422,1.863,423,1.863,424,1.688,425,1.863,426,2.21,427,1.863,428,2.029,429,1.863,430,1.863,431,1.863,432,2.667,433,1.863,434,1.863,435,1.863,436,3.116,437,3.401,438,1.863,439,1.863,440,1.863,441,2.416,442,2.207,443,3.401,444,2.667,445,2.207,446,1.863,447,2.667,448,2.823,449,2.667,450,2.667,451,2.416,452,1.863,453,1.863,454,1.863,455,1.688,456,1.688,457,1.308,458,1.688,459,1.863,460,1.863,461,1.863,462,2.579,463,2.416,464,2.416,465,1.688,466,2.187,467,1.863,468,1.863,469,1.863,470,1.872,471,1.688,472,2.029,473,1.688,474,2.029,475,1.863,476,2.207,477,1.863,478,1.863,479,1.863,480,1.863,481,1.863,482,1.863,483,3.116,484,2.609,485,2.416,486,1.417,487,1.863,488,1.417,489,2.667,490,1.688,491,0.971,492,1.688,493,1.688,494,1.863,495,1.863]],["title/components/IssueCardComponent.html",[0,0.069,155,0.678]],["body/components/IssueCardComponent.html",[0,0.12,1,0.654,2,0.215,3,0.184,4,0.879,5,0.817,6,0.879,7,0.262,9,0.817,10,1.71,11,1.589,13,1.131,15,1.131,17,0.215,18,0.56,20,0.471,23,1.126,27,0.979,29,0.605,30,0.028,31,0.62,32,0.411,33,0.438,38,0.298,39,0.215,44,1.885,45,0.817,52,0.184,53,0.131,58,0.875,61,0.541,62,0.817,63,2.858,71,1.26,83,0.394,94,1.894,138,0.76,139,0.772,140,1.297,141,1.216,142,1.208,143,0.879,144,0.879,145,0.654,146,0.879,147,0.654,148,0.879,149,0.654,150,0.879,151,0.654,152,1.216,153,0.654,154,0.879,155,1.119,156,0.879,157,0.654,158,0.879,159,0.654,160,0.879,161,0.654,162,0.879,163,0.654,164,0.879,165,0.605,166,0.879,167,0.654,168,0.817,169,0.879,170,0.654,171,0.654,172,0.879,173,0.018,174,0.018,175,2.962,207,4.54,243,0.976,247,0.605,260,2.523,261,1.894,266,1.403,277,1.014,284,1.894,285,2.442,328,1.171,341,1.26,357,1.498,400,2.2,417,1.73,428,1.59,448,1.894,462,1.73,463,1.894,464,3.243,465,1.894,503,1.59,540,3.233,552,4.565,564,4.565,574,4.001,575,2.336,576,3.233,599,2.09,633,4.565,726,3.361,727,2.666,728,4.382,729,4.382,730,5.888,731,5.888,732,4.382,733,3.167,734,3.167,735,3.167,736,3.167,737,3.167,738,3.167,739,3.167,740,3.167,741,2.666,742,4.382,743,2.666,744,3.167,745,3.167,746,5.422,747,4.23,748,5.422,749,4.382,750,3.689,751,4.382,752,3.167,753,4.382,754,3.167,755,3.167,756,3.167,757,3.167,758,2.666,759,3.167,760,3.167,761,3.167,762,3.167,763,3.167,764,3.167,765,3.167,766,3.167,767,3.689,768,3.689,769,3.689]],["title/components/IssueContainerComponent.html",[0,0.069,157,0.678]],["body/components/IssueContainerComponent.html",[0,0.116,1,0.593,2,0.195,3,0.167,4,0.797,5,0.742,6,0.797,7,0.139,9,0.742,10,1.689,11,1.57,13,1.056,15,1.056,17,0.195,18,0.456,19,1.311,20,0.709,27,0.952,29,0.782,30,0.029,31,0.704,32,0.324,33,0.477,34,1.239,38,0.278,39,0.195,45,0.742,52,0.167,53,0.176,58,0.899,61,0.505,62,0.742,83,0.43,128,2.448,138,0.689,139,0.721,140,1.056,141,1.136,142,1.157,143,0.797,144,0.797,145,0.593,146,0.797,147,0.593,148,0.797,149,0.593,150,0.797,151,0.593,152,1.136,153,0.593,154,0.797,155,0.593,156,0.797,157,1.072,158,0.797,159,0.593,160,0.797,161,0.593,162,0.797,163,0.593,164,0.797,165,0.549,166,0.797,167,0.593,168,0.742,169,0.797,170,0.593,171,0.593,172,0.797,173,0.017,174,0.017,201,1.514,221,4.43,243,0.912,247,0.655,260,2.055,261,2.851,269,3.43,277,1.311,285,2.228,349,1.311,354,1.311,357,1.22,457,2.871,466,2.782,470,2.871,471,2.448,472,3.111,473,2.448,474,2.394,476,2.605,484,2.045,485,1.719,488,2.055,490,1.719,491,0.989,492,1.719,574,3.834,575,2.12,576,3.02,625,2.702,726,3.28,769,3.446,770,2.42,771,3.446,772,4.093,773,4.093,774,5.196,775,5.196,776,4.093,777,4.093,778,4.093,779,2.874,780,2.874,781,4.093,782,5.196,783,2.874,784,5.196,785,2.874,786,4.093,787,2.874,788,4.014,789,2.874,790,2.874,791,2.874,792,5.708,793,2.874,794,4.093,795,2.874,796,2.874,797,2.874,798,2.874,799,2.874,800,2.874,801,2.874,802,2.874,803,2.874,804,2.874,805,2.874,806,2.874,807,3.02,808,3.446]],["title/components/IssueDetailsComponent.html",[0,0.069,159,0.678]],["body/components/IssueDetailsComponent.html",[0,0.128,1,0.793,2,0.261,3,0.223,4,1.066,5,0.992,6,1.066,7,0.186,9,0.992,10,1.748,11,1.625,13,1.288,15,1.288,17,0.261,18,0.556,20,0.571,23,1.163,27,0.898,29,0.734,30,0.028,31,0.684,32,0.339,33,0.499,38,0.339,39,0.261,45,0.992,52,0.223,53,0.115,58,0.906,61,0.616,62,0.992,83,0.434,138,0.922,139,0.879,140,1.288,141,1.384,142,1.306,143,1.066,144,1.066,145,0.793,146,1.066,147,0.793,148,1.066,149,0.793,150,1.066,151,0.793,152,1.384,153,0.793,154,1.066,155,0.793,156,1.066,157,0.793,158,1.066,159,1.21,160,1.066,161,0.793,162,1.066,163,0.793,164,1.066,165,0.734,166,1.066,167,0.793,168,0.992,169,1.066,170,0.793,171,0.793,172,1.066,173,0.02,174,0.02,209,4.326,243,1.111,247,0.428,260,2.505,261,3.313,266,1.597,269,3.871,277,1.23,328,1.421,403,2.725,503,1.929,726,3.203,809,3.235,810,4.989,811,4.989,812,3.842,813,3.842,814,3.842,815,4.2,816,4.989]],["title/interfaces/IssueItem.html",[44,1.052,339,0.731]],["body/interfaces/IssueItem.html",[2,0.189,3,0.162,7,0.135,12,0.891,17,0.189,18,0.446,19,1.737,20,0.414,23,0.49,30,0.029,31,0.344,32,0.384,33,0.4,34,1.375,38,0.189,39,0.189,44,1.863,52,0.297,53,0.083,57,1.664,58,0.88,64,1.943,71,1.592,74,1.664,77,0.891,80,1.854,83,0.523,104,1.866,105,1.521,109,1.192,113,1.033,122,1.376,133,1.716,173,0.016,174,0.016,232,1.322,236,1.664,247,0.714,275,1.421,286,1.397,298,0.83,334,1.209,339,1.14,341,2.038,343,0.96,349,1.5,350,1.029,351,1.029,354,1.281,357,1.192,361,0.83,387,1.108,392,1.664,393,1.664,394,1.664,395,1.664,396,1.664,397,1.664,398,1.521,399,1.664,400,3.189,401,3.235,402,1.664,403,1.521,404,3.062,405,3.062,406,3.062,407,1.837,408,1.837,409,1.837,410,1.837,411,1.837,412,3.091,413,1.837,414,1.664,415,1.837,416,1.837,417,1.521,418,1.664,419,1.837,420,3.085,421,1.837,422,1.837,423,1.837,424,1.664,425,1.837,426,2.196,427,1.837,428,2.008,429,1.837,430,1.837,431,1.837,432,2.641,433,1.837,434,1.837,435,1.837,436,3.091,437,3.38,438,1.837,439,1.837,440,1.837,441,2.392,442,2.186,443,3.38,444,2.641,445,2.186,446,1.837,447,2.641,448,2.801,449,2.641,450,2.641,451,2.392,452,1.837,453,1.837,454,1.837,455,1.664,456,1.664,457,1.29,458,1.664,459,1.837,460,1.837,461,1.837,462,2.559,463,2.392,464,2.392,465,1.664,466,2.17,467,1.837,468,1.837,469,1.837,470,1.854,471,1.664,472,2.008,473,1.664,474,2.008,475,1.837,476,2.186,477,1.837,478,1.837,479,1.837,480,1.837,481,1.837,482,1.837,483,3.091,484,2.601,485,2.392,486,1.397,487,1.837,488,1.397,489,2.641,490,1.664,491,0.957,492,1.664,493,1.664,494,1.837,495,1.837]],["title/components/IssueListComponent.html",[0,0.069,161,0.678]],["body/components/IssueListComponent.html",[0,0.126,1,0.756,2,0.249,3,0.213,4,1.016,5,0.945,6,1.016,7,0.177,9,0.945,10,1.739,11,1.616,13,1.248,15,1.248,17,0.249,18,0.539,20,0.545,23,1.154,27,0.878,29,0.699,30,0.028,31,0.739,32,0.329,33,0.484,38,0.329,39,0.249,45,0.945,52,0.213,53,0.11,58,0.9,61,0.71,62,0.945,75,4.071,83,0.504,109,1.441,122,1.663,128,2.891,138,0.879,139,0.852,140,1.248,141,1.341,142,1.282,143,1.016,144,1.016,145,0.756,146,1.016,147,0.756,148,1.016,149,0.756,150,1.016,151,0.756,152,1.341,153,0.756,154,1.016,155,0.756,156,1.016,157,0.756,158,1.016,159,0.756,160,1.016,161,1.188,162,1.016,163,0.756,164,1.016,165,0.699,166,1.016,167,0.756,168,0.945,169,1.016,170,0.756,171,0.756,172,1.016,173,0.02,174,0.02,201,1.788,205,4.247,243,1.077,247,0.408,260,2.427,261,3.237,266,1.548,269,3.8,277,1.173,328,1.355,349,1.548,357,1.441,361,1.441,476,2.642,503,1.839,726,3.145,807,3.568,808,4.071,817,3.084,818,4.835,819,4.835,820,3.663,821,3.663,822,3.663,823,4.835,824,4.835,825,4.071,826,4.835,827,4.835]],["title/components/IssueNavComponent.html",[0,0.069,163,0.678]],["body/components/IssueNavComponent.html",[0,0.112,1,0.482,2,0.159,3,0.136,4,0.975,5,0.603,6,0.648,7,0.113,9,0.603,10,1.638,11,1.523,13,0.907,15,0.907,17,0.159,18,0.472,20,0.347,22,1.64,23,1.057,24,1.945,25,1.353,27,0.996,29,0.964,30,0.029,31,0.679,32,0.374,33,0.531,34,1.196,35,1.209,36,1.209,38,0.385,39,0.239,43,0.648,44,0.748,45,0.603,47,1.082,48,1.082,49,0.929,51,0.863,52,0.136,53,0.07,58,0.898,61,0.434,62,0.603,64,1.619,66,0.863,71,0.929,80,1.082,83,0.431,113,0.603,138,0.56,139,0.619,140,0.907,141,0.975,142,1.181,143,0.648,144,0.648,145,0.482,146,0.648,147,0.482,148,0.648,149,0.482,150,0.648,151,0.482,152,0.975,153,0.482,154,0.648,155,0.482,156,0.648,157,0.482,158,0.648,159,0.482,160,0.648,161,0.482,162,0.648,163,0.971,164,0.648,165,0.446,166,0.648,167,0.482,168,0.603,169,0.648,170,0.482,171,0.482,172,0.648,173,0.014,174,0.017,211,4.578,243,0.783,247,0.692,256,1.723,265,3.106,266,1.813,268,3.106,270,2.321,277,1.616,280,2.31,281,2.31,282,3.331,283,1.396,284,1.396,285,1.002,286,1.765,290,2.18,291,2.791,294,1.541,295,1.396,296,1.541,297,1.541,298,0.696,299,1.541,300,2.321,301,2.321,328,0.863,354,0.748,357,1.26,361,0.696,387,0.929,401,1.765,424,2.102,426,1.508,457,2.18,462,1.276,466,2.685,470,2.685,472,1.765,474,1.765,486,1.172,491,0.803,503,1.172,519,1.082,602,1.723,617,2.321,723,1.723,726,3.39,767,2.96,768,2.96,788,4.465,815,1.966,828,1.966,829,3.516,830,3.516,831,3.516,832,4.705,833,4.705,834,3.516,835,4.705,836,3.516,837,3.516,838,3.516,839,2.335,840,2.335,841,3.516,842,2.335,843,2.335,844,3.516,845,2.335,846,3.516,847,3.516,848,2.335,849,3.516,850,2.335,851,2.335,852,2.335,853,3.516,854,2.335,855,2.335,856,2.335,857,2.335,858,1.966,859,1.966,860,3.516,861,2.335,862,2.335,863,2.335,864,3.516,865,2.335,866,2.335,867,2.335,868,2.335,869,2.96,870,2.335,871,2.335,872,2.335,873,2.335,874,4.228,875,2.335,876,5.303,877,3.516,878,3.516,879,3.516,880,3.516,881,3.516,882,3.516,883,2.335,884,2.335,885,1.966,886,2.335,887,2.335,888,2.335,889,3.516,890,2.335,891,2.335,892,2.335,893,2.335,894,2.335,895,2.335,896,2.335,897,2.335,898,3.516,899,3.516,900,3.516,901,3.516,902,2.96]],["title/injectables/KatanaService.html",[24,1.052,343,0.788]],["body/injectables/KatanaService.html",[2,0.158,3,0.135,7,0.112,12,0.742,17,0.158,18,0.523,20,0.345,22,1.636,23,0.967,24,1.119,25,1.222,26,3.283,27,0.857,29,1.01,30,0.029,31,0.579,32,0.319,33,0.59,34,0.722,35,0.797,36,1.448,38,0.384,39,0.158,40,3.094,43,0.643,44,1.119,45,0.598,50,1.951,51,0.857,52,0.135,53,0.069,58,0.718,59,1.499,61,0.757,64,1.612,65,0.922,66,1.733,71,1.391,77,1.312,80,1.074,81,4.452,83,0.513,91,4.757,94,2.517,96,2.943,104,1.612,109,1.042,113,1.21,117,2.655,121,2.779,122,1.203,129,1.951,132,2.943,133,2.01,142,0.937,173,0.014,174,0.014,180,2.517,197,1.951,200,1.71,229,2.943,243,0.779,247,0.707,281,1.91,290,2.618,334,1.492,343,1.01,349,1.119,350,0.857,354,0.742,357,1.397,361,1.499,365,2.45,367,1.91,397,2.517,418,2.091,420,2.561,441,1.386,445,1.91,451,1.386,457,1.074,466,2.172,470,1.074,486,2.113,488,1.755,491,1.448,493,2.091,519,2.172,558,1.951,562,2.58,599,1.53,600,2.943,616,3.094,617,2.308,619,2.943,723,2.58,741,4.452,743,3.947,771,2.943,825,2.943,885,3.544,903,1.951,904,3.496,905,3.496,906,4.687,907,2.318,908,4.687,909,2.318,910,2.943,911,3.496,912,2.318,913,3.496,914,2.318,915,3.496,916,2.318,917,2.943,918,2.318,919,4.209,920,2.318,921,3.496,922,2.318,923,2.318,924,2.318,925,2.318,926,2.318,927,5.03,928,3.712,929,4.209,930,1.951,931,4.687,932,5.489,933,2.318,934,2.318,935,2.318,936,2.318,937,1.71,938,3.496,939,2.318,940,2.318,941,2.318,942,2.318,943,4.209,944,4.209,945,4.209,946,3.496,947,3.496,948,3.496,949,2.318,950,3.496,951,3.496,952,3.496,953,5.288,954,2.318,955,3.496,956,3.496,957,2.318,958,2.318,959,2.318,960,5.03,961,3.496,962,3.496,963,3.496,964,2.58,965,3.496,966,3.496,967,3.496,968,3.496,969,4.687,970,3.496,971,2.318,972,3.496,973,2.318,974,2.318,975,2.318,976,2.318,977,2.318,978,2.318,979,2.318,980,2.318]],["title/classes/OptionModel.html",[53,0.098,981,2.168]],["body/classes/OptionModel.html",[0,0.106,2,0.215,3,0.184,5,0.817,7,0.153,10,0.817,11,0.76,13,0.817,15,0.817,17,0.215,18,0.56,20,0.471,22,1.498,23,0.885,24,1.609,25,1.119,27,0.815,29,0.605,30,0.029,31,0.391,32,0.215,33,0.665,34,0.904,35,1.089,36,1.089,38,0.411,39,0.215,40,2.09,43,0.879,45,0.817,47,1.467,48,1.467,49,1.26,51,1.171,52,0.184,53,0.15,61,0.541,62,0.817,63,1.59,64,1.865,66,1.62,77,0.976,104,1.089,109,0.944,113,0.817,117,1.59,133,1.358,139,0.558,142,0.976,165,0.605,173,0.018,174,0.021,180,2.62,195,2.09,224,3.579,232,1.131,243,1.119,247,0.673,265,2.09,266,1.014,268,2.09,270,2.09,275,0.879,280,2.962,281,3.11,282,3.985,283,1.894,284,3.005,285,1.358,290,2.638,291,2.892,294,2.09,295,1.894,296,2.892,297,2.09,298,0.944,299,2.09,300,2.892,301,2.892,308,3.579,328,1.171,334,0.817,344,2.155,345,2.722,352,1.59,361,0.944,426,1.358,484,1.358,491,1.089,519,1.467,616,2.09,630,2.336,713,2.336,928,2.336,937,2.336,964,2.336,981,3.579,982,2.09,983,4.565,984,3.689,985,4.382,986,3.167,987,3.689,988,2.666,989,4.23,990,2.336,991,2.336,992,2.666,993,3.689,994,2.666,995,2.666,996,2.666,997,2.666,998,2.666,999,2.666,1000,3.689,1001,2.666,1002,2.666,1003,2.666,1004,2.666,1005,2.666,1006,2.666,1007,2.666,1008,2.666,1009,2.666,1010,2.666,1011,2.666,1012,2.666,1013,2.666,1014,2.666,1015,2.666,1016,2.666,1017,2.666,1018,2.666,1019,2.666,1020,2.666,1021,2.666,1022,2.666,1023,4.23,1024,4.23,1025,2.666,1026,2.666,1027,2.666,1028,2.666,1029,2.666,1030,2.666,1031,3.689,1032,2.666,1033,2.666]],["title/components/OptionsViewComponent.html",[0,0.069,165,0.627]],["body/components/OptionsViewComponent.html",[0,0.113,1,0.494,2,0.163,3,0.139,4,0.664,5,0.925,6,0.664,7,0.116,9,0.618,10,1.645,11,1.529,13,0.925,15,0.925,17,0.163,18,0.479,20,0.356,22,1.654,23,0.978,24,1.956,25,1.343,27,1.001,29,0.684,30,0.029,31,0.588,32,0.364,33,0.66,34,0.739,35,1.232,36,1.232,38,0.377,39,0.163,40,1.58,43,0.664,45,0.618,47,1.109,48,1.109,49,0.953,51,0.885,52,0.139,53,0.107,58,0.693,61,0.661,62,1.108,63,1.202,64,1.639,66,1.325,77,0.956,83,0.457,94,2.142,104,1.755,109,0.714,113,0.618,117,1.202,133,1.027,138,0.574,139,0.756,140,0.925,141,0.994,142,1.192,143,0.664,144,0.664,145,0.494,146,0.664,147,0.494,148,0.664,149,0.494,150,0.664,151,0.494,152,0.994,153,0.494,154,0.664,155,0.494,156,0.664,157,0.494,158,0.664,159,0.494,160,0.664,161,0.494,162,0.664,163,0.494,164,0.664,165,0.91,166,0.664,167,0.494,168,0.618,169,0.664,170,0.494,171,0.494,172,0.664,173,0.015,174,0.018,180,2.142,195,1.58,224,4.115,232,1.382,243,0.956,247,0.673,265,3.145,266,1.633,268,3.145,270,3.145,275,1.322,277,1.374,280,2.603,281,2.787,282,3.663,283,1.432,284,2.567,285,1.027,290,2.48,291,2.833,294,1.58,295,1.432,296,2.365,297,2.833,298,0.714,299,1.58,300,2.365,301,2.365,304,3.016,308,4.115,323,1.767,328,0.885,334,0.618,344,2.188,345,2.392,347,1.66,352,1.202,361,0.714,426,1.027,428,1.799,484,1.027,491,0.824,519,1.109,614,3.016,616,1.58,630,1.767,634,3.016,713,1.767,902,3.016,928,1.767,937,1.767,964,1.767,981,3.766,982,1.58,983,2.016,984,2.016,987,4.295,988,2.016,989,3.614,990,2.643,991,2.643,992,4.011,993,3.016,994,2.016,995,2.016,996,2.016,997,2.016,998,2.016,999,2.016,1000,3.016,1001,4.011,1002,2.016,1003,4.011,1004,2.016,1005,2.016,1006,2.016,1007,2.016,1008,2.016,1009,2.016,1010,2.016,1011,2.016,1012,2.016,1013,2.016,1014,2.016,1015,2.016,1016,2.016,1017,2.016,1018,2.016,1019,3.016,1020,2.016,1021,4.295,1022,2.016,1023,4.295,1024,4.295,1025,2.016,1026,2.016,1027,2.016,1028,2.016,1029,2.016,1030,2.016,1031,3.016,1032,2.016,1033,2.016,1034,3.582,1035,3.582,1036,2.394,1037,2.394,1038,2.394,1039,2.394,1040,2.394,1041,2.394,1042,2.394,1043,2.016,1044,2.394,1045,2.394,1046,2.394,1047,3.582,1048,3.582,1049,3.582,1050,3.582]],["title/components/StatBadgeComponent.html",[0,0.069,167,0.678]],["body/components/StatBadgeComponent.html",[0,0.128,1,0.794,2,0.262,3,0.223,4,1.067,5,0.993,6,1.067,7,0.186,9,0.993,10,1.748,11,1.625,13,1.289,15,1.289,17,0.262,20,0.824,27,0.951,30,0.028,31,0.616,32,0.377,33,0.385,34,1.211,35,1.323,36,1.323,38,0.262,39,0.262,52,0.223,53,0.115,58,0.826,61,0.616,62,0.993,83,0.434,138,0.923,139,0.88,140,1.289,141,1.385,142,1.307,143,1.067,144,1.067,145,0.794,146,1.067,147,0.794,148,1.067,149,0.794,150,1.067,151,0.794,152,1.385,153,0.794,154,1.067,155,0.794,156,1.067,157,0.794,158,1.067,159,0.794,160,1.067,161,0.794,162,1.067,163,0.794,164,1.067,165,0.735,166,1.067,167,1.211,168,1.637,169,1.067,170,0.794,171,0.794,172,1.067,173,0.02,174,0.02,227,4.486,285,2.378,389,2.728,400,2.507,1051,5.119,1052,3.239,1053,4.993,1054,4.993,1055,4.993,1056,5.543,1057,6.342,1058,6.342,1059,4.993,1060,3.847,1061,3.847,1062,3.847,1063,3.847,1064,3.847]],["title/injectables/ToastService.html",[26,1.964,343,0.788]],["body/injectables/ToastService.html",[2,0.288,3,0.246,7,0.205,12,1.357,17,0.288,18,0.592,20,0.863,26,3.177,27,0.986,29,1.014,30,0.029,31,0.656,32,0.288,33,0.532,35,1.458,36,1.458,38,0.361,39,0.288,46,4.884,47,1.964,48,1.964,52,0.246,53,0.127,77,1.183,121,2.799,142,0.944,173,0.022,174,0.022,201,1.568,243,1.183,247,0.678,275,1.61,277,1.701,343,1.392,350,1.568,365,1.964,484,2.488,527,3.57,625,2.799,807,3.128,910,3.57,930,3.57,1065,3.57,1066,6.081,1067,5.312,1068,5.312,1069,5.312,1070,4.24,1071,5.312,1072,4.24,1073,5.312,1074,5.312,1075,5.312,1076,5.312,1077,5.312,1078,4.24,1079,4.24,1080,4.24,1081,4.24,1082,4.24,1083,4.24,1084,5.312,1085,5.312,1086,5.312,1087,4.24,1088,4.24]],["title/interfaces/Tool.html",[61,0.405,339,0.731]],["body/interfaces/Tool.html",[2,0.223,3,0.191,7,0.159,12,1.052,17,0.223,18,0.501,19,2.131,22,1.527,24,1.052,25,0.731,30,0.029,32,0.433,34,1.416,38,0.348,39,0.223,43,0.911,49,1.307,52,0.335,53,0.098,59,1.409,61,0.735,65,1.307,77,1.001,83,0.257,113,1.537,122,1.13,139,0.792,173,0.018,174,0.018,201,1.215,232,1.602,247,0.501,254,2.989,275,1.528,298,1.339,334,1.488,338,2.455,339,1.284,340,1.794,341,2.579,342,3.876,343,1.078,344,2.662,345,2.256,346,2.687,347,2.082,348,2.895,349,1.763,350,1.215,351,1.215,352,2.571,353,1.964,354,1.439,355,1.964,356,1.964,357,0.979,358,1.964,359,1.964,360,2.687,361,0.979,362,1.964,363,1.964,364,1.964,365,1.522,366,1.964,367,1.794,368,1.964,369,1.964,370,1.964,371,1.964,372,1.964,373,3.449,374,1.964,375,3.063,376,1.964,377,3.449,378,1.964,379,3.063,380,2.687,381,1.964,382,1.964,383,2.687,384,1.964,385,2.687,386,1.964,387,1.788,388,2.687,389,2.455,390,2.687,391,2.687]],["title/components/ToolSelectionComponent.html",[0,0.069,170,0.678]],["body/components/ToolSelectionComponent.html",[0,0.129,1,0.811,2,0.267,3,0.228,4,1.09,5,1.014,6,1.09,7,0.19,9,1.014,10,1.752,11,1.628,13,1.306,15,1.306,17,0.267,18,0.564,20,0.584,23,1.123,25,1.475,27,0.82,29,0.75,30,0.028,31,0.691,32,0.344,33,0.506,38,0.381,39,0.267,45,1.014,51,1.452,52,0.228,53,0.117,58,0.831,61,0.797,62,1.014,66,1.452,83,0.439,104,1.741,138,0.942,139,0.892,140,1.306,141,1.404,142,1.317,143,1.09,144,1.09,145,0.811,146,1.09,147,0.811,148,1.09,149,0.811,150,1.09,151,0.811,152,1.404,153,0.811,154,1.09,155,0.811,156,1.09,157,0.811,158,1.09,159,0.811,160,1.09,161,0.811,162,1.09,163,0.811,164,1.09,165,0.75,166,1.09,167,0.811,168,1.014,169,1.09,170,1.22,171,0.811,172,1.09,173,0.021,174,0.021,223,4.131,266,1.62,323,2.898,328,1.452,551,2.898,553,4.26,554,4.26,593,3.307,1089,4.131,1090,3.927,1091,5.06,1092,5.06]],["title/injectables/ToolService.html",[25,0.731,343,0.788]],["body/injectables/ToolService.html",[2,0.192,3,0.164,7,0.137,12,0.905,17,0.192,18,0.451,19,2.142,20,0.42,21,2.086,22,1.692,24,0.905,25,0.901,27,1.04,29,0.902,30,0.029,31,0.583,32,0.42,33,0.473,34,1.373,35,1.877,36,1.877,38,0.321,39,0.192,43,0.785,49,1.125,52,0.317,53,0.085,59,1.213,61,0.762,65,1.125,77,1.149,83,0.317,113,1.571,122,0.973,139,0.909,173,0.017,174,0.017,201,1.046,232,1.613,247,0.575,254,2.372,275,1.659,277,1.296,298,1.206,325,2.381,334,1.22,338,2.211,339,1.149,340,1.545,341,2.585,342,3.885,343,1.134,344,2.027,345,2.031,346,2.42,347,1.875,348,2.031,349,0.905,350,1.046,351,1.496,352,2.85,353,2.42,354,1.651,355,2.42,356,2.42,357,1.206,358,2.42,359,2.42,360,3.084,361,1.537,362,3.084,363,3.084,364,1.691,365,1.31,366,1.691,367,2.818,368,3.084,369,3.084,370,3.084,371,3.084,372,2.42,373,3.264,374,1.691,375,2.826,376,2.42,377,3.264,378,1.691,379,2.826,380,2.42,381,1.691,382,1.691,383,2.42,384,1.691,385,2.42,386,1.691,387,1.61,388,2.42,389,2.211,390,2.42,391,2.42,691,2.381,1093,2.828,1094,2.828,1095,2.828,1096,2.828,1097,2.828,1098,2.828,1099,2.828,1100,2.828,1101,2.828,1102,2.828,1103,2.828,1104,2.828,1105,2.828,1106,2.828,1107,2.828,1108,2.828,1109,2.828]],["title/components/ToolViewComponent.html",[0,0.069,171,0.678]],["body/components/ToolViewComponent.html",[0,0.125,1,0.732,2,0.241,3,0.206,4,0.984,5,0.916,6,0.984,7,0.172,9,0.916,10,1.733,11,1.611,13,1.222,15,1.222,17,0.241,18,0.528,20,0.528,23,1.148,25,1.461,27,0.96,29,0.677,30,0.028,31,0.658,32,0.362,33,0.474,38,0.362,39,0.241,44,1.136,45,0.916,51,1.312,52,0.206,53,0.106,58,0.804,61,0.78,62,1.375,80,2.193,83,0.464,109,1.588,138,0.851,139,0.834,140,1.222,141,1.313,142,1.266,143,0.984,144,0.984,145,0.732,146,0.984,147,0.732,148,0.984,149,0.732,150,0.984,151,0.732,152,1.313,153,0.732,154,0.984,155,0.732,156,0.984,157,0.732,158,0.984,159,0.732,160,0.984,161,0.732,162,0.984,163,0.732,164,0.984,165,0.677,166,0.984,167,0.732,168,0.916,169,0.984,170,0.732,171,1.173,172,0.984,173,0.019,174,0.019,215,4.494,243,1.054,247,0.721,266,1.896,328,1.312,426,2.438,455,2.122,501,4.786,503,1.781,869,2.987,982,2.342,990,3.493,991,3.493,1043,2.987,1089,4.494,1110,5.684,1111,3.548,1112,3.548,1113,3.548,1114,3.548,1115,4.734,1116,3.548,1117,3.548,1118,4.734,1119,4.734]],["title/coverage.html",[1120,3.783]],["body/coverage.html",[0,0.141,1,0.764,7,0.179,8,3.116,23,0.652,24,1.185,25,0.824,26,2.213,30,0.028,32,0.252,44,1.185,53,0.146,58,0.503,61,0.457,83,0.29,109,2.062,145,0.764,147,0.764,149,0.764,151,0.764,153,0.764,155,0.764,157,0.764,159,0.764,161,0.764,163,0.764,165,0.707,167,0.764,170,0.764,171,0.764,173,0.02,174,0.02,184,2.213,203,2.731,205,2.731,207,2.731,209,2.731,211,2.731,215,2.731,217,2.731,219,2.731,221,2.731,223,2.731,224,3.214,225,2.731,227,2.731,232,0.955,241,2.731,242,3.116,253,3.116,290,1.715,307,2.443,308,3.591,309,3.116,319,3.116,339,1.399,340,3.28,343,1.387,344,1.588,347,1.715,348,1.858,392,3.456,496,3.591,497,3.116,551,3.592,601,3.116,697,3.116,726,3.28,727,3.116,770,3.116,809,3.116,817,3.116,828,3.116,903,3.116,981,2.443,982,3.591,1051,3.116,1052,3.116,1065,3.116,1089,3.592,1120,3.116,1121,3.701,1122,3.701,1123,3.701,1124,5.44,1125,3.116,1126,4.43,1127,3.116,1128,6.164,1129,3.116,1130,3.701,1131,6.004,1132,5.44,1133,3.701,1134,4.868,1135,3.701,1136,3.701,1137,5.44,1138,5.78,1139,4.868,1140,3.701,1141,3.701,1142,3.116,1143,4.099,1144,3.116,1145,4.099,1146,3.116,1147,3.701]],["title/dependencies.html",[177,2.61,1148,2.738]],["body/dependencies.html",[30,0.029,39,0.312,43,1.274,47,2.585,48,2.585,173,0.023,174,0.023,177,3.03,188,4.117,189,3.336,195,3.03,198,3.865,200,3.387,599,3.03,606,3.865,710,3.865,858,3.865,859,4.697,917,3.865,1149,4.591,1150,6.702,1151,4.591,1152,4.591,1153,4.591,1154,4.591,1155,4.591,1156,4.591,1157,4.591,1158,4.591,1159,4.591,1160,4.591,1161,4.591,1162,4.591,1163,4.591,1164,4.591,1165,4.591,1166,4.591,1167,4.591,1168,4.591,1169,4.591,1170,4.591,1171,4.591,1172,5.579,1173,4.591,1174,5.579,1175,4.591,1176,4.591,1177,4.591,1178,4.591,1179,4.591,1180,4.591,1181,4.591,1182,4.591,1183,4.591,1184,4.591]],["title/index.html",[17,0.186,123,2.305,442,1.496]],["body/index.html",[0,0.127,3,0.267,7,0.222,11,1.103,30,0.023,31,0.567,71,2.394,89,3.035,94,3.944,102,3.871,128,2.75,173,0.023,174,0.023,201,1.7,249,3.871,255,5.397,258,5.267,290,2.13,331,3.871,351,1.7,365,2.588,414,2.75,617,4.231,625,3.035,636,3.871,1185,5.585,1186,6.015,1187,6.015,1188,4.598,1189,4.598,1190,6.596,1191,4.598,1192,4.598,1193,4.598,1194,4.598,1195,4.598,1196,4.598,1197,4.598,1198,4.598,1199,4.598,1200,4.598,1201,4.598,1202,4.598,1203,4.598,1204,3.871,1205,5.585,1206,5.585,1207,5.585,1208,4.598,1209,6.256,1210,4.598,1211,4.598,1212,6.015,1213,4.598]],["title/modules.html",[175,2.455]],["body/modules.html",[30,0.025,173,0.025,174,0.025,175,2.92,176,3.529,189,3.197,1214,5.346,1215,5.346,1216,5.346]],["title/overview.html",[1217,3.783]],["body/overview.html",[0,0.091,1,1.343,30,0.028,52,0.25,53,0.129,70,3.181,89,2.845,109,1.285,138,1.034,145,1.207,147,1.207,149,1.207,151,1.207,153,1.207,155,1.207,157,1.207,159,1.207,161,1.207,163,1.207,165,1.116,167,1.207,170,1.207,171,1.207,173,0.022,174,0.022,175,2.932,176,4.608,177,2.845,178,3.629,179,3.629,180,2.578,181,3.629,182,3.629,183,3.629,184,3.495,185,4.519,192,2.845,307,2.845,339,0.96,343,1.034,488,2.164,491,1.483,519,2.487,1217,3.629,1218,4.311,1219,4.311]],["title/routes.html",[192,2.966]],["body/routes.html",[30,0.025,173,0.025,174,0.025,192,3.562]],["title/miscellaneous/variables.html",[1126,2.917,1220,2.305]],["body/miscellaneous/variables.html",[17,0.136,19,2.168,30,0.029,32,0.295,35,1.494,36,1.494,58,0.825,63,2.782,77,0.446,83,0.497,100,3.236,105,3.027,117,1.569,173,0.013,174,0.013,254,3.334,259,4.937,295,2.984,334,1.121,347,1.781,401,3.334,403,3.628,404,3.634,405,3.634,406,3.634,417,2.1,466,2.182,470,2.567,472,2.707,474,3.02,491,1.322,519,1.781,580,4.665,602,2.836,747,3.236,750,3.236,758,5.117,1125,1.686,1126,1.478,1127,3.236,1129,3.236,1142,1.686,1143,4.201,1144,1.686,1145,1.686,1146,3.236,1204,2.631,1220,1.686,1221,3.125,1222,2.003,1223,2.003,1224,2.003,1225,2.003,1226,2.003,1227,6.077,1228,3.843,1229,5.54,1230,6.077,1231,6.077,1232,6.077,1233,4.99,1234,4.99,1235,3.843,1236,3.843,1237,4.99,1238,3.843,1239,3.843,1240,3.843,1241,3.843,1242,3.843,1243,4.99,1244,3.843,1245,3.843,1246,3.843,1247,3.843,1248,5.54,1249,5.54,1250,5.54,1251,5.54,1252,3.843,1253,3.843,1254,3.843,1255,5.864,1256,5.864,1257,5.864,1258,4.99,1259,4.99,1260,3.843,1261,3.843,1262,5.54,1263,5.54,1264,6.228,1265,5.54,1266,5.54,1267,5.54,1268,5.54,1269,5.54,1270,3.843,1271,3.843,1272,4.99,1273,3.843,1274,3.843]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.100.2",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["00c853",{"_index":800,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["01",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":519,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["111",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112px",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["123",{"_index":580,"title":{},"body":{"components/CourseSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["1318",{"_index":578,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["15",{"_index":1218,"title":{},"body":{"overview.html":{}}}],["15.1.10",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1087,"title":{},"body":{"injectables/ToastService.html":{}}}],["2",{"_index":491,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.4.1",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["2/9",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":610,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["2018",{"_index":584,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":721,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["22",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["2979ff",{"_index":799,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["3",{"_index":486,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["3.2.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["330px",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":488,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"overview.html":{}}}],["4.0.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":1080,"title":{},"body":{"injectables/ToastService.html":{}}}],["455a64",{"_index":801,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["456",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":493,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["5.2.0",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1088,"title":{},"body":{"injectables/ToastService.html":{}}}],["5px",{"_index":805,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["6.0.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1189,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1219,"title":{},"body":{"overview.html":{}}}],["92px",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":512,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":703,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_sanit",{"_index":317,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["_selectedcategori",{"_index":368,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":408,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["_selectedtool",{"_index":369,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["a.download",{"_index":897,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":896,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["acc",{"_index":426,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(json.stringify(issu",{"_index":878,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1118,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":485,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["accessor",{"_index":691,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":632,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":393,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["action",{"_index":301,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["activatedrout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_compon",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add",{"_index":428,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["add_circl",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":673,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":435,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["adjust",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":1083,"title":{},"body":{"injectables/ToastService.html":{}}}],["afterviewinit",{"_index":552,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["again",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["allow",{"_index":295,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["alphabet",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["angular",{"_index":1186,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":710,"title":{},"body":{"components/CourseSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["anywher",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":606,"title":{},"body":{"components/CourseSelectionComponent.html":{},"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["app.compon",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appar",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":938,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":176,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":241,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approut",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":470,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{}}}],["approveal",{"_index":853,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["array",{"_index":600,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1010,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1049,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["artifact",{"_index":1198,"title":{},"body":{"index.html":{}}}],["asgardia",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asparagu",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":746,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["async",{"_index":561,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach_fil",{"_index":761,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":288,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["automat",{"_index":1195,"title":{},"body":{"index.html":{}}}],["avacado",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":1082,"title":{},"body":{"injectables/ToastService.html":{}}}],["b",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b0rked",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b[param",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["backstreet",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badg",{"_index":1053,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["badge.component.css",{"_index":1054,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1055,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1052,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:10",{"_index":1060,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:11",{"_index":1059,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:9",{"_index":1061,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["bar",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":284,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["be",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["befor",{"_index":614,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["blank",{"_index":449,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blob",{"_index":892,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":893,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":718,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["blue",{"_index":483,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blueprint",{"_index":394,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["bodi",{"_index":917,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["bootstrap",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":798,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["bordercolors[this.issue.statu",{"_index":806,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["box",{"_index":627,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["boy",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breadcrumb",{"_index":262,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":263,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":264,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["breadcrumbscompon",{"_index":145,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["broccoli",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":1216,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":250,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":796,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":617,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["builder",{"_index":1022,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["builders[option.typ",{"_index":1027,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["buildhtml(messag",{"_index":1074,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":500,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":267,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":272,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["button",{"_index":793,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["bypasssanit",{"_index":184,"title":{"pipes/BypassSanitize.html":{}},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["c.id",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call_missed_outgo",{"_index":473,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["campu",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["cancel",{"_index":902,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":599,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["card",{"_index":464,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["card'},{'nam",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":728,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":729,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":727,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":733,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:13",{"_index":734,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:15",{"_index":732,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:17",{"_index":737,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:24",{"_index":736,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:45",{"_index":735,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":711,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch((",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["catch(console.error",{"_index":630,"title":{},"body":{"components/CourseSelectionComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["catcherror",{"_index":924,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categori",{"_index":232,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["categories'},{'nam",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":320,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":321,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescompon",{"_index":147,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1013,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":337,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":338,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1009,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1012,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["chalk",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":414,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"index.html":{}}}],["charact",{"_index":604,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["check",{"_index":625,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["check_circl",{"_index":469,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["check_circle_outlin",{"_index":471,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["cheerio",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["chip",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["chip.component.css",{"_index":498,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":499,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":497,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:12",{"_index":504,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:14",{"_index":509,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:18",{"_index":508,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:22",{"_index":505,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":507,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/CourseChipComponent.html":{},"coverage.html":{}}}],["choic",{"_index":345,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["choice.text",{"_index":1021,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["circl",{"_index":613,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":53,"title":{"classes/AppPage.html":{},"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["cli",{"_index":1187,"title":{},"body":{"index.html":{}}}],["click",{"_index":634,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["close",{"_index":281,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["closemod",{"_index":268,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["cloud_download",{"_index":898,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":351,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["color",{"_index":479,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["comment",{"_index":259,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":741,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compodoc",{"_index":257,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":856,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["console.error(",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(`${course.course_cod",{"_index":968,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(err",{"_index":945,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.log(`csvreport",{"_index":888,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["console.log(`downloadissu",{"_index":873,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["console.log(`flatissu",{"_index":879,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["const",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(courseservic",{"_index":503,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":907,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":566,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["constructor(opt",{"_index":984,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["constructor(priv",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":328,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":323,"title":{},"body":{"components/CategoriesComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":808,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":771,"title":{},"body":{"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["container'},{'nam",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["container.component.css",{"_index":772,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":773,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":770,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":779,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:12",{"_index":778,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:16",{"_index":785,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":787,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:30",{"_index":783,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:45",{"_index":780,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":937,"title":{},"body":{"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["contentkey",{"_index":296,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["context",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":1048,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["core",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":618,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["correctli",{"_index":744,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["count",{"_index":443,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["cours",{"_index":83,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.account",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":529,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":960,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":420,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":870,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.length",{"_index":1116,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.reduce((acc",{"_index":868,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1117,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":976,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":395,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_id",{"_index":404,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["course_nam",{"_index":396,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursechipcompon",{"_index":149,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":434,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseeditopen",{"_index":411,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseid",{"_index":432,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursenam",{"_index":433,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseoverlay",{"_index":700,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":555,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":975,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":957,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":971,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":151,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":410,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseservic",{"_index":23,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courseeditopen",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.foreach(cours",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon('approv",{"_index":532,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('fail",{"_index":536,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('fix",{"_index":538,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('skip",{"_index":534,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('untouch",{"_index":530,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'approv",{"_index":543,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'fail",{"_index":547,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'fix",{"_index":549,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'skip",{"_index":545,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'untouch",{"_index":541,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":768,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":823,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":824,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["courseset",{"_index":356,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["coursesidebarcompon",{"_index":153,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":407,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coverag",{"_index":1120,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":352,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["createopt",{"_index":1034,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["createoption(opt",{"_index":1019,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["crumb",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":900,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":857,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(course.issueitems.map(issueitem",{"_index":886,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":874,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":890,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["current",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["d3",{"_index":858,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["d50000",{"_index":803,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["darken",{"_index":490,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["data",{"_index":743,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["declar",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":575,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":346,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delet",{"_index":441,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["delete_outlin",{"_index":353,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["depend",{"_index":177,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":254,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["desir",{"_index":450,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["desiredstatu",{"_index":784,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":403,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["details'},{'nam",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":810,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":811,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":809,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:11",{"_index":814,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":813,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:9",{"_index":812,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["determin",{"_index":462,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["dev",{"_index":1192,"title":{},"body":{"index.html":{}}}],["develop",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{}}}],["devmod",{"_index":1066,"title":{},"body":{"injectables/ToastService.html":{}}}],["direct",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1197,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1201,"title":{},"body":{"index.html":{}}}],["discov",{"_index":825,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{}}}],["discoveri",{"_index":946,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissu",{"_index":904,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":911,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":344,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["discuss",{"_index":747,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["dismiss",{"_index":1076,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":402,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["dist",{"_index":1200,"title":{},"body":{"index.html":{}}}],["divid",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["document.documentelement.style.setproperti",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":891,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1002,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1086,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":714,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":330,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["domsanit",{"_index":316,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["don't",{"_index":387,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["done",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":899,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":833,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":1025,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["dsv",{"_index":859,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dynam",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":527,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/ToastService.html":{}}}],["e.messag",{"_index":1077,"title":{},"body":{"injectables/ToastService.html":{}}}],["e123",{"_index":581,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["e2",{"_index":1210,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":242,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":248,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":246,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":864,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["eat",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eceff1",{"_index":802,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["effect",{"_index":795,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["element(by.css('app",{"_index":251,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":574,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":782,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["embed",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emit",{"_index":999,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["end",{"_index":1209,"title":{},"body":{"index.html":{}}}],["entir",{"_index":332,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["environ",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":943,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":397,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["event",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":291,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["exampl",{"_index":579,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["execut",{"_index":1206,"title":{},"body":{"index.html":{}}}],["exist",{"_index":959,"title":{},"body":{"injectables/KatanaService.html":{}}}],["explor",{"_index":359,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["express",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":476,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{}}}],["failur",{"_index":1078,"title":{},"body":{"injectables/ToastService.html":{}}}],["fall",{"_index":583,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":305,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":388,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["fighter",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":889,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["first",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":466,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{}}}],["fixabl",{"_index":974,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":979,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":980,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissu",{"_index":905,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":913,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixopt",{"_index":348,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["flag",{"_index":1203,"title":{},"body":{"index.html":{}}}],["flat",{"_index":797,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["flatissu",{"_index":876,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["folder",{"_index":748,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["formcontrol",{"_index":989,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup",{"_index":987,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup(group",{"_index":1033,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formsmodul",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1081,"title":{},"body":{"injectables/ToastService.html":{}}}],["freedom",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["function",{"_index":1073,"title":{},"body":{"injectables/ToastService.html":{}}}],["further",{"_index":1211,"title":{},"body":{"index.html":{}}}],["gavel",{"_index":762,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":258,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"index.html":{}}}],["get",{"_index":442,"title":{"index.html":{}},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbordercolor",{"_index":775,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclass",{"_index":776,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":781,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":562,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":674,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":452,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getcourses(bodi",{"_index":915,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":501,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount('approv",{"_index":533,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('fail",{"_index":537,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('fix",{"_index":539,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('skip",{"_index":535,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('untouch",{"_index":531,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'approv",{"_index":544,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'fail",{"_index":548,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'fix",{"_index":550,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'skip",{"_index":546,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'untouch",{"_index":542,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(statu",{"_index":506,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":834,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitemcount",{"_index":1110,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["getissueitems(cours",{"_index":841,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getmod",{"_index":835,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getparagraphtext",{"_index":244,"title":{},"body":{"classes/AppPage.html":{}}}],["getselectedcategori",{"_index":1103,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":692,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1106,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":675,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":467,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettextcolorclass",{"_index":676,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":481,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettoollist",{"_index":906,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":677,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":459,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettypeicon",{"_index":731,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["github:byuitechops/logg",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":445,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["go",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["green",{"_index":487,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["grey",{"_index":489,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["group",{"_index":1028,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["group[option.key",{"_index":1031,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["h1')).gettext",{"_index":252,"title":{},"body":{"classes/AppPage.html":{}}}],["header",{"_index":885,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":939,"title":{},"body":{"injectables/KatanaService.html":{}}}],["help",{"_index":1212,"title":{},"body":{"index.html":{}}}],["help_outlin",{"_index":763,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["here",{"_index":1050,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["home",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["home/tool",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["hostil",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["htmlelement",{"_index":712,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1011,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["http",{"_index":910,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["http://localhost:4200",{"_index":1194,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/cours",{"_index":1079,"title":{},"body":{"injectables/ToastService.html":{}}}],["httpclient",{"_index":908,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":921,"title":{},"body":{"injectables/KatanaService.html":{}}}],["https://byui.instructure.com/courses/12872/pages/setup",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hype",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.",{"_index":465,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["icon",{"_index":341,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["id",{"_index":349,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["identifi",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":862,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["immedi",{"_index":364,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["implement",{"_index":260,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":480,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inject",{"_index":343,"title":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":285,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{}}}],["input('sid",{"_index":1064,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1063,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1062,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":1018,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["insert_drive_fil",{"_index":759,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instanceof",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["instructor",{"_index":398,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["instructor?module_item_id=850086",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instructornam",{"_index":515,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["interfac",{"_index":339,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["isad",{"_index":563,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":569,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["issu",{"_index":58,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue.statu",{"_index":457,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.titl",{"_index":769,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["issuecardcompon",{"_index":155,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":157,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuedetail",{"_index":774,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":159,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":44,"title":{"interfaces/IssueItem.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issueitem'",{"_index":757,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":881,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":424,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":869,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":456,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issueitem.issues.foreach(issu",{"_index":867,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.includes(issu",{"_index":871,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":455,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.reduce((acc",{"_index":877,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.item_id",{"_index":880,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":882,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.titl",{"_index":767,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":977,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issuelistcompon",{"_index":161,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":163,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":458,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["it'",{"_index":865,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["item",{"_index":357,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["item_id",{"_index":405,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["item_typ",{"_index":758,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["itemset",{"_index":358,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["jone",{"_index":582,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["js",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["json.parse(event.data",{"_index":967,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":961,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":438,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["karma",{"_index":1208,"title":{},"body":{"index.html":{}}}],["katana",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["katana.servic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["katanaservic",{"_index":24,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.socket",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":298,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["key.includes('katana_cours",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["languag",{"_index":355,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["last",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":556,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["leek",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":448,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["legend",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["lesson",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lighten",{"_index":492,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["link",{"_index":406,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["list').subscribe((toollist",{"_index":934,"title":{},"body":{"injectables/KatanaService.html":{}}}],["list'},{'nam",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":818,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":819,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":817,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":820,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:12",{"_index":822,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:14",{"_index":821,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["live",{"_index":366,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["load",{"_index":306,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":381,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":383,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":385,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["local",{"_index":430,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["locat",{"_index":704,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["log",{"_index":883,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["logger",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["make",{"_index":602,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["master",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["materializeact",{"_index":294,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["messag",{"_index":1075,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":243,"title":{},"body":{"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{}}}],["miscellan",{"_index":1220,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":282,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":265,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalcont",{"_index":299,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1001,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalnam",{"_index":846,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["modalopen",{"_index":992,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["mode",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["modifi",{"_index":287,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":175,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"modules.html":{},"overview.html":{}}}],["moduleitem",{"_index":753,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["more",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{},"index.html":{}}}],["more_vert",{"_index":901,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["multiselect",{"_index":1026,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["n",{"_index":887,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["name1",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":518,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":522,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":523,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":524,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":521,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nation",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nav",{"_index":829,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":830,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":831,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":828,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":854,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:20",{"_index":838,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:22",{"_index":851,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:23",{"_index":855,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:24",{"_index":852,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:27",{"_index":843,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:35",{"_index":845,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:39",{"_index":839,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:51",{"_index":850,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:63",{"_index":842,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:71",{"_index":848,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:77",{"_index":840,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["navig",{"_index":1193,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":245,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationend",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":290,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["newli",{"_index":415,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["newstatu",{"_index":788,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["newwidth",{"_index":720,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1190,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":564,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":269,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["none",{"_index":517,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["note",{"_index":329,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["null",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["number",{"_index":400,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["numer",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":334,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":425,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1006,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["observ",{"_index":922,"title":{},"body":{"injectables/KatanaService.html":{}}}],["octet/stream",{"_index":894,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":297,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["onc",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["oninit",{"_index":261,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1003,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["open",{"_index":280,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":540,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":502,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":270,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["openmodal(modalnam",{"_index":844,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["option.choices.reduce((acc",{"_index":1020,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.descript",{"_index":1024,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1030,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.titl",{"_index":1023,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["optionmodel",{"_index":981,"title":{"classes/OptionModel.html":{}},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["optionmodel(this.opt",{"_index":996,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["options.categories.push(category.id",{"_index":1014,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1007,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":165,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":333,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["output",{"_index":738,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["outsid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlay",{"_index":713,"title":{},"body":{"components/CourseSidebarComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":716,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":717,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1217,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1148,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/IssueCardComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["painfulli",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panorama_fish_ey",{"_index":475,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["param",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["paramet",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["parser",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":1017,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["path",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":274,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["pipe",{"_index":307,"title":{"pipes/BypassSanitize.html":{}},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":315,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["place",{"_index":390,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pleas",{"_index":807,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{}}}],["popul",{"_index":283,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["posit",{"_index":633,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":861,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["potato",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pre",{"_index":958,"title":{},"body":{"injectables/KatanaService.html":{}}}],["privat",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["probabl",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process",{"_index":361,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["processingmessag",{"_index":362,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["prod",{"_index":1202,"title":{},"body":{"index.html":{}}}],["product",{"_index":1204,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1185,"title":{},"body":{"index.html":{}}}],["promis",{"_index":927,"title":{},"body":{"injectables/KatanaService.html":{}}}],["promise((resolv",{"_index":931,"title":{},"body":{"injectables/KatanaService.html":{}}}],["prop",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["protractor",{"_index":249,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"overview.html":{}}}],["providedin",{"_index":350,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["public",{"_index":266,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["queri",{"_index":611,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":752,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":760,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quiz",{"_index":750,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["quizquest",{"_index":751,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quizz",{"_index":749,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["rc.2",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1213,"title":{},"body":{"index.html":{}}}],["real",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receiv",{"_index":973,"title":{},"body":{"injectables/KatanaService.html":{}}}],["red",{"_index":494,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["redirectto",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":417,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":335,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["reject",{"_index":932,"title":{},"body":{"injectables/KatanaService.html":{}}}],["reload",{"_index":331,"title":{},"body":{"components/CategoriesComponent.html":{},"index.html":{}}}],["remov",{"_index":354,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["remove_circl",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":701,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":678,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":440,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["render",{"_index":740,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":608,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["request",{"_index":928,"title":{},"body":{"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["requir",{"_index":347,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":936,"title":{},"body":{"injectables/KatanaService.html":{}}}],["resolve(data",{"_index":942,"title":{},"body":{"injectables/KatanaService.html":{}}}],["respons",{"_index":930,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["result",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":925,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retriev",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["return",{"_index":247,"title":{},"body":{"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["revers",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["right",{"_index":389,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":192,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":391,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{}}}],["rxj",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":926,"title":{},"body":{"injectables/KatanaService.html":{}}}],["safehtml",{"_index":314,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["same",{"_index":635,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sanitize.pip",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitize.pipe.t",{"_index":309,"title":{},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["sanitize.pipe.ts:12",{"_index":312,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["save",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":1196,"title":{},"body":{"index.html":{}}}],["search",{"_index":558,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["search_term",{"_index":605,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":557,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":559,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":256,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{}}}],["select",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selectedcategori",{"_index":372,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":374,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcours",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedcourse(cours",{"_index":416,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteddiscoveropt",{"_index":370,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedfixopt",{"_index":371,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":409,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteditem",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedmod",{"_index":832,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectedtool",{"_index":376,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":378,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["selection.component.css",{"_index":553,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":554,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":551,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:10",{"_index":1090,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:11",{"_index":592,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:113",{"_index":570,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:117",{"_index":571,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:12",{"_index":593,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":577,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":591,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":589,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":590,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":588,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":586,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:30",{"_index":567,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":587,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":568,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:77",{"_index":573,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["selection/tool",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":836,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":847,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":616,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["sentiment_very_dissatisfi",{"_index":827,"title":{},"body":{"components/IssueListComponent.html":{}}}],["serv",{"_index":1191,"title":{},"body":{"index.html":{}}}],["server",{"_index":365,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["servic",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["service'",{"_index":949,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sessionstorage.selectedcategori",{"_index":375,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":419,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["sessionstorage.selectedtool",{"_index":379,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":437,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["set",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["setapprov",{"_index":837,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setapproved(newstatu",{"_index":849,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setissuestatu",{"_index":777,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":786,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":322,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":325,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":702,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":694,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1108,"title":{},"body":{"injectables/ToolService.html":{}}}],["setter",{"_index":413,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["settimeout",{"_index":1085,"title":{},"body":{"injectables/ToastService.html":{}}}],["shown",{"_index":463,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["side",{"_index":1056,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["sidebar",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.component.css",{"_index":698,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":699,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":697,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:12",{"_index":705,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":709,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":706,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":708,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":707,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["singl",{"_index":446,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["skip",{"_index":472,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["socket",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.addeventlistener('messag",{"_index":966,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":956,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":972,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":965,"title":{},"body":{"injectables/KatanaService.html":{}}}],["solid",{"_index":804,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["someth",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":631,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":565,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":572,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["space",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec\\.t",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":948,"title":{},"body":{"injectables/KatanaService.html":{}}}],["specifi",{"_index":451,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["split",{"_index":514,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../environment.prod.t",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generated_issues.t",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.t",{"_index":253,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:20",{"_index":292,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:22",{"_index":289,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:37",{"_index":279,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:40",{"_index":276,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:42",{"_index":271,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:44",{"_index":293,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:46",{"_index":278,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:48",{"_index":273,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/categories/categories.component.t",{"_index":319,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/categories/categories.component.ts:10",{"_index":324,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:12",{"_index":327,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:22",{"_index":326,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/cours",{"_index":496,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":392,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"coverage.html":{}}}],["src/app/course.service.ts:102",{"_index":681,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:120",{"_index":684,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:130",{"_index":682,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:145",{"_index":683,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:38",{"_index":689,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:39",{"_index":686,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":690,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:41",{"_index":688,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:42",{"_index":687,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:44",{"_index":693,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:49",{"_index":695,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:57",{"_index":696,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:59",{"_index":679,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:70",{"_index":680,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:89",{"_index":685,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/generated_issues.t",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/issu",{"_index":726,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":903,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:14",{"_index":909,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:140",{"_index":914,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:22",{"_index":920,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:31",{"_index":918,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:45",{"_index":916,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:72",{"_index":912,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/opt",{"_index":308,"title":{},"body":{"pipes/BypassSanitize.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["src/app/stat",{"_index":1051,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["src/app/toast.service.t",{"_index":1065,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:12",{"_index":1072,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:31",{"_index":1070,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:9",{"_index":1068,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":1089,"title":{},"body":{"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":340,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:103",{"_index":1109,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:106",{"_index":1093,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:48",{"_index":1096,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:78",{"_index":1097,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:79",{"_index":1098,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:80",{"_index":1102,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:83",{"_index":1101,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:85",{"_index":1094,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:86",{"_index":1095,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:87",{"_index":1099,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:88",{"_index":1100,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:90",{"_index":1104,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:94",{"_index":1105,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:99",{"_index":1107,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/environments/environment.prod.t",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":123,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["stat",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":167,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1057,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statement",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1058,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":401,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["statuscolor",{"_index":482,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statuscolors[statu",{"_index":495,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicon",{"_index":468,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicons[statu",{"_index":478,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["still",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":431,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["store",{"_index":1199,"title":{},"body":{"index.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subaccount",{"_index":560,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subscrib",{"_index":941,"title":{},"body":{"injectables/KatanaService.html":{}}}],["success",{"_index":929,"title":{},"body":{"injectables/KatanaService.html":{}}}],["support",{"_index":1214,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":626,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["svg",{"_index":1215,"title":{},"body":{"modules.html":{}}}],["syllabu",{"_index":360,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tabl",{"_index":601,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["tag_fac",{"_index":826,"title":{},"body":{"components/IssueListComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["term",{"_index":399,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["test",{"_index":255,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"index.html":{}}}],["test_issu",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":484,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["that\\'",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((cours",{"_index":628,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["thing",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._sanitizer.bypasssecuritytrusthtml(v",{"_index":318,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["this._selectedcategori",{"_index":373,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":412,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitem",{"_index":422,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":423,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedtool",{"_index":377,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":623,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":386,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.closemod",{"_index":872,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":526,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":511,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":516,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":520,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":513,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":525,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":528,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":629,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":460,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.courseservice.addcourse(cours",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courseeditopen",{"_index":951,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.courses.find(c",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":875,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":724,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1004,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1115,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":719,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":969,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":725,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":723,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":970,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.foreach(issueitem",{"_index":866,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":815,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":816,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":436,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.coursesobj[key",{"_index":427,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.formgroup",{"_index":997,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1008,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":461,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.http.get('/tool",{"_index":933,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/cours",{"_index":940,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":791,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":792,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":790,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1015,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":620,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.katanaservice.gettoollist",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastsortedbi",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":300,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.modalopen",{"_index":1000,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1005,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":993,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.optionmodel",{"_index":995,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":998,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1029,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.removecourse(cours",{"_index":439,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1016,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":302,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":615,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":624,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":607,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":612,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":453,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":454,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedissueitem",{"_index":421,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedmod",{"_index":860,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.sockets.push(socket",{"_index":955,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":621,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":622,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.devmod",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toast('y",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":944,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":384,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":953,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":952,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":336,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":964,"title":{},"body":{"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.discoveropt",{"_index":994,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":963,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":935,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":745,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":754,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["three",{"_index":603,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["throat",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":923,"title":{},"body":{"injectables/KatanaService.html":{}}}],["tingli",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1084,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1069,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1067,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1071,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":26,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":715,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":983,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["tomato",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":61,"title":{"interfaces/Tool.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["tool.icon",{"_index":1091,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":380,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tool.servic",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1092,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":962,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolcategori",{"_index":342,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolid",{"_index":947,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":367,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolselectioncompon",{"_index":170,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":25,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1119,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":303,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1047,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":304,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toolviewopen",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":742,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["toolview",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":171,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":363,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["top",{"_index":756,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["total",{"_index":447,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["track",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":310,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["transform(v",{"_index":311,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["true",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeicon",{"_index":730,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":766,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["types/d3",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":755,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["unapprov",{"_index":863,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["undefin",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":444,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["unit",{"_index":1205,"title":{},"body":{"index.html":{}}}],["unsuccess",{"_index":950,"title":{},"body":{"injectables/KatanaService.html":{}}}],["untouch",{"_index":474,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["updat",{"_index":418,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["uri",{"_index":619,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["url",{"_index":286,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["us",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["user",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["user'",{"_index":429,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["v",{"_index":313,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["valid",{"_index":988,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["validators.requir",{"_index":1032,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["valu",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["variabl",{"_index":1126,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1188,"title":{},"body":{"index.html":{}}}],["via",{"_index":1207,"title":{},"body":{"index.html":{}}}],["view",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view'},{'nam",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":991,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":990,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":982,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:10",{"_index":1111,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:117",{"_index":985,"title":{},"body":{"classes/OptionModel.html":{}}}],["view.component.ts:12",{"_index":1113,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:122",{"_index":986,"title":{},"body":{"classes/OptionModel.html":{}}}],["view.component.ts:13",{"_index":1114,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:15",{"_index":1112,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:17",{"_index":1045,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:18",{"_index":1044,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:19",{"_index":1041,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:22",{"_index":1043,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.ts:23",{"_index":1035,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:25",{"_index":1046,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:26",{"_index":1042,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:42",{"_index":1040,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:46",{"_index":1036,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:51",{"_index":1038,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:55",{"_index":1039,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:86",{"_index":1037,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/bypass",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["view/opt",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":764,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":765,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":576,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":596,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('issuedetail",{"_index":789,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":598,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":597,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":594,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":595,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":739,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["void",{"_index":277,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["want",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":477,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["wave",{"_index":794,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["way",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["websocket",{"_index":919,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket('ws://localhost:8000/tool/discov",{"_index":954,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket('ws://localhost:8000/tool/fix",{"_index":978,"title":{},"body":{"injectables/KatanaService.html":{}}}],["whether",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["whitespac",{"_index":609,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window.location.href",{"_index":382,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":722,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":510,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":895,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["winter",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["without",{"_index":884,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["world\\'",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["wrong",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["www.google.com",{"_index":585,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["zero",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService, IssueItem } from './course.service';\nimport { toast } from 'angular2-materialize';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /***************************************************************************************\n     * Constructor for the AppComponent class. Listens for the \"NavigationEnd\" event\n     * on the Router, and then clears the selectedItem and selectedCourse values\n     * from the Issues service if the user is not on a tool view page.\n     * @param router\n     * @param courseService\n     ***************************************************************************************/\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseEditOpen = false;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Retrieve the tool list on start\n        this.katanaService.getToolList()\n            .catch((e) => {\n                this.toastService.devMode = true;\n                this.toastService.toast('You are in development mode.');\n                console.error(e);\n            });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n\n    title = 'app';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                BypassSanitize\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport { MaterializeModule } from 'angular2-materialize';\nimport 'rxjs';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { BypassSanitize } from './options-view/bypass-sanitize.pipe';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent\n    },\n    {\n        path: 'home/tools',\n        component: ToolSelectionComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CourseSidebarComponent,\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolViewComponent,\n        CourseSelectionComponent,\n        CourseChipComponent,\n        IssueContainerComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        BypassSanitize,\n        StatBadgeComponent,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MaterializeModule,\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        This is a test to see if Compodoc generates this comment.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breadcrumbs\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/breadcrumbs/breadcrumbs.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Opens and closes the modal. Populates the modal based on the input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breadcrumbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breadcrumbs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        url: '/',\n        title: 'Home'\n    }, {\n        url: '/',\n        title: 'Pages'\n    }, {\n        url: '/tool-view',\n        title: 'Modify Attributes'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\nimport { MaterializeAction } from 'angular2-materialize';\n\n/**\n * This is a test to see if Compodoc generates this comment.\n */\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\n\nexport class BreadcrumbsComponent implements OnInit {\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n\n    breadcrumbs = [{\n        url: '/',\n        title: 'Home'\n    }, {\n        url: '/',\n        title: 'Pages'\n    }, {\n        url: '/tool-view',\n        title: 'Modify Attributes'\n    }];\n\n    /**\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    constructor(private router: Router, public toolService: ToolService, private courseService: CourseService) { }\n\n    ngOnInit() { }\n\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    feedback\n                \n            \n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BypassSanitize.html":{"url":"pipes/BypassSanitize.html","title":"pipe - BypassSanitize","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  BypassSanitize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/options-view/bypass-sanitize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        bypassSanitize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/bypass-sanitize.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeHtml\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'bypassSanitize'\n})\nexport class BypassSanitize implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/categories/categories.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/categories/categories.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /************************************************************\n     * This sets the selected category on the Tool service.\n     * Note that this MUST return false, so it doesn't reload\n     * the entire page, just the router-outlet.\n     * @param {object} category - The category to set\n     * @returns {false} - This is so it doesn't refresh the entire page\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-chip/course-chip.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n    @Input() course: Course;\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private router: Router) { }\n\n    openCourse() {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    buildInstructorName() {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n\n        return instructorName;\n    }\n\n    getIssueCount(status) {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                \n                    {{courseService.getStatusIcon('untouched')}}\n                \n                \n                    {{getIssueCount('untouched')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('approved')}}\n                \n                \n                    {{getIssueCount('approved')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('skipped')}}\n                \n                \n                    {{getIssueCount('skipped')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('failed')}}\n                \n                \n                    {{getIssueCount('failed')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('fixed')}}\n                \n                \n                    {{getIssueCount('fixed')}}\n                \n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                                            {{courseService.getStatusIcon(\\'untouched\\')}}                                                    {{getIssueCount(\\'untouched\\')}}                                                                            {{courseService.getStatusIcon(\\'approved\\')}}                                                    {{getIssueCount(\\'approved\\')}}                                                                            {{courseService.getStatusIcon(\\'skipped\\')}}                                                    {{getIssueCount(\\'skipped\\')}}                                                                            {{courseService.getStatusIcon(\\'failed\\')}}                                                    {{getIssueCount(\\'failed\\')}}                                                                            {{courseService.getStatusIcon(\\'fixed\\')}}                                                    {{getIssueCount(\\'fixed\\')}}                                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-selection/course-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-selection/course-selection.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        id: 1318,\n        course_name: 'Example Course 123',\n        course_code: 'E123',\n        instructor: 'Katana Jones',\n        issueItems: [],\n        account: '3',\n        term: 'Fall 2018',\n        url: 'www.google.com',\n        blueprint: false\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { KatanaService } from '../katana.service';\nimport { Course, CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent implements AfterViewInit {\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    @ViewChild('term') private term: ElementRef;\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    @ViewChild('searchText') private searchText: ElementRef;\n    @ViewChild('searchBy') private searchBy: ElementRef;\n\n    searching: boolean = false;\n    lastSortedBy: string;\n\n    courseResults: Course[] = [{\n        id: 1318,\n        course_name: 'Example Course 123',\n        course_code: 'E123',\n        instructor: 'Katana Jones',\n        issueItems: [],\n        account: '3',\n        term: 'Fall 2018',\n        url: 'www.google.com',\n        blueprint: false\n    }];\n\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /*************************************************************************\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     *************************************************************************/\n    async getCourses() {\n        /* Canvas makes you have an input of at least three characters to use the search_term in the API */\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            /* Replace any whitespaces with '%20' for the query parameter */\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            /* Set the loading circle to display before retrieving the courses */\n            this.searching = true;\n\n            /* Send the search parameters to the katana service to build the correct URI */\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /******************************************************************\n     * Sorts the courseResults array according to the \n     * course attribute defined by 'param'\n     * @param {string} param - The object key to be sorted\n     * @returns {number} - The new position of the object in the array\n     ******************************************************************/\n    sortBy(param) {\n        /* If they click on the same category more than once, it will reverse the order of the results */\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        /* Sort numerically */\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            /* Sort alphabetically */\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /************************************************************\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course - The course that is being checked\n     * @returns {boolean} - Whether the course is already added\n     ************************************************************/\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n\n    ngAfterViewInit() { }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n            \n            {{course.course_name}}\n            {{course.course_code}}\n            {{course.instructor}}\n            {{course.account}}\n            {{course.term}}\n            {{course.blueprint}}\n            {{course.id}}\n            \n              \n                open_in_new\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n              \n            \n          \n        \n        \n          Searching ...\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                        {{course.course_name}}            {{course.course_code}}            {{course.instructor}}            {{course.account}}            {{course.term}}            {{course.blueprint}}            {{course.id}}                                          open_in_new                                                                                                                                                                                                                                                                          Searching ...                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseEditOpen\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssuecount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:59\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssuecount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssuecount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseEditOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseEditOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:44\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:57\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-sidebar/course-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-sidebar/course-sidebar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { ToolService } from '../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-card/issue-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService, IssueItem } from '../course.service';\n\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    // Issue Item\n    @Input() issueItem: IssueItem;\n    // Card Position\n    @Input() position: number;\n    // Reference to the typeIcon\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    constructor(public courseService: CourseService) { }\n\n    /***********************************************************************\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly.\n     **********************************************************************/\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     **********************************************************************/\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-container/issue-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBorderColor\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setIssueStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-container/issue-container.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBorderColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBorderColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Issue } from '../course.service';\n\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    @Input() // Issue\n    issue: Issue;\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n    }\n\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn-flat';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    getBorderColor() {\n        let borderColors = {\n            'fixed': '#2979ff',\n            'approved': '#00c853',\n            'skipped': '#455a64',\n            'untouched': '#eceff1',\n            'failed': '#d50000'\n        }\n        return `solid 5px ${borderColors[this.issue.status]}`;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n    \n\n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-details/issue-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-details/issue-details.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        Issues\n        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\n\nexport class IssueListComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process. Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process. Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-nav/issue-nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                selectedModal\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                getModal\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                            \n                                setApproved\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-nav/issue-nav.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal(modalName: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalName\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setApproved\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetApproved(newStatus: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedModal:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'approveAll'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    selectedModal: string = 'approveAll';\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n    getModal() {\n        return this.selectedModal;\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     ****************************************************************/\n    openModal(modalName) {\n        this.selectedModal = modalName;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /*****************************************************************\n     * Approves all issues for the course to be fixed if possible, ignoring skipped and fixed items.\n     * @param {string} newStatus - Either 'approved' or 'unapproved', determines the new status\n     * Process:\n     * 1. For each issue items, get its issues\n     * 2. For each issue on the issue item, see if it is skipped or fixed\n     * 3. If not, set it's status to approved\n     ****************************************************************/\n    setApproved(newStatus: string) {\n        this.courseService.selectedCourse.issueItems.forEach(issueItem => {\n            issueItem.issues.forEach(issue => {\n                if (newStatus === 'approved' && issue.status === 'untouched') {\n                    issue.status = newStatus;\n                } else if (newStatus === 'untouched' && issue.status === 'approved') {\n                    issue.status = newStatus;\n                }\n            });\n        });\n    }\n\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    downloadIssues() {\n        console.log(`downloadIssues`);\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            if (i  {\n                    let flatIssues = issueItem.issues.reduce((acc, issue) => acc.concat(JSON.stringify(issue)), []);\n                    console.log(`flatIssues: `, flatIssues);\n                    return [\n                        issueItem.title,\n                        issueItem.course_id,\n                        issueItem.item_id,\n                        issueItem.category,\n                        issueItem.link,\n                        ...flatIssues,\n                    ];\n                })));\n            } else {\n                // Make the log without the header\n                csvReport += csvFormatRows(course.issueItems.map(issueItem => {\n                    let flatIssues = issueItem.issues.reduce((acc, issue) => acc.concat(JSON.stringify(issue)), []);\n                    console.log(`flatIssues: `, flatIssues);\n                    return [\n                        issueItem.title,\n                        issueItem.course_id,\n                        issueItem.item_id,\n                        issueItem.category,\n                        issueItem.link,\n                        ...flatIssues,\n                    ];\n                })) + '\\n';\n            }\n        });\n        console.log(`csvReport: `, csvReport);\n        let fileName = 'csvReport.csv';\n        let a =  document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                    \n                \n            \n        \n\n\n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                                                                        Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService, IssueItem, Course } from './course.service';\nimport { ToolService, Tool } from './tool.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class KatanaService {\n\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private toastService: ToastService) { }\n\n    sockets: WebSocket[] = [];\n\n    /*****************************************************************\n     * Retrieves the list of tools from the server.\n     * Process:\n     * 1. Returns a promise\n     * 2. Sends a GET request to the server for the tool list\n     * 3. On success, sets the toolList property on the tools service to the response data\n     ****************************************************************/\n    getToolList() {\n        return new Promise((resolve, reject) => {\n            this.http.get('/tool-list').subscribe((toolList: any): any => {\n                this.toolService.toolList = toolList;\n                resolve();\n            }, reject);\n        });\n    }\n\n    /*****************************************************************\n     * Retrieves...\n     * Process:\n     * 1. \n     ****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n            this.http.post('/course-retrieval', body, { headers: headers }).subscribe(\n                (data) => {\n                    resolve(data);\n                },\n                (err) => {\n                    this.toastService.toastError(err);\n                    console.error(err);\n                });\n        });\n    }\n\n    /*****************************************************************\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     * Process:\n     * 1. Returns a promise\n     * 2. Builds the request object using the provided parameters\n     * 3. Sends the request to the discovery URI\n     * 4. When successful, sets the course service's courses to the new course objects with issueItems\n     * 5. When unsuccessful, rejects the promise with the given error\n     ****************************************************************/\n    discoverIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const socket = new WebSocket('ws://localhost:8000/tool/discover');\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n\n    /*****************************************************************\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     * Process:\n     * 1. Returns a promise\n     * 2. Builds the request object using the provided parameters\n     * 3. Sends the request to the fix tool URI\n     * 4. When successful, sets the courses property on the course service to the received courses\n     * 5. When unsuccessful, rejects the promise with the given error\n     ****************************************************************/\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket('ws://localhost:8000/tool/fix');\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options-view/options-view.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:117\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\n\nexport class OptionsViewComponent {\n\n    options: DiscoverOption[];\n    optionModel: OptionModel;\n    formGroup;\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n    modalOpen: boolean = false;\n\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.options = this.toolService.selectedTool.discoverOptions;\n        this.optionModel = new OptionModel(this.options);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalOpen = true;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalOpen = false;\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    modalIsOpen() {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    onSubmit() {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n    /******************************************************************************\n     * Creates an option on the options page based on the options provided by the\n     * currently selected tool.\n     * @param {DiscoverOption} option - The options object passed in by the tool\n     * @returns {string} - The HTML to be inserted into the DOM\n     *****************************************************************************/\n    createOption(option) {\n        var choices = option.choices.reduce((acc, choice) => {\n            return acc += `${choice.text}`\n        }, '');\n\n        let builders = {\n            'text': `\n          ${option.title}\n          ${option.description}\n          \n        `,\n            'dropdown': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `,\n            'multiselect': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `\n        }\n        return builders[option.type];\n    }\n}\n\nclass OptionModel {\n    options = [];\n\n    constructor(options) {\n        this.options = options;\n    }\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            }\n            else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/options-view/options-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                modalOpen\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                createOption\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createOption\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateOption(option: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\n\nexport class OptionsViewComponent {\n\n    options: DiscoverOption[];\n    optionModel: OptionModel;\n    formGroup;\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n    modalOpen: boolean = false;\n\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.options = this.toolService.selectedTool.discoverOptions;\n        this.optionModel = new OptionModel(this.options);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalOpen = true;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalOpen = false;\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    modalIsOpen() {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    onSubmit() {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n    /******************************************************************************\n     * Creates an option on the options page based on the options provided by the\n     * currently selected tool.\n     * @param {DiscoverOption} option - The options object passed in by the tool\n     * @returns {string} - The HTML to be inserted into the DOM\n     *****************************************************************************/\n    createOption(option) {\n        var choices = option.choices.reduce((acc, choice) => {\n            return acc += `${choice.text}`\n        }, '');\n\n        let builders = {\n            'text': `\n          ${option.title}\n          ${option.description}\n          \n        `,\n            'dropdown': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `,\n            'multiselect': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `\n        }\n        return builders[option.type];\n    }\n}\n\nclass OptionModel {\n    options = [];\n\n    constructor(options) {\n        this.options = options;\n    }\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            }\n            else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Options\n            \n                {{toolService.selectedTool.title}}\n            \n        \n\n        \n            \n                {{toolService.selectedTool.description}}\n\n                Categories\n                \n                    \n                        \n                        {{category}}\n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice.text}}\n                            \n                        \n                        \n                            \n                                {{choice.text}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n                Required\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Options                            {{toolService.selectedTool.title}}                                                        {{toolService.selectedTool.description}}                Categories                                                                                    {{category}}                                                                        {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice.text}}                                                                                                                                        {{choice.text}}                                                                                                                                Cancel                Run Tool                Required                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stat-badge/stat-badge.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/stat-badge/stat-badge.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    @Input('statTitle') statTitle: string;\n    @Input('statCount') statCount: number;\n    @Input('side') side: string = 'right';\n\n    constructor() { }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                devMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devMode:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    devMode: boolean = false;\n    constructor() { }\n\n    toastError(e) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        var text = e.message;\n        if (e.message === 'Http failure response for http://localhost:4200/course-retrieval: 404 Not Found') {\n            text = 'The server is not available. Please check with a Katana Admin.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-selection/tool-selection.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-selection/tool-selection.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-selection/tool-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                selectedFixOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFixOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedFixOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:90\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:94\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:99\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:103\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-view/tool-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                            \n                                getIssueItemCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-view/tool-view.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItemCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    getIssueItemCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.length;\n        }, 0);\n    }\n\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                    {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/GENERATED_ISSUES.ts\n            \n            \n                variable\n            \n            \n                TEST_ISSUES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/options-view/bypass-sanitize.pipe.ts\n            \n            \n                pipe\n            \n            \n                BypassSanitize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.2.0\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.2.0\n        \n            ws : ^5.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis project was generated with Angular CLI version 6.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TEST_ISSUES   (src/.../GENERATED_ISSUES.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/GENERATED_ISSUES.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TEST_ISSUES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TEST_ISSUES:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'untouched',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'untouched',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'untouched',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'fixed',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'skipped',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'skipped',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'skipped',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'skipped',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'skipped',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'skipped',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'skipped',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'skipped',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'approved',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}]\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
