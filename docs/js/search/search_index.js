var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.494,1,1.133]],["body/components/AppComponent.html",[0,0.796,1,1.601,2,0.374,3,0.374,4,0.991,5,1.04,6,1.04,7,0.287,8,2.623,9,0.541,10,4.418,11,3.389,12,1.843,13,3.084,14,4.418,15,3.798,16,2.055,17,0.869,18,3.103,19,3.389,20,3.389,21,1.04,22,2.502,23,2.383,24,2.637,25,1.506,26,4.418,27,1.506,28,6.299,29,0.421,30,0.847,31,2.045,32,3.722,33,2.817,34,1.265,35,2.341,36,3.622,37,2.267,38,3.277,39,4.277,40,3.878,41,1.265,42,3.051,43,3.174,44,4.418,45,3.389,46,2.463,47,4.464,48,2.045,49,1.782,50,3.798,51,0.621,52,1.031,53,2.772,54,3.798,55,4.418,56,2.637,57,2.929,58,2.463,59,3.1,60,2.311,61,4.418,62,3.798,63,2.463,64,2.637,65,1.526,66,0.743,67,0.019,68,0.717,69,0.717,70,0.61,71,0.701,72,1.484,73,1.869,74,2.274,75,1.699,76,0.972,77,2.214,78,2.463,79,1.506,80,2.463,81,0.93,82,1.206,83,3.389,84,3.798,85,1.392,86,2.717,87,2.804,88,3.051,89,3.051,90,0.766,91,0.611,92,2.978,93,5.194,94,1.343,95,1.208,96,1.821,97,2.623,98,1.419,99,2.13,100,1.273,101,2.341,102,0.329,103,0.308,104,1.61,105,2.13,106,3.174,107,0.99,108,2.341,109,3.051,110,3.051,111,3.051,112,3.798,113,4.418,114,3.051,115,3.051,116,3.084,117,3.798,118,4.418,119,2.976,120,4.418,121,3.051,122,1.821,123,2.623,124,2.623,125,1.343,126,2.341,127,2.341,128,3.051,129,3.051,130,1.944,131,3.051,132,2.623,133,3.051,134,3.051,135,2.623,136,0.525,137,3.051,138,3.051,139,3.051,140,1.208,141,2.341,142,1.027,143,0.351,144,3.984,145,2.13,146,3.051,147,3.051,148,1.503,149,3.051,150,3.051,151,2.623,152,3.051,153,2.311,154,2.623,155,3.051,156,1.821,157,2.341,158,0.611,159,3.051,160,3.051,161,1.148,162,3.051,163,3.051,164,2.978,165,2.637,166,2.637,167,1.46,168,3.389,169,4.418,170,2.311,171,2.311,172,0.818,173,0.885,174,1.434,175,1.506,176,1.848,177,1.04,178,3.051,179,3.051,180,1.04,181,0.858,182,1.04,183,0.525,184,1.04,185,0.858,186,0.525,187,1.04,188,0.818,189,1.506,190,0.858,191,1.04,192,0.818,193,0.497,194,1.04,195,0.858,196,1.04,197,0.525,198,1.04,199,0.858,200,1.04,201,0.858,202,1.04,203,0.858,204,1.04,205,0.78,206,1.04,207,0.858,208,0.991,209,1.04,210,0.553,211,0.818,212,1.04,213,0.011,214,0.011]],["title/modules/AppModule.html",[215,1.596,216,2.813]],["body/modules/AppModule.html",[0,0.832,1,2.094,2,0.518,3,0.518,7,0.397,32,3.809,45,4.246,51,0.483,59,2.525,65,1.134,67,0.019,72,1.299,76,0.618,85,1.134,90,0.885,91,0.848,94,1.862,99,2.953,102,0.665,103,0.427,125,1.862,161,1.592,172,1.134,183,0.952,192,1.484,205,1.414,211,1.484,213,0.013,214,0.013,215,2.443,216,5.272,217,2.213,218,3.966,219,3.966,220,3.637,221,3.637,222,3.637,223,3.637,224,3.637,225,4.479,226,4.479,227,4.479,228,3.558,229,4.231,230,5.535,231,3.637,232,3.245,233,3.864,234,2.953,235,5.535,236,3.637,237,5.535,238,3.637,239,1.968,240,3.637,241,3.245,242,4.231,243,3.245,244,5.535,245,4.231,246,5.535,247,3.637,248,2.953,249,4.231,250,2.72,251,4.231,252,2.961,253,3.637,254,5.535,255,3.558,256,4.231,257,4.231,258,2.953,259,4.246,260,3.245,261,2.953,262,3.864,263,3.637,264,5.535,265,3.066,266,1.309,267,5.535,268,5.535,269,3.864,270,5.303,271,4.231,272,4.231,273,4.231,274,4.231,275,4.231]],["title/injectables/AuthGuardService.html",[32,2.108,276,1.517]],["body/injectables/AuthGuardService.html",[2,0.435,3,0.435,7,0.333,9,0.602,17,1.06,18,3.15,29,0.49,30,0.801,31,2.245,32,2.572,34,0.864,36,4.069,41,1.711,45,3.771,46,1.978,48,1.152,49,1.886,56,2.934,60,2.572,63,2.741,65,1.774,66,0.864,67,0.019,68,0.49,69,0.883,70,0.49,71,0.69,72,1.188,81,1.035,85,1.632,90,0.762,91,0.711,92,1.856,94,1.561,102,0.383,103,0.358,104,1.256,106,3.145,116,4.251,125,2.163,136,1.222,143,0.808,158,1.22,161,1.335,164,3.618,165,3.635,166,4.244,167,1.712,193,0.578,213,0.012,214,0.012,241,2.721,243,4.327,247,3.049,270,5.688,276,2.123,277,3.049,278,4.464,279,3.771,280,3.856,281,5.688,282,5.688,283,2.421,284,6.617,285,6.09,286,1.521,287,6.09,288,6.09,289,6.09,290,3.547,291,6.617,292,3.547,293,5.641,294,4.327,295,2.255,296,3.547,297,2.05,298,1.675,299,3.547,300,3.915,301,4.916,302,1.521,303,3.547,304,3.431,305,4.916,306,3.431,307,3.547,308,3.547,309,3.547,310,6.09,311,3.547,312,0.823,313,3.547,314,4.225,315,2.741,316,4.225,317,2.28,318,3.049,319,1.152,320,3.547,321,1.405,322,3.547,323,3.547,324,3.547,325,3.547,326,3.937,327,3.547,328,3.547,329,6.09,330,3.547,331,3.547,332,3.547,333,3.547,334,3.049,335,2.721,336,3.547,337,3.547,338,3.547,339,3.547,340,3.547,341,3.547,342,3.547,343,3.547,344,3.547,345,3.547,346,3.547]],["title/components/BreadcrumbsComponent.html",[0,0.494,181,1.133]],["body/components/BreadcrumbsComponent.html",[0,0.795,1,1.037,2,0.452,3,0.452,4,1.198,5,1.258,6,1.258,7,0.347,9,0.706,15,4.342,17,0.895,18,3.563,21,1.258,22,2.561,23,2.439,25,1.721,27,1.721,29,0.509,30,0.824,31,2.267,32,3.841,33,2.907,34,1.403,35,2.831,36,4.118,41,1.58,51,0.566,52,0.668,53,2.725,60,2.643,66,1.23,67,0.019,68,0.855,69,0.855,70,0.795,71,0.773,75,1.619,76,0.738,87,3.051,90,0.713,91,0.739,94,1.624,98,1.716,99,2.576,100,2.583,102,0.398,103,0.372,104,1.583,119,2.837,125,2.854,136,1.115,142,1.058,143,0.747,145,3.526,158,1.342,171,3.013,172,0.989,173,1.012,174,1.64,175,1.721,176,2.011,177,1.258,180,1.258,181,1.741,182,1.258,183,0.634,184,1.258,185,1.037,186,0.634,187,1.258,188,0.989,189,1.721,190,1.037,191,1.258,192,0.989,193,0.602,194,1.258,195,1.037,196,1.258,197,0.634,198,1.258,199,1.037,200,1.258,201,1.037,202,1.258,203,1.037,204,1.258,205,0.943,206,1.258,207,1.037,208,1.198,209,1.258,210,0.668,211,0.989,212,1.258,213,0.012,214,0.012,252,2.107,265,2.223,269,3.526,278,4.675,286,1.563,294,4.418,295,1.963,298,1.963,300,4.17,315,2.058,321,1.461,347,3.735,348,3.172,349,3.697,350,6.193,351,5.051,352,4.342,353,1.808,354,5.051,355,6.698,356,5.051,357,3.69,358,3.438,359,5.051,360,3.69,361,2,362,5.051,363,3.247,364,1.49,365,2.223,366,3.69,367,3.69,368,3.69,369,3.69,370,4.342,371,5.051]],["title/components/CategoriesComponent.html",[0,0.494,183,0.693]],["body/components/CategoriesComponent.html",[0,0.804,1,1.07,2,0.467,3,0.467,4,1.236,5,1.298,6,1.298,7,0.358,9,0.717,11,3.958,21,1.298,22,2.57,23,2.448,25,1.758,27,1.758,29,0.526,30,0.841,31,2.129,33,2.902,34,1.426,36,2.877,37,2.514,41,1.528,51,0.614,52,0.689,53,2.761,57,2.4,60,2.699,66,1.257,67,0.019,68,0.866,69,0.866,70,0.808,71,0.746,75,1.944,76,0.958,82,1.605,87,3.091,90,0.722,91,0.763,95,1.508,98,1.771,100,1.588,102,0.411,103,0.384,104,1.496,107,1.196,119,3.091,136,1.127,142,1.069,143,0.594,172,1.02,173,1.034,174,1.675,175,1.758,176,2.037,177,1.298,180,1.298,181,1.07,182,1.298,183,1.079,184,1.298,185,1.07,186,0.655,187,1.298,188,1.02,189,1.758,190,1.07,191,1.298,192,1.02,193,0.621,194,1.298,195,1.07,196,1.298,197,0.655,198,1.298,199,1.07,200,1.298,201,1.07,202,1.298,203,1.07,204,1.298,205,0.973,206,1.298,207,1.07,208,1.236,209,1.298,210,0.689,211,1.02,212,1.298,213,0.012,214,0.012,266,2.358,278,4.085,286,1.596,298,1.298,321,1.508,347,3.656,364,1.934,365,2.271,372,3.273,373,1.451,374,2.468,375,1.847,376,5.16,377,6.761,378,5.16,379,2.657,380,3.807,381,2.883,382,4.49,383,4.49,384,4.435,385,3.807,386,3.807,387,3.807,388,0.588,389,1.596,390,0.973,391,3.807,392,4.435,393,4.435,394,4.435]],["title/interfaces/Category.html",[266,1.247,388,0.622]],["body/interfaces/Category.html",[2,0.346,3,0.346,7,0.265,9,0.777,12,1.741,17,0.808,29,0.39,30,0.81,49,0.832,51,0.637,52,0.511,67,0.019,68,0.576,69,0.977,70,0.991,71,0.783,76,1.034,79,0.962,81,0.594,82,1.423,90,0.48,102,0.717,103,0.285,107,0.538,136,0.485,140,1.118,142,1.143,143,0.749,158,0.995,167,1.173,173,1.228,183,0.854,186,0.717,193,0.894,197,0.854,210,0.511,213,0.012,214,0.01,252,1.741,265,1.242,266,2.234,297,1.741,298,1.995,302,1.291,312,0.969,319,1.781,353,1.494,361,1.653,364,1.726,365,1.242,373,0.794,374,2.306,375,1.494,388,1.109,389,2.247,390,1.566,395,1.313,396,2.056,397,1.571,398,1.671,399,2.096,400,2.6,401,2.576,402,2.072,403,2.056,404,3.019,405,2.442,406,2.697,407,2.288,408,1.062,409,2.203,410,2.551,411,1.177,412,1.741,413,1.966,414,1.726,415,2.556,416,1.494,417,2.45,418,1.941,419,1.941,420,2.288,421,1.941,422,1.87,423,2.288,424,1.692,425,1.494,426,1.966,427,1.778,428,1.741,429,2.071,430,1.39,431,1.313,432,1.422,433,1.177,434,1.177,435,2.089,436,1.01,437,1.313,438,1.39,439,1.39,440,2.277,441,1.177,442,1.836,443,1.836,444,1.39,445,2.309,446,1.571,447,1.177,448,1.313,449,1.571,450,1.542,451,1.118,452,1.01,453,1.242,454,1.118,455,1.836,456,1.177,457,1.118,458,1.242,459,1.313,460,1.39,461,1.062,462,1.313,463,1.39,464,1.39,465,2.218,466,1.062,467,1.313,468,1.39,469,1.536,470,1.39,471,1.39,472,1.242,473,1.39,474,1.242,475,1.313,476,1.39,477,1.39,478,2.056,479,1.313,480,1.39,481,1.313,482,1.941,483,1.177,484,1.313,485,1.118,486,1.941,487,1.941,488,1.313,489,1.01,490,1.242,491,1.39]],["title/components/CodeEditorComponent.html",[0,0.494,185,1.133]],["body/components/CodeEditorComponent.html",[0,0.747,1,0.705,2,0.566,3,0.307,4,0.814,5,0.854,6,0.854,7,0.235,9,0.468,16,2.15,17,0.638,21,0.854,22,2.431,23,2.316,25,1.301,27,1.301,29,0.346,30,0.843,34,1.484,41,1.648,43,3.267,46,2.882,48,1.239,51,0.511,52,0.837,60,1.311,66,0.61,67,0.019,68,0.638,69,0.841,70,0.768,71,0.558,72,0.973,75,1.453,76,0.558,77,1.575,90,0.439,91,0.502,102,0.27,103,0.385,104,0.64,107,1.367,136,0.889,142,1.147,144,1.922,145,2.664,153,2.704,156,1.496,158,1.258,161,1.945,172,0.672,173,1.315,174,1.678,175,1.301,176,1.806,177,0.854,180,0.854,181,0.705,182,0.854,183,0.431,184,0.854,185,1.453,186,1.265,187,0.854,188,0.672,189,1.301,190,0.705,191,0.854,192,0.672,193,0.409,194,0.854,195,0.705,196,0.854,197,0.431,198,0.854,199,0.705,200,0.854,201,0.705,202,0.854,203,0.705,204,0.854,205,0.64,206,0.854,207,0.705,208,0.814,209,0.854,210,0.454,211,0.672,212,0.854,213,0.009,214,0.011,279,2.928,286,1.813,295,1.575,312,0.886,314,2.154,315,1.397,317,2.454,319,0.814,364,1.363,388,0.387,390,1.181,398,0.93,402,1.571,412,1.592,414,1.125,416,1.991,422,1.761,427,2.663,428,3.136,432,1.301,433,2.444,434,1.592,440,1.239,451,1.511,452,0.897,457,1.511,458,1.68,461,1.945,465,1.301,492,3.184,493,5.886,494,5.252,495,2.154,496,2.454,497,5.169,498,3.974,499,3.817,500,3.817,501,5.169,502,5.86,503,5.169,504,5.169,505,5.169,506,5.037,507,3.817,508,5.86,509,3.817,510,3.281,511,3.281,512,5.86,513,4.09,514,5.641,515,4.623,516,5.169,517,5.563,518,2.506,519,2.506,520,2.972,521,2.454,522,3.281,523,2.506,524,2.506,525,2.928,526,3.817,527,3.817,528,3.817,529,3.817,530,1.74,531,2.506,532,2.664,533,2.454,534,1.592,535,5.886,536,5.169,537,3.546,538,3.817,539,2.506,540,5.169,541,2.454,542,2.928,543,3.817,544,3.817,545,2.928,546,3.001,547,2.664,548,3.817,549,3.817,550,3.281,551,3.817,552,2.928,553,3.281,554,3.817,555,2.506,556,2.928,557,2.506,558,2.704,559,3.965,560,3.322,561,1.611,562,2.454,563,2.506,564,3.817,565,3.817,566,2.506,567,3.281,568,3.817,569,2.506,570,2.506,571,2.154,572,2.506,573,3.817,574,2.506,575,2.506,576,2.506,577,1.922,578,1.922,579,2.154,580,2.506,581,2.506,582,2.506,583,1.922,584,2.506,585,2.506,586,2.506,587,2.506,588,2.506,589,3.817,590,2.506,591,2.506,592,2.506,593,2.506,594,1.749,595,2.506,596,2.506,597,2.506,598,2.506,599,1.749,600,2.154,601,2.506,602,2.506,603,2.506,604,3.817,605,3.817,606,3.817,607,2.506,608,2.506,609,2.506,610,2.506,611,2.506,612,2.506,613,2.506,614,2.506,615,3.281,616,2.506,617,2.506,618,2.928,619,3.817,620,3.281,621,2.506,622,2.506,623,2.154,624,2.506,625,3.817,626,2.506,627,2.506,628,2.506,629,2.506,630,2.506,631,4.623,632,3.817,633,3.817,634,3.817]],["title/interfaces/Course.html",[76,0.589,388,0.622]],["body/interfaces/Course.html",[2,0.322,3,0.322,7,0.247,9,0.759,12,1.652,17,0.784,29,0.363,30,0.776,49,0.776,51,0.63,52,0.476,67,0.019,68,0.657,69,1.015,70,1.024,71,0.766,76,1.087,79,0.897,81,0.554,82,1.386,90,0.456,102,0.704,103,0.265,107,0.755,136,0.681,140,1.042,142,1.128,143,0.713,158,1.139,167,1.679,173,1.196,183,0.681,186,0.819,193,1.039,197,0.819,210,0.476,213,0.012,214,0.01,252,1.098,265,1.158,266,2.088,297,1.986,298,2.223,302,1.847,312,0.919,319,1.72,353,1.418,361,2.364,364,1.562,365,1.158,373,0.74,374,2.247,375,0.942,388,1.088,389,2.223,390,1.526,395,1.224,396,1.296,397,0.99,398,1.619,399,1.418,400,2.5,401,1.743,402,2.076,403,1.296,404,2.941,405,2.21,406,2.628,407,2.21,408,0.99,409,2.139,410,2.464,411,1.098,412,1.652,413,1.886,414,1.676,415,2.491,416,1.418,417,2.399,418,1.842,419,1.842,420,2.21,421,1.842,422,2.035,423,2.21,424,1.623,425,1.418,426,1.886,427,1.705,428,1.652,429,1.986,430,1.296,431,1.224,432,1.35,433,1.098,434,1.098,435,2.265,436,0.942,437,1.224,438,1.296,439,1.296,440,2.346,441,1.098,442,1.743,443,1.743,444,1.296,445,2.215,446,1.49,447,1.098,448,1.224,449,1.792,450,1.868,451,1.042,452,0.942,453,1.158,454,1.042,455,1.743,456,1.098,457,1.042,458,1.158,459,1.224,460,1.296,461,0.99,462,1.224,463,1.296,464,1.296,465,2.173,466,0.99,467,1.224,468,1.296,469,1.758,470,1.296,471,1.296,472,1.158,473,1.296,474,1.158,475,1.842,476,2.61,477,2.61,478,2.941,479,1.842,480,1.951,481,1.842,482,2.777,483,1.098,484,1.842,485,1.568,486,2.777,487,2.777,488,1.842,489,1.418,490,1.158,491,1.296]],["title/components/CourseSelectionComponent.html",[0,0.494,188,1.08]],["body/components/CourseSelectionComponent.html",[0,0.636,1,0.607,2,0.265,3,0.265,4,0.701,5,0.736,6,0.736,7,0.395,9,0.636,13,2.374,17,0.761,21,0.736,22,2.371,23,2.258,25,1.159,27,1.159,29,0.298,30,0.555,31,1.366,34,1.025,37,2.333,38,2.946,41,1.695,48,1.104,51,0.297,52,0.391,57,1.004,58,1.896,63,2.346,65,1.128,66,1.457,67,0.019,68,0.825,69,0.887,70,0.717,71,0.233,72,1.215,73,1.302,74,1.954,75,1.906,76,1.111,77,1.159,78,2.895,79,1.434,80,1.896,81,0.716,90,0.549,91,0.433,92,2.497,95,0.855,96,1.289,100,1.419,102,0.233,103,0.218,104,1.732,105,1.507,106,3.78,107,0.648,119,2.843,136,1.196,141,1.657,142,0.847,143,0.688,148,2.558,153,2.201,157,3.228,158,0.843,161,1.583,167,1.623,172,0.579,173,0.956,174,2.12,175,1.159,176,1.55,177,0.736,180,0.736,181,0.607,182,0.736,183,0.371,184,0.736,185,0.607,186,0.723,187,0.736,188,1.279,189,1.159,190,0.607,191,0.736,192,0.579,193,0.352,194,0.736,195,0.607,196,0.736,197,0.371,198,0.736,199,0.607,200,0.736,201,0.607,202,0.736,203,0.607,204,0.736,205,0.552,206,0.736,207,0.607,208,0.701,209,0.736,210,0.391,211,0.579,212,0.736,213,0.016,214,0.013,250,4.438,266,0.668,286,1.052,298,1.159,302,1.052,312,1.108,326,1.507,349,1.289,363,3.955,381,1.675,388,0.334,390,1.409,398,1.025,402,1.392,414,1.003,416,2.338,417,1.583,422,1.627,435,1.434,440,1.79,457,1.347,479,1.582,481,1.582,482,2.22,484,2.22,486,3.153,487,3.037,513,5.059,530,1.954,533,1.388,546,3.102,547,2.374,560,4.4,561,3.338,562,3.545,583,1.657,618,1.657,623,2.924,635,4.819,636,5.296,637,1.657,638,2.924,639,3.401,640,2.924,641,2.924,642,6.298,643,4.774,644,5.193,645,4.774,646,5.193,647,4.774,648,4.208,649,3.662,650,3.401,651,4.774,652,3.401,653,3.401,654,1.856,655,3.401,656,2.16,657,2.849,658,4.774,659,3.228,660,4.774,661,2.16,662,2.374,663,3.401,664,3.401,665,2.937,666,4.774,667,2.16,668,3.624,669,2.609,670,4.103,671,2.16,672,3.401,673,3.401,674,2.16,675,5.98,676,3.401,677,2.924,678,3.401,679,2.16,680,4.208,681,3.401,682,3.401,683,2.924,684,3.401,685,1.856,686,5.98,687,2.16,688,2.16,689,2.16,690,2.16,691,2.16,692,2.16,693,2.16,694,2.16,695,2.16,696,2.16,697,2.16,698,2.16,699,2.609,700,2.16,701,2.16,702,1.507,703,1.657,704,2.16,705,3.617,706,2.16,707,1.856,708,1.856,709,4.774,710,3.401,711,2.16,712,1.289,713,4.208,714,1.507,715,2.16,716,2.16,717,2.16,718,2.16,719,2.16,720,2.16,721,1.657,722,1.856,723,3.401,724,2.16,725,4.208,726,2.16,727,1.856,728,2.16,729,1.856,730,1.388,731,2.16,732,2.16,733,1.657,734,4.208,735,2.16,736,2.16,737,3.401,738,3.401,739,2.16,740,2.16,741,2.16,742,3.401,743,2.16,744,3.401,745,2.16,746,1.856,747,2.16,748,2.16,749,3.228,750,2.16,751,2.16,752,2.16,753,1.856,754,2.16,755,1.582,756,3.401,757,3.401,758,3.401,759,3.401,760,3.401,761,3.401,762,4.774,763,3.401,764,3.401,765,3.401,766,2.924,767,3.401,768,3.401,769,3.401,770,3.401,771,2.609]],["title/injectables/CourseService.html",[37,1.373,276,1.517]],["body/injectables/CourseService.html",[0,0.476,2,0.314,3,0.314,7,0.241,9,0.725,13,2.711,17,0.536,24,1.531,29,0.354,30,0.633,34,1.369,37,1.324,41,1.721,46,2.166,48,1.522,53,1.709,58,2.916,64,3.122,66,1.541,67,0.019,68,0.894,69,0.776,70,0.939,71,0.712,72,1.101,73,1.202,74,1.462,75,1.971,76,1.118,77,1.324,87,1.913,90,0.447,91,0.514,102,0.277,103,0.567,104,1.655,107,0.74,116,1.79,119,1.913,122,2.319,136,1.279,142,1.19,148,1.913,158,1.323,161,1.968,174,1.698,186,0.441,188,1.402,213,0.009,214,0.009,269,1.79,276,1.764,286,1.202,295,1.324,304,2.711,312,1.088,315,2.614,318,3.339,319,2.461,375,1.391,381,1.913,382,2.98,383,4.012,388,0.396,389,1.9,390,1.336,398,0.946,399,2.364,402,1.894,414,0.756,417,2.525,422,1.324,424,1.915,432,2.156,435,1.324,449,1.462,450,1.856,451,1.857,452,1.678,453,2.063,454,1.857,469,2.104,483,1.07,485,2.071,520,3.362,521,1.649,530,2.115,533,2.497,545,1.967,546,1.263,599,3.651,649,1.967,662,3.651,702,1.79,721,4.012,749,4.311,772,2.204,773,3.884,774,3.339,775,3.884,776,2.98,777,4.609,778,5.23,779,5.23,780,5.23,781,5.23,782,5.23,783,3.884,784,3.884,785,3.884,786,3.884,787,3.884,788,3.884,789,3.884,790,2.565,791,3.884,792,2.565,793,3.884,794,3.884,795,3.884,796,2.565,797,3.884,798,4.012,799,4.127,800,3.884,801,2.565,802,4.012,803,4.127,804,5.23,805,5.23,806,4.012,807,3.884,808,2.565,809,4.496,810,3.884,811,2.565,812,3.339,813,3.884,814,2.565,815,3.884,816,2.565,817,2.565,818,2.565,819,3.339,820,2.565,821,2.565,822,2.565,823,2.204,824,3.884,825,2.565,826,2.565,827,2.565,828,2.565,829,2.565,830,3.884,831,1.649,832,4.689,833,2.565,834,2.565,835,2.565,836,2.565,837,2.565,838,2.204,839,2.565,840,3.651,841,2.565,842,3.339,843,2.565,844,2.565,845,4.689,846,5.23,847,2.565,848,2.565,849,2.565,850,2.565,851,2.204,852,2.204,853,1.531,854,2.204,855,2.565,856,2.565,857,2.565,858,2.565,859,2.204,860,2.204,861,2.565,862,2.565,863,2.565,864,3.884,865,4.83,866,3.339,867,2.204,868,2.565,869,4.689,870,2.204,871,4.496,872,2.98,873,3.884,874,2.204,875,1.967,876,2.565]],["title/components/CourseTabsComponent.html",[0,0.494,190,1.133]],["body/components/CourseTabsComponent.html",[0,0.733,1,0.836,2,0.364,3,0.364,4,0.965,5,1.013,6,1.013,7,0.279,9,0.689,17,0.706,21,1.013,22,2.493,23,2.375,25,1.478,27,1.478,29,0.41,30,0.707,31,2.144,33,2.804,34,1.247,37,2.39,38,1.465,40,4.187,41,1.667,48,0.965,51,0.522,52,0.538,66,1.247,67,0.019,68,0.825,69,0.825,70,0.776,71,0.468,72,1.391,73,1.931,75,1.439,76,1.098,77,2.128,81,1.078,82,1.188,90,0.719,91,0.596,95,1.177,96,1.775,98,1.383,101,2.281,102,0.321,103,0.3,104,1.647,107,1.072,108,4.789,122,1.775,124,3.727,136,1.206,142,1.144,145,3.026,148,2.77,153,1.556,172,0.797,173,0.869,174,1.408,175,1.478,176,1.826,177,1.013,180,1.013,181,0.836,182,1.013,183,0.511,184,1.013,185,0.836,186,0.511,187,1.013,188,0.797,189,1.478,190,1.581,191,1.013,192,0.797,193,0.485,194,1.013,195,0.836,196,1.013,197,0.511,198,1.013,199,0.836,200,1.013,201,0.836,202,1.013,203,0.836,204,1.013,205,0.76,206,1.013,207,0.836,208,0.965,209,1.013,210,0.538,211,0.797,212,1.013,213,0.011,214,0.015,239,1.383,250,4.777,286,1.341,295,2.128,312,0.69,315,2.853,319,2.222,321,1.177,352,5.884,358,2.588,381,3.417,402,1.372,427,2.365,433,1.809,435,1.478,436,2.013,440,2.027,443,1.908,446,1.632,450,0.836,451,1.717,469,2.084,525,3.326,530,2.25,533,3.615,635,4.841,638,3.727,657,3.847,753,3.727,766,3.727,771,3.326,777,3.026,802,3.326,840,2.075,842,4.399,852,2.556,853,1.775,854,2.556,877,2.556,878,3.727,879,4.336,880,4.336,881,4.314,882,4.314,883,5.624,884,3.727,885,4.336,886,4.314,887,1.775,888,4.336,889,2.973,890,5.067,891,2.973,892,4.336,893,2.973,894,4.336,895,2.973,896,2.973,897,2.973,898,2.973,899,2.973,900,2.281,901,1.556,902,3.326,903,2.973,904,2.973,905,2.556,906,2.075,907,2.556,908,4.336,909,4.336,910,6.243,911,3.326,912,3.727,913,3.727,914,4.336,915,4.336,916,2.556,917,4.314,918,4.336,919,2.556]],["title/modules/CourseTabsModule.html",[215,1.596,225,2.591]],["body/modules/CourseTabsModule.html",[2,0.641,3,0.641,7,0.492,59,3.124,67,0.019,72,1.102,76,0.925,90,0.856,91,1.049,94,2.303,102,0.762,103,0.528,125,2.303,172,1.403,188,1.971,190,2.155,213,0.015,214,0.015,215,2.506,217,2.738,218,4.373,219,3.364,225,4.859,228,4.068,233,4.417,234,4.417,239,2.434,250,4.068,635,3.653,636,4.014,901,2.738,920,4.499,921,4.499,922,4.499,923,5.234,924,4.854,925,3.653,926,4.854,927,4.499,928,5.234]],["title/interfaces/DiscoverOption.html",[388,0.622,413,1.596]],["body/interfaces/DiscoverOption.html",[2,0.334,3,0.334,7,0.256,9,0.834,12,2.028,17,0.835,29,0.376,30,0.793,49,0.803,51,0.63,52,0.493,67,0.019,68,0.561,69,1.025,70,1.028,71,0.779,76,1.027,79,0.929,81,0.574,82,1.496,90,0.468,102,0.71,103,0.275,107,0.519,136,0.468,140,1.079,142,1.136,143,0.742,158,0.974,167,1.143,173,1.212,183,0.699,186,0.699,193,0.879,197,0.836,210,0.493,213,0.012,214,0.01,252,1.137,265,1.199,266,2.105,297,1.696,298,2.136,302,1.258,312,1.129,319,1.75,353,1.455,361,1.61,364,1.59,365,1.199,373,0.766,374,2.277,375,0.975,388,1.103,389,2.235,390,1.646,395,1.267,396,1.342,397,1.025,398,1.678,399,1.455,400,2.587,401,1.789,402,2.072,403,1.342,404,2.841,405,2.406,406,2.538,407,2.249,408,1.025,409,2.171,410,2.682,411,1.696,412,2.028,413,2.135,414,1.942,415,2.687,416,1.741,417,2.593,418,2.261,419,2.261,420,2.687,421,2.682,422,1.966,423,2.687,424,1.657,425,1.455,426,1.925,427,1.741,428,1.696,429,2.028,430,1.342,431,1.267,432,1.385,433,1.137,434,1.137,435,2.062,436,0.975,437,1.267,438,1.342,439,1.342,440,2.261,441,1.137,442,1.789,443,1.789,444,1.342,445,2.261,446,1.53,447,1.137,448,1.267,449,1.53,450,1.516,451,1.079,452,0.975,453,1.199,454,1.079,455,1.789,456,1.137,457,1.079,458,1.199,459,1.267,460,1.342,461,1.025,462,1.267,463,1.342,464,1.342,465,2.196,466,1.025,467,1.267,468,1.342,469,1.504,470,1.342,471,1.342,472,1.199,473,1.342,474,1.199,475,1.267,476,1.342,477,1.342,478,2.002,479,1.267,480,1.342,481,1.267,482,1.891,483,1.137,484,1.267,485,1.079,486,1.891,487,1.891,488,1.267,489,0.975,490,1.199,491,1.342]],["title/interfaces/EditorTab.html",[388,0.622,429,1.681]],["body/interfaces/EditorTab.html",[2,0.348,3,0.348,7,0.267,9,0.778,12,1.747,17,0.847,29,0.392,30,0.812,49,0.837,51,0.631,52,0.514,67,0.019,68,0.578,69,0.977,70,0.992,71,0.78,76,1.035,79,0.967,81,0.597,82,1.425,90,0.482,102,0.718,103,0.286,107,0.541,136,0.488,140,1.123,142,1.155,143,0.731,158,0.998,167,1.178,173,1.306,183,0.72,186,0.856,193,0.897,197,0.856,210,0.514,213,0.012,214,0.01,252,1.184,265,1.249,266,2.124,297,1.747,298,2.164,302,1.296,312,0.972,319,1.785,353,1.5,361,1.659,364,1.622,365,1.249,373,0.798,374,2.39,375,1.016,388,1.11,389,2.248,390,1.569,395,1.32,396,1.398,397,1.068,398,1.649,399,1.5,400,2.602,401,1.843,402,2.07,403,1.398,404,2.89,405,2.294,406,2.582,407,2.294,408,1.068,409,2.208,410,2.558,411,1.184,412,1.747,413,1.972,414,1.81,415,2.561,416,1.5,417,2.453,418,1.948,419,1.948,420,2.294,421,1.948,422,1.874,423,2.294,424,1.697,425,1.5,426,1.972,427,2.1,428,2.077,429,2.294,430,2.064,431,2.558,432,1.697,433,1.747,434,2.294,435,2.092,436,1.016,437,1.32,438,1.398,439,1.398,440,2.279,441,1.184,442,1.843,443,1.843,444,1.398,445,2.316,446,1.577,447,1.184,448,1.32,449,1.577,450,1.546,451,1.123,452,1.016,453,1.249,454,1.123,455,1.843,456,1.184,457,1.123,458,1.249,459,1.32,460,1.398,461,1.068,462,1.32,463,1.398,464,1.398,465,2.222,466,1.068,467,1.32,468,1.398,469,1.541,470,1.398,471,1.398,472,1.249,473,1.398,474,1.249,475,1.32,476,1.398,477,1.398,478,2.064,479,1.32,480,1.398,481,1.32,482,1.948,483,1.184,484,1.32,485,1.123,486,1.948,487,1.948,488,1.32,489,1.016,490,1.249,491,1.398]],["title/interfaces/Error.html",[193,0.657,388,0.622]],["body/interfaces/Error.html",[2,0.348,3,0.348,7,0.267,9,0.779,12,1.75,17,0.811,29,0.393,30,0.898,49,0.839,51,0.631,52,0.515,67,0.019,68,0.811,69,0.985,70,1.003,71,0.775,76,1.035,79,0.969,81,0.599,82,1.426,90,0.483,102,0.718,103,0.287,107,0.542,136,0.489,140,1.126,142,1.145,143,0.732,158,0.999,167,1.18,173,1.231,183,0.721,186,0.721,193,1.002,197,0.857,210,0.515,213,0.012,214,0.01,252,1.186,265,1.251,266,2.125,297,1.75,298,2.001,302,1.298,312,0.974,319,2.118,353,1.502,361,1.662,364,1.623,365,1.251,373,0.799,374,2.312,375,1.018,388,1.103,389,2.249,390,1.624,395,1.322,396,1.401,397,1.07,398,1.65,399,1.502,400,2.536,401,1.847,402,2.074,403,1.401,404,2.892,405,2.296,406,2.584,407,2.296,408,1.07,409,2.21,410,2.56,411,1.186,412,1.75,413,1.975,414,1.732,415,2.563,416,1.502,417,2.455,418,1.951,419,1.951,420,2.296,421,1.951,422,1.876,423,2.296,424,1.7,425,1.502,426,1.975,427,1.785,428,1.75,429,2.08,430,1.401,431,1.322,432,1.43,433,1.186,434,1.186,435,2.094,436,1.018,437,1.322,438,1.401,439,1.401,440,2.28,441,1.186,442,1.847,443,1.847,444,1.401,445,2.319,446,2.21,447,1.186,448,1.322,449,1.579,450,1.548,451,1.126,452,1.018,453,1.251,454,1.126,455,1.847,456,1.186,457,1.126,458,1.251,459,1.322,460,1.401,461,1.07,462,1.322,463,1.401,464,1.401,465,2.223,466,1.07,467,1.322,468,1.401,469,1.543,470,1.401,471,1.401,472,1.251,473,1.401,474,1.251,475,1.322,476,1.401,477,1.401,478,2.067,479,1.322,480,1.401,481,1.322,482,1.951,483,1.186,484,1.322,485,1.126,486,1.951,487,1.951,488,1.322,489,1.018,490,1.847,491,2.712]],["title/components/ErrorPageComponent.html",[0,0.494,192,1.08]],["body/components/ErrorPageComponent.html",[0,0.823,1,1.148,2,0.5,3,0.5,4,1.325,5,1.391,6,1.391,7,0.384,9,0.663,16,2.819,17,0.837,21,1.391,22,2.589,23,2.466,25,1.843,27,1.843,29,0.563,30,0.881,31,1.755,34,1.477,38,3.65,41,1.317,51,0.472,52,0.739,53,2.84,56,3.227,65,1.799,66,0.994,67,0.019,68,0.837,69,0.746,70,0.746,71,0.696,73,1.673,76,0.79,81,1.138,82,1.255,87,3.179,90,0.622,91,0.818,96,2.437,100,1.703,102,0.44,103,0.412,104,1.043,142,1.095,143,0.743,170,2.828,172,1.094,173,1.083,174,1.755,175,1.843,176,2.095,177,1.391,180,1.391,181,1.148,182,1.391,183,0.702,184,1.391,185,1.148,186,0.702,187,1.391,188,1.094,189,1.843,190,1.148,191,1.391,192,1.73,193,1.255,194,1.391,195,1.148,196,1.391,197,0.702,198,1.391,199,1.148,200,1.391,201,1.148,202,1.391,203,1.148,204,1.391,205,1.043,206,1.391,207,1.148,208,1.325,209,1.391,210,0.739,211,1.094,212,1.391,213,0.013,214,0.013,262,4.815,319,1.755,321,1.617,347,3.38,398,1.714,654,3.509,929,3.509,930,3.476,931,3.774,932,4.647,933,5.407,934,6.899,935,4.082,936,4.231,937,5.211,938,4.082,939,6.453,940,5.407,941,4.082,942,5.407,943,5.407,944,3.476,945,4.147,946,4.082]],["title/interfaces/FixOption.html",[388,0.622,426,1.596]],["body/interfaces/FixOption.html",[2,0.334,3,0.334,7,0.256,9,0.834,12,2.028,17,0.835,29,0.376,30,0.793,49,0.803,51,0.63,52,0.493,67,0.019,68,0.561,69,1.025,70,1.022,71,0.779,76,1.027,79,0.929,81,0.574,82,1.496,90,0.468,102,0.71,103,0.275,107,0.519,136,0.468,140,1.079,142,1.146,143,0.721,158,0.974,167,1.143,173,1.212,183,0.699,186,0.699,193,0.879,197,0.836,210,0.493,213,0.012,214,0.01,252,1.137,265,1.199,266,2.105,297,1.696,298,2.136,302,1.258,312,1.129,319,1.75,353,1.455,361,1.61,364,1.701,365,1.199,373,0.766,374,2.277,375,0.975,388,1.103,389,2.235,390,1.646,395,1.267,396,1.342,397,1.025,398,1.678,399,1.455,400,2.587,401,1.789,402,2.072,403,1.342,404,2.841,405,2.406,406,2.538,407,2.249,408,1.025,409,2.171,410,2.682,411,1.137,412,2.028,413,1.925,414,1.942,415,2.687,416,1.741,417,2.593,418,2.261,419,2.261,420,2.687,421,2.682,422,1.966,423,2.687,424,1.837,425,1.741,426,2.135,427,1.741,428,1.696,429,2.028,430,1.342,431,1.267,432,1.385,433,1.137,434,1.137,435,2.062,436,0.975,437,1.267,438,1.342,439,1.342,440,2.261,441,1.137,442,1.789,443,1.789,444,1.342,445,2.261,446,1.53,447,1.137,448,1.267,449,1.53,450,1.516,451,1.079,452,0.975,453,1.199,454,1.079,455,1.789,456,1.137,457,1.079,458,1.199,459,1.267,460,1.342,461,1.025,462,1.267,463,1.342,464,1.342,465,2.196,466,1.025,467,1.267,468,1.342,469,1.504,470,1.342,471,1.342,472,1.199,473,1.342,474,1.199,475,1.267,476,1.342,477,1.342,478,2.002,479,1.267,480,1.342,481,1.267,482,1.891,483,1.137,484,1.267,485,1.079,486,1.891,487,1.891,488,1.267,489,0.975,490,1.199,491,1.342]],["title/modules/HomePageModule.html",[215,1.596,226,2.591]],["body/modules/HomePageModule.html",[2,0.594,3,0.594,7,0.455,51,0.423,59,2.891,67,0.019,70,0.669,72,1.02,90,0.87,91,0.971,94,2.132,102,0.742,103,0.488,125,2.132,172,1.298,181,2.134,183,1.241,192,2.034,193,0.79,205,1.845,210,1.307,213,0.015,214,0.015,215,2.39,217,2.534,218,4.226,219,3.114,226,4.943,228,3.88,233,4.212,234,4.212,239,2.253,253,4.164,259,3.716,261,3.381,262,3.381,263,4.164,347,2.701,408,1.823,901,2.534,924,4.629,925,3.381,926,4.629,927,4.164,947,4.164,948,4.164,949,4.164,950,4.164,951,4.844,952,4.844,953,3.716,954,5.651,955,5.651]],["title/interfaces/Issue.html",[142,0.657,388,0.622]],["body/interfaces/Issue.html",[2,0.328,3,0.328,7,0.251,9,0.763,12,1.673,17,0.79,29,0.369,30,0.784,49,0.789,51,0.629,52,0.484,67,0.019,68,0.554,69,1.005,70,1.02,71,0.785,76,1.024,79,0.912,81,0.563,82,1.395,90,0.462,102,0.707,103,0.27,107,0.51,136,0.46,140,1.059,142,1.187,143,0.738,158,1.071,167,1.127,173,1.358,183,0.689,186,0.689,193,0.871,197,0.918,210,0.484,213,0.013,214,0.01,252,1.116,265,1.177,266,2.096,297,1.673,298,1.951,302,1.241,312,0.931,319,2.08,353,2.151,361,1.588,364,1.575,365,1.765,373,1.127,374,2.466,375,0.958,388,1.091,389,2.251,390,1.732,395,1.244,396,1.318,397,1.007,398,1.707,399,1.436,400,2.579,401,1.765,402,2.066,403,1.318,404,2.96,405,2.229,406,2.519,407,2.784,408,1.007,409,2.583,410,2.485,411,1.116,412,1.673,413,1.905,414,1.688,415,2.673,416,1.436,417,2.411,418,1.865,419,1.865,420,2.229,421,1.865,422,1.821,423,2.229,424,1.821,425,1.436,426,2.116,427,1.722,428,1.673,429,2.006,430,1.318,431,1.244,432,1.367,433,1.116,434,1.116,435,2.048,436,0.958,437,1.244,438,1.318,439,1.318,440,2.253,441,1.116,442,1.765,443,1.765,444,1.318,445,2.485,446,1.509,447,1.116,448,1.244,449,1.81,450,1.609,451,1.588,452,1.436,453,1.765,454,1.588,455,2.117,456,1.673,457,1.588,458,1.765,459,1.865,460,2.632,461,1.509,462,1.865,463,1.975,464,2.632,465,2.184,466,1.007,467,1.244,468,1.318,469,1.488,470,1.318,471,1.318,472,1.177,473,1.318,474,1.177,475,1.244,476,1.318,477,1.318,478,1.975,479,1.244,480,1.318,481,1.244,482,1.865,483,1.116,484,1.244,485,1.059,486,1.865,487,1.865,488,1.244,489,0.958,490,1.177,491,1.318]],["title/components/IssueCardComponent.html",[0,0.494,195,1.133]],["body/components/IssueCardComponent.html",[0,0.872,1,0.949,2,0.414,3,0.414,4,1.096,5,1.15,6,1.15,7,0.56,9,0.582,19,3.642,21,1.15,22,2.534,23,2.414,25,1.618,27,1.618,29,0.466,30,0.972,31,1.541,34,1.338,37,2.448,41,1.63,51,0.414,52,0.995,53,2.09,66,0.822,67,0.019,68,0.758,69,0.991,70,0.655,71,0.703,72,1.157,73,1.699,74,2.364,75,1.544,76,0.918,90,0.632,91,0.676,95,1.337,102,0.364,103,0.554,104,0.863,130,2.09,136,1.08,142,1.16,143,0.799,172,0.905,173,0.951,174,2.115,175,1.618,176,1.935,177,1.15,180,1.15,181,0.949,182,1.15,183,0.58,184,1.15,185,0.949,186,0.58,187,1.15,188,0.905,189,1.618,190,0.949,191,1.15,192,0.905,193,0.55,194,1.15,195,1.676,196,1.15,197,0.58,198,1.15,199,0.949,200,1.15,201,1.544,202,1.15,203,0.949,204,1.15,205,0.863,206,1.15,207,0.949,208,1.096,209,1.15,210,0.611,211,0.905,212,1.15,213,0.012,214,0.012,215,2.36,279,3.642,286,1.469,317,3.831,321,1.337,373,1.335,375,1.7,388,0.521,389,1.699,398,1.452,399,2.52,400,1.7,402,0.905,416,1.966,432,1.618,440,1.541,441,2.62,442,2.09,449,1.787,450,1.979,465,2.141,467,2.772,469,1.469,472,2.09,492,3.177,520,3.052,530,1.27,541,3.052,546,2.339,560,3.831,561,2.17,562,3.052,771,3.642,799,4.16,803,3.314,809,4.082,887,2.015,956,4.078,957,5.241,958,2.902,959,6.281,960,4.749,961,4.749,962,6.281,963,6.515,964,5.96,965,6.281,966,4.749,967,3.376,968,3.376,969,3.376,970,4.749,971,4.749,972,3.376,973,4.749,974,3.314,975,5.493,976,3.314,977,3.376,978,4.082,979,3.376,980,3.376,981,3.376,982,3.376,983,5.123,984,5.96,985,4.082,986,3.376,987,3.376,988,3.376,989,3.376,990,3.376,991,3.376,992,3.376,993,3.376,994,3.376,995,3.376,996,3.376,997,4.082,998,4.082,999,3.642]],["title/components/IssueContainerComponent.html",[0,0.494,197,0.693]],["body/components/IssueContainerComponent.html",[0,0.721,1,0.64,2,0.279,3,0.279,4,1.413,5,0.776,6,0.776,7,0.214,9,0.653,21,0.776,22,2.393,23,2.308,25,1.208,27,1.208,29,0.778,30,0.578,31,1.729,33,2.62,34,1.061,37,2.285,41,1.653,48,1.151,51,0.514,52,0.412,53,2.162,58,1.977,65,0.95,66,1.197,67,0.019,68,0.84,69,0.84,70,0.863,71,0.714,72,1.282,73,1.745,74,2.407,75,1.224,76,0.86,82,1.236,87,2.421,90,0.613,91,0.456,95,0.902,98,1.059,100,2.05,102,0.246,103,0.667,104,1.441,107,0.936,136,1.215,142,1.238,148,1.122,153,1.191,156,1.359,158,0.985,161,0.857,172,0.61,173,0.985,174,1.977,175,1.208,176,1.595,177,0.776,180,0.776,181,0.64,182,0.776,183,0.391,184,0.776,185,0.64,186,0.915,187,0.776,188,0.61,189,1.208,190,0.64,191,0.776,192,0.61,193,0.371,194,0.776,195,0.64,196,0.776,197,0.845,198,0.776,199,0.64,200,0.776,201,0.64,202,0.776,203,0.64,204,0.776,205,0.582,206,0.776,207,0.64,208,0.739,209,0.776,210,0.412,211,0.61,212,0.776,213,0.009,214,0.009,280,1.977,286,1.097,295,1.484,298,1.484,317,2.279,319,2.148,321,0.902,349,2.933,353,1.269,358,3.179,363,2.279,364,1.449,373,1.585,375,1.269,379,1.59,382,2.72,383,2.72,388,0.352,389,1.647,390,1.113,398,1.558,399,1.269,400,1.559,402,1.714,406,1.56,409,0.857,414,1.046,415,2.05,416,1.559,417,1.638,420,2.05,422,1.675,424,2.285,426,0.902,427,1.759,428,2.54,432,1.675,434,0.95,435,1.208,445,1.059,449,1.334,451,1.946,452,2.239,453,2.753,454,2.331,458,1.916,465,1.208,469,1.097,488,1.649,492,3.187,498,3.743,506,4.224,521,1.464,530,1.638,532,2.475,537,2.72,546,2.421,558,1.855,559,2.72,560,3.785,561,2.279,562,2.799,571,1.957,599,2.475,615,5.377,668,3.43,702,1.59,755,1.649,799,2.475,853,3.817,859,3.048,860,3.048,866,1.957,870,1.957,871,1.957,875,1.747,944,2.279,945,2.72,956,4.091,999,2.72,1000,5.257,1001,1.957,1002,3.546,1003,5.64,1004,4.914,1005,4.914,1006,4.914,1007,3.546,1008,4.914,1009,3.546,1010,3.546,1011,4.914,1012,3.546,1013,5.64,1014,2.277,1015,2.277,1016,2.277,1017,3.546,1018,2.116,1019,3.546,1020,3.546,1021,5.325,1022,2.277,1023,5.325,1024,2.277,1025,2.277,1026,3.546,1027,2.277,1028,3.546,1029,3.546,1030,3.546,1031,3.546,1032,2.277,1033,4.914,1034,2.277,1035,3.546,1036,3.048,1037,3.048,1038,3.546,1039,3.048,1040,3.546,1041,2.277,1042,2.277,1043,2.277,1044,2.277,1045,2.277,1046,2.277,1047,2.277,1048,2.277,1049,2.277,1050,2.277,1051,2.277,1052,2.277,1053,2.277,1054,4.354,1055,2.277,1056,1.747,1057,2.277,1058,2.277,1059,2.277,1060,2.277,1061,2.277,1062,2.277,1063,2.277,1064,2.277,1065,2.277,1066,2.277,1067,3.546,1068,2.277,1069,2.277,1070,2.277,1071,2.277,1072,2.277,1073,2.277,1074,3.048,1075,3.048,1076,3.546,1077,4.914]],["title/components/IssueDetailsComponent.html",[0,0.494,199,1.133]],["body/components/IssueDetailsComponent.html",[0,0.833,1,1.192,2,0.52,3,0.52,4,1.376,5,1.445,6,1.445,7,0.398,9,0.679,21,1.445,22,2.599,23,2.476,25,1.889,27,1.889,29,0.585,30,0.904,31,1.799,34,1.504,37,2.54,41,1.35,51,0.484,52,0.768,53,2.882,66,1.033,67,0.019,68,0.852,69,0.765,70,0.765,71,0.752,72,1.3,73,1.911,74,2.324,75,1.911,76,0.993,87,3.226,90,0.638,91,0.85,95,1.679,100,2.732,102,0.457,103,0.427,104,1.084,142,1.247,158,1.111,172,1.136,173,1.111,174,1.799,175,1.889,176,2.126,177,1.445,180,1.445,181,1.192,182,1.445,183,0.729,184,1.445,185,1.192,186,0.729,187,1.445,188,1.136,189,1.889,190,1.192,191,1.445,192,1.136,193,0.691,194,1.445,195,1.192,196,1.445,197,0.953,198,1.445,199,1.841,200,1.445,201,1.192,202,1.445,203,1.192,204,1.445,205,1.084,206,1.445,207,1.192,208,1.376,209,1.445,210,0.768,211,1.136,212,1.445,213,0.013,214,0.013,321,1.679,353,1.984,373,1.558,389,1.715,398,1.35,450,1.558,474,2.439,492,2.872,887,2.531,956,3.686,1078,4.737,1079,3.645,1080,5.543,1081,6.972,1082,4.24,1083,4.24,1084,4.24,1085,4.765,1086,5.543]],["title/interfaces/IssueItem.html",[388,0.622,450,1.133]],["body/interfaces/IssueItem.html",[2,0.336,3,0.336,7,0.257,9,0.769,12,1.702,17,0.798,29,0.378,30,0.795,49,0.807,51,0.631,52,0.739,67,0.019,68,0.563,69,0.998,70,0.986,71,0.771,76,1.036,79,1.391,81,0.577,82,1.407,90,0.47,102,0.711,103,0.276,107,0.522,136,0.471,140,1.084,142,1.185,143,0.759,158,0.977,167,1.147,173,1.214,183,0.701,186,0.701,193,0.881,197,0.838,210,0.496,213,0.012,214,0.01,252,1.142,265,1.796,266,2.194,297,1.702,298,1.97,302,1.262,312,0.947,319,1.755,353,1.461,361,1.616,364,1.594,365,1.205,373,0.77,374,2.281,375,0.98,388,1.096,389,2.277,390,1.549,395,1.273,396,1.349,397,1.03,398,1.635,399,1.461,400,2.588,401,1.796,402,2.07,403,1.349,404,2.985,405,2.254,406,2.763,407,2.254,408,1.03,409,2.175,410,2.514,411,1.142,412,1.702,413,1.931,414,1.704,415,2.528,416,1.461,417,2.428,418,1.898,419,1.898,420,2.254,421,1.898,422,1.842,423,2.254,424,1.662,425,1.746,426,1.931,427,1.746,428,1.702,429,2.034,430,1.349,431,1.273,432,1.391,433,1.142,434,1.142,435,2.199,436,0.98,437,1.273,438,1.349,439,1.349,440,2.359,441,1.142,442,2.146,443,2.146,444,1.349,445,2.268,446,1.536,447,1.142,448,1.273,449,1.536,450,1.625,451,1.084,452,0.98,453,1.205,454,1.084,455,2.146,456,1.142,457,1.084,458,1.205,459,1.273,460,1.349,461,1.03,462,1.273,463,1.349,464,1.349,465,2.435,466,1.536,467,1.898,468,2.662,469,1.942,470,2.662,471,2.662,472,1.796,473,1.349,474,1.796,475,1.273,476,1.349,477,1.349,478,2.01,479,1.273,480,1.349,481,1.273,482,1.898,483,1.142,484,1.273,485,1.084,486,1.898,487,1.898,488,1.273,489,0.98,490,1.205,491,1.349]],["title/components/IssueListComponent.html",[0,0.494,201,1.133]],["body/components/IssueListComponent.html",[0,0.773,1,0.961,2,0.419,3,0.419,4,1.11,5,1.165,6,1.165,7,0.321,9,0.587,16,2.228,17,0.827,20,3.674,21,1.165,22,2.538,23,2.418,25,1.632,27,1.632,29,0.472,30,0.781,31,1.555,34,1.347,37,2.453,41,1.593,48,1.11,51,0.523,52,0.619,60,2.506,64,4.407,65,1.284,66,0.833,67,0.019,68,0.871,69,0.827,70,0.661,71,0.517,72,1.329,73,1.711,74,2.081,75,1.774,76,1.06,90,0.637,91,0.685,95,1.353,102,0.369,103,0.345,104,0.873,117,4.117,130,2.108,136,0.823,142,1.198,148,2.724,158,1.201,168,3.674,172,0.916,173,0.96,174,1.945,175,1.632,176,1.945,177,1.165,180,1.165,181,0.961,182,1.165,183,0.588,184,1.165,185,0.961,186,0.588,187,1.165,188,0.916,189,1.632,190,0.961,191,1.165,192,0.916,193,0.557,194,1.165,195,0.961,196,1.165,197,0.588,198,1.165,199,0.961,200,1.165,201,1.685,202,1.165,203,0.961,204,1.165,205,0.873,206,1.165,207,0.961,208,1.11,209,1.165,210,0.619,211,0.916,212,1.165,213,0.012,214,0.012,286,1.482,302,1.482,312,0.793,321,1.353,375,1.715,388,0.528,389,2.023,398,1.167,425,1.715,435,1.632,447,1.998,450,1.958,454,1.897,465,1.632,469,2.077,483,2.5,492,3.123,530,1.286,533,4.627,546,2.359,552,3.674,560,3.852,561,2.197,562,3.079,730,3.079,755,2.228,819,5.151,887,2.04,944,3.079,945,3.674,956,4.009,1087,5.151,1088,2.938,1089,4.79,1090,4.79,1091,6.54,1092,5.993,1093,5.151,1094,5.993,1095,4.79,1096,3.418,1097,4.79,1098,3.418,1099,4.79,1100,4.79,1101,4.79,1102,4.117,1103,4.79,1104,4.79,1105,4.79,1106,3.674,1107,4.79,1108,4.117,1109,4.79,1110,3.418,1111,5.993,1112,3.418,1113,3.418,1114,3.418,1115,5.53,1116,4.79,1117,4.79,1118,3.418,1119,3.418,1120,3.418,1121,4.79,1122,4.79,1123,4.79,1124,4.79]],["title/components/IssueNavComponent.html",[0,0.494,203,1.133]],["body/components/IssueNavComponent.html",[0,0.701,1,0.752,2,0.328,3,0.328,4,0.868,5,0.911,6,0.911,7,0.251,9,0.654,16,1.864,17,0.553,21,0.911,22,2.455,23,2.339,25,1.366,27,1.366,29,0.369,30,0.653,31,2.08,33,2.747,34,1.171,37,2.339,38,3.418,41,1.625,48,0.868,51,0.543,52,0.871,56,2.392,63,2.235,65,1.289,66,1.171,67,0.019,68,0.79,69,0.829,70,0.737,71,0.648,72,1.461,73,1.858,74,2.411,75,1.905,76,1.072,77,1.639,78,2.978,79,1.639,80,2.681,81,1.012,82,1.116,90,0.717,91,0.803,95,1.059,96,1.596,98,1.243,102,0.288,103,0.27,104,1.637,107,1.145,122,1.596,136,1.223,142,1.208,143,0.461,158,1.337,164,1.399,172,0.717,173,0.803,174,1.301,175,1.366,176,2.166,177,0.911,180,0.911,181,0.752,182,0.911,183,0.46,184,0.911,185,0.752,186,0.46,187,0.911,188,0.717,189,1.366,190,0.752,191,0.911,192,0.717,193,0.436,194,0.911,195,0.752,196,0.911,197,0.46,198,0.911,199,0.752,200,0.911,201,0.752,202,0.911,203,1.502,204,0.911,205,0.683,206,0.911,207,0.752,208,0.868,209,0.911,210,0.484,211,0.717,212,0.911,213,0.01,214,0.01,239,2.897,286,1.24,295,1.639,304,2.797,312,0.621,315,3.349,321,1.059,349,2.392,353,1.435,358,2.392,361,1.587,373,1.502,381,2.818,389,1.487,398,0.976,406,2.35,424,2.183,436,1.912,450,1.905,452,2.15,466,1.508,483,1.115,492,3.151,530,2.01,657,3.415,838,3.445,840,2.797,853,2.392,881,4.097,882,4.097,886,4.097,887,1.596,890,4.914,900,2.051,901,3.259,902,3.074,907,2.298,956,4.044,997,3.445,998,3.445,999,3.074,1085,2.298,1093,3.445,1125,5.197,1126,2.298,1127,4.008,1128,4.008,1129,4.008,1130,5.341,1131,4.008,1132,4.008,1133,2.673,1134,2.673,1135,4.918,1136,5.722,1137,4.008,1138,4.008,1139,2.673,1140,2.673,1141,4.008,1142,2.673,1143,2.673,1144,2.673,1145,2.673,1146,2.673,1147,2.298,1148,2.298,1149,4.133,1150,4.133,1151,3.445,1152,2.298,1153,2.673,1154,2.673,1155,2.673,1156,4.008,1157,2.673,1158,2.673,1159,2.673,1160,5.341,1161,4.008,1162,4.008,1163,4.008,1164,4.008,1165,4.008,1166,4.591,1167,4.008,1168,4.008,1169,4.008,1170,4.008,1171,1.866,1172,2.298,1173,2.673,1174,1.491,1175,2.673,1176,3.445,1177,2.673,1178,2.673,1179,2.673,1180,2.673,1181,2.673,1182,2.673,1183,2.673,1184,2.673,1185,4.008,1186,4.008,1187,3.445]],["title/injectables/KatanaService.html",[38,1.985,276,1.517]],["body/injectables/KatanaService.html",[2,0.278,3,0.278,7,0.213,9,0.433,17,0.811,18,1.739,24,1.352,29,0.313,30,0.576,31,1.146,32,3.074,33,2.407,34,1.057,36,3.389,37,2.071,38,1.739,39,3.907,41,1.521,46,1.263,48,1.724,49,1.041,51,0.608,57,1.642,58,1.969,60,1.185,63,3.276,64,3.171,65,0.946,66,1.294,67,0.019,68,0.733,69,0.733,70,0.912,71,0.529,72,1.344,73,1.516,74,1.329,75,1.582,76,1.043,77,1.203,78,1.969,80,1.969,81,1.511,82,0.82,83,2.708,85,0.607,86,2.563,87,2.137,90,0.735,91,0.454,92,2.563,94,0.997,95,0.897,97,1.947,98,1.053,99,1.581,100,0.945,102,0.244,103,0.228,104,1.596,105,1.581,106,2.962,107,0.827,119,3.145,122,1.352,123,5.225,126,4.316,127,5.198,130,2.156,132,3.035,136,1.234,140,0.897,142,1.061,148,1.739,153,2.944,156,1.352,157,2.708,158,1.279,161,2.35,193,1.105,213,0.009,214,0.009,238,1.947,276,1.633,280,1.263,283,2.414,286,1.092,295,2.128,302,0.701,312,0.82,316,3.73,326,1.581,334,1.947,335,4.316,361,1.718,363,3.15,364,1.041,373,0.993,381,2.414,388,0.35,390,1.438,402,0.946,407,0.945,411,1.473,412,1.473,424,1.81,425,1.754,435,1.203,440,1.591,446,1.633,452,0.811,455,0.997,456,1.473,461,1.329,462,1.642,465,2.071,489,1.553,513,2.465,521,2.27,530,0.852,534,1.473,583,2.708,649,2.708,657,2.925,712,1.352,714,3.42,727,1.947,749,3.759,806,2.708,831,1.456,853,1.352,905,5.051,906,2.465,930,1.456,932,1.947,974,3.928,976,4.359,1106,1.738,1152,3.035,1166,1.947,1172,3.73,1188,1.947,1189,4.9,1190,3.531,1191,3.531,1192,3.531,1193,4.9,1194,2.265,1195,4.9,1196,3.531,1197,4.339,1198,3.035,1199,3.531,1200,2.265,1201,3.531,1202,2.265,1203,3.415,1204,3.531,1205,2.265,1206,3.531,1207,2.265,1208,3.035,1209,2.265,1210,3.531,1211,4.9,1212,2.265,1213,3.035,1214,3.73,1215,2.265,1216,3.531,1217,1.263,1218,4.566,1219,3.73,1220,2.265,1221,2.265,1222,2.265,1223,3.73,1224,4.9,1225,4.9,1226,2.265,1227,4.9,1228,3.531,1229,2.265,1230,2.265,1231,3.035,1232,2.265,1233,5.627,1234,5.627,1235,3.531,1236,2.265,1237,3.531,1238,2.265,1239,2.265,1240,2.265,1241,2.265,1242,2.265,1243,3.531,1244,2.265,1245,3.531,1246,5.627,1247,4.9,1248,3.035,1249,3.035,1250,3.035,1251,2.265,1252,3.531,1253,2.265,1254,2.465,1255,2.265,1256,1.947,1257,2.265,1258,1.738,1259,1.738,1260,2.265,1261,2.265,1262,1.947,1263,1.947,1264,3.531,1265,3.531,1266,3.531,1267,3.531,1268,4.339,1269,2.265,1270,1.738,1271,3.531,1272,3.035,1273,3.531,1274,3.035,1275,3.531,1276,3.531,1277,3.531,1278,3.531,1279,4.9,1280,3.531,1281,2.265,1282,3.531,1283,3.531,1284,3.035,1285,2.265,1286,2.265,1287,2.265,1288,2.265,1289,2.265,1290,2.265,1291,2.265,1292,2.265,1293,2.265,1294,1.947,1295,3.531,1296,2.265,1297,2.265,1298,2.265,1299,2.265,1300,2.265,1301,2.265,1302,2.265]],["title/classes/OptionModel.html",[103,0.406,409,1.517]],["body/classes/OptionModel.html",[2,0.585,3,0.585,7,0.449,9,0.733,29,0.659,30,0.976,34,1.591,41,1.591,43,3.336,48,1.551,49,1.764,66,1.164,67,0.019,68,0.659,69,0.659,70,1.06,71,0.645,72,1.26,90,0.55,102,0.515,103,0.603,104,1.221,136,1.029,161,1.798,197,1.029,205,1.529,213,0.014,214,0.014,280,2.664,286,1.851,295,2.403,312,1.109,349,4.294,364,1.764,389,2.319,407,2.941,408,1.798,409,2.252,415,3.001,1303,4.107,1304,5.983,1305,5.983,1306,5.983,1307,5.143,1308,6.847,1309,5.983,1310,5.983,1311,4.778,1312,5.983,1313,5.983,1314,6.533,1315,4.778,1316,4.778,1317,4.778,1318,4.778,1319,5.983,1320,4.778,1321,4.778]],["title/components/OptionsViewComponent.html",[0,0.494,205,1.03]],["body/components/OptionsViewComponent.html",[0,0.772,1,0.777,2,0.339,3,0.339,4,0.897,5,0.942,6,0.942,7,0.26,9,0.665,13,2.868,16,1.911,17,0.749,18,2.024,21,0.942,22,2.467,23,2.35,25,1.4,27,1.4,29,0.381,30,0.67,31,2.1,33,2.766,34,1.195,36,3.686,37,2.402,38,3.472,41,1.683,48,0.897,49,1.212,51,0.564,52,0.888,57,1.911,65,1.555,66,0.673,67,0.019,68,0.677,69,0.893,70,1.024,71,0.726,72,1.392,73,1.881,74,2.289,75,1.858,76,1.045,77,1.671,78,2.734,79,1.671,80,2.734,81,1.033,82,1.138,90,0.761,91,0.554,94,1.216,95,1.094,96,1.65,98,1.285,102,0.298,103,0.414,104,1.554,106,1.541,130,2.676,136,1.083,142,0.946,143,0.625,148,1.361,158,0.823,161,1.546,172,0.741,173,0.823,174,1.334,175,1.4,176,1.763,177,0.942,180,0.942,181,0.777,182,0.942,183,0.475,184,0.942,185,0.777,186,0.475,187,0.942,188,0.741,189,1.4,190,0.777,191,0.942,192,0.741,193,0.451,194,0.942,195,0.777,196,0.942,197,0.475,198,0.942,199,0.777,200,0.942,201,0.777,202,0.942,203,0.777,204,0.942,205,1.387,206,0.942,207,0.777,208,0.897,209,0.942,210,0.5,211,0.741,212,0.942,213,0.01,214,0.01,239,2.929,260,5.357,261,4.875,266,1.881,286,1.271,295,1.671,298,1.671,306,1.929,312,0.642,315,3.391,319,1.334,321,1.094,326,1.929,347,3.894,358,2.452,370,3.532,373,1.155,379,1.929,381,3.102,388,0.427,389,0.855,398,1.001,407,2.806,408,1.04,409,2.532,411,1.714,412,1.714,413,2.15,415,2.537,420,2.265,422,1.4,432,1.4,436,1.944,489,1.471,520,2.641,530,2.289,534,1.714,542,3.152,657,3.464,659,4.165,712,2.452,714,1.929,881,4.165,882,4.165,886,4.165,890,5.301,900,2.12,901,3.294,902,3.152,1074,3.532,1075,3.532,1149,4.215,1150,4.215,1187,3.532,1274,2.376,1322,2.12,1323,3.532,1324,3.532,1325,5.43,1326,5.43,1327,4.109,1328,2.764,1329,2.764,1330,4.109,1331,2.764,1332,3.152,1333,3.532,1334,4.109,1335,4.109,1336,2.764,1337,2.764,1338,2.764,1339,2.764,1340,2.764,1341,2.764,1342,2.764,1343,2.764,1344,2.764,1345,2.764,1346,2.764,1347,2.764,1348,2.764,1349,2.764,1350,2.764,1351,2.764,1352,2.764,1353,2.764,1354,2.764,1355,2.764,1356,2.764,1357,2.764,1358,2.764,1359,2.764,1360,2.764,1361,4.109,1362,2.868,1363,3.532,1364,4.109]],["title/injectables/SettingsService.html",[40,2.406,276,1.517]],["body/injectables/SettingsService.html",[2,0.429,3,0.429,7,0.458,9,0.429,17,0.672,24,2.09,29,0.483,30,0.794,34,1.551,40,2.908,41,1.365,48,1.137,57,2.266,62,4.188,65,0.939,66,0.853,67,0.019,68,0.483,69,0.672,70,0.483,71,0.526,90,0.403,91,0.702,102,0.378,103,0.353,107,1.256,108,5.44,119,1.725,136,1.041,143,0.403,153,2.931,161,1.318,166,2.09,213,0.012,214,0.012,276,2.108,286,1.874,312,0.813,374,1.318,390,1.245,414,1.033,441,1.461,466,1.833,525,3.737,530,1.318,733,2.686,755,1.629,831,2.251,872,3.737,874,5.927,911,3.737,912,6.095,913,6.42,1203,3.132,1365,3.01,1366,6.057,1367,3.502,1368,4.872,1369,3.502,1370,4.872,1371,7.091,1372,4.872,1373,6.895,1374,4.872,1375,6.057,1376,6.057,1377,6.895,1378,7.091,1379,6.895,1380,6.591,1381,4.872,1382,4.872,1383,4.872,1384,4.872,1385,4.872,1386,4.188,1387,4.872,1388,3.502,1389,6.761,1390,3.502,1391,3.502,1392,3.502,1393,3.502,1394,3.502,1395,3.502,1396,3.502,1397,2.686,1398,3.502,1399,3.502,1400,3.01,1401,3.502,1402,3.502,1403,3.502,1404,3.502,1405,3.502,1406,3.502,1407,3.502,1408,3.502,1409,3.502,1410,3.502,1411,3.502,1412,3.502,1413,3.502,1414,3.502,1415,3.502,1416,3.502,1417,3.502,1418,3.502,1419,3.502,1420,3.502,1421,3.502,1422,4.872,1423,4.872,1424,3.502,1425,3.502,1426,3.502,1427,3.502,1428,3.502,1429,3.502,1430,3.502,1431,3.502,1432,3.502,1433,3.502,1434,3.502,1435,3.502,1436,3.502,1437,3.502,1438,3.502,1439,3.502,1440,4.872,1441,3.502,1442,3.502,1443,3.502,1444,3.502,1445,3.502,1446,3.502,1447,3.502,1448,3.502,1449,3.502,1450,3.502,1451,3.502,1452,3.502,1453,3.502,1454,3.502,1455,3.502,1456,3.502,1457,3.502,1458,3.502,1459,3.502,1460,3.502,1461,3.502,1462,3.502,1463,3.502,1464,3.502,1465,4.872,1466,3.502,1467,3.502,1468,3.502,1469,3.502,1470,3.502,1471,3.502,1472,3.502,1473,3.502,1474,3.502,1475,3.502,1476,3.502,1477,3.502,1478,3.502,1479,3.502,1480,3.502,1481,3.502,1482,3.502,1483,3.502,1484,3.502,1485,3.502,1486,2.686,1487,3.502,1488,3.502,1489,3.502,1490,3.502,1491,3.502,1492,3.502,1493,4.872,1494,3.502,1495,3.502,1496,3.502,1497,3.502,1498,3.502,1499,3.502,1500,3.502,1501,3.502,1502,3.01,1503,3.502,1504,3.502,1505,3.502,1506,3.502,1507,3.502,1508,3.502,1509,3.502,1510,3.502,1511,3.502,1512,3.502,1513,3.502,1514,4.872,1515,3.502,1516,3.502,1517,3.502,1518,2.686,1519,3.502,1520,3.502,1521,3.502,1522,3.502,1523,3.502,1524,3.502,1525,3.502,1526,3.502,1527,3.502,1528,3.502,1529,3.502,1530,3.502,1531,3.502,1532,5.603,1533,3.502]],["title/components/StatBadgeComponent.html",[0,0.494,207,1.133]],["body/components/StatBadgeComponent.html",[0,0.828,1,1.169,2,0.509,3,0.509,4,1.35,5,1.417,6,1.417,7,0.391,9,0.509,21,1.417,22,2.594,23,2.471,25,1.865,27,1.865,29,0.574,34,1.645,41,1.645,48,1.776,51,0.477,52,0.753,67,0.019,68,0.755,69,0.897,70,0.574,76,0.8,90,0.479,91,0.833,102,0.448,103,0.419,142,1.101,172,1.114,173,1.096,174,1.776,175,1.865,176,2.11,177,1.417,180,1.417,181,1.169,182,1.417,183,0.715,184,1.417,185,1.169,186,0.715,187,1.417,188,1.114,189,1.865,190,1.169,191,1.417,192,1.114,193,0.678,194,1.417,195,1.169,196,1.417,197,0.715,198,1.417,199,1.169,200,1.417,201,1.169,202,1.417,203,1.169,204,1.417,205,1.062,206,1.417,207,1.827,208,2.295,209,1.417,210,0.753,211,1.114,212,1.417,213,0.013,214,0.013,312,1.27,373,1.538,398,1.747,400,2.482,402,1.859,416,2.19,449,2.059,469,2.219,492,3.225,798,4.198,875,4.198,931,4.714,1534,5.96,1535,5.319,1536,3.574,1537,6.934,1538,5.472,1539,5.472,1540,5.472,1541,7.069,1542,7.069,1543,6.117,1544,5.472,1545,4.198,1546,4.158,1547,4.158,1548,4.158,1549,4.158,1550,4.158,1551,4.158,1552,4.158]],["title/injectables/ToastService.html",[39,2.591,276,1.517]],["body/injectables/ToastService.html",[2,0.542,3,0.542,7,0.415,9,0.772,17,0.973,20,4.369,24,2.639,29,0.61,34,1.677,39,3.661,41,1.535,56,3.399,66,1.387,67,0.019,68,0.786,70,0.786,72,1.199,77,1.941,81,0.931,83,5.632,84,6.06,90,0.656,91,0.886,92,2.313,102,0.477,103,0.446,104,1.455,112,5.416,126,3.391,127,3.391,136,1.144,193,1.197,213,0.014,214,0.014,239,2.056,276,2.371,286,2.059,390,1.13,398,1.77,402,1.185,417,2.653,446,2.786,530,2.143,657,2.639,702,3.086,776,5.408,831,2.842,867,3.8,901,2.313,906,4.807,911,3.391,1214,4.895,1258,3.391,1284,4.895,1553,3.8,1554,5.695,1555,5.695,1556,4.421,1557,5.695,1558,4.421,1559,5.695,1560,4.421,1561,5.695,1562,4.421,1563,4.421,1564,6.301,1565,5.695,1566,4.421,1567,4.421,1568,4.421,1569,5.695,1570,5.695,1571,5.695,1572,5.695,1573,4.421,1574,4.421]],["title/interfaces/Tool.html",[51,0.352,388,0.622]],["body/interfaces/Tool.html",[2,0.321,3,0.321,7,0.246,9,0.826,12,1.648,17,0.854,29,0.362,30,0.775,49,1.165,51,0.647,52,0.475,67,0.019,68,0.545,69,1.014,70,1.018,71,0.786,76,1.02,79,0.894,81,0.832,82,1.478,90,0.455,102,0.703,103,0.264,107,0.5,136,0.451,140,1.564,142,1.148,143,0.75,158,0.952,167,1.111,173,1.24,183,0.817,186,0.679,193,0.862,197,0.975,210,0.715,213,0.012,214,0.01,252,1.094,265,1.154,266,2.194,297,1.982,298,1.934,302,1.222,312,0.917,319,1.717,353,1.414,361,1.564,364,1.758,365,1.154,373,0.737,374,2.397,375,0.939,388,1.096,389,2.222,390,1.524,395,1.22,396,1.292,397,0.987,398,1.684,399,2.031,400,2.572,401,2.497,402,2.075,403,1.292,404,2.937,405,2.367,406,2.624,407,2.206,408,0.987,409,2.135,410,2.773,411,1.094,412,1.648,413,2.581,414,1.673,415,2.488,416,1.414,417,2.397,418,1.837,419,1.837,420,2.206,421,1.837,422,1.803,423,2.206,424,1.803,425,1.414,426,2.581,427,1.894,428,1.982,429,2.657,430,1.292,431,1.22,432,1.62,433,1.094,434,1.094,435,2.263,436,1.414,437,2.46,438,1.946,439,1.946,440,2.266,441,1.648,442,2.091,443,2.091,444,1.292,445,2.21,446,1.788,447,1.648,448,2.46,449,1.487,450,1.487,451,1.038,452,0.939,453,1.154,454,1.038,455,1.738,456,1.094,457,1.038,458,1.154,459,1.22,460,1.292,461,0.987,462,1.22,463,1.292,464,1.292,465,2.171,466,0.987,467,1.22,468,1.292,469,1.47,470,1.292,471,1.292,472,1.154,473,1.292,474,1.154,475,1.22,476,1.292,477,1.292,478,1.946,479,1.22,480,1.292,481,1.22,482,1.837,483,1.094,484,1.22,485,1.038,486,1.837,487,1.837,488,1.22,489,0.939,490,1.154,491,1.292]],["title/modules/ToolPageModule.html",[215,1.596,227,2.591]],["body/modules/ToolPageModule.html",[2,0.571,3,0.571,7,0.438,51,0.407,59,2.783,67,0.019,72,0.982,90,0.876,91,0.934,94,2.051,102,0.697,103,0.47,125,2.051,142,1.141,172,1.25,185,2.01,186,0.801,195,2.01,197,1.229,199,2.01,201,2.01,203,2.01,207,2.01,208,1.513,211,1.916,213,0.014,214,0.014,215,2.333,217,2.439,218,4.152,219,2.997,227,4.966,228,3.787,233,4.112,234,4.112,239,2.168,255,2.997,258,3.254,259,3.576,408,1.754,492,2.168,494,3.576,901,2.439,924,4.519,925,3.254,926,4.519,950,4.007,954,5.553,955,5.553,957,3.576,1000,3.576,1078,3.576,1087,3.576,1125,3.576,1535,3.576,1575,4.007,1576,4.007,1577,4.662,1578,4.662,1579,4.662,1580,4.662,1581,4.662,1582,4.662,1583,4.662]],["title/components/ToolSelectionComponent.html",[0,0.494,210,0.73]],["body/components/ToolSelectionComponent.html",[0,0.827,1,1.168,2,0.509,3,0.509,4,1.348,5,1.415,6,1.415,7,0.39,9,0.67,21,1.415,22,2.594,23,2.471,25,1.864,27,1.864,29,0.573,30,0.892,31,2.192,33,2.942,34,1.489,37,2.546,41,1.489,51,0.662,52,1.107,53,2.859,66,1.012,67,0.019,68,0.844,69,0.844,70,0.755,71,0.701,72,1.46,73,2.144,74,2.609,75,1.987,76,0.986,82,1.419,87,3.2,90,0.704,91,0.832,95,1.644,98,1.931,102,0.448,103,0.419,104,1.397,142,1.101,172,1.113,173,1.096,174,1.775,175,1.864,176,2.109,177,1.415,180,1.415,181,1.168,182,1.415,183,0.714,184,1.415,185,1.168,186,0.714,187,1.415,188,1.113,189,1.864,190,1.168,191,1.415,192,1.113,193,0.677,194,1.415,195,1.168,196,1.415,197,0.714,198,1.415,199,1.168,200,1.415,201,1.168,202,1.415,203,1.168,204,1.415,205,1.061,206,1.415,207,1.168,208,1.348,209,1.415,210,1.176,211,1.113,212,1.415,213,0.013,214,0.013,255,4.176,321,1.644,347,3.622,379,2.899,393,4.7,394,4.7,637,3.186,640,4.7,641,5.958,685,4.7,953,4.984,1203,3.515,1584,4.153]],["title/injectables/ToolService.html",[33,1.596,276,1.517]],["body/injectables/ToolService.html",[2,0.424,3,0.424,7,0.325,9,0.592,17,1.021,18,2.379,24,2.064,29,0.477,30,0.787,33,1.912,34,1.355,35,2.652,36,3.757,41,1.77,48,2.057,49,1.424,51,0.668,52,0.874,57,2.801,63,2.692,64,2.882,66,1.355,67,0.019,68,0.768,69,0.906,70,0.93,71,0.65,73,1.863,74,1.817,75,1.932,81,1.017,82,1.595,90,0.641,91,0.693,94,1.522,102,0.373,103,0.349,104,0.884,105,2.414,107,1.251,119,2.967,135,4.151,136,1.035,143,0.556,158,1.377,161,1.301,173,1.207,186,0.83,213,0.012,214,0.012,266,2.288,276,2.094,302,2.031,312,1.471,373,1.358,374,1.817,384,2.972,388,0.534,392,4.151,398,1.176,399,2.156,400,2.156,401,2.651,402,1.294,411,2.014,422,2.237,446,1.817,465,1.646,530,1.817,541,3.104,545,3.704,703,3.704,823,2.972,831,2.223,1203,3.104,1231,5.178,1545,3.704,1585,2.972,1586,6.023,1587,6.023,1588,6.023,1589,6.023,1590,6.023,1591,3.458,1592,3.458,1593,3.458,1594,4.151,1595,3.458,1596,4.151,1597,4.829,1598,3.704,1599,3.458,1600,4.829,1601,4.829,1602,3.458,1603,4.829,1604,3.458,1605,4.829,1606,3.458,1607,3.458,1608,4.151,1609,4.829,1610,3.458,1611,3.458,1612,3.458,1613,4.829,1614,3.458,1615,3.458,1616,3.458,1617,3.458,1618,6.337,1619,3.458,1620,5.565,1621,6.337,1622,3.458,1623,5.565,1624,4.829,1625,3.458,1626,3.458,1627,4.829,1628,3.458,1629,4.829,1630,3.458,1631,4.829,1632,4.829]],["title/components/ToolViewComponent.html",[0,0.494,211,1.08]],["body/components/ToolViewComponent.html",[0,0.86,1,1.058,2,0.461,3,0.461,4,1.221,5,1.282,6,1.282,7,0.353,9,0.627,17,0.803,21,1.282,22,2.567,23,2.445,25,1.744,27,1.744,29,0.519,30,0.835,31,2.277,33,2.916,34,1.417,37,2.493,40,4.396,41,1.591,51,0.649,52,1.183,66,0.916,67,0.019,68,0.803,69,0.862,70,0.707,72,1.497,73,2.084,74,2.535,75,1.938,76,1.025,82,1.35,90,0.719,91,0.754,95,1.49,98,1.75,101,2.886,102,0.406,103,0.379,104,1.487,107,1.109,122,2.246,136,1.158,142,1.124,148,2.521,158,1.381,172,1.009,173,1.026,174,1.662,175,1.744,176,2.027,177,1.282,180,1.282,181,1.058,182,1.282,183,0.647,184,1.282,185,1.058,186,0.647,187,1.282,188,1.009,189,1.744,190,1.058,191,1.282,192,1.009,193,0.613,194,1.282,195,1.058,196,1.282,197,0.647,198,1.282,199,1.058,200,1.282,201,1.058,202,1.282,203,1.058,204,1.282,205,0.961,206,1.282,207,1.058,208,1.221,209,1.282,210,0.681,211,1.674,212,1.282,213,0.012,214,0.012,255,4.331,258,4.703,283,2.865,286,1.583,321,1.49,373,1.439,425,1.832,432,1.744,450,1.058,492,3.133,777,3.573,802,3.926,840,3.573,851,3.234,884,5.367,887,2.246,916,3.234,919,3.234,1151,3.234,1322,2.886,1323,4.4,1324,4.4,1633,3.763,1634,3.763,1635,3.763,1636,3.763,1637,3.763,1638,3.763,1639,3.763,1640,5.119,1641,5.119,1642,5.119]],["title/coverage.html",[1643,4.608]],["body/coverage.html",[0,0.932,1,1.23,7,0.411,8,3.761,32,2.289,33,1.732,37,1.491,38,2.155,39,2.813,40,2.612,51,0.382,67,0.019,69,0.604,76,0.639,103,0.441,142,0.713,181,1.23,183,0.752,185,1.23,188,1.173,190,1.23,192,1.173,193,0.713,195,1.23,197,0.752,199,1.23,201,1.23,203,1.23,205,1.118,207,1.23,210,0.792,211,1.173,213,0.014,214,0.014,248,3.054,250,4.03,255,3.637,258,3.054,260,3.356,261,3.054,262,3.949,266,1.353,276,2.646,277,3.761,295,1.491,347,3.827,348,3.761,372,3.761,388,1.132,395,3.408,405,1.825,409,1.647,413,1.732,426,1.732,429,1.825,450,1.23,492,3.372,493,3.761,494,3.356,495,3.761,635,3.949,636,3.356,637,4.34,665,3.054,705,3.761,772,3.761,877,3.761,929,3.761,953,3.356,956,4.097,957,3.356,958,3.761,1000,3.356,1001,3.761,1078,3.356,1079,3.761,1087,3.356,1088,3.761,1125,3.356,1126,3.761,1188,3.761,1303,3.761,1322,4.34,1365,3.761,1534,3.761,1535,3.356,1536,3.761,1553,3.761,1585,3.761,1643,3.761,1644,2.439,1645,4.375,1646,7.794,1647,7.155,1648,6.629,1649,4.375,1650,4.375,1651,4.375,1652,4.375,1653,3.761,1654,3.054,1655,4.375,1656,6.27,1657,4.375,1658,5.657,1659,6.27,1660,6.629,1661,4.375,1662,4.375,1663,4.375,1664,4.375,1665,4.375,1666,4.375]],["title/dependencies.html",[217,2.516,1667,2.954]],["body/dependencies.html",[67,0.019,79,1.767,85,1.687,91,1.039,94,2.281,170,2.712,213,0.015,214,0.015,217,2.712,231,5.409,232,4.827,236,4.456,239,2.926,240,4.456,241,4.827,243,3.977,390,1.325,408,1.951,440,1.683,683,4.456,901,2.712,925,3.618,1147,4.456,1148,5.409,1208,4.456,1596,4.456,1668,5.184,1669,7.547,1670,5.184,1671,5.184,1672,5.184,1673,5.184,1674,5.184,1675,5.184,1676,4.456,1677,5.184,1678,5.184,1679,3.094,1680,5.184,1681,5.184,1682,5.184,1683,4.456,1684,5.184,1685,5.184,1686,5.184,1687,5.184,1688,5.184,1689,5.409,1690,5.184,1691,6.292,1692,5.184,1693,5.184,1694,5.184,1695,5.184,1696,5.184,1697,5.184,1698,5.184,1699,5.184,1700,5.184,1701,5.184,1702,5.184,1703,5.184,1704,5.184,1705,5.184,1706,5.184,1707,5.184,1708,5.184]],["title/index.html",[29,0.474,721,2.636,1254,2.399]],["body/index.html",[7,0.456,17,0.67,49,1.432,51,0.574,52,0.879,65,1.764,67,0.016,71,0.764,72,1.023,74,1.828,76,0.71,81,1.386,85,1.764,107,1.312,130,3.031,154,4.174,167,1.365,171,2.541,213,0.015,214,0.015,248,3.39,269,3.39,283,2.977,302,1.502,349,4.111,361,2.393,388,0.75,414,1.432,440,1.962,469,1.502,489,1.739,534,2.873,558,2.541,579,4.174,755,3.203,776,3.725,806,3.725,930,3.122,1018,2.899,1037,5.657,1174,3.67,1254,4.594,1259,3.725,1400,4.174,1486,4.637,1644,3.84,1654,3.39,1689,4.174,1709,4.174,1710,3.725,1711,5.92,1712,4.174,1713,4.856,1714,6.045,1715,4.856,1716,4.174,1717,5.283,1718,4.856,1719,4.856,1720,4.856,1721,4.856,1722,4.856,1723,4.856,1724,4.856,1725,4.219,1726,5.196,1727,6.887,1728,4.174,1729,4.856,1730,4.174,1731,4.856,1732,6.045,1733,6.581,1734,4.856,1735,4.856,1736,4.856,1737,3.122,1738,4.856,1739,4.856,1740,6.887,1741,6.045,1742,2.06,1743,4.856,1744,4.856,1745,4.856,1746,4.856,1747,4.856,1748,4.856,1749,4.856,1750,4.856,1751,6.045,1752,6.045,1753,4.856,1754,4.856,1755,4.856,1756,4.174,1757,4.856,1758,4.637,1759,3.122,1760,4.856]],["title/modules.html",[215,2.123]],["body/modules.html",[67,0.016,213,0.016,214,0.016,215,2.336,216,4.119,225,3.793,226,3.793,227,3.793,232,5.637,1761,7.348,1762,7.348,1763,7.348]],["title/overview.html",[1764,2.989]],["body/overview.html",[0,0.58,1,2.048,32,3.404,59,2.827,67,0.019,72,0.997,102,0.511,103,0.478,125,2.084,172,1.27,181,2.048,183,1.119,185,1.829,188,1.744,190,2.048,192,1.953,195,1.829,197,1.119,199,1.829,201,1.829,203,1.829,205,1.663,207,1.829,210,1.178,211,1.744,213,0.014,214,0.014,215,2.356,216,5.304,217,2.478,218,3.045,219,3.045,220,4.072,221,4.072,222,4.072,223,4.072,224,4.072,225,4.736,226,4.918,227,4.964,228,3.825,276,1.783,388,0.732,599,3.306,746,4.072,920,4.072,921,4.072,922,4.072,947,4.072,948,4.072,949,4.072,1575,4.072,1576,4.072,1764,2.641,1765,4.737,1766,4.737,1767,4.737]],["title/miscellaneous/variables.html",[1654,3.356,1768,2.954]],["body/miscellaneous/variables.html",[29,0.793,48,1.864,65,1.896,67,0.018,69,0.793,71,0.619,85,1.792,86,3.004,213,0.016,214,0.016,248,4.938,312,1.333,390,1.709,930,3.691,1653,4.936,1654,4.008,1768,4.936,1769,5.742,1770,5.742,1771,5.742,1772,5.742,1773,5.742,1774,5.742,1775,5.742,1776,5.742,1777,5.742,1778,5.742,1779,5.742,1780,5.742,1781,5.742]],["title/additional-documentation/setup.html",[143,0.396,1174,1.916,1742,1.171]],["body/additional-documentation/setup.html",[17,0.801,43,3.235,51,0.587,56,3.464,65,1.555,67,0.016,85,1.904,107,1.106,167,1.631,171,3.036,213,0.016,214,0.016,295,1.978,302,2.198,364,1.711,466,2.184,496,3.73,534,2.42,556,4.451,1018,4.016,1174,3.235,1518,4.451,1644,3.751,1782,4.988,1783,5.803,1784,4.988,1785,4.05,1786,4.988]],["title/additional-documentation/setup/setting-up-firebase.html",[85,0.712,107,0.506,143,0.306,534,1.107,1742,0.905]],["body/additional-documentation/setup/setting-up-firebase.html",[7,0.53,11,4.802,12,1.819,16,2.625,17,0.779,18,2.148,19,3.345,43,3.823,47,3.748,49,2.108,51,0.38,53,1.919,57,3.079,65,1.883,67,0.013,68,0.779,71,0.758,75,1.861,77,2.337,78,2.431,81,1.318,85,2.024,86,3.463,90,0.502,92,2.281,100,1.819,106,3.691,107,1.381,130,1.919,140,1.727,158,1.326,164,2.953,165,2.603,166,3.369,167,2.037,170,3.275,213,0.014,214,0.015,217,2.281,278,3.043,283,2.148,295,2.256,297,1.819,306,3.043,358,2.603,364,1.286,374,2.356,397,1.641,399,1.561,405,1.819,414,2.108,427,1.561,436,1.561,447,1.819,459,2.028,461,1.641,489,1.561,496,3.629,510,3.748,532,3.043,534,2.93,547,3.043,558,3.675,567,3.748,659,4.33,670,3.748,699,4.33,722,3.748,733,3.345,755,2.028,774,3.748,803,3.043,936,3.94,974,3.043,1102,3.748,1135,4.852,1171,3.043,1217,3.823,1219,3.748,1258,3.345,1676,3.748,1710,3.345,1717,4.33,1725,3.043,1726,3.748,1728,3.748,1730,3.748,1737,2.803,1742,1.486,1764,2.431,1787,5.645,1788,5.645,1789,4.369,1790,4.36,1791,4.36,1792,4.36,1793,3.748,1794,4.36,1795,4.36,1796,3.345,1797,4.802,1798,5.645,1799,4.36,1800,4.36,1801,4.36,1802,4.36,1803,4.36,1804,3.748,1805,3.748,1806,4.36,1807,3.748,1808,4.36,1809,3.748,1810,4.36,1811,4.36,1812,3.748,1813,4.36,1814,4.36,1815,5.645,1816,3.345,1817,3.748,1818,3.345,1819,3.748,1820,4.36,1821,4.36,1822,4.36,1823,4.36,1824,4.36,1825,4.36,1826,4.36,1827,4.36,1828,3.043,1829,3.748,1830,5.645,1831,4.36]],["title/additional-documentation/setup/node-tools.html",[51,0.261,143,0.345,1018,1.788,1742,1.021]],["body/additional-documentation/setup/node-tools.html",[4,1.457,7,0.494,9,0.858,12,0.808,16,1.45,17,0.819,18,0.954,30,0.732,43,1.739,46,2.931,48,0.629,49,1.323,50,4.519,51,0.655,52,0.351,53,0.852,63,1.08,64,1.861,65,0.519,67,0.019,68,0.679,69,0.933,70,1.028,71,0.567,72,1.036,73,0.599,75,1.478,76,0.572,77,2.373,78,3.082,79,1.529,82,1.042,104,1.622,107,1.002,116,1.352,119,2.423,125,0.852,130,1.723,136,0.846,140,0.767,142,1.154,143,0.683,153,3.813,156,1.156,158,0.986,161,0.729,171,1.631,173,1.31,176,1.457,186,0.536,213,0.008,214,0.008,215,0.767,239,0.901,252,0.808,266,1.388,283,1.536,294,2.392,295,2.198,297,0.808,298,1.334,300,1.245,302,1.211,312,0.724,319,1.457,335,2.392,353,2.37,363,4.476,364,1.837,373,1.101,375,0.693,381,0.954,390,1.863,397,1.173,398,1.593,399,1.761,400,2.459,401,1.372,402,1.878,405,1.301,410,1.821,413,1.777,414,1.75,416,2.059,417,2.518,418,2.288,419,2.288,420,1.872,421,1.45,423,2.598,424,2.412,425,2.341,426,2.082,427,1.401,428,1.633,429,1.872,431,0.901,432,1.884,433,1.301,434,0.808,435,1.529,437,1.45,440,2.213,441,1.872,442,1.372,443,0.852,446,0.729,447,1.301,448,0.901,449,1.689,450,1.881,452,1.761,454,1.235,455,1.372,456,1.872,457,1.55,465,2.4,466,1.173,469,0.599,472,0.852,474,2.433,475,0.901,485,1.55,489,1.116,511,2.68,513,3.132,514,1.664,520,2.004,521,3.38,522,1.664,534,1.301,537,1.485,541,2.004,553,1.664,577,1.485,600,2.68,618,4.241,665,2.177,668,2.177,669,4.241,677,5.69,703,2.392,707,1.664,708,1.664,712,1.156,729,4.229,730,2.004,798,3.774,799,3.859,812,1.664,853,3.433,865,1.664,872,2.392,906,2.177,917,1.485,930,1.245,931,1.352,937,3.365,944,1.245,974,1.352,978,1.664,983,3.858,985,2.68,1018,3.637,1039,1.664,1106,1.485,1171,2.177,1174,1.08,1176,2.68,1198,1.664,1213,3.858,1218,3.858,1223,2.68,1248,2.68,1249,2.68,1250,2.68,1254,1.352,1256,1.664,1262,2.68,1263,2.68,1270,1.485,1272,1.664,1294,3.858,1307,1.664,1333,1.664,1362,2.177,1386,1.664,1397,3.443,1502,1.664,1518,1.485,1594,1.664,1598,1.485,1644,1.08,1679,2.679,1683,1.664,1725,3.132,1737,2.516,1764,1.08,1786,1.664,1793,1.664,1804,1.664,1805,2.68,1809,1.664,1828,1.352,1829,3.858,1832,7.246,1833,1.936,1834,3.118,1835,1.936,1836,1.936,1837,3.118,1838,4.752,1839,1.936,1840,1.936,1841,1.936,1842,1.936,1843,3.118,1844,1.936,1845,4.92,1846,1.936,1847,1.936,1848,3.118,1849,1.936,1850,1.936,1851,3.118,1852,1.936,1853,1.936,1854,1.936,1855,3.915,1856,3.118,1857,3.118,1858,1.936,1859,3.118,1860,1.936,1861,1.936,1862,1.936,1863,1.936,1864,1.936,1865,3.118,1866,1.936,1867,1.936,1868,1.936,1869,3.118,1870,5.258,1871,1.936,1872,1.936,1873,3.118,1874,4.92,1875,3.118,1876,1.936,1877,1.936,1878,3.915,1879,3.118,1880,3.915,1881,3.118,1882,1.936,1883,1.936,1884,1.936,1885,1.936,1886,3.118,1887,3.118,1888,1.936,1889,3.118,1890,3.118,1891,7.005,1892,1.936,1893,3.118,1894,1.936,1895,1.936,1896,1.936,1897,1.936,1898,1.936,1899,4.92,1900,1.936,1901,1.936,1902,3.118,1903,1.936,1904,1.936,1905,1.936,1906,3.118,1907,1.485,1908,1.936,1909,1.936,1910,1.664,1911,1.936,1912,1.936,1913,1.936,1914,1.936,1915,1.936,1916,1.936,1917,1.936,1918,1.936,1919,1.936,1920,1.936,1921,1.936,1922,1.936,1923,1.936,1924,1.936,1925,1.936]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[85,0.712,143,0.306,167,0.746,171,1.389,1742,0.905]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,0.902,18,2.719,65,1.751,67,0.016,75,2.093,77,1.881,82,1.281,85,2.015,86,3.641,107,1.052,143,0.635,164,2.887,167,2.093,170,3.418,171,3.841,213,0.016,214,0.016,280,3.642,283,2.719,295,1.881,427,2.491,485,2.185,534,2.302,547,3.852,558,2.887,594,3.852,620,4.744,755,2.567,803,3.852,931,3.852,1545,4.234,1796,4.234,1797,5.338,1910,4.744,1926,4.744,1927,6.533,1928,5.519,1929,4.744]],["title/additional-documentation/server-architecture.html",[81,0.631,143,0.345,1742,1.021,1758,2.298]],["body/additional-documentation/server-architecture.html",[67,0.016,81,1.435,213,0.017,214,0.017,1598,4.554,1644,3.801,1758,5.229,1764,3.31,1785,4.758,1807,5.103,1907,4.554,1930,5.937,1931,5.937,1932,4.554,1933,5.103,1934,4.144]],["title/additional-documentation/server-architecture/server-endpoints.html",[81,0.631,143,0.345,1742,1.021,1934,2.091]],["body/additional-documentation/server-architecture/server-endpoints.html",[67,0.016,81,1.448,213,0.017,214,0.017,364,1.778,397,2.269,1785,4.209,1934,4.801]],["title/additional-documentation/server-architecture/discover-&-fix-workflow.html",[67,0.006,143,0.274,424,0.812,425,0.853,1742,0.812,1935,2.049]],["body/additional-documentation/server-architecture/discover-&-fix-workflow.html",[51,0.597,67,0.017,71,0.645,213,0.017,214,0.017,424,2.039,425,2.142,1018,4.087,1737,3.846,1935,5.886,1936,5.983]],["title/additional-documentation/server-architecture/data-flow-diagram.html",[143,0.306,976,1.853,1742,0.905,1932,2.037,1937,2.282]],["body/additional-documentation/server-architecture/data-flow-diagram.html",[67,0.016,213,0.017,214,0.017]],["title/additional-documentation/server-architecture/high-level-overview.html",[143,0.306,1742,0.905,1764,1.48,1907,2.037,1933,2.282]],["body/additional-documentation/server-architecture/high-level-overview.html",[67,0.016,213,0.017,214,0.017]],["title/additional-documentation/firebase.html",[85,0.921,143,0.396,1742,1.171]],["body/additional-documentation/firebase.html",[67,0.016,77,1.987,85,1.996,86,3.049,107,1.285,213,0.016,214,0.016,353,2.087,496,4.336,534,2.814,546,2.871,558,3.049,1217,3.25,1608,5.01,1644,3.761,1679,3.479,1725,4.069,1759,3.747,1785,4.069,1789,4.069,1938,5.829,1939,5.829,1940,5.829,1941,5.829]],["title/additional-documentation/firebase/firebase-authentication.html",[85,0.803,86,1.567,143,0.345,1742,1.021]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.854,17,0.959,43,2.774,51,0.434,57,2.314,58,2.774,60,2.603,65,1.948,67,0.015,71,0.77,82,1.155,85,1.862,86,3.801,100,2.076,141,5.104,143,0.766,144,3.817,164,3.481,165,4.146,166,4.503,167,2.141,168,3.817,170,2.603,171,2.603,213,0.015,214,0.015,280,3.421,281,4.277,282,5.719,283,3.422,295,2.091,300,3.945,302,2.149,381,2.451,414,1.467,490,2.19,496,3.199,534,2.775,552,3.817,577,3.817,578,3.817,594,3.473,662,3.473,669,3.817,712,2.97,755,2.314,1036,4.277,1171,3.473,1270,3.817,1332,3.817,1363,5.275,1716,4.277,1764,2.774,1797,3.817,1828,3.473,1838,5.275,1926,5.275,1932,3.817,1937,4.277,1942,4.976,1943,4.976,1944,4.976,1945,4.976,1946,4.976,1947,4.976,1948,4.976,1949,4.976,1950,4.976,1951,4.976,1952,6.136,1953,4.976,1954,4.976,1955,6.136,1956,4.277,1957,4.976,1958,4.976,1959,4.976]],["title/additional-documentation/firebase/database-structure.html",[143,0.345,1217,1.67,1742,1.021,1759,1.926]],["body/additional-documentation/firebase/database-structure.html",[9,0.612,17,0.96,46,2.785,51,0.537,65,1.949,67,0.015,71,0.719,73,2.062,81,1.295,85,1.649,92,2.613,100,2.084,125,2.707,130,2.707,158,1.457,164,3.855,165,3.978,167,1.404,213,0.015,214,0.015,306,3.487,374,1.88,388,0.772,390,1.276,397,1.88,400,1.788,423,2.084,436,2.386,450,1.404,457,2.436,461,2.773,489,1.788,490,2.198,541,3.211,542,3.832,546,2.461,550,4.294,556,3.832,558,3.487,578,3.832,665,4.293,699,3.832,714,3.487,730,3.954,755,2.323,878,4.294,936,5.076,1056,3.832,1108,4.294,1174,2.785,1203,3.954,1217,4.109,1332,3.832,1397,3.832,1486,3.832,1644,3.43,1679,2.982,1712,4.294,1756,4.294,1759,4.284,1784,5.729,1789,4.652,1812,5.287,1816,3.832,1818,3.832,1819,4.294,1828,3.487,1929,4.294,1934,3.487,1960,4.995,1961,4.995,1962,6.151,1963,4.995,1964,4.995,1965,4.995,1966,4.995,1967,4.995,1968,4.995]],["title/additional-documentation/firebase/firebase-wrapper.html",[85,0.803,143,0.345,1679,1.788,1742,1.021]],["body/additional-documentation/firebase/firebase-wrapper.html",[9,0.719,17,0.81,23,1.504,31,1.504,49,1.366,51,0.404,52,0.839,54,3.983,65,1.573,66,1.43,67,0.016,71,0.805,72,0.976,73,1.993,77,2.5,79,2,80,2.584,82,1.362,85,1.727,100,2.448,102,0.5,106,2.584,125,2.039,130,2.039,136,1.107,151,3.983,156,4.042,161,2.209,164,3.903,170,2.424,186,0.797,213,0.014,214,0.016,266,1.433,283,2.283,286,1.816,304,3.234,317,2.979,390,1.73,397,1.744,402,1.573,423,1.933,436,2.101,456,2.448,461,1.744,466,1.744,469,1.433,485,1.835,530,2.629,546,3.173,559,3.555,662,3.234,712,2.766,730,2.979,755,2.155,777,4.496,917,3.555,936,4.496,944,2.979,976,5.12,1174,2.584,1217,3.98,1362,3.234,1667,3.983,1679,4.17,1709,3.983,1710,3.555,1711,5.045,1737,2.979,1759,3.773,1782,3.983,1789,4.982,1796,3.555,1816,3.555,1817,5.537,1818,4.502,1956,3.983,1969,4.634,1970,4.634,1971,4.634,1972,4.634,1973,4.634,1974,4.634,1975,4.634,1976,4.634,1977,6.442,1978,4.634,1979,4.634,1980,4.634,1981,4.634,1982,4.634,1983,4.634,1984,5.869,1985,4.634,1986,4.634,1987,4.634,1988,4.634,1989,4.634,1990,6.442,1991,5.869,1992,5.869,1993,4.634,1994,4.634,1995,4.634,1996,4.634,1997,4.634,1998,4.634]],["title/additional-documentation/firebase/firebase-functions.html",[77,1.021,85,0.803,143,0.345,1742,1.021]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.683,16,2.593,17,0.907,57,2.593,58,3.109,65,1.494,67,0.016,71,0.601,72,1.174,77,2.543,80,3.109,85,1.973,92,3.438,130,2.453,158,1.317,165,3.923,166,3.328,167,2.029,170,2.917,213,0.016,214,0.016,280,3.109,300,3.584,414,1.644,422,1.9,532,3.891,534,2.326,535,4.792,558,3.438,594,4.587,668,3.891,1056,4.277,1217,3.109,1259,4.277,1362,3.891,1717,5.041,1999,5.575,2000,5.575,2001,5.575,2002,5.575,2003,5.575,2004,5.575,2005,5.575]]],"invertedIndex":[["",{"_index":67,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10.1.182.255",{"_index":1753,"title":{},"body":{"index.html":{}}}],["10.1.182.255:8000",{"_index":1755,"title":{},"body":{"index.html":{}}}],["10/10",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1111,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["15000",{"_index":1573,"title":{},"body":{"injectables/ToastService.html":{}}}],["16",{"_index":1765,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["183a54",{"_index":1375,"title":{},"body":{"injectables/SettingsService.html":{}}}],["1c2023",{"_index":1381,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["24a36",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["252a2e",{"_index":1382,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2879b5",{"_index":1374,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b63",{"_index":1376,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b9f",{"_index":1383,"title":{},"body":{"injectables/SettingsService.html":{}}}],["3",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3.3.1",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["4",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["5.0.0",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1574,"title":{},"body":{"injectables/ToastService.html":{}}}],["6",{"_index":1766,"title":{},"body":{"overview.html":{}}}],["6.0.7",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["65727d",{"_index":1378,"title":{},"body":{"injectables/SettingsService.html":{}}}],["7/7",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["8000",{"_index":1741,"title":{},"body":{"index.html":{}}}],["9",{"_index":1767,"title":{},"body":{"overview.html":{}}}],["90",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["_blank",{"_index":904,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["_log(collectiontitl",{"_index":1997,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["_selectedcategori",{"_index":1586,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1587,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1184,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1183,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].tolowercas",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ac",{"_index":497,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1165,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1640,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["accessor",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":167,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":1794,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["action",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["activ",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual",{"_index":1795,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["actual_compon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1742,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["address",{"_index":1752,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["admin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ag",{"_index":1401,"title":{},"body":{"injectables/SettingsService.html":{}}}],["again",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["airat",{"_index":1394,"title":{},"body":{"injectables/SettingsService.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":878,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["alt",{"_index":1832,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1906,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1909,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alter",{"_index":1841,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1945,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1942,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["amount",{"_index":1105,"title":{},"body":{"components/IssueListComponent.html":{}}}],["angular",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":925,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":901,"title":{},"body":{"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1876,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["apikey",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["app.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1845,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1882,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["approut",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1758,"title":{"additional-documentation/server-architecture.html":{}},"body":{"index.html":{},"additional-documentation/server-architecture.html":{}}}],["area",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["arr.length",{"_index":1525,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arr[randi",{"_index":1526,"title":{},"body":{"injectables/SettingsService.html":{}}}],["array",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1354,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_forward",{"_index":1364,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["ashen",{"_index":1379,"title":{},"body":{"injectables/SettingsService.html":{}}}],["assign",{"_index":983,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":991,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.json",{"_index":1803,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["authdomain",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":86,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":32,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1926,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["await",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["awar",{"_index":1810,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["b",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].tolowercas",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["backend",{"_index":1824,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["background",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["backward",{"_index":1503,"title":{},"body":{"injectables/SettingsService.html":{}}}],["badg",{"_index":1538,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge\">{{getissuecount(cours",{"_index":909,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["badge'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1582,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1539,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1540,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1536,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1547,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1546,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1548,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1544,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1535,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["banana",{"_index":1459,"title":{},"body":{"injectables/SettingsService.html":{}}}],["bar",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{}}}],["base",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["beautifi",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1736,"title":{},"body":{"index.html":{}}}],["befor",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["behavior",{"_index":1839,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["behind",{"_index":1871,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1838,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1786,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["better",{"_index":1757,"title":{},"body":{"index.html":{}}}],["between",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["bit",{"_index":1108,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["blaster",{"_index":1452,"title":{},"body":{"injectables/SettingsService.html":{}}}],["blob",{"_index":1179,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1180,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":1076,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["blue",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1307,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["brand",{"_index":1791,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["breadcrumb",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":952,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":181,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1720,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1763,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1069,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":349,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1561,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildprocessingmessag",{"_index":1527,"title":{},"body":{"injectables/SettingsService.html":{}}}],["buildrouterlink",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1711,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["burnin",{"_index":1419,"title":{},"body":{"injectables/SettingsService.html":{}}}],["button",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["byui",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["byui.edu",{"_index":1825,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["c.id",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["c3ffe3",{"_index":1377,"title":{},"body":{"injectables/SettingsService.html":{}}}],["calcul",{"_index":1396,"title":{},"body":{"injectables/SettingsService.html":{}}}],["call",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1187,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["candid",{"_index":1410,"title":{},"body":{"injectables/SettingsService.html":{}}}],["canva",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1735,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1874,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1878,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1904,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1889,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1853,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1578,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":396,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":266,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["categories'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":951,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":183,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1357,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1353,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1356,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1106,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["chalk",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["charcoal",{"_index":912,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["charm",{"_index":1414,"title":{},"body":{"injectables/SettingsService.html":{}}}],["check",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["checklocalstorage(key",{"_index":1531,"title":{},"body":{"injectables/SettingsService.html":{}}}],["cheerio",{"_index":1683,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1893,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["chemist",{"_index":1456,"title":{},"body":{"injectables/SettingsService.html":{}}}],["choic",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choos",{"_index":1856,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["choreographi",{"_index":1434,"title":{},"body":{"injectables/SettingsService.html":{}}}],["chosen",{"_index":1605,"title":{},"body":{"injectables/ToolService.html":{}}}],["chrome",{"_index":1408,"title":{},"body":{"injectables/SettingsService.html":{}}}],["circl",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":103,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"issu",{"_index":908,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["classic",{"_index":911,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{}}}],["clear",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{}}}],["click",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["clickabl",{"_index":1866,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":930,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1729,"title":{},"body":{"index.html":{}}}],["close",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closecourseselect",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["closemod",{"_index":882,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1961,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1185,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodul",{"_index":920,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_declar",{"_index":921,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_export",{"_index":922,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":947,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":948,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":949,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1575,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1576,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cobalt",{"_index":1373,"title":{},"body":{"injectables/SettingsService.html":{}}}],["code",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["codeeditor",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["codeeditorcompon",{"_index":185,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1946,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":936,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1998,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["color",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1743,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":924,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["compodoc",{"_index":1930,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comprehens",{"_index":1512,"title":{},"body":{"injectables/SettingsService.html":{}}}],["comput",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["conceiv",{"_index":1510,"title":{},"body":{"injectables/SettingsService.html":{}}}],["condit",{"_index":1880,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["configur",{"_index":1800,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["conflict",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1796,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["console.error(",{"_index":1300,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1562,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":887,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1309,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":945,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":373,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1581,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:112",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:126",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:136",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:17",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:23",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:26",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:34",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:41",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:61",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:76",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["contempl",{"_index":1404,"title":{},"body":{"injectables/SettingsService.html":{}}}],["content",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1363,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1058,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1060,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1916,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["cours",{"_index":76,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{}}}],["course.course_nam",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":905,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{}}}],["course.id",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1158,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1293,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":907,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1639,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1288,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1922,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursecod",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["coursenam",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":883,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["courseresult",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1287,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselect",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseselectioncompon",{"_index":188,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":37,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":998,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1121,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1122,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesobj",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursetabscompon",{"_index":190,"title":{"components/CourseTabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursetabsmodul",{"_index":225,"title":{"modules/CourseTabsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules.html":{},"overview.html":{}}}],["course}",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["cover",{"_index":1785,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1643,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1957,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["css",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1173,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1177,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1860,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1865,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dancer",{"_index":1430,"title":{},"body":{"injectables/SettingsService.html":{}}}],["daniel\\'d",{"_index":1506,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dank",{"_index":1495,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dark",{"_index":1370,"title":{},"body":{"injectables/SettingsService.html":{}}}],["darken",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":976,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["data.st",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1217,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1931,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["datatyp",{"_index":1962,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1977,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["de",{"_index":1412,"title":{},"body":{"injectables/SettingsService.html":{}}}],["decid",{"_index":1843,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["deploy",{"_index":1717,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["describ",{"_index":1737,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deselect",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["design",{"_index":1847,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["desk",{"_index":1429,"title":{},"body":{"injectables/SettingsService.html":{}}}],["detail",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1579,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1080,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1081,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1079,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1082,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1083,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1078,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["diagnos",{"_index":1391,"title":{},"body":{"injectables/SettingsService.html":{}}}],["diagram",{"_index":1932,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["differ",{"_index":1851,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["direct",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1805,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":425,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["discover(canvasitem",{"_index":1875,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1844,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":413,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1565,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":398,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["div",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["divid",{"_index":1833,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["do",{"_index":1600,"title":{},"body":{"injectables/ToolService.html":{}}}],["doctor",{"_index":1455,"title":{},"body":{"injectables/SettingsService.html":{}}}],["document",{"_index":1644,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":1521,"title":{},"body":{"injectables/SettingsService.html":{}}}],["document.getelementbyid(\"download",{"_index":1178,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('#fixmodal.open",{"_index":1347,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1572,"title":{},"body":{"injectables/ToastService.html":{}}}],["doesn't",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["downloadissu",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["duck",{"_index":1423,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dure",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1596,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":906,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1566,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1568,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1569,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}}}],["earlier",{"_index":1919,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1970,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["easier",{"_index":1963,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["eceff1",{"_index":1380,"title":{},"body":{"injectables/SettingsService.html":{}}}],["edit",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1583,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":499,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":500,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":495,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:110",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:141",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":494,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":429,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1066,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1063,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1068,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["electr",{"_index":1474,"title":{},"body":{"injectables/SettingsService.html":{}}}],["element",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["elv",{"_index":1444,"title":{},"body":{"injectables/SettingsService.html":{}}}],["email",{"_index":1986,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["emit",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{}}}],["empti",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1897,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":171,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["encapsul",{"_index":1392,"title":{},"body":{"injectables/SettingsService.html":{}}}],["end",{"_index":1745,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1934,"title":{"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["englishconnect",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["enter",{"_index":1912,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["entifi",{"_index":1505,"title":{},"body":{"injectables/SettingsService.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["environ",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":193,"title":{"interfaces/Error.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["error('cours",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1285,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1283,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":192,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["essenti",{"_index":1102,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["etc",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["even",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.stoppropag",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["evict",{"_index":1411,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ex",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exactli",{"_index":1821,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exampl",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exclud",{"_index":1826,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exist",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["explain",{"_index":1837,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["export",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["expos",{"_index":1980,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["express",{"_index":1689,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extern",{"_index":1991,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["facebook",{"_index":1811,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["fail",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1070,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1913,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["featur",{"_index":1788,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["feedback",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{}}}],["feel",{"_index":1631,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1809,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1861,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1176,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1918,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":85,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase'",{"_index":1787,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["firebase.auth",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["firebase_wrapper.j",{"_index":1972,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firebasewrapp",{"_index":1975,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firebasewrapper.initializefirebas",{"_index":1978,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firefox",{"_index":1407,"title":{},"body":{"injectables/SettingsService.html":{}}}],["firestor",{"_index":1789,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firestore'",{"_index":1979,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["first",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fishi",{"_index":1447,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fix",{"_index":424,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix(canvasitem",{"_index":1887,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1936,"title":{},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1854,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1286,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1291,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1298,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1886,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1908,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":426,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1992,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["flatissuedetail",{"_index":1160,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flex",{"_index":1464,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flip",{"_index":1395,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flow",{"_index":1937,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["fluffi",{"_index":1490,"title":{},"body":{"injectables/SettingsService.html":{}}}],["folder",{"_index":984,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["follow",{"_index":1725,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["for/fix",{"_index":1842,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["form",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1314,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1306,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1321,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":954,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1502,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1829,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["framework",{"_index":1715,"title":{},"body":{"index.html":{}}}],["freaki",{"_index":1481,"title":{},"body":{"injectables/SettingsService.html":{}}}],["freestyl",{"_index":1478,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fresh",{"_index":1493,"title":{},"body":{"injectables/SettingsService.html":{}}}],["frog",{"_index":1433,"title":{},"body":{"injectables/SettingsService.html":{}}}],["front",{"_index":1744,"title":{},"body":{"index.html":{}}}],["full",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{},"index.html":{}}}],["fullbuild",{"_index":1747,"title":{},"body":{"index.html":{}}}],["function",{"_index":77,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":2001,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1949,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":992,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":374,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":721,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":884,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(cours",{"_index":892,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["getissueitem",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getrandom(arr",{"_index":1523,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getselectedcategori",{"_index":1610,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1614,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1728,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["github",{"_index":1709,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["given",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["gmail",{"_index":1953,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["goe",{"_index":1567,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["gradiat",{"_index":1479,"title":{},"body":{"injectables/SettingsService.html":{}}}],["greater",{"_index":1814,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["green",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1316,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1319,"title":{},"body":{"classes/OptionModel.html":{}}}],["guid",{"_index":1790,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["hacker",{"_index":1458,"title":{},"body":{"injectables/SettingsService.html":{}}}],["handl",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hate",{"_index":1384,"title":{},"body":{"injectables/SettingsService.html":{}}}],["have",{"_index":1820,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["header",{"_index":1172,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":993,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1304,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1862,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1907,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{}}}],["highlight",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hippo",{"_index":1462,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hobbit",{"_index":1442,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":226,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["horcrux",{"_index":1413,"title":{},"body":{"injectables/SettingsService.html":{}}}],["host",{"_index":1756,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlinputel",{"_index":1355,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1064,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["icon",{"_index":399,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1723,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1885,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["identifi",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idtoken",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1888,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["ignor",{"_index":1389,"title":{},"body":{"injectables/SettingsService.html":{}}}],["imag",{"_index":1891,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1903,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1896,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1900,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1895,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1894,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1901,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["import",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["in...you",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["incomprehens",{"_index":1511,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inconceiv",{"_index":1509,"title":{},"body":{"injectables/SettingsService.html":{}}}],["increment",{"_index":1996,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["incrementcounts(categori",{"_index":1995,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initi",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initializefirebas",{"_index":1988,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["inject",{"_index":276,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('highlight",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('index",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('sid",{"_index":1552,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1550,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1549,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1551,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":989,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1727,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instance'",{"_index":1792,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instanceof",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1951,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["instruct",{"_index":1815,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instructor",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructur",{"_index":1714,"title":{},"body":{"index.html":{}}}],["integr",{"_index":496,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interact",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["interfac",{"_index":388,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["interfer",{"_index":1823,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["intern",{"_index":1990,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["internet",{"_index":1405,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inumer",{"_index":1501,"title":{},"body":{"injectables/SettingsService.html":{}}}],["invert_color",{"_index":910,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["ip",{"_index":1751,"title":{},"body":{"index.html":{}}}],["iron",{"_index":1831,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["isad",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":941,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":946,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":142,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1295,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1296,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1166,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1902,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1297,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":999,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":195,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecard}",{"_index":1097,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuecontainercompon",{"_index":197,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1084,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":199,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":450,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1168,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1294,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1154,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1167,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1169,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1881,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":997,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1289,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":201,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":203,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issue}",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["italian",{"_index":1483,"title":{},"body":{"injectables/SettingsService.html":{}}}],["item",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1594,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1159,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["janki",{"_index":1496,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jedi",{"_index":1438,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jetpack",{"_index":1453,"title":{},"body":{"injectables/SettingsService.html":{}}}],["js",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{},"dependencies.html":{}}}],["json",{"_index":1965,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1564,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1941,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1807,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{}}}],["katana.servic",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["katana/server/node_tool",{"_index":1915,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katana/server/tool_list.j",{"_index":1920,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":38,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":939,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":940,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":942,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1928,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["kick",{"_index":1398,"title":{},"body":{"injectables/SettingsService.html":{}}}],["laser",{"_index":1417,"title":{},"body":{"injectables/SettingsService.html":{}}}],["last",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1597,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1746,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1873,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueListComponent.html":{}}}],["learn",{"_index":1712,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["leav",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["left",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["less",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["letter",{"_index":1849,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1933,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/server-architecture.html":{}}}],["levit",{"_index":1415,"title":{},"body":{"injectables/SettingsService.html":{}}}],["liger",{"_index":1461,"title":{},"body":{"injectables/SettingsService.html":{}}}],["light",{"_index":1371,"title":{},"body":{"injectables/SettingsService.html":{}}}],["lighten",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["lightsab",{"_index":1451,"title":{},"body":{"injectables/SettingsService.html":{}}}],["limegreen",{"_index":1385,"title":{},"body":{"injectables/SettingsService.html":{}}}],["link",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1760,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1577,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":1112,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":1095,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:25",{"_index":1110,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:37",{"_index":1098,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":1096,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["littl",{"_index":1107,"title":{},"body":{"components/IssueListComponent.html":{}}}],["load",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueListComponent.html":{}}}],["loc",{"_index":1625,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1627,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1629,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1748,"title":{},"body":{"index.html":{}}}],["localstorage.katanathem",{"_index":1519,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage['katanathem",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage[key",{"_index":1532,"title":{},"body":{"injectables/SettingsService.html":{}}}],["locat",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["log",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["logic",{"_index":1870,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["long",{"_index":1994,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["look",{"_index":1608,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1952,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1968,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["magenta",{"_index":1387,"title":{},"body":{"injectables/SettingsService.html":{}}}],["magic",{"_index":1601,"title":{},"body":{"injectables/ToolService.html":{}}}],["maiar",{"_index":1441,"title":{},"body":{"injectables/SettingsService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1724,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1719,"title":{},"body":{"index.html":{}}}],["major",{"_index":1869,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["manual",{"_index":1959,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["margin",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["mass",{"_index":1718,"title":{},"body":{"index.html":{}}}],["massiv",{"_index":1104,"title":{},"body":{"components/IssueListComponent.html":{}}}],["master",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":900,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":926,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["math.floor(math.random",{"_index":1524,"title":{},"body":{"injectables/SettingsService.html":{}}}],["maxlin",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1117,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["medit",{"_index":1416,"title":{},"body":{"injectables/SettingsService.html":{}}}],["meet",{"_index":1879,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1927,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["middlewar",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1883,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{}}}],["mirror",{"_index":1504,"title":{},"body":{"injectables/SettingsService.html":{}}}],["miscellan",{"_index":1768,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1899,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mix",{"_index":1466,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modal",{"_index":890,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":881,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["mode",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":215,"title":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1905,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moist",{"_index":1473,"title":{},"body":{"injectables/SettingsService.html":{}}}],["more",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["more_vert",{"_index":1186,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1804,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["n",{"_index":1170,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["nav",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1580,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1143,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navi",{"_index":913,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["near",{"_index":1101,"title":{},"body":{"components/IssueListComponent.html":{}}}],["need",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["needl",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["network",{"_index":1754,"title":{},"body":{"index.html":{}}}],["never",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1911,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1864,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1783,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newthem",{"_index":1372,"title":{},"body":{"injectables/SettingsService.html":{}}}],["next",{"_index":1676,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ng",{"_index":1738,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["ninja",{"_index":1426,"title":{},"body":{"injectables/SettingsService.html":{}}}],["nocoursemodalopen",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["node",{"_index":1018,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["node.j",{"_index":1799,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["node_tool_template.j",{"_index":1917,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1731,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1924,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1923,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1925,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1954,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":1989,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["normal",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["normi",{"_index":1513,"title":{},"body":{"injectables/SettingsService.html":{}}}],["nosql",{"_index":1812,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":917,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["noth",{"_index":1971,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["notif",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1554,"title":{},"body":{"injectables/ToastService.html":{}}}],["now",{"_index":1808,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["npm",{"_index":1733,"title":{},"body":{"index.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["numer",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1161,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1350,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1073,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.themes[newtheme]).foreach(key",{"_index":1520,"title":{},"body":{"injectables/SettingsService.html":{}}}],["observ",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1782,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["octet/stream",{"_index":1181,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":1362,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onclick",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["oninit",{"_index":498,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1059,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1094,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["op",{"_index":1517,"title":{},"body":{"injectables/SettingsService.html":{}}}],["open",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":885,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["opencourse(courseid",{"_index":894,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["openmod",{"_index":886,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["oper",{"_index":1409,"title":{},"body":{"injectables/SettingsService.html":{}}}],["opportun",{"_index":1948,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1075,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1318,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1074,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":409,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1344,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1898,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1358,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1351,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":205,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["other",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["otherwis",{"_index":1857,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["output",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{}}}],["outsid",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{}}}],["overview",{"_index":1764,"title":{"overview.html":{},"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":2005,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1667,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["page",{"_index":143,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":933,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":934,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":929,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":935,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:18",{"_index":938,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":950,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":348,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:15",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:24",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:25",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:26",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:33",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":372,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:15",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:24",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:25",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:32",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":493,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1534,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1162,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1163,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1164,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["palpat",{"_index":1471,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pancak",{"_index":1468,"title":{},"body":{"injectables/SettingsService.html":{}}}],["panorama_fish_ey",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["parser",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["peopl",{"_index":1431,"title":{},"body":{"injectables/SettingsService.html":{}}}],["persist",{"_index":943,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1987,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["phrase",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1537,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["pink",{"_index":1489,"title":{},"body":{"injectables/SettingsService.html":{}}}],["place",{"_index":1632,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":944,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["point",{"_index":1598,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{}}}],["poor",{"_index":1103,"title":{},"body":{"components/IssueListComponent.html":{}}}],["popul",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1740,"title":{},"body":{"index.html":{}}}],["posit",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1884,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1518,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prank",{"_index":1424,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pre",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pro",{"_index":1420,"title":{},"body":{"injectables/SettingsService.html":{}}}],["process",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingadject",{"_index":1470,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingmessag",{"_index":1588,"title":{},"body":{"injectables/ToolService.html":{}}}],["processingnoun",{"_index":1425,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingverb",{"_index":1390,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processor",{"_index":1427,"title":{},"body":{"injectables/SettingsService.html":{}}}],["prod",{"_index":1400,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{}}}],["produc",{"_index":1397,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1486,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["programm",{"_index":1457,"title":{},"body":{"injectables/SettingsService.html":{}}}],["project",{"_index":1797,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1974,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["properti",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["provid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pull",{"_index":1840,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["purifi",{"_index":1418,"title":{},"body":{"injectables/SettingsService.html":{}}}],["purpos",{"_index":397,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["put",{"_index":1313,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":986,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":990,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1292,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1956,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["quiz",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":985,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["rabbit",{"_index":1460,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radiat",{"_index":1480,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radic",{"_index":1497,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ran",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["randi",{"_index":1514,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ranger",{"_index":1443,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rate",{"_index":1421,"title":{},"body":{"injectables/SettingsService.html":{}}}],["raven",{"_index":1499,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rc.2",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["rc.8.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1100,"title":{},"body":{"components/IssueListComponent.html":{}}}],["reactiv",{"_index":1305,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":955,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":937,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":932,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{}}}],["recommend",{"_index":1710,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["red",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["referenc",{"_index":1877,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":2003,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1938,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.highlight",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1890,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["releas",{"_index":918,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["reload",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removecours",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["renam",{"_index":1802,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["render",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1175,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1730,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["repres",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('./firebase_wrapper.j",{"_index":1976,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('cheerio",{"_index":1892,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resid",{"_index":1834,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["resolv",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{}}}],["respect",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["rest",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["revers",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":2002,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1545,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1929,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["rubber",{"_index":1422,"title":{},"body":{"injectables/SettingsService.html":{}}}],["run",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["salti",{"_index":1516,"title":{},"body":{"injectables/SettingsService.html":{}}}],["same",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sandbox",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sassi",{"_index":1485,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sauci",{"_index":1484,"title":{},"body":{"injectables/SettingsService.html":{}}}],["save",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["saxophon",{"_index":1450,"title":{},"body":{"injectables/SettingsService.html":{}}}],["scatter_plot",{"_index":914,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["screen",{"_index":1603,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1099,"title":{},"body":{"components/IssueListComponent.html":{}}}],["scrub",{"_index":1515,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sdk",{"_index":1798,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["sea",{"_index":1467,"title":{},"body":{"injectables/SettingsService.html":{}}}],["search",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section",{"_index":1855,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1846,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1609,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1619,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1589,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1613,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1622,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":927,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{}}}],["selection.component.css",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:126",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1584,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:131",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:136",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:143",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:90",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":953,"title":{},"body":{"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sentiment_very_dissatisfi",{"_index":1124,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1973,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["server",{"_index":81,"title":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server.j",{"_index":1739,"title":{},"body":{"index.html":{}}}],["server/node_tool",{"_index":1835,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["server/settings.json",{"_index":1750,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1816,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["serverdomain",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1982,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["servic",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1620,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1623,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":107,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setlocalstorage(key",{"_index":1533,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setselectedcategori",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcourse(cours",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["setselectedtool(tool",{"_index":1616,"title":{},"body":{"injectables/ToolService.html":{}}}],["setthem",{"_index":1366,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settheme(newthem",{"_index":1368,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settimeout",{"_index":1571,"title":{},"body":{"injectables/ToastService.html":{}}}],["settings.servic",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settings/opt",{"_index":1836,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["settingsservic",{"_index":40,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["settingsservice.buildprocessingmessag",{"_index":1641,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage('goofmessag",{"_index":916,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage(\\'goofmessag",{"_index":919,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.settheme(localstorage['katanathem",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":1174,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["sever",{"_index":1947,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["shadowi",{"_index":1475,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sharp",{"_index":1500,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shazam",{"_index":1463,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shock",{"_index":1507,"title":{},"body":{"injectables/SettingsService.html":{}}}],["short",{"_index":1867,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":931,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sign",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1966,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1784,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["similiar",{"_index":1813,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["simpl",{"_index":1828,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1872,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sith",{"_index":1439,"title":{},"body":{"injectables/SettingsService.html":{}}}],["size",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["sketch",{"_index":1393,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketcher",{"_index":1436,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketchi",{"_index":1476,"title":{},"body":{"injectables/SettingsService.html":{}}}],["skip",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["slap",{"_index":1399,"title":{},"body":{"injectables/SettingsService.html":{}}}],["small",{"_index":1969,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["snippet",{"_index":1801,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["snowmen",{"_index":1469,"title":{},"body":{"injectables/SettingsService.html":{}}}],["socket",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1282,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1960,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":673,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["specifi",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1477,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spring",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["spudtast",{"_index":1494,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spunki",{"_index":1491,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/.../firebase.auth.t",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1303,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1310,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1311,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/cours",{"_index":635,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:116",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:128",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:145",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:161",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:37",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:39",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:43",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:51",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:53",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:67",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:85",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:98",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":347,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":395,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:120",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:204",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:23",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:28",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:298",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:61",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:66",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:91",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/settings.service.t",{"_index":1365,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/settings.service.ts:156",{"_index":1388,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:189",{"_index":1367,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:197",{"_index":1369,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/toast.service.t",{"_index":1553,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1556,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1560,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1558,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":492,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1585,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1595,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1599,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1602,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1607,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1606,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1592,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1593,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1604,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1611,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1612,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1615,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1617,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1591,"title":{},"body":{"injectables/ToolService.html":{}}}],["stack",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["stand",{"_index":1944,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1254,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1993,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stat",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":207,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1541,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":1817,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stattitl",{"_index":1542,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1726,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["still",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["stop",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["stopev",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["stopevent(ev",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["storag",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["straightforward",{"_index":1914,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["structur",{"_index":1759,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stutter",{"_index":1109,"title":{},"body":{"components/IssueListComponent.html":{}}}],["style",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["submodul",{"_index":1830,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["subscrib",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1955,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["suit",{"_index":1950,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["superstiti",{"_index":1482,"title":{},"body":{"injectables/SettingsService.html":{}}}],["support",{"_index":1761,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sushi",{"_index":1446,"title":{},"body":{"injectables/SettingsService.html":{}}}],["suspici",{"_index":1967,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1762,"title":{},"body":{"modules.html":{}}}],["swordfish",{"_index":1435,"title":{},"body":{"injectables/SettingsService.html":{}}}],["system",{"_index":1713,"title":{},"body":{"index.html":{}}}],["tab",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["tabs'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tabs.compon",{"_index":928,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs.component.css",{"_index":879,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.html",{"_index":880,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.t",{"_index":877,"title":{},"body":{"components/CourseTabsComponent.html":{},"coverage.html":{}}}],["tabs.component.ts:19",{"_index":888,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:26",{"_index":897,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":899,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:28",{"_index":898,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":891,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":896,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:47",{"_index":889,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:55",{"_index":895,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:65",{"_index":893,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.modul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.module.t",{"_index":923,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs/cours",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["tab}",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1123,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1312,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tape",{"_index":1465,"title":{},"body":{"injectables/SettingsService.html":{}}}],["team",{"_index":1716,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1939,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1734,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1943,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1732,"title":{},"body":{"index.html":{}}}],["text",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1848,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["that'",{"_index":1806,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["that\\'",{"_index":1498,"title":{},"body":{"injectables/SettingsService.html":{}}}],["the_tool_nam",{"_index":1852,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["theme",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["then((cours",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["think",{"_index":1403,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this._selectedcategori",{"_index":1618,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1621,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1630,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1114,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1157,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1348,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1638,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":1152,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1120,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1085,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1086,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.getsession().getvalu",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('maxlin",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('minlin",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1301,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1345,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1352,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.getrandom(this.processingadject",{"_index":1529,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingnoun",{"_index":1530,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingverb",{"_index":1528,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettoollist",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.highlight",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.http.get(`/api/tool",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1072,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html['updatedhtml",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1065,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1071,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1115,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1119,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1118,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1116,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1359,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":902,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1349,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1315,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1343,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1346,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1317,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1302,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1360,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.themes[newtheme][key",{"_index":1522,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.toastservice.toasterror(err",{"_index":1299,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1628,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1061,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1062,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":982,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":987,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{}}}],["thought",{"_index":1964,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1858,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["tickl",{"_index":1488,"title":{},"body":{"injectables/SettingsService.html":{}}}],["time",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":400,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1543,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1570,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1557,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1555,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1559,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":39,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["togroup",{"_index":1308,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":2004,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tomb",{"_index":1428,"title":{},"body":{"injectables/SettingsService.html":{}}}],["tool",{"_index":51,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tool'",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool.icon",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1624,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1818,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolcategori",{"_index":401,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["toollog(data",{"_index":1983,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolpagemodul",{"_index":227,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tools:module.export",{"_index":1921,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["toolselectioncompon",{"_index":210,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":33,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1642,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1361,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1077,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":211,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1590,"title":{},"body":{"injectables/ToolService.html":{}}}],["toothpast",{"_index":1492,"title":{},"body":{"injectables/SettingsService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["total",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["trim",{"_index":1402,"title":{},"body":{"injectables/SettingsService.html":{}}}],["true",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["turn",{"_index":915,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["two",{"_index":1868,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":996,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1563,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":988,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1984,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["unbeliev",{"_index":1508,"title":{},"body":{"injectables/SettingsService.html":{}}}],["undefin",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["underscor",{"_index":1850,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["undul",{"_index":1472,"title":{},"body":{"injectables/SettingsService.html":{}}}],["unexpectedli",{"_index":1284,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["unicorn",{"_index":1448,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uniqu",{"_index":1859,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["univers",{"_index":1722,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1958,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":534,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{}}}],["urukai",{"_index":1445,"title":{},"body":{"injectables/SettingsService.html":{}}}],["us",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["user_log",{"_index":1819,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1985,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["valid",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1320,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["var",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1654,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{}}}],["veri",{"_index":1827,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifi",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifynewus",{"_index":2000,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["vermillion",{"_index":1487,"title":{},"body":{"injectables/SettingsService.html":{}}}],["via",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["view'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:14",{"_index":1633,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:22",{"_index":1635,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:23",{"_index":1637,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:24",{"_index":1636,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:29",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:30",{"_index":1634,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:33",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1342,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:50",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":994,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":995,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('codeeditor",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('editor",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1113,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":981,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["visibl",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wait",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1910,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1067,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1290,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatchamacallit",{"_index":1437,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whatev",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1749,"title":{},"body":{"index.html":{}}}],["white",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whiteboard",{"_index":1454,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whitespac",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1626,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.port",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":903,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1182,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/Error.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1171,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["wizard",{"_index":1440,"title":{},"body":{"injectables/SettingsService.html":{}}}],["won't",{"_index":1822,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["word",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1935,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1679,"title":{"additional-documentation/firebase/firebase-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wrapper'",{"_index":1981,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["written",{"_index":1999,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["wyvern",{"_index":1432,"title":{},"body":{"injectables/SettingsService.html":{}}}],["xylophon",{"_index":1449,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yahoo",{"_index":1406,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yellow",{"_index":1386,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1863,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["you'll",{"_index":1793,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1940,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1721,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authGuardService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, settingsService: SettingsService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to route changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nUsed in app.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authGuardService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authGuardService:     AuthGuardService\n\n                    \n                \n                    \n                        \n                            Type :     AuthGuardService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:45\n                            \n                        \n\n                \n                    \n                        Provides Firebase authentication functionality.\nUsed in app.component.html (i.e. DO NOT DELETE).\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\nimport { SettingsService } from './settings.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to route changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Used in app.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        public toolService: ToolService,\n        private toastService: ToastService,\n        private settingsService: SettingsService,\n        public authGuardService: AuthGuardService) {\n\n        // Set the theme\n        if (localStorage['katanaTheme']) {\n            settingsService.setTheme(localStorage['katanaTheme'])\n        }\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CourseTabsModule\n                            \n                            \n                                    HomePageModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { CourseTabsModule } from './course-tabs/course-tabs.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        CourseTabsModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies that the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n* Verifies that the user is correctly logged in with a valid\n* Google BYUI account. Redirects the user to the Google\n* login page as needed. Provides validation for the user\n* to access various routes.\n*/\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    public userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** ***********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed.\n     */\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        Builds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authGuardService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Builds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authGuardService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authGuardService:     AuthGuardService\n\n                    \n                \n                    \n                        \n                            Type :     AuthGuardService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:26\n                            \n                        \n\n                \n                    \n                        Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to verify current location and navigate user to new page.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:25\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\n\n/**\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n */\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /**\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public router: Router,\n        public toolService: ToolService,\n        public authGuardService: AuthGuardService) { }\n\n    /**\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     */\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:15\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The category to be set as the selected category\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:25\n                            \n                        \n\n                \n                    \n                        Verifies if course selection is open, \nso styling can be applied. Used in \ncategories.component.html (i.e. DO NOT DELETE)\n**********************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\nimport { Category } from '../../interfaces';\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        public courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category: Category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates the Ace code editor to allow viewing and editing HTML from an issue's canvas item.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlight\n                            \n                            \n                                issue\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as\na string. It will be converted into a regex, so\na regex string (to be passed into the RegExp constructor)\ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue the code editor is displaying code for.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:44\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:39\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can\ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:56\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is\ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\nimport { Issue } from '../../interfaces';\n\n/**\n * Integrates the Ace code editor to allow viewing and editing HTML from an issue's canvas item.\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /**\n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as\n     * a string. It will be converted into a regex, so\n     * a regex string (to be passed into the RegExp constructor)\n     * can also be passed in.\n     */\n    @Input('highlight') highlight: string;\n\n    /**\n     * The issue the code editor is displaying code for.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * Element reference to the editor div itself so we can\n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is\n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded = true;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        const EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        const searchBox = window['ace'].require('ace/searchbox');\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            const code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption('minLines', 10);\n        this.editor.setOption('maxLines', 30);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session.\n     */\n    setEditorSession(tab) {\n        if (!tab.session) { return; }\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        // If the user changes the code in the editor, it will change this issue status to untouched\n        this.editor.on('change', () => {\n            if (this.issue.status === 'approved') {\n                this.issue.status = 'untouched';\n            }\n            this.issue.html['updatedHtml'] = this.editor.getSession().getValue();\n        });\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.highlight) {\n            // Converts the provided search phrase to a RegExp\n            const reg = new RegExp(this.highlight, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption('maxLines', this.viewExpanded ? 30 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search.\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCourseSelect\n                            \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                removeAll\n                            \n                            \n                                sortBy\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeCourseSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseCourseSelect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Closes the courseSelect page when the user clicks on the margins of the page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Deselects all selected courses. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopEvent(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Stops the courseSelect page from closing when the user interacts with the page (area that is not in the margins) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The JS onClick event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search.\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input. */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input. */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input. */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input. */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input. */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching = false;\n\n    /** Holds what the last search was sorted by. */\n    lastSortedBy: string;\n\n    /** Results of a search. */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter and make everything lowercase\n            const searchPhrase = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchPhrase: searchPhrase,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you\n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchPhrase === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        } else {\n            /* If the string in the search box is less than three characters\n            then stop searching and set the returned course results to an empty array\n            instead of leaving the last results in the table */\n            this.searching = false;\n            this.courseResults = [];\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'.\n     * @param {string} param The object key to be sorted.\n     * @returns {void}\n     */\n    sortBy(param: any) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                const name1 = a[param].toLowerCase();\n                const name2 = b[param].toLowerCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked.\n     * @returns {boolean} Whether the course is already added.\n     */\n    isAdded(course: any) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n\n    /** Deselects all selected courses. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n\n    /** Closes the courseSelect page when the user clicks on the margins of the page */\n    closeCourseSelect() {\n        this.courseService.courseSelectionOpen = false;\n    }\n    \n    /** Stops the courseSelect page from closing when the user interacts with the page (area that is not in the margins) \n     * @param {object} event The JS onClick event\n     */\n    stopEvent(event) {\n        event.stopPropagation();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      Course Selection\n      Remove All\n    \n    Sub-Account\n      \n        \n        Development\n        Online\n              Sandbox\n              Pathway -->\n        EnglishConnect\n        All\n      \n    \n    Term\n      \n        \n        Fall\n        Winter\n        Spring -->\n        Master Courses\n        Default Term\n        All\n      \n    \n    Blueprint\n      \n        \n        True\n        False\n        All\n      \n    \n    Search By\n      \n        Instructor\n        Course\n      \n    \n    Search Term\n    \n    Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n    \n      \n        \n          +/-\n          Name\n          Code\n          Instructor\n          Account\n          Term\n          Blueprint\n          ID\n          Open in Canvas\n        \n      \n      \n        \n          \n            \n              {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n            \n            {{course.course_name}}\n            {{course.course_code}}\n            {{course.instructor}}\n            {{course.account}}\n            {{course.term}}\n            {{course.blueprint}}\n            {{course.id}}\n            \n              \n                open_in_new\n              \n            \n          \n        \n        \n        \n          \n            \n              \n                \n                  \n                \n                \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            Searching ...\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Course Selection      Remove All        Sub-Account                      Development        Online              Sandbox              Pathway -->        EnglishConnect        All              Term                      Fall        Winter        Spring -->        Master Courses        Default Term        All              Blueprint                      True        False        All              Search By              Instructor        Course              Search Term        Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                            +/-          Name          Code          Instructor          Account          Term          Blueprint          ID          Open in Canvas                                                                {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                        {{course.course_name}}            {{course.course_code}}            {{course.instructor}}            {{course.account}}            {{course.term}}            {{course.blueprint}}            {{course.id}}                                          open_in_new                                                                                                                                                                                                                                                                                                                Searching ...                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:161\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:37\n                            \n                        \n\n                \n                    \n                        Emits when a the selected course has changed. Used by lazy-loading components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:39\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen = false;\n\n    /**\n     * Emits when a the selected course has changed. Used by lazy-loading components.\n     */\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseTabsComponent.html":{"url":"components/CourseTabsComponent.html","title":"component - CourseTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-tabs/course-tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The Course Tabs bar, along with the action buttons (settings, feedback, etc.). \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-tabs\n            \n\n            \n                styleUrls\n                course-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                settingsService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                courseOverlay\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for courses selected by the user.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for tools available on the server.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Toggles the course overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(course: , status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe course to count issues in\n\n\n                                                        \n                                                \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse(courseId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The Canvas ID of the course\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:26\n                            \n                        \n\n                \n                    \n                        Provides information and functionality for courses selected by the user.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                        Used to open and close the modal for feedback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settingsService:     SettingsService\n\n                    \n                \n                    \n                        \n                            Type :     SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:27\n                            \n                        \n\n                \n                    \n                        Provides information and functionality for tools available on the server.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { SettingsService } from '../../settings.service';\nimport { KatanaService } from '../../katana.service';\n\n/** The Course Tabs bar, along with the action buttons (settings, feedback, etc.). */\n@Component({\n    selector: 'app-course-tabs',\n    templateUrl: './course-tabs.component.html',\n    styleUrls: ['./course-tabs.component.css']\n})\nexport class CourseTabsComponent {\n\n    /**\n     * Used to open and close the modal for feedback.\n     */\n    modalActions = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and functionality for courses selected by the user.\n     * @param toolService Provides information and functionality for tools available on the server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public settingsService: SettingsService) { }\n\n    /**\n     * Toggles the course overlay open and closed.\n     */\n    courseOverlay() {\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n    }\n\n    /**\n     * Opens the feedback modal.\n     */\n    openModal() {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the feedback modal.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {number} courseId The Canvas ID of the course\n     */\n    openCourse(courseId: number): void {\n        window.open('https://byui.instructure.com/courses/' + courseId, '_blank');\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {Course} course - The course to count issues in\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(course, status): number | string {\n        if (!course.issueItems) return 0;\n        if (course.error) return 'E';\n        return course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n\n}\n\n    \n\n    \n        \n    \n         \n        \n\n            \n                {{course.course_code}}\n                 0\" class=\"issue-badge\">{{getIssueCount(course, 'untouched')}}\n            \n\n            \n                \n                    open_in_new\n                \n                \n                    clear\n                \n            \n        \n        \n\n        \n        \n\n            \n            \n                edit\n            \n\n            \n            \n                feedback\n            \n\n            \n            \n                settings\n                \n                \n                    \n                        \n                            invert_colors\n                            Classic Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Charcoal Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Navy Theme\n                        \n                    \n                    \n                    \n                        \n                            scatter_plot\n                            Turn Loading Messages {{settingsService.checkLocalStorage('goofMessages') ? 'Off' : 'On'}}\n                        \n                    \n                    \n                        \n                            notes\n                            Release Notes\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n\n\n \n \n    \n        Loading...\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                 {{course.course_code}}                 0\" class=\"issue-badge\">{{getIssueCount(course, \\'untouched\\')}}                                                            open_in_new                                                    clear                                                                                                    edit                                                    feedback                                                    settings                                                                                                        invert_colors                            Classic Theme                                                                                                                    invert_colors                            Charcoal Theme                                                                                                                    invert_colors                            Navy Theme                                                                                                                                        scatter_plot                            Turn Loading Messages {{settingsService.checkLocalStorage(\\'goofMessages\\') ? \\'Off\\' : \\'On\\'}}                                                                                                                    notes                            Release Notes                                                                                                          Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseTabsModule.html":{"url":"modules/CourseTabsModule.html","title":"module - CourseTabsModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseTabsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/course-tabs/course-tabs.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseTabsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseTabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseTabsComponent } from './course-tabs/course-tabs.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseTabsComponent\n    ],\n    declarations: [\n        CourseSelectionComponent,\n        CourseTabsComponent\n    ]\n})\nexport class CourseTabsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Standard Error object with a status property \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        stack\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stack\n                                    \n                                \n                                \n                                    \n                                        stack:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n    \n        Description\n    \n    \n        An error page to display various client-side errors, and errors received from the server. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                katanaService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/error-page/error-page.component.ts:18\n                            \n                        \n\n                \n                    \n                        Collects errors in Katana and allows\nthem to be read and displayed to the user. Used in \nerror-page.component.html (i.e. DO NOT DELETE)\n**********************************************************\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n/** An error page to display various client-side errors, and errors received from the server. */\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeEditor\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueDetails\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display. \n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is initialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codeEditor:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        A reference to the code editor element for the respective issue. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /** The issue attached to the display. */\n    @Input('issue') issue: Issue;\n\n    /** The index of the item's issues array the issue is at. */\n    @Input('index') index: number;\n\n    /** Element reference to the card containing details about the issue. */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /** A reference to the code editor element for the respective issue. */\n    @ViewChild('codeEditor') codeEditor: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService,\n        public courseService: CourseService) { }\n\n    /**\n     * Fired when the component is initialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                const control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) { return; }\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            };\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2';\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n  \n    {{issue.title}}\n    \n\n    \n      \n        {{option.title}}\n        {{option.description}}\n        \n\n          \n          \n            \n          \n\n          \n            \n              {{choice}}\n            \n          \n\n          \n            \n              {{choice}}\n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n  \n\n  \n  \n\n    \n      \n        {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n      \n      \n        block\n      \n      {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n    \n\n    \n      \n        {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n      \n\n      {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n    \n\n    \n      FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n    \n    \n      FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{issue.title}}                      {{option.title}}        {{option.description}}                                                                                      {{choice}}                                                          {{choice}}                                                                          {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                    block            {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                      {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}            {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}              FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}              FAILED - Please contact a Katana developer with the course ID, item name, and issue title.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Provides IssueItems to load into the list as {@link IssueCard}s, based on the\nnumber allowed (issueItemCount).\n\n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\nload more IssueItems into the list. This is, essentially, lazy loading. It helps prevent\npoor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                        The number of IssueItems currently loaded in the list. Used for lazy loading. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:16\n                            \n                        \n\n                \n                    \n                        Element reference to the issue list. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    /** Element reference to the issue list. */\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    /** The number of {@link IssueItem}s currently loaded in the list. Used for lazy loading. */\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    /** \n     * Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\n     * load more {@link IssueItem}s into the list. This is, essentially, lazy loading. It helps prevent\n     * poor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n     */\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    /** \n     * Provides {@link IssueItem}s to load into the list as {@link IssueCard}s, based on the\n     * number allowed (issueItemCount).\n     */\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:298\n                            \n                        \n\n\n                \n                    \n                            Handles errors for this service. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:204\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Retrieves a list of courses from Canvas.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:28\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:23\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:61\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\nimport { resolve } from 'url';\nimport { Error} from './interfaces';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /**\n     * Retrieves a list of courses from Canvas.\n     */\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        const data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /** Handles errors for this service. */\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                noCourseModalOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noCourseModalOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoCourseModalOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the \"no courses selected\" modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:50\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The FormGroup to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The FormGroup to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        public courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the \"no courses selected\" modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    noCourseModalOpen(): boolean {\n        return !!document.querySelector('#fixModal.open');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        const options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        const categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    \n        Click here to Add Courses\n    \n    arrow_forward\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!                Click here to Add Courses        arrow_forward'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles user settings, such as the theme.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.service.ts:189\n                            \n                        \n\n                \n                    \n                            Constructor \n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(newTheme: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/settings.service.ts:197\n                            \n                        \n\n\n                \n                    \n                            Toggles the theme between dark and light.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTheme\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.service.ts:156\n                            \n                        \n\n                \n                    \n                        The themes that can be set. Set by using the setTheme() method on this service.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Handles user settings, such as the theme.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    /** @ignore */\n    processingVerbs = [\n        'Diagnosing',\n        'Encapsulating',\n        'Sketching',\n        'Airating',\n        'Flipping',\n        'Calculating',\n        'Producing',\n        'Kicking',\n        'Slapping',\n        'Prodding',\n        'Aging',\n        'Trimming',\n        'Typing',\n        'Thinking',\n        'Contemplating',\n        'Ordering',\n        'Internetting',\n        'Googling',\n        'Yahooing',\n        'Firefoxing',\n        'Chroming',\n        'Operating',\n        'Candidating',\n        'Evicting',\n        'De-Horcruxing',\n        'Charming',\n        'Levitating',\n        'Meditating with',\n        'Lasering',\n        'Purifying',\n        'Burninating',\n        'Pro-rating',\n        'Rubber ducking',\n        'Pranking'\n    ];\n\n    /** @ignore */\n    processingNouns = [\n        'ninjas',\n        'processors',\n        'tombs',\n        'desks',\n        'files',\n        'dancers',\n        'people',\n        'wyverns',\n        'frogs',\n        'developers',\n        'pages',\n        'discussions',\n        'choreography',\n        'swordfish',\n        'sketchers',\n        'whatchamacallits',\n        'jedi',\n        'sith',\n        'wizards',\n        'maiar',\n        'hobbits',\n        'rangers',\n        'elves',\n        'urukai',\n        'rubber ducks',\n        'sushi',\n        'fishies',\n        'unicorns',\n        'xylophones',\n        'saxophones',\n        'lightsabers',\n        'blasters',\n        'jetpacks',\n        'whiteboards',\n        'doctors',\n        'chemists',\n        'programmers',\n        'hackers',\n        'bananas',\n        'rabbits',\n        'ligers',\n        'hippos',\n        'shazams',\n        'flex tape',\n        'mix tapes',\n        'sea pancakes',\n        'snowmen',\n        'katanas'\n    ];\n\n    /** @ignore */\n    processingAdjectives = [\n        'palpatating',\n        'undulating',\n        'moist',\n        'electrical',\n        'shadowy',\n        'sketchy',\n        'spinning',\n        'freestyling',\n        'gradiating',\n        'radiating',\n        'freaky',\n        'superstitious',\n        'italian',\n        'saucy',\n        'sassy',\n        'productive',\n        'general',\n        'vermillion',\n        'tickle-me-pink',\n        'fluffy',\n        'spunky',\n        'toothpaste-fresh',\n        'spudtastic',\n        'dank',\n        'janky',\n        'radical',\n        'wizard',\n        'that\\'s-so-raven',\n        'sharp',\n        'inumerable',\n        'fresh',\n        'forward',\n        'backward',\n        'mirrored',\n        'entifiable',\n        'Daniel\\'d',\n        'shocked',\n        'unbelievable',\n        'inconceivable',\n        'conceivable',\n        'incomprehensible',\n        'comprehensible',\n        'normie',\n        'randy',\n        'scrub',\n        'salty',\n        'OP',\n        'practical',\n    ];\n\n    /**\n     * The themes that can be set. Set by using the `setTheme()` method on this service.\n     */\n    themes = {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    };\n\n    /** Constructor */\n    constructor() { }\n\n    /**\n     * Toggles the theme between dark and light.\n     */\n    setTheme(newTheme) {\n        localStorage.katanaTheme = newTheme;\n        Object.keys(this.themes[newTheme]).forEach(key => {\n            document.documentElement.style.setProperty(`--${key}`, this.themes[newTheme][key]);\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    getRandom(arr) {\n        const randy = Math.floor(Math.random() * arr.length);\n        return arr[randy];\n    }\n\n    /**\n     * @ignore\n     */\n    buildProcessingMessage() {\n        return `${this.getRandom(this.processingVerbs)} ${this.getRandom(this.processingAdjectives)} ${this.getRandom(this.processingNouns)}...`;\n    }\n\n    /**\n     * @ignore\n     */\n    checkLocalStorage(key) {\n        return localStorage[key] === 'true';\n    }\n\n    /**\n     * @ignore\n     */\n    setLocalStorage(key) {\n        localStorage[key] = localStorage[key] === 'true' ? 'false' : 'true';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The description to display to the user */\n    description: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n/** Standard Error object with a status property */\nexport interface Error {\n    name: string;\n    message: string;\n    stack?: string;\n    status: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nUsed in tool-selection.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nUsed in tool-selection.component.html (i.e. DO NOT DELETE).\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Used in tool-selection.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(public toolService: ToolService, public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                settingsService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides this component with access to user settings.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:22\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settingsService:     SettingsService\n\n                    \n                \n                    \n                        \n                            Type :     SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Provides this component with access to user settings.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { SettingsService } from '../../settings.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param settingsService Provides this component with access to user settings.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public settingsService: SettingsService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{settingsService.checkLocalStorage('goofMessages') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{settingsService.checkLocalStorage(\\'goofMessages\\') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-tabs/course-tabs.component.ts\n            \n            \n                component\n            \n            \n                CourseTabsComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Error\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/settings.service.ts\n            \n            \n                injectable\n            \n            \n                SettingsService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.8.1-next\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.3.1\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            he : ^1.1.1\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nIf you are on Github, it is recommended you view the full documentation HERE.\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not built by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup - Production\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\n\n\n\nIn the terminal, run: npm start to start server.js (which will start Katana on port 8000)\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nYou can also deploy it for others to use by using your IP Address and your port number. So if you were running on port 8000 and your IP Address was 10.1.182.255 then you could deploy it on your network with the url 10.1.182.255:8000, though hosting it on a server with a url for your users to access would of course be better.\nDocumentation\nAdditional Setup\nSet up a Node Tool\nSet up Firebase\nEnabling Accounts on Firebase\nClient Architecture (Angular)\nAngular Structure Documentation \nServer Architecture (Express)\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseTabsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting Up Firebase\nKatana uses three of Firebase's features: Authentication, Database (firestore), and Functions. This will guide you through settings up all three on a brand new instance. If you already have an instance set up, but need to set up your instance's Firebase service account key, you'll just need to generate a new private key.\nFirebase Authentication\nIn order for the server to be able to authenticate each request that is sent to it (i.e. to run a tool), it needs to have access to a \"Service Account.\" This is essentially a developer key, but for firebase. It just allows an application to act as an admin on Firebase without an actual account.\nGenerate Private Key\nTo create the key for the service account:\n\nGo to the Firebase Console and navigate to the Katana project\nClick the \"Settings\" icon next to the \"Project Overview\" button at the top left\nSelect \"Project Settings\"\nSelect the \"Service accounts\" tab\nMake sure \"Firebase Admin SDK\" is selected, and that \"Node.js\" is selected as the Admin SDK configuration snippet\nClick \"Generate new private key\" at the bottom (this will download a file)\nRename the downloaded file to auth.json and move it into the server directory in your instance of Katana\nThat's it! Katana's server will now be able to integrate with your instance of Firebase\n\nIntegrating Firebase by creating a private key, as described above, will complete the needed steps for setting up authentication, but there are a few things to be aware of. Currently:\n\nKatana depends entirely on Google accounts. Users cannot create new accounts, use Facebook, or other means to log in.\n\nFirebase Database\nKatana uses Firestore. It is a NoSQL database, similiar to Firebase Database, but with greater functionality. It is currently used just to store logs.\nFollow Firebase's Instructions to set up your instance of Firestore. After that, you will need to create these collections:\n\nserver_logs\nstatistics\ntool_logs\nuser_logs\n\nThese are identified by name by Katana, so having these names match exactly is important. Additional collections can be added as needed - they won't interfere.\nFirebase Functions\nFirebase Functions is a feature that allows you to deploy event listeners that fire on certain database actions. It is entirely backend. Currently, its only purpose is to verify that the user is using a Google BYUI account (\"@byui.edu\"). This can be adjusted for any instance, or entirely excluded. \nDeploying Firebase Functions is very simple. The instructions can be found here.\nYou may need to create a git repository or a submodule. I would recommend a submodule (which is currently not being used, ironically).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nTool Object - i.e. Tool Settings\nThe tool object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe tool object should be located at the bottom of each individual tool.\nThe following table describes the tool object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the tool object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/tool_list.js where you will see a list of all the currently available tools:module.exports = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear! It's at this point that you'll need to go into your templated tool file and complete the logic.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid accounts added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture.html":{"url":"additional-documentation/server-architecture.html","title":"additional-page - Server Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Architecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/server-endpoints.html":{"url":"additional-documentation/server-architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/server-architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/data-flow-diagram.html":{"url":"additional-documentation/server-architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/high-level-overview.html":{"url":"additional-documentation/server-architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-wrapper.html":{"url":"additional-documentation/firebase/firebase-wrapper.html","title":"additional-page - Firebase Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Wrapper\nThe Firebase Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firebase_wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firebaseWrapper = require('./firebase_wrapper.js');\nconst db = firebaseWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nThese public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\nincrementCounts(category, statistic, count)\ncategory {string} statistic {string} count {number}\nvoid\nUsed to increment counts saved under statistics in Firestore.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
