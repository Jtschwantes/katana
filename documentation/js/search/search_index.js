var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.484,1,1.1]],["body/components/AppComponent.html",[0,0.786,1,1.574,2,0.424,3,0.424,4,0.941,5,1.034,6,1.034,7,0.332,8,2.714,9,0.574,10,4.532,11,3.899,12,2.006,13,3.17,14,4.532,15,3.899,16,2.119,17,1.243,18,3.164,19,3.899,20,3.899,21,1.034,22,2.437,23,2.324,24,2.921,25,1.486,26,4.532,27,1.486,28,6.14,29,1.311,30,2.424,31,3.685,32,2.209,33,3.54,34,2.555,35,4.342,36,3.54,37,0.78,38,3.155,39,3.244,40,4.532,41,2.921,42,2.536,43,5.303,44,2.095,45,1.831,46,3.481,47,0.652,48,1.072,49,2.718,50,3.899,51,4.532,52,2.921,53,3.577,54,2.536,55,3.176,56,2.381,57,4.532,58,4.532,59,2.381,60,2.536,61,1.649,62,0.78,63,0.018,64,0.796,65,0.448,66,0.644,67,0.81,68,1.354,69,1.729,70,2.093,71,1.667,72,1.087,73,2.308,74,2.536,75,1.559,76,2.536,77,1.231,78,1.069,79,3.481,80,3.899,81,1.352,82,2.536,83,2.348,84,0.884,85,0.644,86,3.046,87,5.303,88,1.397,89,1.197,90,2.034,91,2.714,92,1.397,93,2.207,94,0.376,95,0.354,96,1.507,97,1.766,98,2.578,99,3.155,100,3.899,101,4.532,102,0.555,103,3.155,104,3.155,105,2.921,106,3.899,107,4.532,108,2.718,109,4.532,110,3.155,111,2.034,112,2.714,113,2.714,114,1.258,115,2.424,116,2.424,117,3.155,118,3.155,119,2.119,120,3.155,121,2.714,122,3.155,123,3.155,124,2.714,125,0.555,126,3.155,127,3.155,128,3.155,129,1.475,130,2.424,131,1.013,132,0.4,133,4.074,134,2.424,135,3.155,136,3.155,137,1.562,138,3.155,139,1.019,140,3.155,141,2.714,142,3.155,143,2.381,144,3.155,145,2.714,146,1.766,147,2.424,148,0.613,149,3.155,150,3.155,151,1.258,152,3.155,153,3.155,154,2.869,155,2.921,156,3.17,157,1.739,158,3.899,159,4.532,160,2.536,161,2.381,162,0.817,163,0.881,164,1.417,165,1.486,166,1.729,167,1.034,168,3.155,169,3.155,170,1.034,171,0.857,172,1.034,173,0.555,174,1.034,175,0.857,176,0.527,177,1.034,178,0.857,179,1.034,180,0.817,181,1.486,182,0.857,183,1.034,184,0.817,185,0.584,186,1.034,187,0.857,188,1.034,189,0.555,190,1.034,191,0.857,192,1.034,193,0.857,194,1.034,195,0.857,196,1.034,197,0.78,198,1.034,199,0.857,200,0.986,201,1.034,202,0.555,203,0.817,204,1.034,205,0.011,206,0.011]],["title/modules/AppModule.html",[207,1.537,208,2.835]],["body/modules/AppModule.html",[0,0.81,1,2.027,2,0.562,3,0.562,7,0.44,36,3.832,41,3.547,47,0.504,55,2.505,61,1.19,63,0.019,68,1.196,81,1.248,84,1.038,85,0.854,88,1.852,93,2.926,94,0.734,95,0.469,114,1.669,151,1.669,162,1.084,173,0.968,184,1.426,197,1.36,202,0.736,203,1.426,205,0.013,206,0.013,207,2.333,208,5.298,209,2.341,210,3.964,211,3.964,212,3.599,213,3.599,214,3.599,215,3.599,216,3.599,217,4.492,218,4.492,219,4.492,220,3.547,221,4.183,222,5.504,223,3.599,224,3.214,225,3.849,226,2.926,227,5.504,228,3.599,229,5.504,230,3.599,231,1.852,232,3.599,233,3.214,234,4.183,235,3.214,236,5.504,237,4.183,238,5.504,239,3.599,240,2.505,241,4.183,242,4.183,243,3.027,244,3.599,245,5.504,246,3.964,247,4.183,248,4.183,249,2.926,250,4.228,251,2.926,252,3.214,253,3.214,254,2.926,255,3.849,256,3.599,257,5.504,258,3.259,259,1.371,260,5.504,261,5.504,262,4.228,263,5.291,264,4.183,265,4.183,266,4.183,267,4.183,268,4.183]],["title/injectables/AuthGuardService.html",[36,2.129,269,1.702]],["body/injectables/AuthGuardService.html",[2,0.473,3,0.473,7,0.37,9,0.62,17,1.499,18,3.167,29,0.87,31,4.095,36,2.572,37,1.739,41,3.156,42,1.97,44,1.154,45,1.908,52,3.156,56,2.572,59,2.572,61,1.885,62,0.87,63,0.018,64,0.529,65,0.909,66,0.5,67,0.811,68,1.095,77,1.329,81,1.815,84,0.89,85,0.719,86,1.849,88,1.558,94,0.42,95,0.395,96,1.154,98,2.781,102,0.861,105,3.923,114,1.953,125,1.253,132,0.892,148,1.183,151,1.404,154,3.429,155,3.923,156,4.984,157,1.995,185,0.651,205,0.012,206,0.012,233,2.704,235,4.325,239,3.028,263,5.697,269,2.364,270,3.028,271,4.914,272,3.761,273,3.878,274,5.697,275,5.697,276,2.572,277,0.588,278,2.31,279,6.623,280,6.086,281,1.531,282,6.086,283,6.086,284,6.086,285,3.52,286,6.623,287,3.52,288,5.63,289,3.938,290,2.278,291,3.52,292,2.168,293,1.531,294,3.52,295,3.645,296,4.896,297,1.531,298,3.52,299,3.156,300,4.896,301,3.761,302,3.52,303,3.52,304,3.52,305,6.086,306,3.52,307,0.87,308,3.52,309,4.212,310,2.932,311,4.212,312,2.268,313,3.52,314,1.154,315,3.52,316,1.558,317,3.52,318,3.52,319,3.52,320,3.52,321,3.938,322,3.52,323,3.52,324,6.086,325,3.52,326,3.52,327,3.52,328,3.52,329,3.028,330,2.462,331,3.52,332,3.52,333,3.52,334,3.52,335,3.52,336,3.52,337,3.52,338,3.52,339,3.52,340,3.52,341,3.52]],["title/components/BreadcrumbsComponent.html",[0,0.484,171,1.1]],["body/components/BreadcrumbsComponent.html",[0,0.758,1,0.939,2,0.464,3,0.464,4,1.031,5,1.134,6,1.134,7,0.363,9,0.707,15,4.16,17,1.174,18,3.514,21,1.134,22,2.464,23,2.35,25,1.585,27,1.585,29,1.379,30,2.656,31,3.923,34,2.768,36,3.624,37,1.628,44,1.134,47,0.582,48,0.64,49,2.469,56,2.541,62,1.195,63,0.018,64,0.907,65,0.793,66,0.793,67,0.9,71,1.514,72,0.884,83,2.469,84,0.854,85,0.706,88,1.531,92,1.531,93,2.419,94,0.413,95,0.388,96,1.553,97,1.935,98,1.452,102,0.85,108,2.469,114,2.409,125,1.189,131,1.007,132,0.765,134,3.715,148,1.236,161,2.541,162,0.896,163,0.94,164,1.512,165,1.585,166,1.801,167,1.134,170,1.134,171,1.64,172,1.134,173,0.608,174,1.134,175,0.939,176,0.578,177,1.134,178,0.939,179,1.134,180,0.896,181,1.585,182,0.939,183,1.134,184,0.896,185,0.64,186,1.134,187,0.939,188,1.134,189,0.608,190,1.134,191,0.939,192,1.134,193,0.939,194,1.134,195,0.939,196,1.134,197,0.855,198,1.134,199,0.939,200,1.081,201,1.134,202,0.608,203,0.896,204,1.134,205,0.011,206,0.011,231,1.531,243,2.031,258,2.261,262,3.715,271,4.883,277,0.578,278,2.014,281,1.512,289,3.382,290,2.077,293,1.081,295,3.617,307,0.855,310,3.34,342,3.784,343,2.975,344,3.617,345,6.04,346,4.836,347,7.1,348,1.746,349,4.836,350,6.356,351,4.64,352,4.836,353,4.64,354,4.64,355,4.836,356,3.382,357,4.836,358,1.514,359,3.458,360,2.141,361,4.836,362,2.707,363,1.512,364,2.261,365,3.458,366,3.806,367,5.299,368,1.746,369,3.458,370,2.669,371,3.458,372,1.712,373,2.656,374,1.817,375,3.715,376,1.929,377,3.458,378,4.16,379,4.836,380,3.715]],["title/components/CategoriesComponent.html",[0,0.484,173,0.713]],["body/components/CategoriesComponent.html",[0,0.788,1,1.046,2,0.517,3,0.517,4,1.149,5,1.263,6,1.263,7,0.405,9,0.748,11,4.481,21,1.263,22,2.493,23,2.378,25,1.708,27,1.708,29,1.459,31,2.915,32,2.321,34,2.796,37,1.459,47,0.648,48,0.713,49,2.613,53,2.915,56,2.737,62,1.288,63,0.018,64,0.949,65,0.839,66,0.839,67,0.863,71,1.848,72,1.047,78,1.641,83,2.613,84,0.849,85,0.787,89,1.461,92,1.705,94,0.46,95,0.432,96,1.392,98,1.618,102,0.916,108,2.799,125,1.161,131,1.047,132,0.66,139,1.421,162,0.998,163,1.013,164,1.629,165,1.708,166,1.886,167,1.263,170,1.263,171,1.046,172,1.263,173,1.112,174,1.263,175,1.046,176,0.643,177,1.263,178,1.046,179,1.263,180,0.998,181,1.708,182,1.046,183,1.263,184,0.998,185,0.713,186,1.263,187,1.046,188,1.263,189,0.677,190,1.263,191,1.046,192,1.263,193,1.046,194,1.263,195,1.046,196,1.263,197,0.952,198,1.263,199,1.046,200,1.204,201,1.263,202,0.677,203,0.998,204,1.263,205,0.012,206,0.012,259,2.512,271,4.002,277,0.643,278,1.881,281,1.629,293,1.204,316,1.705,342,3.538,363,2.065,364,2.436,370,2.187,372,1.907,381,3.314,382,1.414,383,2.773,384,1.881,385,5.209,386,6.605,387,5.209,388,2.694,389,3.852,390,4.002,391,4.002,392,4.481,393,3.852,394,3.852,395,0.677,396,1.554,397,0.998,398,3.852,399,4.481,400,4.481,401,4.481]],["title/interfaces/Category.html",[259,1.329,395,0.713]],["body/interfaces/Category.html",[2,0.381,3,0.381,7,0.298,9,0.807,12,1.855,17,1.143,45,0.845,47,0.671,48,0.524,63,0.019,64,0.425,65,1.01,66,1.025,67,0.924,72,1.126,75,0.974,77,0.769,78,1.451,84,0.563,94,0.78,95,0.318,102,0.737,125,0.498,129,1.325,131,1.116,132,0.829,139,0.637,148,0.969,157,1.374,163,1.197,173,0.877,176,0.7,185,0.775,189,0.877,202,0.498,205,0.012,206,0.01,243,1.759,258,1.325,259,2.379,277,0.473,292,1.855,293,1.838,297,1.31,307,1.036,314,1.374,348,1.513,358,2.103,360,1.855,363,1.838,364,1.325,376,1.13,382,0.769,383,2.585,384,1.513,395,1.26,396,2.176,397,1.523,402,1.402,403,2.202,404,1.589,405,1.785,406,2.23,407,2.634,408,2.603,409,2.202,410,3.047,411,2.469,412,2.878,413,2.439,414,1.13,415,2.345,416,2.576,417,1.254,418,1.855,419,1.989,420,1.928,421,2.725,422,1.441,423,2.48,424,1.959,425,1.959,426,2.439,427,1.959,428,1.989,429,2.313,430,1.715,431,1.513,432,1.989,433,1.891,434,1.759,435,2.094,436,1.489,437,1.325,438,1.441,439,1.254,440,1.19,441,2.222,442,1.325,443,1.489,444,1.489,445,2.31,446,1.254,447,1.855,448,1.855,449,1.489,450,2.468,451,1.13,452,1.325,453,1.325,454,1.589,455,1.568,456,1.325,457,1.075,458,1.325,459,1.13,460,1.759,461,1.19,462,1.13,463,1.325,464,1.489,465,1.489,466,1.13,467,1.402,468,1.489,469,1.489,470,2.249,471,1.13,472,1.402,473,1.489,474,1.715,475,1.489,476,1.489,477,1.254,478,1.489,479,1.254,480,1.325,481,1.489,482,1.489,483,2.202,484,1.489,485,1.402,486,1.402,487,1.959,488,1.254,489,1.402,490,1.19,491,2.074,492,2.074,493,1.402,494,1.075]],["title/components/CodeEditorComponent.html",[0,0.484,175,1.1]],["body/components/CodeEditorComponent.html",[0,0.729,1,0.681,2,0.622,3,0.337,4,0.748,5,0.822,6,0.822,7,0.264,9,0.484,16,2.166,17,0.743,21,0.822,22,2.362,23,2.252,25,1.253,27,1.253,29,1.511,37,1.679,39,3.29,42,2.139,44,1.519,47,0.538,48,0.857,56,1.317,62,0.62,63,0.018,64,0.696,65,0.869,66,0.793,67,0.657,68,0.901,71,1.407,72,0.734,73,1.673,84,0.337,85,0.512,86,1.317,94,0.299,95,0.429,96,0.591,102,0.911,108,1.692,125,0.911,131,0.999,133,1.926,134,2.936,139,1.62,143,2.008,146,1.403,148,1.255,151,1.848,162,0.65,163,1.281,164,1.62,165,1.253,166,1.664,167,0.822,170,0.822,171,0.681,172,0.822,173,0.441,174,0.822,175,1.407,176,1.215,177,0.822,178,0.681,179,0.822,180,0.65,181,1.253,182,0.681,183,0.822,184,0.65,185,0.464,186,0.822,187,0.681,188,0.822,189,0.441,190,0.822,191,0.681,192,0.822,193,0.681,194,0.822,195,0.681,196,0.822,197,0.62,198,0.822,199,0.681,200,0.784,201,0.822,202,0.441,203,0.65,204,0.822,205,0.009,206,0.011,272,2.936,277,0.419,281,1.838,290,1.782,307,0.945,309,4.458,310,2.774,312,2.464,358,1.596,363,1.448,368,1.673,380,2.936,397,1.2,418,1.692,420,1.253,422,1.919,428,1.871,433,2.841,434,3.159,438,1.315,439,2.602,440,1.605,445,1.253,462,1.525,463,1.787,466,2.067,470,1.315,495,3.214,496,5.913,497,5.28,498,2.157,499,2.464,500,5.182,501,3.985,502,3.823,503,3.823,504,5.182,505,5.879,506,5.182,507,5.182,508,5.182,509,5.057,510,3.823,511,5.879,512,4.633,513,3.823,514,3.823,515,2.936,516,5.879,517,3.789,518,5.06,519,4.633,520,5.182,521,5.579,522,2.507,523,2.593,524,2.289,525,2.936,526,2.507,527,2.507,528,3.288,529,3.823,530,3.823,531,3.823,532,3.823,533,2.507,534,2.936,535,1.605,536,5.913,537,5.182,538,3.24,539,3.823,540,2.507,541,5.182,542,2.289,543,2.936,544,2.507,545,3.823,546,3.823,547,2.936,548,3.212,549,2.936,550,3.823,551,3.823,552,3.288,553,3.823,554,3.288,555,2.936,556,3.823,557,2.507,558,2.936,559,2.507,560,2.9,561,3.981,562,3.34,563,1.616,564,2.464,565,2.507,566,3.823,567,3.823,568,2.507,569,3.823,570,3.823,571,2.507,572,2.507,573,2.507,574,3.823,575,2.507,576,2.507,577,2.507,578,1.754,579,1.926,580,2.507,581,2.507,582,2.507,583,2.507,584,1.926,585,2.507,586,2.507,587,2.507,588,2.507,589,2.507,590,3.823,591,2.507,592,2.507,593,2.507,594,2.507,595,1.754,596,2.507,597,2.507,598,2.507,599,2.507,600,1.754,601,1.926,602,2.507,603,2.507,604,2.507,605,4.633,606,3.823,607,2.507,608,2.507,609,2.507,610,2.507,611,1.616,612,1.926,613,2.507,614,2.507,615,2.507,616,2.507,617,2.507,618,2.507,619,2.936,620,3.823,621,3.288,622,2.507,623,2.507,624,2.157,625,2.507,626,3.823,627,2.507,628,2.507,629,2.507,630,2.507,631,2.507,632,4.633,633,2.507,634,3.823,635,3.823,636,3.823]],["title/interfaces/Course.html",[72,0.642,395,0.713]],["body/interfaces/Course.html",[2,0.354,3,0.354,7,0.277,9,0.788,12,1.758,17,1.109,45,0.786,47,0.665,48,0.488,63,0.019,64,0.596,65,1.049,66,1.059,67,0.903,72,1.184,75,0.907,77,0.716,78,1.413,84,0.533,94,0.764,95,0.296,102,0.698,125,0.698,129,1.233,131,1.101,132,0.788,139,0.893,148,1.109,157,1.965,163,1.165,173,0.698,176,0.798,185,1.108,189,0.84,202,0.464,205,0.011,206,0.009,243,1.107,258,1.233,259,2.222,277,0.44,292,2.115,293,2.047,297,1.874,307,0.981,314,1.302,348,1.433,358,2.107,360,2.653,363,1.662,364,1.233,376,1.051,382,0.716,383,2.516,384,0.952,395,1.233,396,2.153,397,1.477,402,1.305,403,1.385,404,1,405,1.729,406,1.506,407,2.532,408,1.758,409,1.385,410,2.966,411,2.232,412,2.802,413,2.353,414,1.051,415,2.274,416,2.486,417,1.167,418,1.758,419,1.905,420,1.869,421,2.653,422,1.366,423,2.428,424,1.857,425,1.857,426,2.353,427,1.857,428,2.164,429,2.232,430,1.643,431,1.433,432,1.905,433,1.812,434,1.667,435,2.006,436,1.385,437,1.233,438,1.366,439,1.167,440,1.107,441,2.409,442,1.233,443,1.385,444,1.385,445,2.379,446,1.167,447,1.758,448,1.758,449,1.385,450,2.364,451,1.051,452,1.233,453,1.233,454,1.812,455,1.899,456,1.233,457,1,458,1.233,459,1.051,460,1.667,461,1.107,462,1.051,463,1.233,464,1.385,465,1.385,466,1.051,467,1.305,468,1.385,469,1.385,470,2.201,471,1.051,472,1.305,473,1.385,474,1.961,475,1.385,476,1.385,477,1.167,478,1.385,479,1.167,480,1.857,481,2.793,482,2.793,483,3.149,484,2.086,485,1.965,486,1.965,487,2.802,488,1.167,489,1.965,490,1.667,491,2.966,492,2.966,493,1.965,494,1.506]],["title/components/CourseChipComponent.html",[0,0.484,178,1.1]],["body/components/CourseChipComponent.html",[0,0.838,1,0.893,2,0.442,3,0.442,4,0.981,5,1.078,6,1.078,7,0.346,9,0.688,16,2.917,21,1.078,22,2.45,23,2.336,25,1.53,27,1.53,29,1.341,32,2.389,34,2.583,37,1.602,47,0.541,48,1.004,49,2.402,62,1.154,63,0.018,64,1.04,65,0.771,66,0.771,67,0.688,68,0.907,71,1.473,72,1.217,83,2.402,84,0.793,85,0.671,89,1.247,92,1.456,94,0.392,95,0.369,96,1.279,98,1.381,102,0.821,113,4.015,125,1.262,131,1.113,137,2.31,143,1.728,148,1.055,162,0.852,163,0.907,164,1.459,165,1.53,166,1.86,167,1.078,170,1.078,171,0.893,172,1.078,173,0.578,174,1.078,175,0.893,176,0.549,177,1.078,178,1.604,179,1.078,180,0.852,181,1.53,182,0.893,183,1.078,184,0.852,185,0.608,186,1.078,187,0.893,188,1.078,189,0.578,190,1.078,191,0.893,192,1.078,193,0.893,194,1.078,195,0.893,196,1.078,197,0.813,198,1.078,199,0.893,200,1.028,201,1.078,202,0.578,203,0.852,204,1.078,205,0.011,206,0.015,277,0.549,278,1.685,281,1.459,290,2.031,314,2.233,316,1.456,358,1.759,362,2.612,368,1.685,370,2.721,383,1.96,384,1.685,395,0.578,396,1.618,410,2.924,411,2.619,422,2.031,433,2.24,445,1.936,455,0.936,466,1.862,474,2.145,487,2.537,637,4.661,638,5.12,639,2.828,640,4.667,641,6.48,642,4.667,643,6.238,644,6.48,645,5.081,646,5.906,647,1.84,648,4.667,649,3.288,650,4.131,651,4.667,652,4.667,653,3.585,654,4.667,655,3.288,656,3.585,657,3.288,658,3.288,659,3.288,660,3.288,661,3.288,662,3.288,663,3.288,664,5.906,665,4.667,666,2.828,667,4.667,668,3.585,669,3.288,670,3.288,671,3.288,672,3.288,673,3.288,674,3.288,675,3.288,676,2.119,677,3.288,678,2.828,679,1.84,680,2.3,681,2.828,682,4.015,683,3.585]],["title/components/CourseSelectionComponent.html",[0,0.484,180,1.05]],["body/components/CourseSelectionComponent.html",[0,0.644,1,0.632,2,0.313,3,0.313,4,0.694,5,0.763,6,0.763,7,0.465,9,0.631,13,2.526,17,0.702,21,0.763,22,2.335,23,2.226,25,1.184,27,1.184,29,1.093,32,2.286,33,3.233,37,1.708,44,1.184,47,0.331,48,0.431,53,1.303,59,2.324,61,1.259,62,1.472,63,0.018,64,0.894,65,0.949,66,0.708,67,0.295,68,1.157,69,1.319,70,1.947,71,1.837,72,1.215,73,1.304,74,3.019,75,1.521,76,2.021,77,0.98,84,0.669,85,0.475,89,0.883,90,1.501,94,0.278,95,0.261,96,1.613,97,1.303,98,2.902,102,0.635,108,2.388,125,1.203,130,1.788,131,0.855,137,2.67,139,0.523,143,2.324,147,2.774,148,0.86,151,0.929,157,1.952,162,0.603,163,0.969,164,2.087,165,1.184,166,1.486,167,0.763,170,0.763,171,0.632,172,0.763,173,0.409,174,0.763,175,0.632,176,0.739,177,0.763,178,0.632,179,0.763,180,1.291,181,1.184,182,0.632,183,0.763,184,0.603,185,0.431,186,0.763,187,0.632,188,0.763,189,0.409,190,0.763,191,0.632,192,0.763,193,0.632,194,0.763,195,0.632,196,0.763,197,0.575,198,0.763,199,0.632,200,0.728,201,0.763,202,0.409,203,0.603,204,0.763,205,0.016,206,0.013,259,0.763,277,0.389,278,1.597,281,1.129,293,1.686,297,1.129,307,0.893,321,1.628,344,1.394,358,1.353,362,3.444,368,1.304,370,1.516,372,1.787,380,1.788,395,0.409,397,1.397,405,1.146,420,1.184,422,2.296,423,1.678,428,1.799,441,1.597,445,1.871,462,1.44,485,1.787,486,1.787,487,2.33,489,2.467,491,3.348,492,3.304,517,4.702,548,3.392,549,2.774,562,4.493,563,3.476,564,3.678,584,1.788,611,1.501,624,2.003,637,4.785,668,1.788,682,3.106,683,2.774,684,5.256,685,1.788,686,2.774,687,3.611,688,3.106,689,3.106,690,6.457,691,4.984,692,5.394,693,6.154,694,5.394,695,4.423,696,3.828,697,3.611,698,3.611,699,2.003,700,3.611,701,2.328,702,2.526,703,3.611,704,3.611,705,2.327,706,4.984,707,2.328,708,3.476,709,2.526,710,4.984,711,3.611,712,2.328,713,6.154,714,3.611,715,2.774,716,2.003,717,6.154,718,2.328,719,2.328,720,2.328,721,2.328,722,2.328,723,2.328,724,2.328,725,2.328,726,2.328,727,2.328,728,2.328,729,2.328,730,2.003,731,2.328,732,2.328,733,1.628,734,1.628,735,2.328,736,4.423,737,2.328,738,1.788,739,1.788,740,2.328,741,2.328,742,1.303,743,3.611,744,2.328,745,2.328,746,2.328,747,2.328,748,2.328,749,2.328,750,1.788,751,2.328,752,2.328,753,2.328,754,2.328,755,3.611,756,2.003,757,1.788,758,1.501,759,2.328,760,2.328,761,2.328,762,4.423,763,2.328,764,2.328,765,3.611,766,3.611,767,2.328,768,2.328,769,2.328,770,3.611,771,2.328,772,3.611,773,2.328,774,2.328,775,2.328,776,3.398,777,2.328,778,1.688,779,3.611,780,3.611,781,3.611,782,3.611,783,4.984,784,3.611,785,3.611,786,3.611,787,3.611,788,3.611,789,3.611,790,3.611]],["title/injectables/CourseService.html",[32,1.329,269,1.702]],["body/injectables/CourseService.html",[2,0.343,3,0.343,7,0.269,9,0.751,13,2.714,17,0.754,24,1.648,29,1.391,32,1.272,37,1.753,44,1.537,49,1.718,54,2.929,60,2.929,62,1.567,63,0.019,64,0.975,65,0.842,66,0.97,67,0.803,68,1.018,69,1.157,70,1.401,71,1.874,72,1.215,73,1.401,83,1.718,84,0.521,85,0.522,94,0.305,95,0.631,96,1.531,102,0.682,105,1.648,108,1.718,111,2.501,125,1.313,131,1.161,137,1.921,139,0.872,148,1.287,151,2.088,164,1.636,176,0.427,180,1.356,205,0.009,206,0.009,262,1.964,269,1.969,277,0.427,281,1.213,290,1.334,293,1.466,299,2.501,307,1.159,310,2.808,314,2.495,358,1.925,368,2.032,370,1.629,384,1.401,390,2.981,391,4.021,395,0.45,396,1.836,397,1.356,405,1.005,406,2.511,420,0.838,423,2.552,428,1.401,430,1.935,438,2.181,441,1.401,454,1.472,455,1.884,456,2.192,457,1.778,458,2.192,459,1.87,474,2.346,488,1.132,490,2.198,523,2.929,524,1.531,547,1.964,548,1.343,600,3.661,656,4.021,678,2.2,679,1.431,680,3.661,681,2.2,696,1.964,702,3.661,733,1.788,750,4.021,776,4.323,791,2.2,792,3.88,793,3.88,794,3.88,795,2.981,796,5.696,797,5.234,798,5.234,799,5.234,800,5.234,801,5.234,802,3.88,803,3.88,804,3.88,805,3.88,806,3.88,807,3.88,808,3.88,809,2.557,810,3.88,811,2.557,812,3.88,813,3.88,814,3.88,815,2.557,816,3.88,817,3.661,818,3.818,819,3.88,820,2.557,821,4.55,822,5.234,823,5.234,824,4.021,825,3.88,826,2.557,827,4.503,828,3.88,829,2.557,830,2.981,831,3.88,832,2.557,833,3.88,834,2.557,835,2.557,836,2.557,837,2.557,838,2.557,839,2.557,840,2.2,841,3.88,842,2.557,843,2.557,844,2.2,845,2.557,846,2.557,847,3.88,848,1.788,849,4.689,850,2.557,851,2.557,852,2.557,853,2.557,854,2.557,855,2.2,856,2.557,857,2.557,858,3.88,859,2.557,860,2.557,861,4.689,862,5.234,863,2.557,864,2.557,865,2.557,866,2.557,867,2.2,868,2.557,869,2.557,870,2.557,871,2.557,872,2.2,873,2.2,874,2.557,875,2.557,876,2.557,877,3.88,878,4.323,879,3.338,880,2.2,881,2.557,882,4.689,883,2.2,884,4.503,885,2.981,886,3.88,887,2.557,888,1.964,889,2.2]],["title/components/CourseSidebarComponent.html",[0,0.484,182,1.1]],["body/components/CourseSidebarComponent.html",[0,0.79,1,0.954,2,0.472,3,0.472,4,1.048,5,1.152,6,1.152,7,0.369,9,0.713,21,1.152,22,2.469,23,2.362,25,1.603,27,1.603,29,1.39,32,2.38,34,2.627,37,1.58,47,0.557,48,0.904,49,2.49,54,3.403,62,1.209,63,0.018,64,0.913,65,0.799,66,0.799,67,0.713,68,1.32,69,1.907,70,2.452,71,1.954,72,1.231,78,1.153,83,2.49,84,0.817,85,0.717,89,1.332,92,1.555,94,0.419,95,0.548,96,1.326,98,1.475,102,0.86,125,1.069,131,1.013,139,1.367,145,4.206,148,1.182,162,0.91,163,0.951,164,1.758,165,1.603,166,1.814,167,1.152,170,1.152,171,0.954,172,1.152,173,0.618,174,1.152,175,0.954,176,0.587,177,1.152,178,0.954,179,1.152,180,1.656,181,1.603,182,1.651,183,1.152,184,0.91,185,0.65,186,1.152,187,0.954,188,1.152,189,0.618,190,1.152,191,0.954,192,1.152,193,0.954,194,1.152,195,0.954,196,1.152,197,0.868,198,1.152,199,0.954,200,1.098,201,1.152,202,0.618,203,0.91,204,1.152,205,0.012,206,0.012,277,0.587,278,1.765,281,1.529,316,1.555,366,3.964,368,2.031,370,2.779,382,1.328,395,0.618,396,1.458,397,1.267,523,3.148,528,4.838,637,4.629,647,1.966,686,4.321,844,4.206,890,5.085,891,3.022,892,6.619,893,4.89,894,6.393,895,6.081,896,6.081,897,4.89,898,3.513,899,3.513,900,3.513,901,3.513,902,2.928,903,3.513,904,3.513,905,4.89,906,3.513,907,6.393,908,3.513,909,3.022,910,4.89,911,3.513,912,2.699,913,3.513,914,3.513]],["title/interfaces/DiscoverOption.html",[395,0.713,419,1.616]],["body/interfaces/DiscoverOption.html",[2,0.367,3,0.367,7,0.287,9,0.866,12,2.16,17,1.181,45,0.815,47,0.665,48,0.505,63,0.019,64,0.41,65,1.06,66,1.063,67,0.92,72,1.119,75,0.94,77,0.742,78,1.525,84,0.548,94,0.772,95,0.306,102,0.717,125,0.48,129,1.277,131,1.109,132,0.82,139,0.614,148,0.949,157,1.337,163,1.181,173,0.717,176,0.681,185,0.754,189,0.858,202,0.48,205,0.012,206,0.01,243,1.147,258,1.277,259,2.24,277,0.456,292,1.806,293,1.968,297,1.275,307,1.206,314,1.337,348,1.472,358,2.103,360,1.806,363,1.692,364,1.277,376,1.09,382,0.742,383,2.55,384,0.986,395,1.252,396,2.164,397,1.631,402,1.352,403,1.435,404,1.036,405,1.793,406,1.547,407,2.62,408,1.806,409,1.435,410,2.866,411,2.431,412,2.708,413,2.396,414,1.09,415,2.309,416,2.708,417,1.806,418,2.16,419,2.158,420,2.168,421,2.864,422,1.678,423,2.625,424,2.282,425,2.282,426,2.864,427,2.708,428,2.091,429,2.717,430,1.678,431,1.472,432,1.946,433,1.851,434,1.712,435,2.049,436,1.435,437,1.277,438,1.403,439,1.209,440,1.147,441,2.193,442,1.277,443,1.435,444,1.435,445,2.293,446,1.209,447,1.806,448,1.806,449,1.435,450,2.416,451,1.09,452,1.277,453,1.277,454,1.547,455,1.54,456,1.277,457,1.036,458,1.277,459,1.09,460,1.712,461,1.147,462,1.09,463,1.277,464,1.435,465,1.435,466,1.09,467,1.352,468,1.435,469,1.435,470,2.225,471,1.09,472,1.352,473,1.435,474,1.678,475,1.435,476,1.435,477,1.209,478,1.435,479,1.209,480,1.277,481,1.435,482,1.435,483,2.143,484,1.435,485,1.352,486,1.352,487,1.907,488,1.209,489,1.352,490,1.147,491,2.019,492,2.019,493,1.352,494,1.036]],["title/interfaces/EditorTab.html",[395,0.713,435,1.702]],["body/interfaces/EditorTab.html",[2,0.383,3,0.383,7,0.299,9,0.808,12,1.862,17,1.199,45,0.849,47,0.665,48,0.527,63,0.019,64,0.428,65,1.011,66,1.026,67,0.92,72,1.127,75,0.98,77,0.773,78,1.454,84,0.565,94,0.781,95,0.319,102,0.74,125,0.501,129,1.332,131,1.127,132,0.808,139,0.64,148,0.972,157,1.379,163,1.273,173,0.74,176,0.835,185,0.778,189,0.88,202,0.501,205,0.012,206,0.01,243,1.196,258,1.332,259,2.261,277,0.476,292,1.862,293,1.994,297,1.315,307,1.04,314,1.379,348,1.519,358,2.1,360,1.862,363,1.727,364,1.332,376,1.136,382,0.773,383,2.679,384,1.028,395,1.261,396,2.178,397,1.527,402,1.41,403,1.497,404,1.08,405,1.762,406,1.595,407,2.636,408,1.862,409,1.497,410,2.917,411,2.319,412,2.755,413,2.445,414,1.136,415,2.35,416,2.583,417,1.261,418,1.862,419,1.995,420,2.022,421,2.73,422,1.447,423,2.484,424,1.967,425,1.967,426,2.445,427,1.967,428,1.994,429,2.319,430,1.72,431,1.519,432,1.995,433,2.235,434,2.1,435,2.319,436,2.21,437,2.583,438,1.72,439,1.862,440,2.319,441,2.227,442,1.332,443,1.497,444,1.497,445,2.312,446,1.261,447,1.862,448,1.862,449,1.497,450,2.476,451,1.136,452,1.332,453,1.332,454,1.595,455,1.572,456,1.332,457,1.08,458,1.332,459,1.136,460,1.766,461,1.196,462,1.136,463,1.332,464,1.497,465,1.497,466,1.136,467,1.41,468,1.497,469,1.497,470,2.252,471,1.136,472,1.41,473,1.497,474,1.72,475,1.497,476,1.497,477,1.261,478,1.497,479,1.261,480,1.332,481,1.497,482,1.497,483,2.21,484,1.497,485,1.41,486,1.41,487,1.967,488,1.261,489,1.41,490,1.196,491,2.082,492,2.082,493,1.41,494,1.08]],["title/components/ErrorPageComponent.html",[0,0.484,184,1.05]],["body/components/ErrorPageComponent.html",[0,0.817,1,1.164,2,0.576,3,0.576,4,1.279,5,1.406,6,1.406,7,0.451,9,0.543,16,2.616,17,1.087,21,1.406,22,2.52,23,2.403,25,1.834,27,1.834,29,1.539,33,3.755,37,1.06,47,0.512,48,0.793,49,2.756,61,1.877,62,1.06,63,0.018,64,0.935,65,0.61,66,0.795,67,0.789,69,1.668,72,0.987,78,1.319,83,2.756,84,0.751,85,0.876,90,2.764,94,0.512,95,0.481,96,1.011,97,2.4,131,1.084,132,0.709,160,3.131,162,1.111,163,1.087,164,1.749,165,1.834,166,1.968,167,1.406,170,1.406,171,1.164,172,1.406,173,0.754,174,1.406,175,1.164,176,0.716,177,1.406,178,1.164,179,1.406,180,1.111,181,1.834,182,1.164,183,1.406,184,1.709,185,1.41,186,1.406,187,1.164,188,1.406,189,0.754,190,1.406,191,1.164,192,1.406,193,1.164,194,1.406,195,1.164,196,1.406,197,1.06,198,1.406,199,1.164,200,1.341,201,1.406,202,0.754,203,1.111,204,1.406,205,0.013,206,0.013,255,4.615,314,1.834,342,3.131,405,1.709,699,3.689,915,3.689,916,5.594,917,6.843,918,4.289,919,4.297,920,4.297,921,6.598,922,5.594,923,4.289,924,5.594,925,5.594,926,3.35,927,4.297,928,4.289]],["title/interfaces/FixOption.html",[395,0.713,432,1.616]],["body/interfaces/FixOption.html",[2,0.367,3,0.367,7,0.287,9,0.866,12,2.16,17,1.181,45,0.815,47,0.665,48,0.505,63,0.019,64,0.41,65,1.06,66,1.057,67,0.92,72,1.119,75,0.94,77,0.742,78,1.525,84,0.548,94,0.772,95,0.306,102,0.717,125,0.48,129,1.277,131,1.119,132,0.798,139,0.614,148,0.949,157,1.337,163,1.181,173,0.717,176,0.681,185,0.754,189,0.858,202,0.48,205,0.012,206,0.01,243,1.147,258,1.277,259,2.24,277,0.456,292,1.806,293,1.968,297,1.275,307,1.206,314,1.337,348,1.472,358,2.103,360,1.806,363,1.81,364,1.277,376,1.09,382,0.742,383,2.55,384,0.986,395,1.252,396,2.164,397,1.631,402,1.352,403,1.435,404,1.036,405,1.793,406,1.547,407,2.62,408,1.806,409,1.435,410,2.866,411,2.431,412,2.708,413,2.396,414,1.09,415,2.309,416,2.708,417,1.209,418,2.16,419,1.946,420,2.168,421,2.864,422,1.678,423,2.625,424,2.282,425,2.282,426,2.864,427,2.708,428,2.091,429,2.717,430,1.861,431,1.762,432,2.158,433,1.851,434,1.712,435,2.049,436,1.435,437,1.277,438,1.403,439,1.209,440,1.147,441,2.193,442,1.277,443,1.435,444,1.435,445,2.293,446,1.209,447,1.806,448,1.806,449,1.435,450,2.416,451,1.09,452,1.277,453,1.277,454,1.547,455,1.54,456,1.277,457,1.036,458,1.277,459,1.09,460,1.712,461,1.147,462,1.09,463,1.277,464,1.435,465,1.435,466,1.09,467,1.352,468,1.435,469,1.435,470,2.225,471,1.09,472,1.352,473,1.435,474,1.678,475,1.435,476,1.435,477,1.209,478,1.435,479,1.209,480,1.277,481,1.435,482,1.435,483,2.143,484,1.435,485,1.352,486,1.352,487,1.907,488,1.209,489,1.352,490,1.147,491,2.019,492,2.019,493,1.352,494,1.036]],["title/modules/HomePageModule.html",[207,1.537,217,2.612]],["body/modules/HomePageModule.html",[2,0.65,3,0.65,7,0.508,47,0.443,55,2.896,63,0.018,66,0.687,68,0.94,84,1.019,85,0.988,88,2.141,94,0.823,95,0.542,114,1.929,162,1.253,171,2.069,173,1.273,184,1.974,185,0.895,197,1.79,202,1.273,205,0.014,206,0.014,207,2.291,209,2.707,210,4.245,211,3.117,217,4.976,220,3.893,225,4.225,226,4.225,231,2.141,244,4.161,250,3.715,251,3.383,252,3.715,254,3.383,255,3.383,256,4.161,342,2.707,374,2.541,414,1.929,929,4.161,930,4.161,931,4.161,932,4.161,933,4.64,934,3.383,935,4.64,936,4.837,937,4.837,938,5.666,939,5.666]],["title/interfaces/Issue.html",[131,0.642,395,0.713]],["body/interfaces/Issue.html",[2,0.36,3,0.36,7,0.282,9,0.793,12,1.78,17,1.117,45,0.8,47,0.663,48,0.496,63,0.019,64,0.403,65,1.039,66,1.055,67,0.926,72,1.115,75,0.922,77,0.728,78,1.422,84,0.54,94,0.768,95,0.301,102,0.707,125,0.471,129,1.254,131,1.158,132,0.815,139,0.603,148,1.042,157,1.318,163,1.323,173,0.707,176,0.672,185,0.744,189,0.943,202,0.471,205,0.013,206,0.01,243,1.126,258,1.254,259,2.231,277,0.448,292,1.78,293,1.796,297,1.257,307,0.994,314,1.977,348,2.178,358,2.096,360,1.78,363,1.676,364,1.88,376,1.069,382,1.092,383,2.763,384,0.968,395,1.237,396,2.18,397,1.736,402,1.327,403,1.409,404,1.017,405,1.823,406,1.525,407,2.613,408,1.78,409,1.409,410,2.985,411,2.251,412,2.686,413,2.967,414,1.069,415,2.749,416,2.507,417,1.187,418,1.78,419,1.925,420,1.883,421,2.848,422,1.383,423,2.44,424,1.88,425,1.88,426,2.374,427,1.88,428,1.936,429,2.251,430,1.844,431,1.452,432,2.138,433,1.83,434,1.689,435,2.026,436,1.409,437,1.254,438,1.383,439,1.187,440,1.126,441,2.178,442,1.254,443,1.409,444,1.409,445,2.285,446,1.187,447,1.78,448,1.78,449,1.409,450,2.654,451,1.069,452,1.254,453,1.254,454,1.83,455,1.635,456,1.88,457,1.525,458,1.88,459,1.604,460,2.026,461,1.689,462,1.604,463,1.88,464,2.113,465,2.817,466,1.604,467,1.991,468,2.113,469,2.817,470,2.213,471,1.069,472,1.327,473,1.409,474,1.66,475,1.409,476,1.409,477,1.187,478,1.409,479,1.187,480,1.254,481,1.409,482,1.409,483,2.113,484,1.409,485,1.327,486,1.327,487,1.88,488,1.187,489,1.327,490,1.126,491,1.991,492,1.991,493,1.327,494,1.017]],["title/components/IssueCardComponent.html",[0,0.484,187,1.1]],["body/components/IssueCardComponent.html",[0,0.85,1,0.905,2,0.448,3,0.448,4,0.994,5,1.092,6,1.092,7,0.624,9,0.597,19,4.053,21,1.092,22,2.454,23,2.34,25,1.545,27,1.545,29,1.351,32,2.358,37,1.654,47,0.432,48,1.011,49,2.086,62,0.824,63,0.018,64,0.821,65,1.022,66,0.67,67,0.825,68,1.063,69,1.63,70,2.263,71,1.484,72,1.031,84,0.734,85,0.68,89,1.264,94,0.398,95,0.613,96,0.786,102,1.045,119,2.203,125,1.102,131,1.129,132,0.881,162,0.863,163,0.916,164,2.035,165,1.545,166,1.772,167,1.092,170,1.092,171,0.905,172,1.092,173,0.586,174,1.092,175,0.905,176,0.556,177,1.092,178,0.905,179,1.092,180,0.863,181,1.545,182,0.905,183,1.092,184,0.863,185,0.616,186,1.092,187,1.613,188,1.092,189,0.586,190,1.092,191,0.905,192,1.092,193,1.484,194,1.092,195,0.905,196,1.092,197,0.824,198,1.092,199,0.905,200,1.042,201,1.092,202,0.586,203,0.863,204,1.092,205,0.011,206,0.011,207,2.254,272,3.619,277,0.556,278,1.701,281,1.473,312,3.829,316,1.475,358,0.905,368,1.203,382,1.279,384,1.701,395,0.586,396,1.63,405,1.539,406,2.672,407,1.701,422,1.88,438,1.62,445,1.545,446,2.775,447,2.086,454,1.787,455,2.005,470,2.156,472,2.941,474,1.62,477,2.086,495,3.195,523,2.637,542,2.821,548,2.475,562,3.829,563,2.147,564,3.037,647,1.865,683,3.619,818,3.829,821,3.619,827,4.053,940,4.092,941,5.249,942,2.866,943,6.269,944,4.711,945,4.711,946,6.269,947,6.508,948,5.942,949,6.269,950,4.711,951,3.332,952,3.332,953,3.332,954,4.711,955,4.711,956,3.332,957,4.711,958,4.053,959,5.466,960,3.295,961,3.332,962,3.619,963,3.332,964,3.332,965,3.332,966,3.332,967,4.564,968,5.111,969,3.619,970,3.332,971,3.332,972,3.332,973,3.332,974,3.332,975,3.332,976,3.332,977,3.332,978,3.332,979,3.332,980,3.332,981,4.053,982,4.053,983,3.619]],["title/components/IssueContainerComponent.html",[0,0.484,189,0.713]],["body/components/IssueContainerComponent.html",[0,0.699,1,0.606,2,0.3,3,0.3,4,1.284,5,0.731,6,0.731,7,0.234,9,0.67,21,0.731,22,2.318,23,2.237,25,1.145,27,1.145,29,1.064,32,1.989,34,2.223,37,1.656,44,1.411,45,0.665,47,0.514,48,0.413,49,1.906,54,1.955,61,0.994,62,1.307,63,0.019,64,0.937,65,0.797,66,0.907,67,0.824,68,1.09,69,1.453,70,2.19,71,0.948,72,0.929,78,1.148,83,1.906,84,0.71,85,0.456,86,1.835,89,0.846,92,0.988,94,0.266,95,0.741,96,1.322,97,1.249,98,0.937,102,0.757,108,0.988,125,1.251,131,1.206,137,1.104,139,1.095,143,1.172,146,1.249,148,0.947,151,0.89,162,0.578,163,1.028,164,1.753,165,1.145,166,1.453,167,0.731,170,0.731,171,0.606,172,0.731,173,0.392,174,0.731,175,0.606,176,0.719,177,0.731,178,0.606,179,0.731,180,0.578,181,1.145,182,0.606,183,0.731,184,0.578,185,0.413,186,0.731,187,0.606,188,0.731,189,0.856,190,0.731,191,0.606,192,0.731,193,0.606,194,0.731,195,0.606,196,0.731,197,0.552,198,0.731,199,0.606,200,0.698,201,0.731,202,0.392,203,0.578,204,0.731,205,0.008,206,0.008,273,1.955,277,0.937,281,1.092,290,1.481,293,1.346,312,2.251,314,2.166,344,2.916,348,1.261,356,3.698,358,1.732,362,1.955,363,1.523,368,1.758,372,2.131,382,1.523,384,1.261,388,1.561,390,2.683,391,2.683,395,0.392,396,1.577,397,1.262,405,1.653,406,1.325,407,1.554,412,1.633,415,0.89,420,1.145,421,2.156,422,1.481,423,1.633,428,1.758,430,2.304,432,0.89,433,1.847,434,2.355,438,1.675,440,0.937,441,1.261,450,1.104,454,1.325,456,2.472,457,2.42,458,2.916,459,2.338,463,2.013,470,1.201,474,1.201,493,2.411,494,0.846,495,3.17,501,3.703,509,4.19,524,1.336,534,2.683,538,2.443,548,1.835,560,1.955,561,2.683,562,3.777,563,2.251,564,2.774,600,2.443,612,1.714,679,3.57,708,3.139,733,1.561,778,1.633,818,2.251,872,3.005,873,3.005,879,1.919,883,1.919,884,1.919,888,1.714,909,3.005,926,2.092,927,2.683,940,4.06,983,2.683,984,5.208,985,3.493,986,5.287,987,4.87,988,4.87,989,4.87,990,3.493,991,3.493,992,4.87,993,3.493,994,3.493,995,4.87,996,3.493,997,5.607,998,2.231,999,2.231,1000,2.231,1001,3.493,1002,2.092,1003,3.493,1004,3.493,1005,5.287,1006,2.231,1007,5.287,1008,3.493,1009,2.231,1010,2.231,1011,2.231,1012,3.493,1013,2.231,1014,3.493,1015,3.493,1016,3.493,1017,3.493,1018,2.231,1019,4.87,1020,2.231,1021,3.493,1022,3.005,1023,2.683,1024,3.493,1025,2.683,1026,2.231,1027,2.231,1028,2.231,1029,2.231,1030,2.231,1031,2.231,1032,2.231,1033,2.231,1034,2.231,1035,2.231,1036,2.231,1037,2.231,1038,4.305,1039,2.231,1040,1.714,1041,2.231,1042,2.231,1043,2.231,1044,2.231,1045,3.493,1046,2.231,1047,2.231,1048,2.231,1049,2.231,1050,3.493,1051,6.502,1052,3.493,1053,2.231,1054,2.231,1055,2.231,1056,2.231,1057,2.231,1058,2.231,1059,2.231,1060,2.231,1061,1.919,1062,2.231,1063,2.231,1064,3.005,1065,3.005,1066,4.87,1067,4.87]],["title/components/IssueDetailsComponent.html",[0,0.484,191,1.1]],["body/components/IssueDetailsComponent.html",[0,0.811,1,1.14,2,0.564,3,0.564,4,1.252,5,1.376,6,1.376,7,0.441,9,0.699,21,1.376,22,2.515,23,2.398,25,1.808,27,1.808,29,1.523,32,2.449,37,1.363,47,0.505,48,0.776,49,2.897,62,1.038,63,0.018,64,0.925,65,0.784,66,0.784,67,0.884,68,1.198,69,1.837,70,2.224,71,1.845,72,1.106,83,2.897,84,0.741,85,0.857,89,1.592,94,0.501,95,0.471,96,0.99,102,0.97,131,1.216,148,1.072,162,1.087,163,1.072,164,1.724,165,1.808,166,1.951,167,1.376,170,1.376,171,1.14,172,1.376,173,0.738,174,1.376,175,1.14,176,0.701,177,1.376,178,1.14,179,1.376,180,1.087,181,1.808,182,1.14,183,1.376,184,1.087,185,0.776,186,1.376,187,1.14,188,1.376,189,0.97,190,1.376,191,1.777,192,1.376,193,1.14,194,1.376,195,1.14,196,1.376,197,1.038,198,1.376,199,1.14,200,1.312,201,1.376,202,0.738,203,1.087,204,1.376,205,0.013,206,0.013,277,0.701,278,1.991,316,1.858,348,1.991,372,3.239,382,1.498,396,1.645,405,1.429,455,1.569,479,2.442,495,2.881,647,2.349,940,3.689,1068,4.732,1069,3.611,1070,5.516,1071,6.976,1072,4.197,1073,4.197,1074,4.197,1075,4.745,1076,5.516]],["title/interfaces/IssueItem.html",[395,0.713,455,1.153]],["body/interfaces/IssueItem.html",[2,0.369,3,0.369,7,0.289,9,0.799,12,1.812,17,1.128,45,0.819,47,0.665,48,0.757,63,0.019,64,0.412,65,1.032,66,1.02,67,0.909,72,1.129,75,1.408,77,0.746,78,1.435,84,0.55,94,0.773,95,0.308,102,0.72,125,0.483,129,1.284,131,1.157,132,0.839,139,0.617,148,0.952,157,1.342,163,1.183,173,0.72,176,0.684,185,0.757,189,0.861,202,0.483,205,0.012,206,0.01,243,1.153,258,1.914,259,2.336,277,0.459,292,1.812,293,1.814,297,1.28,307,1.012,314,1.342,348,1.478,358,2.101,360,1.812,363,1.696,364,1.284,376,1.095,382,0.746,383,2.555,384,0.991,395,1.243,396,2.205,397,1.503,402,1.359,403,1.443,404,1.042,405,1.746,406,1.553,407,2.622,408,1.812,409,1.443,410,3.012,411,2.278,412,2.948,413,2.402,414,1.095,415,2.314,416,2.537,417,1.216,418,1.812,419,1.952,420,1.902,421,2.694,422,1.408,423,2.458,424,1.914,425,1.914,426,2.402,427,1.914,428,1.959,429,2.278,430,1.684,431,1.767,432,1.952,433,1.857,434,1.719,435,2.055,436,1.443,437,1.284,438,1.408,439,1.216,440,1.153,441,2.339,442,1.284,443,1.443,444,1.443,445,2.393,446,1.216,447,2.167,448,2.167,449,1.443,450,2.423,451,1.095,452,1.284,453,1.284,454,1.553,455,1.651,456,1.284,457,1.042,458,1.284,459,1.095,460,2.055,461,1.153,462,1.095,463,1.284,464,1.443,465,1.443,466,1.095,467,1.359,468,1.443,469,1.443,470,2.468,471,1.633,472,2.026,473,2.851,474,2.168,475,2.851,476,2.851,477,1.812,478,1.443,479,1.812,480,1.284,481,1.443,482,1.443,483,2.151,484,1.443,485,1.359,486,1.359,487,1.914,488,1.216,489,1.359,490,1.153,491,2.026,492,2.026,493,1.359,494,1.042]],["title/components/IssueListComponent.html",[0,0.484,193,1.1]],["body/components/IssueListComponent.html",[0,0.783,1,1.025,2,0.507,3,0.507,4,1.126,5,1.238,6,1.238,7,0.397,9,0.651,21,1.238,22,2.488,23,2.373,25,1.684,27,1.684,29,1.444,32,2.409,37,1.673,44,1.238,47,0.574,48,0.698,60,3.509,61,1.462,62,0.933,63,0.018,64,0.985,65,0.891,66,0.73,68,1.135,69,1.742,70,2.109,71,1.781,72,1.179,84,0.784,85,0.771,89,1.432,94,0.45,95,0.423,96,0.89,102,0.903,106,4.42,125,0.903,131,1.172,137,2.891,148,0.999,162,0.978,163,0.999,164,1.606,165,1.684,166,1.87,167,1.238,170,1.238,171,1.025,172,1.238,173,0.664,174,1.238,175,1.025,176,0.63,177,1.238,178,1.025,179,1.238,180,0.978,181,1.684,182,1.025,183,1.238,184,0.978,185,0.698,186,1.238,187,1.025,188,1.238,189,0.664,190,1.238,191,1.025,192,1.238,193,1.702,194,1.238,195,1.025,196,1.238,197,0.933,198,1.238,199,1.025,200,1.18,201,1.238,202,0.664,203,0.978,204,1.238,205,0.012,206,0.012,277,0.63,278,1.855,281,1.606,297,1.606,307,0.933,316,1.671,368,1.363,395,0.664,396,1.126,405,1.331,431,1.855,441,1.855,455,1.784,459,2.049,470,1.767,474,2.009,488,1.671,495,3.237,562,4.041,563,2.433,564,3.311,647,2.113,778,2.402,926,3.076,927,3.947,940,4.146,1077,5.318,1078,3.247,1079,5.138,1080,5.138,1081,6.27,1082,6.27,1083,5.393,1084,6.27,1085,5.138,1086,3.775,1087,3.775,1088,3.775,1089,6.27,1090,3.775,1091,3.775,1092,3.775,1093,5.841,1094,5.138,1095,5.138,1096,3.775,1097,3.775,1098,3.775,1099,5.138,1100,5.138,1101,5.138,1102,5.138]],["title/components/IssueNavComponent.html",[0,0.484,195,1.1]],["body/components/IssueNavComponent.html",[0,0.68,1,0.715,2,0.354,3,0.354,4,0.785,5,0.863,6,0.863,7,0.277,9,0.673,16,1.855,17,0.771,21,0.863,22,2.379,23,2.269,25,1.3,27,1.3,29,1.18,32,2.251,33,3.648,34,2.634,37,1.649,44,0.863,47,0.569,48,0.883,52,2.556,59,2.084,61,1.358,62,1.18,63,0.018,64,0.856,65,0.851,66,0.755,67,0.759,68,1.35,69,1.786,70,2.31,71,1.84,72,1.17,73,1.723,74,2.973,75,1.641,76,2.671,77,1.296,78,1.125,84,0.835,85,0.81,89,0.998,90,1.697,92,1.165,94,0.314,95,0.295,96,1.508,102,0.697,111,1.697,125,1.253,131,1.177,132,0.503,139,1.347,148,1.297,154,1.303,162,0.682,163,0.771,164,1.24,165,1.3,166,1.989,167,0.863,170,0.863,171,0.715,172,0.863,173,0.463,174,0.863,175,0.715,176,0.44,177,0.863,178,0.715,179,0.863,180,0.682,181,1.3,182,0.715,183,0.863,184,0.682,185,0.487,186,0.863,187,0.715,188,0.863,189,0.463,190,0.863,191,0.715,192,0.863,193,0.715,194,0.863,195,1.442,196,0.863,197,0.651,198,0.863,199,0.715,200,0.823,201,0.863,202,0.463,203,0.682,204,0.863,205,0.009,206,0.009,231,2.752,277,0.44,278,2.31,281,1.24,290,1.641,299,2.556,307,0.651,310,3.587,316,1.165,344,2.375,348,1.432,351,4.081,353,4.081,354,4.081,356,2.774,360,1.756,366,3.413,367,4.915,368,1.918,370,2.393,373,2.022,374,3.266,375,3.047,376,2.119,382,1.442,396,1.423,405,1.028,412,2.484,430,2.2,455,1.928,457,2.272,471,1.582,488,1.165,495,3.168,647,1.473,679,2.22,680,2.774,855,3.412,912,2.022,940,4.057,981,3.412,982,3.412,983,3.047,1075,2.264,1083,3.412,1103,5.205,1104,2.264,1105,3.966,1106,3.966,1107,3.966,1108,5.312,1109,3.966,1110,3.966,1111,2.632,1112,2.632,1113,5.699,1114,5.699,1115,3.966,1116,3.966,1117,2.632,1118,2.632,1119,3.966,1120,2.632,1121,2.632,1122,2.632,1123,2.632,1124,2.632,1125,2.264,1126,2.264,1127,4.105,1128,4.105,1129,2.632,1130,3.412,1131,2.632,1132,2.632,1133,2.632,1134,3.966,1135,2.632,1136,2.632,1137,2.632,1138,5.312,1139,3.966,1140,3.966,1141,3.966,1142,3.966,1143,3.966,1144,4.57,1145,3.966,1146,3.966,1147,3.966,1148,3.966,1149,1.841,1150,2.264,1151,2.632,1152,1.383,1153,2.632,1154,3.047,1155,2.632,1156,2.632,1157,2.632,1158,2.632,1159,2.632,1160,2.632,1161,2.632,1162,2.632,1163,3.966,1164,3.966,1165,3.412]],["title/injectables/KatanaService.html",[33,2.129,269,1.702]],["body/injectables/KatanaService.html",[2,0.289,3,0.289,7,0.226,9,0.431,17,1.124,18,1.682,24,1.388,29,1.04,31,3.354,32,1.965,33,1.785,34,2.273,35,3.863,36,3.039,37,1.561,42,2.355,44,1.705,45,1.013,47,0.634,54,1.902,56,1.132,59,3.039,60,2.91,61,0.967,62,1.366,63,0.019,64,0.83,65,0.852,66,0.944,67,0.605,68,1.228,69,1.425,70,1.227,71,1.5,72,1.128,73,1.227,74,1.902,76,1.902,77,1.96,78,0.801,79,2.61,81,0.642,82,2.674,83,1.863,84,0.805,85,0.44,86,2.51,88,0.954,89,0.817,91,1.853,92,0.954,93,1.507,94,0.257,95,0.242,96,1.454,97,1.206,98,2.183,102,0.598,108,2.796,111,1.388,112,5.156,114,1.355,115,4.244,116,5.168,119,2.234,121,2.923,125,1.264,129,1.007,131,1.021,137,1.682,139,0.946,143,2.903,146,1.206,147,2.61,148,1.228,151,2.46,154,2.735,185,1.191,205,0.008,206,0.008,230,1.853,269,1.767,273,1.206,276,2.51,277,0.36,278,1.227,281,1.062,290,2.172,297,0.673,299,2.19,307,0.84,311,4.473,314,1.38,321,1.507,329,1.853,330,3.864,358,1.627,360,1.504,362,2.674,363,1.062,366,2.861,368,1.227,370,2.006,372,1.066,382,0.923,397,1.431,413,0.954,417,1.504,418,1.504,430,1.788,431,1.725,441,1.227,445,1.566,448,1.504,451,2.307,457,0.817,460,1.427,461,1.427,466,1.355,467,1.682,470,2.061,494,1.596,517,2.19,524,2.035,535,1.427,584,2.61,611,3.079,650,2.377,676,2.19,679,1.206,696,2.61,742,1.206,776,3.67,824,2.61,848,1.507,912,2.61,958,4.753,960,4.314,1061,1.853,1144,1.853,1150,4.753,1166,1.853,1167,4.777,1168,3.398,1169,3.398,1170,3.398,1171,4.777,1172,3.398,1173,2.154,1174,4.777,1175,3.398,1176,4.208,1177,2.61,1178,3.398,1179,2.154,1180,3.398,1181,2.154,1182,3.398,1183,2.154,1184,3.398,1185,2.154,1186,2.923,1187,2.154,1188,3.398,1189,2.154,1190,3.398,1191,4.777,1192,3.398,1193,4.777,1194,2.154,1195,2.943,1196,3.62,1197,2.154,1198,4.208,1199,1.206,1200,4.208,1201,2.154,1202,2.154,1203,2.154,1204,3.232,1205,3.67,1206,4.777,1207,4.777,1208,2.154,1209,4.777,1210,3.398,1211,2.154,1212,2.154,1213,2.377,1214,2.154,1215,5.525,1216,5.525,1217,3.398,1218,2.154,1219,4.777,1220,3.398,1221,2.154,1222,2.154,1223,3.398,1224,2.154,1225,2.154,1226,2.154,1227,3.398,1228,2.154,1229,3.398,1230,5.525,1231,4.777,1232,2.61,1233,2.61,1234,2.61,1235,2.154,1236,3.398,1237,2.154,1238,2.19,1239,2.154,1240,1.655,1241,1.655,1242,2.154,1243,1.853,1244,1.655,1245,2.154,1246,2.154,1247,2.154,1248,2.154,1249,1.655,1250,1.388,1251,1.655,1252,3.398,1253,3.398,1254,3.398,1255,3.398,1256,4.208,1257,2.154,1258,1.507,1259,5.783,1260,3.398,1261,2.61,1262,3.398,1263,2.923,1264,3.398,1265,3.398,1266,3.398,1267,4.777,1268,3.398,1269,2.154,1270,3.398,1271,3.398,1272,2.923,1273,2.154,1274,2.154,1275,2.154,1276,2.154,1277,2.154,1278,2.154,1279,2.154,1280,2.154,1281,1.655,1282,3.398,1283,2.154,1284,2.154,1285,2.154,1286,2.154,1287,2.154,1288,2.154,1289,2.154]],["title/classes/OptionModel.html",[95,0.454,415,1.616]],["body/classes/OptionModel.html",[2,0.641,3,0.641,7,0.501,9,0.759,29,1.618,37,1.618,39,3.351,44,1.563,45,1.786,62,1.179,63,0.018,64,0.716,65,0.678,66,1.096,67,0.759,68,1.164,84,0.641,94,0.569,95,0.671,96,1.124,102,1.053,125,1.053,151,1.902,189,1.053,197,1.48,205,0.014,206,0.014,273,2.669,277,0.796,281,1.872,290,2.432,307,1.179,344,4.321,363,1.872,396,2.244,413,3.13,414,1.902,415,2.388,421,3.195,1290,4.102,1291,5.987,1292,5.987,1293,5.987,1294,4.599,1295,6.864,1296,5.987,1297,5.987,1298,4.769,1299,5.987,1300,5.987,1301,6.544,1302,4.769,1303,4.769,1304,4.769,1305,4.769,1306,5.987,1307,4.769,1308,4.769]],["title/components/OptionsViewComponent.html",[0,0.484,197,1.002]],["body/components/OptionsViewComponent.html",[0,0.754,1,0.751,2,0.372,3,0.372,4,0.825,5,0.907,6,0.907,7,0.291,9,0.69,13,2.879,16,1.925,17,1.059,18,2.038,21,0.907,22,2.396,23,2.285,25,1.35,27,1.35,29,1.215,31,3.713,32,2.175,33,3.718,34,2.66,37,1.694,44,0.907,45,1.228,47,0.595,48,0.909,53,2.304,61,1.656,62,0.684,63,0.018,64,0.738,65,0.898,66,1.059,67,0.856,68,1.262,69,1.736,70,2.102,71,1.657,72,1.122,73,1.775,74,2.751,75,1.691,76,2.751,77,1.335,78,1.159,84,0.891,85,0.565,88,1.225,89,1.049,90,1.783,92,1.225,94,0.33,95,0.462,96,1.439,98,1.728,102,0.724,119,2.853,125,1.111,131,0.922,132,0.69,137,1.369,148,0.8,162,0.717,163,0.8,164,1.287,165,1.35,166,1.736,167,0.907,170,0.907,171,0.751,172,0.907,173,0.486,174,0.907,175,0.751,176,0.462,177,0.907,178,0.751,179,0.907,180,0.717,181,1.35,182,0.751,183,0.907,184,0.717,185,0.512,186,0.907,187,0.751,188,0.907,189,0.486,190,0.907,191,0.751,192,0.907,193,0.751,194,0.907,195,0.751,196,0.907,197,1.346,198,0.907,199,0.751,200,0.865,201,0.907,202,0.486,203,0.717,204,0.907,205,0.01,206,0.01,231,2.798,253,5.33,254,4.853,259,2,277,0.462,278,2.102,281,1.287,290,1.691,293,1.537,301,2.125,307,0.684,310,3.654,314,1.35,316,1.225,321,1.935,342,3.883,351,4.183,353,4.183,354,4.183,356,2.879,366,3.486,367,5.33,368,2.203,370,2.654,373,2.125,374,3.32,375,3.162,376,2.172,378,3.541,382,1.118,388,1.935,395,0.486,396,0.825,405,1.066,413,2.99,414,1.103,415,2.693,417,1.822,418,1.822,419,2.172,421,2.701,426,2.411,428,1.486,438,1.416,494,1.561,523,2.304,535,1.728,543,3.162,611,1.783,686,2.125,742,2.304,756,4.684,902,2.465,1064,3.541,1065,3.541,1127,4.229,1128,4.229,1165,3.541,1263,2.38,1309,2.125,1310,3.541,1311,3.541,1312,5.445,1313,5.445,1314,4.116,1315,2.766,1316,2.766,1317,4.116,1318,2.766,1319,3.162,1320,3.162,1321,4.116,1322,4.116,1323,2.766,1324,2.766,1325,2.766,1326,2.766,1327,2.766,1328,2.766,1329,2.766,1330,2.766,1331,2.766,1332,2.766,1333,2.766,1334,2.766,1335,2.766,1336,2.766,1337,2.766,1338,2.766,1339,2.766,1340,2.766,1341,2.766,1342,2.766,1343,2.766,1344,2.766,1345,2.766,1346,2.766,1347,4.116,1348,3.541,1349,4.116]],["title/modules/SidebarModule.html",[207,1.537,218,2.612]],["body/modules/SidebarModule.html",[2,0.691,3,0.691,7,0.54,55,3.079,63,0.018,68,1,72,1.073,84,1.009,85,1.05,88,2.276,94,0.841,95,0.576,114,2.051,162,1.332,178,1.996,180,1.904,182,2.085,205,0.015,206,0.015,207,2.379,209,2.878,210,4.363,211,3.314,218,4.93,220,4.043,225,4.387,226,4.387,231,2.276,252,3.95,374,2.702,638,3.95,684,3.95,890,3.95,933,4.818,934,3.596,935,4.818,1350,4.423,1351,4.423,1352,4.423,1353,5.142,1354,5.142,1355,5.142]],["title/components/StatBadgeComponent.html",[0,0.484,199,1.1]],["body/components/StatBadgeComponent.html",[0,0.806,1,1.117,2,0.553,3,0.553,4,1.227,5,1.349,6,1.349,7,0.432,9,0.521,21,1.349,22,2.51,23,2.394,25,1.785,27,1.785,29,1.669,37,1.669,44,1.785,47,0.499,48,0.761,63,0.018,64,0.818,65,0.923,66,0.585,72,0.967,84,0.553,85,0.84,94,0.491,95,0.461,131,1.07,162,1.066,163,1.058,164,1.702,165,1.785,166,1.936,167,1.349,170,1.349,171,1.117,172,1.349,173,0.724,174,1.349,175,1.117,176,0.687,177,1.349,178,1.117,179,1.349,180,1.066,181,1.785,182,1.117,183,1.349,184,1.066,185,0.761,186,1.349,187,1.117,188,1.349,189,0.724,190,1.349,191,1.117,192,1.349,193,1.117,194,1.349,195,1.117,196,1.349,197,1.017,198,1.349,199,1.763,200,2.212,201,1.349,202,0.724,203,1.066,204,1.349,205,0.013,206,0.013,277,0.687,307,1.346,358,1.884,382,1.478,405,1.861,407,2.505,422,2.098,454,2.065,474,2.471,495,3.244,817,3.807,888,4.182,1356,5.968,1357,5.329,1358,3.539,1359,6.938,1360,5.444,1361,5.444,1362,5.444,1363,4.723,1364,7.076,1365,7.076,1366,6.1,1367,5.444,1368,4.182,1369,4.115,1370,4.115,1371,4.115,1372,4.115,1373,4.115,1374,4.115,1375,4.115]],["title/injectables/ToastService.html",[35,2.612,269,1.702]],["body/injectables/ToastService.html",[2,0.592,3,0.592,7,0.463,9,0.799,17,1.374,20,4.896,24,2.839,29,1.706,35,3.668,37,1.559,52,3.668,62,1.407,63,0.019,64,0.855,66,0.809,68,1.106,73,2.055,77,1.196,79,5.658,80,6.08,84,0.764,85,0.899,86,2.314,94,0.526,95,0.494,96,1.342,100,5.424,115,3.384,116,3.384,125,1.172,185,1.362,205,0.013,206,0.013,231,1.95,269,2.648,277,0.736,281,2.084,358,1.196,366,2.638,368,2.055,374,2.314,397,1.141,405,1.888,423,2.681,451,2.962,676,4.448,733,3.081,795,5.43,848,3.081,880,3.789,1196,4.896,1243,3.789,1272,4.896,1376,3.789,1377,5.692,1378,5.692,1379,4.405,1380,5.692,1381,4.405,1382,5.692,1383,4.405,1384,5.692,1385,4.405,1386,4.405,1387,6.306,1388,5.692,1389,4.405,1390,4.405,1391,4.405,1392,4.405,1393,5.692,1394,5.692,1395,5.692,1396,5.692,1397,4.405,1398,4.405]],["title/interfaces/Tool.html",[47,0.371,395,0.713]],["body/interfaces/Tool.html",[2,0.353,3,0.353,7,0.276,9,0.858,12,1.753,17,1.208,45,1.181,47,0.682,48,0.486,63,0.019,64,0.394,65,1.049,66,1.052,67,0.928,72,1.111,75,0.903,77,1.075,78,1.507,84,0.532,94,0.763,95,0.295,102,0.696,125,0.462,129,1.852,131,1.12,132,0.829,139,0.591,148,0.927,157,1.298,163,1.208,173,0.838,176,0.661,185,0.732,189,1.001,202,0.696,205,0.011,206,0.009,243,1.103,258,1.228,259,2.335,277,0.439,292,2.11,293,1.78,297,1.238,307,0.979,314,1.298,348,1.43,358,2.107,360,1.753,363,1.871,364,1.228,376,1.579,382,0.713,383,2.685,384,0.948,395,1.243,396,2.152,397,1.475,402,1.3,403,1.38,404,0.996,405,1.798,406,2.16,407,2.605,408,2.521,409,1.38,410,2.962,411,2.391,412,2.799,413,2.349,414,1.048,415,2.271,416,2.799,417,1.163,418,1.753,419,2.609,420,1.867,421,2.65,422,1.362,423,2.425,424,1.852,425,1.852,426,2.349,427,1.852,428,1.916,429,2.228,430,1.825,431,1.43,432,2.609,433,2.013,434,2.001,435,2.685,436,1.38,437,1.228,438,1.639,439,1.163,440,1.103,441,2.407,442,2.481,443,2.081,444,2.081,445,2.298,446,1.753,447,2.11,448,2.11,449,1.38,450,2.359,451,1.579,452,1.852,453,2.481,454,1.502,455,1.51,456,1.228,457,0.996,458,1.228,459,1.048,460,1.663,461,1.103,462,1.048,463,1.228,464,1.38,465,1.38,466,1.048,467,1.3,468,1.38,469,1.38,470,2.199,471,1.048,472,1.3,473,1.38,474,1.639,475,1.38,476,1.38,477,1.163,478,1.38,479,1.163,480,1.228,481,1.38,482,1.38,483,2.081,484,1.38,485,1.3,486,1.3,487,1.852,488,1.163,489,1.3,490,1.103,491,1.96,492,1.96,493,1.3,494,0.996]],["title/modules/ToolPageModule.html",[207,1.537,219,2.612]],["body/modules/ToolPageModule.html",[2,0.625,3,0.625,7,0.489,47,0.426,55,2.785,63,0.018,68,0.904,84,1.027,85,0.95,88,2.059,94,0.772,95,0.521,114,1.855,131,1.112,162,1.205,175,1.947,176,0.777,187,1.947,189,1.261,191,1.947,193,1.947,195,1.947,199,1.947,200,1.454,203,1.858,205,0.014,206,0.014,207,2.235,209,2.603,210,4.169,211,2.997,219,5,220,3.798,225,4.122,226,4.122,231,2.059,246,2.997,249,3.253,250,3.572,374,2.443,414,1.855,495,2.175,497,3.572,932,4.001,933,4.527,934,3.253,935,4.527,938,5.565,939,5.565,941,3.572,984,3.572,1068,3.572,1077,3.572,1103,3.572,1357,3.572,1399,4.001,1400,4.001,1401,4.651,1402,4.651,1403,4.651,1404,4.651,1405,4.651,1406,4.651,1407,4.651]],["title/components/ToolSelectionComponent.html",[0,0.484,202,0.713]],["body/components/ToolSelectionComponent.html",[0,0.812,1,1.146,2,0.567,3,0.567,4,1.259,5,1.384,6,1.384,7,0.444,9,0.701,21,1.384,22,2.516,23,2.4,25,1.815,27,1.815,29,1.527,32,2.368,34,2.836,37,1.368,47,0.697,48,1.143,49,2.735,62,1.043,63,0.018,64,0.928,65,0.787,66,0.787,67,0.783,68,1.324,69,2.031,70,2.458,71,1.897,72,1.079,78,1.457,83,2.735,84,0.83,85,0.862,89,1.601,92,1.869,94,0.504,95,0.473,96,1.305,98,1.772,102,0.973,131,1.079,162,1.094,163,1.076,164,1.731,165,1.815,166,1.956,167,1.384,170,1.384,171,1.146,172,1.384,173,0.742,174,1.384,175,1.146,176,0.705,177,1.384,178,1.146,179,1.384,180,1.094,181,1.815,182,1.146,183,1.384,184,1.094,185,0.781,186,1.384,187,1.146,188,1.384,189,0.742,190,1.384,191,1.146,192,1.384,193,1.146,194,1.384,195,1.146,196,1.384,197,1.043,198,1.384,199,1.146,200,1.32,201,1.384,202,1.153,203,1.094,204,1.384,205,0.013,206,0.013,246,3.982,251,4.321,277,0.705,278,1.999,316,1.869,342,3.457,388,2.952,400,4.762,401,4.762,685,3.243,688,4.762,689,5.857,716,3.631,1195,3.872,1408,4.221]],["title/injectables/ToolService.html",[34,1.537,269,1.702]],["body/injectables/ToolService.html",[2,0.456,3,0.456,7,0.357,9,0.605,17,1.44,18,2.363,24,2.188,29,1.365,30,2.608,31,3.764,34,1.811,37,1.798,44,2.07,45,1.424,47,0.703,48,0.883,53,3.353,59,2.509,60,2.672,62,1.365,63,0.019,64,0.829,65,0.976,66,0.956,67,0.759,69,1.787,70,1.724,71,1.864,77,1.296,78,1.619,84,0.742,85,0.693,88,1.503,94,0.405,95,0.381,96,0.801,97,1.9,102,0.84,108,2.652,124,4.107,125,1.054,132,0.605,139,1.472,148,1.335,151,1.354,163,1.165,176,0.797,205,0.011,206,0.011,259,2.428,269,2.319,277,0.567,293,2.047,297,2.047,307,1.561,358,1.499,368,1.724,382,1.296,383,2.005,392,2.921,395,0.597,399,4.107,405,1.237,406,2.272,407,2.163,408,2.652,417,2.114,428,2.364,451,1.904,470,1.642,542,2.859,547,3.668,734,3.339,840,2.921,848,2.375,1195,3.339,1213,4.191,1368,3.668,1409,2.921,1410,5.991,1411,5.991,1412,5.991,1413,5.991,1414,5.991,1415,3.395,1416,3.395,1417,3.395,1418,3.668,1419,3.395,1420,4.107,1421,4.774,1422,4.107,1423,3.395,1424,4.774,1425,4.774,1426,3.395,1427,4.774,1428,3.395,1429,4.774,1430,3.395,1431,3.395,1432,4.107,1433,4.774,1434,3.395,1435,3.395,1436,3.395,1437,4.774,1438,3.395,1439,3.395,1440,3.395,1441,3.395,1442,6.313,1443,3.395,1444,5.522,1445,6.313,1446,3.395,1447,5.522,1448,4.774,1449,3.395,1450,3.395,1451,4.774,1452,3.395,1453,4.774,1454,3.395,1455,4.774,1456,4.774]],["title/components/ToolViewComponent.html",[0,0.484,203,1.05]],["body/components/ToolViewComponent.html",[0,0.793,1,1.065,2,0.527,3,0.527,4,1.169,5,1.285,6,1.285,7,0.412,9,0.668,21,1.285,22,2.498,23,2.382,25,1.728,27,1.728,29,1.472,32,2.424,34,2.822,37,1.574,47,0.688,48,1.229,62,0.969,63,0.018,64,0.894,65,0.846,66,0.749,68,1.33,69,2.041,70,2.47,71,1.898,72,1.141,78,1.404,84,0.8,85,0.801,89,1.487,92,1.736,94,0.468,95,0.44,96,1.243,102,0.927,111,2.527,125,1.203,131,1.108,137,2.609,148,1.359,162,1.016,163,1.025,164,1.648,165,1.728,166,1.899,167,1.285,170,1.285,171,1.065,172,1.285,173,0.689,174,1.285,175,1.065,176,0.655,177,1.285,178,1.065,179,1.285,180,1.016,181,1.728,182,1.065,183,1.285,184,1.016,185,0.725,186,1.285,187,1.065,188,1.285,189,0.689,190,1.285,191,1.065,192,1.285,193,1.065,194,1.285,195,1.065,196,1.285,197,0.969,198,1.285,199,1.065,200,1.226,201,1.285,202,0.689,203,1.65,204,1.285,205,0.012,206,0.012,246,4.283,249,4.647,277,0.655,278,2.399,281,1.648,316,1.736,382,1.431,431,1.903,438,1.813,455,1.116,495,3.107,645,5.478,647,2.194,656,4.049,680,3.687,796,4.535,867,3.373,1130,3.373,1309,3.012,1310,4.535,1311,4.535,1457,3.921,1458,3.921,1459,3.921,1460,3.921,1461,3.921,1462,3.921,1463,5.271,1464,5.271]],["title/coverage.html",[1465,4.636]],["body/coverage.html",[0,0.915,1,1.192,7,0.461,8,3.776,32,1.439,33,2.306,34,1.665,35,2.829,36,2.306,47,0.402,63,0.018,65,0.624,72,0.696,95,0.492,131,0.696,171,1.192,173,0.772,175,1.192,178,1.192,180,1.137,182,1.192,184,1.137,187,1.192,189,0.772,191,1.192,193,1.192,195,1.192,197,1.085,199,1.192,202,0.772,203,1.137,205,0.013,206,0.013,240,2.628,246,3.66,249,3.07,251,3.07,253,3.372,254,3.07,255,3.972,259,1.439,269,2.895,270,3.776,290,1.51,342,3.858,343,3.776,381,3.776,395,1.281,402,3.605,411,1.843,415,1.751,419,1.751,432,1.751,435,1.843,455,1.249,495,3.406,496,3.776,497,3.372,498,3.776,612,3.372,637,4.403,638,3.372,639,3.776,684,3.372,685,4.362,705,2.829,791,3.776,890,3.372,891,3.776,915,3.776,940,4.128,941,3.372,942,3.776,984,3.372,1068,3.372,1069,3.776,1077,3.372,1078,3.776,1103,3.372,1104,3.776,1166,3.776,1290,3.776,1309,4.362,1356,3.776,1357,3.372,1358,3.776,1376,3.776,1409,3.776,1465,3.776,1466,2.306,1467,4.389,1468,7.792,1469,4.389,1470,6.295,1471,6.894,1472,5.679,1473,4.389,1474,3.776,1475,3.07,1476,4.389,1477,5.679,1478,4.389,1479,4.389,1480,5.679,1481,5.679,1482,4.389,1483,6.656,1484,4.389,1485,4.389,1486,4.389,1487,5.679,1488,4.389,1489,4.389,1490,4.389,1491,4.389,1492,4.389,1493,4.389,1494,4.389,1495,4.389]],["title/dependencies.html",[209,2.706,1496,2.974]],["body/dependencies.html",[63,0.018,75,1.745,81,1.855,85,1.036,88,2.245,160,2.839,205,0.015,206,0.015,209,2.839,223,5.351,224,4.778,228,4.363,231,2.754,232,4.363,233,4.778,235,3.896,374,3.686,397,1.314,414,2.023,445,1.663,934,3.548,1023,3.896,1125,4.363,1126,5.351,1186,4.363,1420,4.363,1497,5.072,1498,7.55,1499,5.072,1500,5.072,1501,5.072,1502,5.072,1503,5.072,1504,5.072,1505,5.072,1506,5.072,1507,6.22,1508,5.072,1509,5.072,1510,5.072,1511,5.072,1512,5.072,1513,5.072,1514,5.072,1515,5.072,1516,5.072,1517,2.839,1518,5.072,1519,5.072,1520,5.072,1521,3.896,1522,5.072,1523,5.072,1524,5.072,1525,5.072,1526,5.072,1527,5.072,1528,6.22,1529,5.072,1530,6.22,1531,5.072,1532,5.072,1533,5.072,1534,5.072,1535,5.072,1536,5.072,1537,5.072,1538,5.072,1539,5.072,1540,5.072,1541,5.072,1542,5.072,1543,5.072,1544,5.072,1545,5.072,1546,5.072]],["title/index.html",[277,0.577,750,2.656,1238,2.228]],["body/index.html",[7,0.532,45,1.511,47,0.569,56,2.661,61,1.913,63,0.016,67,0.888,68,0.985,70,1.829,77,1.688,81,1.854,119,2.906,139,1.397,154,2.507,205,0.015,206,0.015,240,3.033,276,2.661,297,1.584,344,4.309,395,0.891,404,1.921,420,1.661,445,2.038,460,2.127,499,3.265,535,2.823,560,2.835,778,3.278,795,3.891,824,3.891,968,4.357,1023,4.774,1152,3.266,1199,2.835,1238,3.265,1244,3.891,1250,3.265,1466,3.266,1475,3.543,1547,5.784,1548,4.357,1549,5.065,1550,6.215,1551,5.065,1552,4.357,1553,5.784,1554,5.065,1555,5.065,1556,5.065,1557,5.065,1558,5.065,1559,5.065,1560,5.065,1561,4.347,1562,6.215,1563,7.011,1564,5.065,1565,5.065,1566,5.065,1567,5.065,1568,5.065,1569,6.724,1570,5.065,1571,5.065,1572,5.065,1573,3.265,1574,4.357,1575,5.065,1576,5.065,1577,3.891,1578,4.774,1579,5.065,1580,5.065,1581,1.742,1582,5.065,1583,5.065,1584,5.065,1585,5.065,1586,5.065,1587,5.065,1588,5.065,1589,5.065,1590,5.065,1591,5.347,1592,5.065,1593,3.891,1594,3.891,1595,7.011,1596,3.891]],["title/modules.html",[207,2.044]],["body/modules.html",[63,0.016,205,0.016,206,0.016,207,2.246,208,4.142,217,3.817,218,3.817,219,3.817,224,5.67,1597,7.381,1598,7.381,1599,7.381]],["title/overview.html",[1600,2.832]],["body/overview.html",[0,0.56,1,1.981,36,3.413,55,2.809,63,0.018,68,0.912,94,0.56,95,0.526,114,1.871,162,1.215,171,1.981,173,1.142,175,1.764,178,1.764,180,1.683,182,1.981,184,1.89,187,1.764,189,1.142,191,1.764,193,1.764,195,1.764,197,1.605,199,1.764,202,1.142,203,1.683,205,0.014,206,0.014,207,2.247,208,5.331,209,2.626,210,3.024,211,3.024,212,4.036,213,4.036,214,4.036,215,4.036,216,4.036,217,4.947,218,4.837,219,4.995,220,3.819,269,1.97,395,0.825,600,3.281,668,3.604,889,4.036,929,4.036,930,4.036,931,4.036,1350,4.036,1351,4.036,1352,4.036,1399,4.036,1400,4.036,1600,2.465,1601,4.691,1602,4.691]],["title/miscellaneous/variables.html",[1475,3.382,1603,2.974]],["body/miscellaneous/variables.html",[44,1.888,61,2.021,63,0.018,65,0.818,67,0.73,81,2.001,82,3.222,205,0.016,206,0.016,240,4.253,277,0.962,307,1.423,397,1.739,1250,3.711,1474,4.953,1475,4.027,1603,4.953,1604,5.758,1605,5.758,1606,5.758,1607,5.758,1608,5.758,1609,5.758,1610,5.758,1611,5.758,1612,5.758,1613,5.758,1614,5.758,1615,5.758,1616,5.758]],["title/additional-documentation/architecture.html",[132,0.438,1581,1.189,1596,2.656]],["body/additional-documentation/architecture.html",[63,0.016,77,1.621,205,0.016,206,0.016,1422,5.134,1466,3.6,1596,5.263,1600,3.136,1617,4.792,1618,5.969,1619,5.969,1620,5.969,1621,4.585,1622,4.175,1623,5.134,1624,4.175]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.818,132,0.382,1581,1.037,1624,2.108]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.016,77,1.876,205,0.016,206,0.016,363,1.893,404,2.297,1617,4.235,1624,4.832]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,132,0.304,430,0.825,431,0.866,1581,0.825,1625,2.064]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.63,63,0.017,67,0.761,205,0.016,206,0.016,430,2.066,431,2.169,1002,4.118,1573,3.872,1625,5.916,1626,6.007]],["title/additional-documentation/architecture/data-flow-diagram.html",[132,0.339,960,1.868,1581,0.919,1621,2.052,1627,2.298]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.016,205,0.016,206,0.016]],["title/additional-documentation/architecture/high-level-overview.html",[132,0.339,1581,0.919,1600,1.404,1622,1.868,1623,2.298]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.016,205,0.016,206,0.016]],["title/additional-documentation/setup.html",[132,0.438,1152,1.816,1581,1.189]],["body/additional-documentation/setup.html",[17,1.131,39,3.257,47,0.618,52,3.751,61,1.656,63,0.016,81,2.128,139,1.309,157,1.908,161,3.058,205,0.016,206,0.016,290,2.002,297,2.23,363,1.82,471,2.321,499,3.751,535,2.444,558,4.471,1002,4.044,1152,3.058,1466,3.548,1617,4.071,1628,5.007,1629,5.82,1630,5.007,1631,4.471,1632,4.471]],["title/additional-documentation/setup/setting-up-firebase.html",[81,0.797,132,0.339,139,0.601,535,1.122,1581,0.919]],["body/additional-documentation/setup/setting-up-firebase.html",[4,1.161,7,0.516,9,0.89,12,0.848,16,1.447,17,1.154,18,0.949,39,1.732,42,2.936,44,0.628,45,1.161,46,4.03,47,0.683,48,0.354,59,1.007,60,1.732,61,0.545,63,0.018,64,0.737,65,0.962,66,1.062,67,0.665,68,0.954,69,0.572,71,1.424,72,0.617,73,2.52,74,3.09,75,1.537,78,1.054,96,1.497,102,0.786,105,1.235,108,2.172,114,0.764,119,1.821,125,0.863,131,1.125,132,0.752,139,1.37,143,3.841,146,1.072,148,0.954,151,0.764,161,1.626,163,1.273,166,1.333,176,0.517,205,0.007,206,0.007,207,0.727,231,0.848,243,0.805,259,1.465,276,1.626,289,2.165,290,2.22,292,0.848,293,1.217,295,1.148,297,1.217,307,0.765,314,1.465,330,2.165,348,2.393,358,1.906,362,3.906,363,1.948,370,0.805,382,1.057,384,0.692,397,1.894,404,1.174,405,1.696,406,1.861,407,2.485,408,1.37,411,1.3,416,1.821,419,1.783,420,1.945,422,1.976,423,2.542,424,2.294,425,2.294,426,1.979,427,1.447,429,2.616,430,2.441,431,2.364,432,2.092,433,1.477,434,1.635,435,1.877,437,0.896,438,1.899,439,1.37,440,0.805,441,1.614,442,1.447,445,2.239,446,1.979,447,1.37,448,0.848,451,0.764,452,1.447,453,0.896,454,1.695,455,1.907,457,1.861,459,1.234,460,1.3,461,1.877,462,1.553,470,2.428,471,1.234,474,0.659,477,0.848,479,2.444,480,0.896,490,1.635,494,1.174,515,2.378,517,2.881,518,1.472,523,1.732,524,3.142,525,1.472,535,1.3,538,1.34,542,1.148,555,1.472,578,1.34,601,2.378,619,4.241,650,3.126,653,1.472,676,1.995,679,3.216,705,1.995,708,1.995,709,3.861,715,5.092,734,2.165,738,1.472,739,1.472,742,1.072,757,3.768,758,1.995,817,3.431,818,3.558,830,1.472,878,1.472,885,2.378,902,1.853,920,2.991,926,1.148,962,1.472,967,3.434,969,2.378,1002,3.649,1025,1.472,1149,2.165,1152,1.007,1154,2.378,1177,1.472,1204,2.378,1205,3.434,1213,2.165,1232,2.378,1233,2.378,1234,2.378,1238,1.235,1240,1.472,1241,1.472,1249,2.378,1250,1.235,1251,2.378,1258,1.34,1261,1.472,1281,3.434,1294,1.472,1320,1.472,1363,1.34,1418,1.472,1466,1.007,1517,2.501,1521,1.472,1561,3.126,1573,2.509,1577,1.472,1578,2.378,1593,3.768,1600,1.007,1622,1.34,1631,1.472,1632,1.472,1633,6.251,1634,1.649,1635,2.662,1636,1.649,1637,1.649,1638,2.662,1639,4.241,1640,1.649,1641,1.649,1642,1.649,1643,1.649,1644,2.662,1645,1.649,1646,1.649,1647,3.845,1648,1.649,1649,2.662,1650,1.649,1651,1.649,1652,2.662,1653,1.649,1654,1.649,1655,1.649,1656,3.349,1657,2.662,1658,2.662,1659,1.649,1660,1.649,1661,2.662,1662,1.649,1663,1.649,1664,1.649,1665,1.649,1666,1.649,1667,2.662,1668,1.649,1669,1.649,1670,1.649,1671,1.472,1672,1.649,1673,2.662,1674,4.22,1675,1.649,1676,1.649,1677,2.662,1678,4.22,1679,3.434,1680,2.662,1681,1.649,1682,1.649,1683,3.349,1684,2.662,1685,3.349,1686,2.662,1687,1.649,1688,1.649,1689,1.649,1690,2.662,1691,2.662,1692,1.649,1693,2.662,1694,2.662,1695,6.04,1696,1.649,1697,2.662,1698,1.649,1699,1.649,1700,1.649,1701,1.649,1702,1.649,1703,1.649,1704,1.649,1705,4.22,1706,1.649,1707,1.649,1708,2.662,1709,1.649,1710,1.649,1711,1.649,1712,2.662,1713,1.649,1714,1.649,1715,1.472,1716,1.649,1717,1.649,1718,1.649,1719,1.34,1720,1.649,1721,1.649,1722,1.649,1723,1.649,1724,1.649,1725,1.649,1726,1.649,1727,1.649,1728,1.649,1729,1.649,1730,1.649]],["title/additional-documentation/setup/development-environment.html",[132,0.382,240,1.805,778,1.409,1581,1.037]],["body/additional-documentation/setup/development-environment.html",[63,0.016,205,0.016,206,0.016,240,3.65,778,2.85,1600,3.202]],["title/additional-documentation/setup/node-tools.html",[47,0.276,132,0.382,1002,1.805,1581,1.037]],["body/additional-documentation/setup/node-tools.html",[4,1.161,7,0.516,9,0.89,12,0.848,16,1.447,17,1.154,18,0.949,39,1.732,42,2.936,44,0.628,45,1.161,46,4.03,47,0.683,48,0.354,59,1.007,60,1.732,61,0.545,63,0.018,64,0.737,65,0.962,66,1.062,67,0.665,68,0.954,69,0.572,71,1.424,72,0.617,73,2.52,74,3.09,75,1.537,78,1.054,96,1.497,102,0.786,105,1.235,108,2.172,114,0.764,119,1.821,125,0.863,131,1.125,132,0.752,139,1.37,143,3.841,146,1.072,148,0.954,151,0.764,161,1.626,163,1.273,166,1.333,176,0.517,205,0.007,206,0.007,207,0.727,231,0.848,243,0.805,259,1.465,276,1.626,289,2.165,290,2.22,292,0.848,293,1.217,295,1.148,297,1.217,307,0.765,314,1.465,330,2.165,348,2.393,358,1.906,362,3.906,363,1.948,370,0.805,382,1.057,384,0.692,397,1.894,404,1.174,405,1.696,406,1.861,407,2.485,408,1.37,411,1.3,416,1.821,419,1.783,420,1.945,422,1.976,423,2.542,424,2.294,425,2.294,426,1.979,427,1.447,429,2.616,430,2.441,431,2.364,432,2.092,433,1.477,434,1.635,435,1.877,437,0.896,438,1.899,439,1.37,440,0.805,441,1.614,442,1.447,445,2.239,446,1.979,447,1.37,448,0.848,451,0.764,452,1.447,453,0.896,454,1.695,455,1.907,457,1.861,459,1.234,460,1.3,461,1.877,462,1.553,470,2.428,471,1.234,474,0.659,477,0.848,479,2.444,480,0.896,490,1.635,494,1.174,515,2.378,517,2.881,518,1.472,523,1.732,524,3.142,525,1.472,535,1.3,538,1.34,542,1.148,555,1.472,578,1.34,601,2.378,619,4.241,650,3.126,653,1.472,676,1.995,679,3.216,705,1.995,708,1.995,709,3.861,715,5.092,734,2.165,738,1.472,739,1.472,742,1.072,757,3.768,758,1.995,817,3.431,818,3.558,830,1.472,878,1.472,885,2.378,902,1.853,920,2.991,926,1.148,962,1.472,967,3.434,969,2.378,1002,3.649,1025,1.472,1149,2.165,1152,1.007,1154,2.378,1177,1.472,1204,2.378,1205,3.434,1213,2.165,1232,2.378,1233,2.378,1234,2.378,1238,1.235,1240,1.472,1241,1.472,1249,2.378,1250,1.235,1251,2.378,1258,1.34,1261,1.472,1281,3.434,1294,1.472,1320,1.472,1363,1.34,1418,1.472,1466,1.007,1517,2.501,1521,1.472,1561,3.126,1573,2.509,1577,1.472,1578,2.378,1593,3.768,1600,1.007,1622,1.34,1631,1.472,1632,1.472,1633,6.251,1634,1.649,1635,2.662,1636,1.649,1637,1.649,1638,2.662,1639,4.241,1640,1.649,1641,1.649,1642,1.649,1643,1.649,1644,2.662,1645,1.649,1646,1.649,1647,3.845,1648,1.649,1649,2.662,1650,1.649,1651,1.649,1652,2.662,1653,1.649,1654,1.649,1655,1.649,1656,3.349,1657,2.662,1658,2.662,1659,1.649,1660,1.649,1661,2.662,1662,1.649,1663,1.649,1664,1.649,1665,1.649,1666,1.649,1667,2.662,1668,1.649,1669,1.649,1670,1.649,1671,1.472,1672,1.649,1673,2.662,1674,4.22,1675,1.649,1676,1.649,1677,2.662,1678,4.22,1679,3.434,1680,2.662,1681,1.649,1682,1.649,1683,3.349,1684,2.662,1685,3.349,1686,2.662,1687,1.649,1688,1.649,1689,1.649,1690,2.662,1691,2.662,1692,1.649,1693,2.662,1694,2.662,1695,6.04,1696,1.649,1697,2.662,1698,1.649,1699,1.649,1700,1.649,1701,1.649,1702,1.649,1703,1.649,1704,1.649,1705,4.22,1706,1.649,1707,1.649,1708,2.662,1709,1.649,1710,1.649,1711,1.649,1712,2.662,1713,1.649,1714,1.649,1715,1.472,1716,1.649,1717,1.649,1718,1.649,1719,1.34,1720,1.649,1721,1.649,1722,1.649,1723,1.649,1724,1.649,1725,1.649,1726,1.649,1727,1.649,1728,1.649,1729,1.649,1730,1.649]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[81,0.797,132,0.339,157,0.876,161,1.404,1581,0.919]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.274,18,2.737,61,1.864,63,0.015,71,2.03,73,1.996,78,1.304,81,2.252,82,3.908,132,0.701,139,1.243,154,2.737,157,2.451,160,3.667,161,3.873,205,0.016,206,0.016,273,3.667,276,2.905,290,1.901,433,2.649,490,2.321,535,2.321,549,4.247,560,3.094,595,3.867,621,4.756,778,2.585,821,4.247,1363,3.867,1368,4.247,1594,4.247,1715,4.247,1731,4.756,1732,6.007,1733,6.552,1734,5.529,1735,4.756]],["title/additional-documentation/firebase.html",[81,1.031,132,0.438,1581,1.189]],["body/additional-documentation/firebase.html",[63,0.016,73,2.111,81,2.231,82,3.273,139,1.522,205,0.016,206,0.016,348,2.111,499,4.364,535,2.843,548,3.072,560,3.273,1199,3.273,1432,5.03,1466,3.558,1517,3.273,1561,4.09,1617,4.09,1736,5.848,1737,5.848,1738,5.848,1739,5.848,1740,4.09,1741,4.09]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.899,82,1.687,132,0.382,1581,1.037]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.873,17,1.354,39,2.782,47,0.455,53,2.782,54,2.782,56,2.612,61,2.075,63,0.014,67,0.907,78,1.172,81,2.077,82,4.08,130,5.123,132,0.845,133,3.819,154,3.301,155,4.489,156,5.297,157,2.507,158,4.276,160,2.782,161,2.612,205,0.015,206,0.015,273,3.439,274,4.276,275,5.736,276,3.66,290,2.113,295,3.679,297,2.178,370,2.087,372,2.461,420,1.63,499,3.204,535,2.8,554,4.276,578,3.477,579,3.819,595,3.477,702,3.477,709,3.477,742,2.782,778,2.325,1022,4.276,1149,3.477,1258,3.477,1319,3.819,1348,5.285,1552,4.276,1600,2.612,1621,3.819,1627,4.276,1639,4.72,1719,3.477,1731,5.285,1732,4.276,1742,4.971,1743,4.971,1744,4.971,1745,4.971,1746,4.971,1747,4.971,1748,4.971,1749,4.971,1750,4.971,1751,4.971,1752,6.144,1753,4.276,1754,4.971,1755,4.971,1756,6.144,1757,4.276,1758,4.971,1759,4.971,1760,4.971]],["title/additional-documentation/firebase/database-structure.html",[132,0.382,1199,1.687,1581,1.037,1740,2.108]],["body/additional-documentation/firebase/database-structure.html",[9,0.632,17,1.356,42,2.793,47,0.564,61,2.077,63,0.014,67,0.846,69,1.992,77,1.672,81,1.837,86,2.622,114,2.457,119,2.88,148,1.419,154,3.661,155,4.306,157,1.636,205,0.015,206,0.015,301,3.834,372,2.471,376,2.664,383,2.096,395,0.878,397,1.293,404,1.893,407,1.802,429,2.096,455,1.42,462,2.457,466,2.95,494,1.893,542,2.989,543,3.834,548,2.622,552,4.294,558,3.834,560,3.739,579,3.834,611,3.217,705,3.97,730,4.294,758,3.97,778,2.334,919,5.606,1040,3.834,1152,2.622,1195,4.308,1199,4.139,1319,3.834,1466,3.236,1517,2.793,1548,4.294,1574,4.294,1624,3.491,1630,5.747,1679,3.834,1719,3.491,1735,4.294,1740,4.672,1741,4.672,1753,4.294,1761,4.991,1762,4.991,1763,4.991,1764,6.159,1765,6.159,1766,4.991,1767,4.991,1768,4.991,1769,4.991,1770,4.991,1771,4.294,1772,4.991,1773,4.991,1774,4.991,1775,4.294,1776,4.991]],["title/additional-documentation/firebase/firestore-wrapper.html",[132,0.382,1517,1.687,1581,1.037,1741,2.108]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.752,17,1.154,23,1.47,45,1.403,47,0.431,48,0.87,50,4.046,61,1.689,62,1.467,63,0.016,67,0.944,68,0.914,69,1.939,73,2.667,75,2.041,76,2.632,78,1.399,81,1.403,94,0.561,98,1.975,114,1.876,119,2.199,125,1.143,141,4.046,146,3.639,151,2.367,154,3.716,160,2.632,176,0.786,205,0.014,206,0.015,276,2.471,278,1.698,281,1.855,299,3.031,312,3.031,368,2.466,372,2.938,376,2.367,397,1.769,404,1.784,429,1.975,461,2.492,466,1.876,471,1.876,548,3.417,561,3.613,666,4.046,702,3.289,742,2.632,758,3.031,778,2.199,902,2.816,919,4.995,926,2.816,960,5.166,1152,2.471,1199,4.024,1496,4.046,1517,3.941,1547,5.105,1573,3.031,1591,5.105,1594,3.613,1628,4.046,1671,3.613,1740,4.151,1741,5.166,1757,4.046,1771,4.046,1775,5.105,1777,4.703,1778,4.703,1779,4.703,1780,5.935,1781,4.703,1782,4.703,1783,4.703,1784,4.703,1785,4.703,1786,6.503,1787,4.703,1788,4.703,1789,4.703,1790,4.703,1791,4.703,1792,4.703,1793,4.703,1794,5.935,1795,4.703,1796,4.703,1797,4.703,1798,4.703,1799,6.503,1800,5.935,1801,4.703,1802,4.703,1803,4.703,1804,4.703,1805,4.703]],["title/additional-documentation/firebase/firebase-functions.html",[73,1.088,81,0.899,132,0.382,1581,1.037]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.708,16,2.612,17,1.282,53,3.126,54,3.126,61,1.59,63,0.015,67,0.708,68,1.086,73,2.705,76,3.126,81,2.204,86,3.464,119,2.612,148,1.282,155,4.249,156,3.907,157,2.375,160,3.126,205,0.016,206,0.016,273,3.126,295,3.345,420,1.831,428,2.017,534,4.291,535,2.346,536,4.805,560,3.69,595,4.611,708,3.6,902,3.345,1040,4.291,1199,3.126,1244,4.291,1553,5.671,1806,5.586,1807,5.586,1808,5.586,1809,5.586,1810,5.586,1811,5.586,1812,5.586]],["title/routes.html",[41,3.474]],["body/routes.html",[41,3.941,63,0.016,205,0.016,206,0.016]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["0",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1397,"title":{},"body":{"injectables/ToastService.html":{}}}],["17",{"_index":1601,"title":{},"body":{"overview.html":{}}}],["2",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["24a36",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3.3.1",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":889,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1398,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1602,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["_blank",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_log(collectiontitl",{"_index":1804,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1410,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1411,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1162,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1161,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["ac",{"_index":500,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":680,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1143,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1463,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":157,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":785,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1581,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":1776,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1633,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1712,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1714,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alter",{"_index":1642,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1745,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1742,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["angular",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1681,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1593,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["approut",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1596,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1349,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":493,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1731,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["b",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["background",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1360,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1406,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1361,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1362,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1358,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1370,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1369,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1371,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1367,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1357,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1572,"title":{},"body":{"index.html":{}}}],["befor",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behavior",{"_index":1640,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["behind",{"_index":1675,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1639,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1631,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1769,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1157,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1158,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":909,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1294,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":345,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":349,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":171,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1556,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1599,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":344,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1384,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1547,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["c.id",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1165,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1571,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1678,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1683,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1710,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1693,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1654,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1402,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":259,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["categories'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":173,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1343,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1342,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1521,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1697,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chip",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1355,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:19",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:27",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:33",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:41",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:57",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":638,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":426,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1066,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["choos",{"_index":1657,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chosen",{"_index":1429,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":95,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1389,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["clickabl",{"_index":1668,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1565,"title":{},"body":{"index.html":{}}}],["close",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1762,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1163,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":929,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1350,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1351,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1352,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1399,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1400,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditor",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["codeeditorcompon",{"_index":175,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1746,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1805,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1582,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compodoc",{"_index":1619,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1685,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1594,"title":{},"body":{"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(",{"_index":1287,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1385,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1296,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1405,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:117",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:131",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:141",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:145",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":999,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:31",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:46",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:66",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:81",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:98",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1348,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1577,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":272,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":788,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":790,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":682,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":786,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":787,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1061,"title":{},"body":{"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1462,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":789,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1727,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursechipcompon",{"_index":178,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":895,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":783,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":180,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":982,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1099,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1100,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":182,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["cover",{"_index":1617,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1465,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1758,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1662,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1667,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":960,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["data.st",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1199,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1620,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["datatyp",{"_index":1765,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1786,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1644,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1553,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deprec",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["describ",{"_index":1573,"title":{},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1648,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":348,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1403,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1070,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1071,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1069,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1072,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1073,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1068,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":778,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1621,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["differ",{"_index":1652,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["direct",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1578,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":431,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover(canvasitem",{"_index":1680,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1645,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":419,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1388,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1579,"title":{},"body":{"index.html":{}}}],["div",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["divid",{"_index":1634,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["do",{"_index":1424,"title":{},"body":{"injectables/ToolService.html":{}}}],["document",{"_index":1466,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.getelementbyid(\"download",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1396,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1420,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":676,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1390,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1392,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1393,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["earlier",{"_index":1724,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1778,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1766,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1407,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":498,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:109",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:136",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":497,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":435,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1796,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1703,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":161,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["end",{"_index":1584,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1624,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1717,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":240,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/development-environment.html":{}}}],["err",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":184,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["even",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ex",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exist",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["explain",{"_index":1638,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["export",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1790,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1800,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1718,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":779,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["feedback",{"_index":347,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1455,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1670,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1663,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1154,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1723,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase.auth",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["firestor",{"_index":1741,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1788,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1784,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1787,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fit",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":430,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix(canvasitem",{"_index":1691,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1626,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1655,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1285,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1690,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1713,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":432,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1591,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1627,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1561,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["for/fix",{"_index":1643,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["form",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1301,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1293,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1308,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":938,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1702,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1647,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["four",{"_index":1789,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1551,"title":{},"body":{"index.html":{}}}],["front",{"_index":1583,"title":{},"body":{"index.html":{}}}],["full",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1586,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1808,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1749,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":750,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1083,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1434,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1438,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1564,"title":{},"body":{"index.html":{}}}],["github",{"_index":1781,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["given",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["gmail",{"_index":1754,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1391,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1303,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1306,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["handleeditorsessionvalu",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["handleeditorsessionvalues(ev",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["header",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1291,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":494,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1664,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1622,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["highlight",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":217,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1763,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlelement",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["icon",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1559,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1689,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["identifi",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idtoken",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1692,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["imag",{"_index":1695,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1709,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1700,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1706,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1699,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1698,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1707,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":277,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["infinit",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1798,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":269,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('highlight",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('index",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('sid",{"_index":1375,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1373,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1372,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1374,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1563,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instanceof",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1751,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["instructor",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1550,"title":{},"body":{"index.html":{}}}],["integr",{"_index":499,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":395,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1799,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["isad",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":131,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1282,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1283,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1708,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1284,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":679,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":983,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":187,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":189,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1074,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":191,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":455,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":678,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues[0].html.updatedhtml",{"_index":1063,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issueitem.item_id",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1686,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":981,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1081,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":193,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1082,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":195,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":681,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1418,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1768,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1387,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1739,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1618,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["katana/server/node_tool",{"_index":1721,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1725,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1734,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["last",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1421,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1585,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1677,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1548,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["letter",{"_index":1650,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1623,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["lighten",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1595,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1401,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1079,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1080,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1078,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":1085,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:23",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:30",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":1086,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1077,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1449,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1451,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1453,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1587,"title":{},"body":{"index.html":{}}}],["locat",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["log",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logic",{"_index":1674,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["loguserstatu",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1802,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1432,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1752,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1774,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1425,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1560,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1555,"title":{},"body":{"index.html":{}}}],["major",{"_index":1673,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["manual",{"_index":1760,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1554,"title":{},"body":{"index.html":{}}}],["master",{"_index":782,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["materi",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["maxlin",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1095,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["meet",{"_index":1684,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1733,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["middlewar",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1687,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":887,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1603,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1705,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["modal",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1312,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":207,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1711,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["more",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1164,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1701,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mute",{"_index":1592,"title":{},"body":{"index.html":{}}}],["n",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1404,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1104,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1103,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1716,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1666,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1629,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["next",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["ng",{"_index":1575,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":1002,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["node_tool_template.j",{"_index":1722,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1567,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1729,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1728,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1730,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1755,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["normal",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["nosql",{"_index":1764,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1671,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1779,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1377,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1569,"title":{},"body":{"index.html":{}}}],["null",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["numer",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1058,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object:const",{"_index":1726,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1628,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1159,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1084,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1313,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1317,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":683,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["opportun",{"_index":1748,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1065,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1305,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1064,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":415,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1704,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1344,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":197,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1658,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{}}}],["outsid",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":907,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":908,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1600,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1812,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1496,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":132,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":916,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":915,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":343,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:21",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:15",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:24",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:32",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":496,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1356,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["persist",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1797,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1359,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1456,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1422,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1589,"title":{},"body":{"index.html":{}}}],["posit",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1688,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1632,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pre",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1412,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1576,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1679,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1574,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["project",{"_index":1732,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1783,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["pull",{"_index":1641,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["purpos",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1300,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1757,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.2",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["rc.8.1",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1292,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":939,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["recommend",{"_index":1803,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":274,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1682,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1810,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1736,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.highlight",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1694,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":784,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":896,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1566,"title":{},"body":{"index.html":{}}}],["repres",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1785,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1696,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resid",{"_index":1635,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolv",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1809,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1368,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"routes.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1735,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["save",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1427,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section",{"_index":1656,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1646,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1433,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1443,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1413,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1437,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1446,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1408,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1102,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1782,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/node_tool",{"_index":1636,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["server/settings.json",{"_index":1590,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1771,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1167,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1792,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1444,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1447,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["sessionvalu",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["set",{"_index":139,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":897,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1440,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1395,"title":{},"body":{"injectables/ToastService.html":{}}}],["settings/opt",{"_index":1637,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["setup",{"_index":1152,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["sever",{"_index":1747,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["short",{"_index":1669,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1363,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":892,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1354,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":893,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":894,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":891,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:15",{"_index":898,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:50",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:57",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":890,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":218,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1772,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1630,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1719,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1676,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["size",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1777,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1761,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1580,"title":{},"body":{"index.html":{}}}],["split",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":781,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":270,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1290,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1297,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1298,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:113",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:125",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:142",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:158",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:36",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:48",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:50",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:64",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:82",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":342,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1166,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:116",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:131",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:215",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:26",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:308",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:64",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:89",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":637,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1353,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1376,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1379,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1383,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1381,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":495,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1409,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1419,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1423,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1426,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1431,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1430,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1416,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1417,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1428,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1435,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1436,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1439,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1441,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1415,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1744,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1753,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1238,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1801,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":199,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1364,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1365,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1562,"title":{},"body":{"index.html":{}}}],["still",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1720,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["structur",{"_index":1740,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1756,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["suit",{"_index":1750,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["support",{"_index":1597,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1773,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1598,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1549,"title":{},"body":{"index.html":{}}}],["tab",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1101,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1299,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1552,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1737,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1570,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1743,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1568,"title":{},"body":{"index.html":{}}}],["text",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1649,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["the_tool_nam",{"_index":1653,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["then((cours",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["think",{"_index":1059,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this._selectedcategori",{"_index":1442,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1445,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1454,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":675,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":674,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":677,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":913,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.foreach(cours",{"_index":1060,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1461,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":910,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":914,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":912,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1098,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1075,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1076,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('maxlin",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('minlin",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1288,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandl",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.highlight",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.http.get(`/api/tool",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/us",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1097,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1096,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1094,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1345,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1302,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1304,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1289,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1346,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.tolowercase().replace(/\\s/g",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.sessionvalues.emit(this._tabs[0].session.getvalu",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sessionvalues.emit(this.editor.getsession().getvalu",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1286,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1452,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.foreach(editortab",{"_index":1062,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1767,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1660,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["time",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1366,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1394,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1380,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1378,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1382,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1295,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1811,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool.icon",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1448,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1775,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1793,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":219,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":202,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1464,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1347,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1067,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":203,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1414,"title":{},"body":{"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["true",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["two",{"_index":1672,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1386,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1794,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["underscor",{"_index":1651,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["unexpectedli",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["uniqu",{"_index":1661,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["univers",{"_index":1558,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1759,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":535,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1770,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1795,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["valid",{"_index":273,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1307,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["var",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1475,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{}}}],["verifi",{"_index":271,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["verifynewus",{"_index":1807,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["via",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1310,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1311,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1309,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1457,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1459,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1460,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1458,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1314,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1315,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1316,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1318,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('codeeditor",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('editor",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["virtual",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["visibl",{"_index":636,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wait",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1715,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":346,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1588,"title":{},"body":{"index.html":{}}}],["white",{"_index":888,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1450,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":911,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1160,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["word",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1625,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1517,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1791,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.j",{"_index":1780,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["written",{"_index":1806,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["yellow",{"_index":1659,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1665,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1738,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1557,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to route changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nUsed in app.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Used in app.component.html (i.e. DO NOT DELETE)\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to route changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Used in app.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies that the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n* Verifies that the user is correctly logged in with a valid\n* Google BYUI account. Redirects the user to the Google\n* login page as needed. Provides validation for the user\n* to access various routes.\n*/\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** ***********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed.\n     */\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify the currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables the Sign Out button. Used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: String[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                        \n                                                                    String[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of each piece of the path to navigate to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify the currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify the currently selected tool.\n     * @param authGuardService Enables the Sign Out button. Used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE).\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces Array of each piece of the path to navigate to.\n     * @returns Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces: String[]) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:15\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: Category)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    Category\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The category to be set as the selected category\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\nimport { Category } from '../../interfaces';\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category: Category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates the Ace code editor to allow viewing and editing HTML from an issue's canvas item.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlight\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sessionValues\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as\na string. It will be converted into a regex, so\na regex string (to be passed into the RegExp constructor) \ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sessionValues\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can\ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is\ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\n\n/**\n * Integrates the Ace code editor to allow viewing and editing HTML from an issue's canvas item.\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /**\n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as\n     * a string. It will be converted into a regex, so\n     * a regex string (to be passed into the RegExp constructor) \n     * can also be passed in.\n     */\n    @Input('highlight') highlight: string;\n\n    /**\n     * Element reference to the editor div itself so we can\n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is\n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    @Output() sessionValues = new EventEmitter();\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        const EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        const searchBox = window['ace'].require('ace/searchbox');\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            const code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption('minLines', 10);\n        this.editor.setOption('maxLines', 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n\n        // send the value of the current tab to the code editor in issue-container.component.ts\n        this.sessionValues.emit(this._tabs[0].session.getValue());\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session.\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        this.editor.on('change', () => {\n            this.sessionValues.emit(this.editor.getSession().getValue());\n        });\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.highlight) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.highlight, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption('maxLines', this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the array of Courses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open.\nUsed in course-chip.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Issue status to match\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:27\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Used in course-chip.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the array of Courses stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course.\n     * @param toolService Allows this component to identify if the tool view is open.\n     * Used in course-chip.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name.\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search.\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search.\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input. */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input. */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input. */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input. */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input. */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing. */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by. */\n    lastSortedBy: string;\n\n    /** Results of a search. */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter and make everything lowercase\n            const searchText = this.searchText.nativeElement.value.toLowerCase().replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'.\n     * @param {string} param The object key to be sorted.\n     * @returns {void}\n     */\n    sortBy(param: any) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked.\n     * @returns {boolean} Whether the course is already added.\n     */\n    isAdded(course: any) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring -->\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search Term\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring -->            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search Term                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:36\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\nUsed in course-sidebar.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to be set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Used in course-sidebar.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * Used in course-sidebar.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to be set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service'; // Used in error-page.component.html (i.e. DO NOT DELETE)\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeEditor\n                            \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                handleEditorSessionValues\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleEditorSessionValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleEditorSessionValues(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is initialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codeEditor:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    @ViewChild('codeEditor') codeEditor: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is initialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                const control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            };\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2';\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n\n    handleEditorSessionValues(event) {\n        // attach the value to issues as needed here. Think about attaching it to the html property on the issue object.\n        if (this.issue.status === 'approved') {\n            this.issue.status = 'untouched';\n        }\n        this.courseService.courses.forEach(course => {\n            course.issueItems.forEach(issueItem => {\n                if (this.toolService.selectedTool.editorTabs) {\n                    this.toolService.selectedTool.editorTabs.forEach(editorTab => {\n                        if (editorTab.readOnly === false) {\n                            issueItem.issues[0].html.updatedHtml = event;\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:308\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\nDEPRECATED\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     * DEPRECATED\n     */\n    logUserStatus(userEmail: string, message: string) {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/api/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            () => { },\n            this.errorHandler);\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The FormGroup to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The FormGroup to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nUsed in tool-selection.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Used in tool-selection.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular-lazy-for : ^1.1.5\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-infinite-scroll : ^0.3.5\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-virtual-scroll : ^0.3.4\n        \n            angularfire2 : ^5.0.0-rc.8.1-next\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.3.1\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nUse npm start to spin up Katana\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nFlags\n\n\n\nFlag\nPurpose\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nDocumentation\nClient (Angular)\n\nLinkName \nArchitecture\nLinkName\nHow To...\nLinkName\nFirebase Integration\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDevelopment Environment\nOverview\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid accounts added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
