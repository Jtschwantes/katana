var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.416,1,1.015]],["body/components/AppComponent.html",[0,0.684,1,1.465,2,0.348,3,0.348,4,0.925,5,0.975,6,0.975,7,0.278,8,2.577,9,0.539,10,4.345,11,3.719,12,2.083,13,2.999,14,4.345,15,3.719,16,2.548,17,1.309,18,2.956,19,3.719,20,3.719,21,0.975,22,2.32,23,2.201,24,2.753,25,1.407,26,4.345,27,1.407,28,4.345,29,1.204,30,2.292,31,3.047,32,1.999,33,3.324,34,2.344,35,4.123,36,3.12,37,0.711,38,3.011,39,3.536,40,4.345,41,3.307,42,2.548,43,5.098,44,2.221,45,1.725,46,3.719,47,0.584,48,1.003,49,3.307,50,3.719,51,3.719,52,2.548,53,3.907,54,2.548,55,2.99,56,2.548,57,4.345,58,4.345,59,2.373,60,2.548,61,1.905,62,0.711,63,0.02,64,0.721,65,0.399,66,0.576,67,0.767,68,1.28,69,1.807,70,1.905,71,1.637,72,1.046,73,2.782,74,2.548,75,2.373,76,2.548,77,1.141,78,1.141,79,3.307,80,3.719,81,1.483,82,2.548,83,0.736,84,0.572,85,3.536,86,5.098,87,3.011,88,1.145,89,1.085,90,1.908,91,2.577,92,1.281,93,1.908,94,0.301,95,0.278,96,1.457,97,1.766,98,2.251,99,3.011,100,3.719,101,4.345,102,0.511,103,3.011,104,3.011,105,2.999,106,3.719,107,4.345,108,3.023,109,4.345,110,3.011,111,1.908,112,2.577,113,4.777,114,3.719,115,5.066,116,2.577,117,3.719,118,3.011,119,2.577,120,1.211,121,2.292,122,2.292,123,3.011,124,3.011,125,2.373,126,3.011,127,2.577,128,3.011,129,3.011,130,2.577,131,0.511,132,3.011,133,3.011,134,3.011,135,1.444,136,2.577,137,0.928,138,0.511,139,4.364,140,2.292,141,3.011,142,1.444,143,3.011,144,3.011,145,3.011,146,1.141,147,3.011,148,2.292,149,3.011,150,2.373,151,3.011,152,2.577,153,1.908,154,2.292,155,0.572,156,3.011,157,3.011,158,3.011,159,3.011,160,3.048,161,3.307,162,3.719,163,2.05,164,4.345,165,4.345,166,3.307,167,3.719,168,0.75,169,0.826,170,1.335,171,1.407,172,1.627,173,0.975,174,3.011,175,3.011,176,0.975,177,0.791,178,0.975,179,0.481,180,0.975,181,0.791,182,0.511,183,0.975,184,0.791,185,0.975,186,0.75,187,1.407,188,0.791,189,0.975,190,0.791,191,0.975,192,0.481,193,0.975,194,0.791,195,0.975,196,0.791,197,0.975,198,0.791,199,0.975,200,0.711,201,0.975,202,0.791,203,0.925,204,0.975,205,0.481,206,0.75,207,0.975,208,0.012,209,0.012]],["title/modules/AppModule.html",[210,1.555,211,2.669]],["body/modules/AppModule.html",[0,0.708,1,1.901,2,0.468,3,0.468,7,0.373,36,3.422,41,4.054,47,0.452,55,2.372,61,1.381,63,0.021,68,1.132,81,1.381,83,0.866,84,0.769,88,1.538,93,2.563,94,0.595,95,0.373,120,1.626,168,1.007,179,0.852,200,1.259,205,0.852,206,1.327,208,0.015,209,0.015,210,2.395,211,5.07,212,2.209,213,3.774,214,3.774,215,3.462,216,3.462,217,3.462,218,3.462,219,3.462,220,4.28,221,4.28,222,4.28,223,3.375,224,4.045,225,5.327,226,3.462,227,3.078,228,3.677,229,2.791,230,5.327,231,3.462,232,5.327,233,3.462,234,1.939,235,3.462,236,3.078,237,4.045,238,3.078,239,5.327,240,4.045,241,5.327,242,3.462,243,3.078,244,4.045,245,4.045,246,3.107,247,3.462,248,5.327,249,3.774,250,4.045,251,4.045,252,2.791,253,4.054,254,2.791,255,3.078,256,3.078,257,2.791,258,2.791,259,5.327,260,5.782,261,1.309,262,5.327,263,5.327,264,4.054,265,5.419,266,4.045,267,4.045,268,4.045,269,4.045,270,4.045]],["title/injectables/AuthGuardService.html",[36,1.854,271,1.555]],["body/injectables/AuthGuardService.html",[2,0.402,3,0.402,7,0.32,9,0.596,17,1.59,18,2.994,29,0.821,31,3.413,36,2.305,37,1.595,41,3.659,42,2.038,44,1.251,45,1.82,52,2.819,56,2.819,61,2.205,62,0.821,63,0.021,64,0.491,65,0.828,66,0.461,67,0.94,68,1.048,81,1.641,83,0.747,84,0.661,85,2.201,88,1.321,94,0.347,95,0.32,96,1.136,98,2.457,102,0.815,105,4.106,120,1.933,131,1.145,138,1.162,155,1.131,160,3.686,161,4.527,162,5.938,163,2.392,208,0.013,209,0.013,236,2.644,238,4.195,242,2.974,265,5.529,271,2.216,272,2.974,273,4.753,274,3.659,275,4.458,276,6.46,277,6.46,278,3.318,279,0.491,280,2.249,281,6.46,282,5.949,283,1.477,284,5.949,285,5.949,286,3.474,287,6.46,288,3.474,289,5.513,290,4.195,291,2.457,292,3.474,293,2.046,294,1.477,295,3.474,296,4.527,297,4.808,298,1.477,299,3.474,300,3.474,301,3.474,302,5.949,303,3.474,304,0.912,305,3.474,306,4.808,307,3.318,308,3.318,309,2.201,310,3.474,311,1.186,312,3.474,313,1.479,314,3.474,315,3.474,316,3.474,317,3.474,318,3.318,319,3.474,320,3.474,321,5.949,322,3.474,323,3.474,324,3.474,325,3.474,326,2.974,327,2.644,328,3.474,329,3.474,330,3.474,331,3.474,332,3.474,333,3.474,334,3.474,335,1.479,336,3.474,337,3.474,338,3.474]],["title/components/BreadcrumbsComponent.html",[0,0.416,177,1.015]],["body/components/BreadcrumbsComponent.html",[0,0.664,1,0.88,2,0.388,3,0.388,4,1.03,5,1.085,6,1.085,7,0.309,9,0.671,15,4.014,17,1.243,18,3.302,21,1.085,22,2.352,23,2.231,25,1.518,27,1.518,29,1.278,30,2.551,31,3.259,34,2.549,36,3.208,37,1.509,44,1.207,47,0.523,48,0.602,56,2.75,62,1.108,63,0.02,64,0.828,65,0.622,66,0.717,67,0.987,71,1.496,72,0.814,81,1.144,83,0.739,84,0.637,88,1.275,92,1.426,93,2.124,94,0.335,95,0.309,96,1.509,97,1.966,98,1.275,102,0.795,108,2.763,120,2.355,131,1.112,137,0.928,138,0.993,140,3.569,155,1.172,167,4.014,168,0.835,169,0.891,170,1.44,171,1.518,172,1.707,173,1.085,176,1.085,177,1.538,178,1.085,179,0.536,180,1.085,181,0.88,182,0.569,183,1.085,184,0.88,185,1.085,186,0.835,187,1.518,188,0.88,189,1.085,190,0.88,191,1.085,192,0.536,193,1.085,194,0.88,195,1.085,196,0.88,197,1.085,198,0.88,199,1.085,200,0.792,201,1.085,202,0.88,203,1.03,204,1.085,205,0.536,206,0.835,207,1.085,208,0.013,209,0.013,234,1.607,246,2.116,260,4.014,264,3.569,273,4.691,279,0.474,280,1.948,283,1.44,290,3.569,291,2.228,294,1.661,296,4.458,304,0.88,307,3.733,308,2.314,339,3.846,340,2.869,341,3.435,342,5.857,343,4.689,344,6.887,345,1.783,346,4.689,347,4.689,348,4.458,349,4.689,350,4.458,351,4.458,352,4.689,353,3.236,354,4.689,355,3.352,356,1.885,357,4.689,358,2.971,359,1.367,360,2.116,361,3.352,362,3.615,363,5.092,364,1.689,365,3.352,366,2.955,367,3.352,368,2.551,369,1.712,370,3.569,371,1.783,372,3.352,373,4.689,374,4.014,375,4.689,376,3.569]],["title/components/CategoriesComponent.html",[0,0.416,179,0.618]],["body/components/CategoriesComponent.html",[0,0.695,1,1.002,2,0.442,3,0.442,4,1.172,5,1.236,6,1.236,7,0.352,9,0.718,11,4.387,21,1.236,22,2.387,23,2.265,25,1.659,27,1.659,29,1.367,31,2.457,32,2.119,34,2.585,37,1.367,47,0.585,48,0.686,53,3.248,56,3.006,62,1.211,63,0.02,64,0.875,65,0.679,66,0.767,67,0.871,71,1.838,72,0.971,78,1.782,83,0.67,84,0.726,89,1.375,92,1.624,94,0.381,95,0.352,96,1.367,98,1.452,102,0.869,108,3.16,131,1.094,137,0.971,138,0.869,146,1.624,168,0.951,169,0.974,170,1.574,171,1.659,172,1.803,173,1.236,176,1.236,177,1.002,178,1.236,179,0.989,180,1.236,181,1.002,182,0.647,183,1.236,184,1.002,185,1.236,186,0.951,187,1.659,188,1.002,189,1.236,190,1.002,191,1.236,192,0.61,193,1.236,194,1.002,195,1.236,196,1.002,197,1.236,198,1.002,199,1.236,200,0.902,201,1.236,202,1.002,203,1.172,204,1.236,205,0.61,206,0.951,207,1.236,208,0.014,209,0.014,261,2.387,273,3.901,279,0.54,280,1.846,283,1.574,294,1.172,313,1.624,339,3.628,359,1.881,360,2.313,366,2.457,377,3.267,378,1.346,379,2.595,380,1.846,381,5.126,382,5.126,383,5.126,384,2.634,385,3.817,386,3.901,387,3.901,388,4.387,389,3.817,390,3.817,391,1.418,392,0.951,393,3.817,394,5.126,395,4.387]],["title/interfaces/Category.html",[261,1.252,396,0.656]],["body/interfaces/Category.html",[2,0.315,3,0.315,7,0.251,9,0.763,12,1.933,17,1.205,45,0.792,47,0.602,48,0.488,63,0.021,64,0.384,65,0.912,66,0.926,67,1.063,72,1.035,77,0.714,78,1.561,83,0.467,94,0.631,95,0.251,102,0.684,131,0.461,135,1.303,137,1.026,138,1.072,146,0.714,155,0.914,163,1.621,169,1.131,179,0.768,182,0.684,192,0.768,205,0.435,208,0.013,209,0.011,246,1.819,261,2.275,279,0.384,293,1.716,294,1.744,298,1.238,304,1.058,311,1.376,335,1.716,345,1.533,356,1.621,359,1.655,360,1.227,371,1.034,378,0.714,379,2.391,380,1.452,391,1.955,392,1.414,396,1.176,397,1.303,398,2.06,399,1.621,400,1.75,401,2.159,402,2.545,403,2.562,404,2.187,405,2.06,406,2.851,407,2.562,408,2.684,409,2.137,410,0.979,411,2.159,412,2.716,413,1.157,414,1.716,415,1.932,416,2.045,417,2.531,418,1.452,419,2.405,420,1.933,421,2.06,422,2.399,423,2.06,424,1.915,425,2.262,426,1.556,427,1.376,428,1.932,429,2.045,430,1.819,431,2.168,432,1.389,433,1.389,434,1.376,435,1.227,436,1.227,437,2.142,438,1.303,439,1.389,440,1.389,441,2.185,442,1.227,443,1.819,444,1.933,445,1.389,446,2.304,447,1.157,448,1.303,449,1.389,450,1.621,451,1.471,452,1.227,453,1.034,454,1.227,455,1.093,456,1.819,457,1.157,458,1.093,459,1.227,460,1.389,461,1.389,462,1.093,463,1.303,464,1.389,465,1.389,466,2.102,467,1.157,468,1.303,469,1.389,470,1.641,471,1.389,472,1.303,473,1.389,474,1.303,475,1.389,476,1.389,477,1.389,478,2.06,479,1.389,480,1.303,481,1.303,482,1.819,483,1.157,484,1.303,485,1.227,486,1.933,487,1.933,488,1.303,489,1.157]],["title/components/CodeEditorComponent.html",[0,0.416,181,1.015]],["body/components/CodeEditorComponent.html",[0,0.639,1,0.641,2,0.521,3,0.283,4,0.75,5,0.791,6,0.791,7,0.225,9,0.461,16,2.643,17,0.79,21,0.791,22,2.251,23,2.136,25,1.205,27,1.205,29,1.403,37,1.537,39,3.62,42,2.182,44,1.34,47,0.484,48,0.81,56,1.433,62,0.577,63,0.021,64,0.637,65,0.787,66,0.719,67,0.758,68,0.857,71,1.394,72,0.678,73,2.034,83,0.283,84,0.465,94,0.244,95,0.343,96,0.577,102,0.855,108,1.901,131,0.855,137,0.894,139,2.091,140,2.832,146,1.836,150,2.032,153,1.548,155,1.164,168,0.609,169,1.216,170,1.548,171,1.205,172,1.581,173,0.791,176,0.791,177,0.641,178,0.791,179,0.391,180,0.791,181,1.323,182,1.192,183,0.791,184,0.641,185,0.791,186,0.609,187,1.205,188,0.641,189,0.791,190,0.641,191,0.791,192,0.391,193,0.791,194,0.641,195,0.791,196,0.641,197,0.791,198,0.641,199,0.791,200,0.577,201,0.791,202,0.641,203,0.75,204,0.791,205,0.391,206,0.609,207,0.791,208,0.01,209,0.012,274,2.832,279,0.345,283,1.755,291,1.714,294,1.384,304,0.977,309,2.358,359,1.314,364,1.623,376,2.832,392,1.123,404,1.665,414,1.584,416,1.34,418,2.139,424,1.815,429,3.086,430,3.287,434,1.27,435,2.578,436,1.679,441,1.205,458,1.496,459,1.679,462,2.026,466,1.27,490,2.976,491,5.645,492,5.02,493,2.091,494,2.832,495,5.039,496,3.858,497,3.721,498,3.721,499,5.039,500,5.713,501,5.039,502,5.039,503,5.039,504,4.89,505,3.721,506,4.507,507,3.721,508,3.721,509,3.185,510,4.507,511,5.713,512,4.348,513,5.476,514,4.507,515,5.039,516,3.721,517,5.423,518,2.443,519,2.643,520,2.358,521,3.721,522,2.443,523,2.443,524,3.185,525,3.721,526,3.721,527,3.721,528,3.721,529,2.443,530,3.185,531,2.832,532,6.675,533,5.039,534,3.43,535,3.721,536,2.443,537,5.039,538,2.568,539,2.832,540,3.721,541,3.721,542,2.568,543,3.244,544,3.185,545,3.721,546,3.721,547,3.185,548,3.721,549,3.721,550,3.185,551,3.721,552,2.443,553,2.832,554,2.443,555,3.478,556,4.313,557,3.478,558,1.686,559,2.568,560,2.443,561,3.721,562,3.721,563,2.443,564,3.721,565,3.721,566,2.443,567,2.443,568,2.443,569,3.721,570,2.443,571,2.443,572,2.443,573,2.443,574,2.091,575,2.443,576,2.443,577,2.443,578,2.443,579,1.86,580,2.443,581,2.443,582,2.443,583,2.443,584,2.443,585,3.721,586,2.443,587,2.443,588,2.443,589,2.443,590,2.443,591,2.443,592,2.443,593,2.443,594,2.443,595,1.686,596,2.443,597,2.443,598,2.443,599,2.443,600,4.507,601,3.721,602,2.443,603,2.443,604,2.443,605,2.443,606,2.443,607,2.443,608,2.443,609,3.185,610,3.721,611,3.721,612,2.443,613,2.091,614,2.091,615,2.443,616,3.721,617,2.443,618,2.443,619,2.443,620,2.443,621,2.443,622,4.507,623,2.443,624,3.721,625,3.721,626,3.721]],["title/interfaces/Course.html",[72,0.582,396,0.656]],["body/interfaces/Course.html",[2,0.292,3,0.292,7,0.233,9,0.745,12,1.829,17,1.168,45,0.736,47,0.596,48,0.454,63,0.021,64,0.539,65,0.948,66,0.957,67,1.038,72,1.089,77,0.663,78,1.519,83,0.442,94,0.617,95,0.233,102,0.647,131,0.647,135,1.211,137,1.011,138,1.019,146,1.002,155,1.046,163,2.326,169,1.1,179,0.61,182,0.78,192,0.735,205,0.404,208,0.013,209,0.01,246,1.14,261,2.122,279,0.357,293,1.957,294,1.945,298,1.777,304,1.002,311,1.303,335,2.462,345,1.451,356,2.326,359,1.494,360,1.14,371,0.961,378,0.663,379,2.326,380,0.91,391,1.933,392,1.371,396,1.151,397,1.211,398,1.29,399,1.015,400,1.694,401,1.451,402,2.445,403,1.722,404,2.192,405,1.29,406,2.774,407,2.312,408,2.611,409,2.06,410,0.91,411,2.093,412,2.618,413,1.075,414,1.624,415,1.849,416,1.982,417,2.462,418,1.374,419,2.353,420,1.829,421,1.949,422,2.312,423,1.949,424,2.084,425,2.181,426,1.489,427,1.303,428,1.849,429,1.957,430,1.722,431,2.075,432,1.29,433,1.29,434,1.303,435,1.14,436,1.14,437,2.324,438,1.211,439,1.29,440,1.29,441,2.263,442,1.14,443,1.722,444,1.829,445,1.29,446,2.205,447,1.075,448,1.211,449,1.29,450,1.849,451,1.785,452,1.14,453,0.961,454,1.14,455,1.015,456,1.722,457,1.075,458,1.015,459,1.14,460,1.29,461,1.29,462,1.015,463,1.211,464,1.29,465,1.29,466,2.051,467,1.075,468,1.211,469,1.29,470,1.878,471,1.29,472,1.211,473,1.29,474,1.211,475,1.949,476,2.618,477,2.618,478,2.956,479,1.949,480,1.829,481,1.829,482,2.611,483,1.075,484,1.829,485,1.722,486,2.774,487,2.774,488,1.829,489,1.624]],["title/components/CourseChipComponent.html",[0,0.416,184,1.015]],["body/components/CourseChipComponent.html",[0,0.734,1,0.84,2,0.37,3,0.37,4,0.983,5,1.036,6,1.036,7,0.295,9,0.654,16,3.553,21,1.036,22,2.339,23,2.219,25,1.469,27,1.469,29,1.246,32,2.173,34,2.382,37,1.487,47,0.486,48,0.947,60,2.661,62,1.072,63,0.021,64,0.951,65,0.699,66,0.699,68,0.863,71,1.459,72,1.114,83,0.664,84,0.608,89,1.153,92,1.362,94,0.319,95,0.295,96,1.246,98,1.217,102,0.77,117,5.386,119,3.884,131,1.181,137,1.026,142,2.176,150,1.747,155,1.003,168,0.797,169,0.863,170,1.394,171,1.469,172,1.766,173,1.036,176,1.036,177,0.84,178,1.036,179,0.512,180,1.036,181,0.84,182,0.543,183,1.036,184,1.506,185,1.036,186,0.797,187,1.469,188,0.84,189,1.036,190,0.84,191,1.036,192,0.512,193,1.036,194,0.84,195,1.036,196,0.84,197,1.036,198,0.84,199,1.036,200,0.756,201,1.036,202,0.84,203,0.983,204,1.036,205,0.512,206,0.797,207,1.036,208,0.012,209,0.017,279,0.452,280,1.635,283,1.394,291,2.182,311,2.257,313,1.362,364,1.635,366,3.017,379,1.825,380,1.635,391,1.587,396,0.543,404,1.834,406,2.751,407,2.734,418,2.067,429,2.442,441,1.858,451,0.885,462,1.825,470,2.068,482,2.379,627,4.466,628,4.925,629,2.739,630,4.538,631,4.538,632,4.538,633,6.293,634,4.912,635,5.738,636,1.747,637,4.538,638,3.2,639,4.912,640,4.538,641,4.538,642,4.538,643,4.538,644,3.2,645,3.454,646,3.2,647,3.2,648,2.739,649,3.2,650,3.2,651,3.2,652,3.2,653,3.2,654,5.738,655,4.538,656,2.739,657,4.538,658,3.454,659,3.2,660,3.2,661,3.2,662,3.2,663,3.2,664,3.2,665,3.2,666,2.435,667,3.2,668,2.739,669,1.877,670,2.208,671,2.739,672,3.884,673,3.454]],["title/components/CourseSelectionComponent.html",[0,0.416,186,0.963]],["body/components/CourseSelectionComponent.html",[0,0.559,1,0.583,2,0.257,3,0.257,4,0.682,5,0.719,6,0.719,7,0.391,9,0.594,13,2.386,17,0.734,21,0.719,22,2.216,23,2.102,25,1.119,27,1.119,29,1.003,32,2.071,33,3.032,37,1.578,44,1.245,47,0.293,48,0.399,53,1.407,59,2.318,61,1.449,62,1.356,63,0.021,64,0.811,65,0.826,66,0.635,67,0.334,68,1.091,69,1.374,70,1.772,71,1.808,72,1.118,73,1.56,74,2.809,75,2.318,76,2.027,77,0.907,83,0.554,84,0.422,89,0.8,90,1.407,94,0.222,95,0.205,96,1.562,97,1.302,98,2.541,102,0.586,108,2.652,131,1.122,136,1.9,137,0.781,142,2.489,146,0.583,150,2.318,154,2.631,155,0.807,163,2.308,168,0.553,169,0.911,170,1.981,171,1.119,172,1.513,173,0.719,176,0.719,177,0.583,178,0.719,179,0.355,180,0.719,181,0.583,182,0.72,183,0.719,184,0.583,185,0.719,186,1.193,187,1.119,188,0.583,189,0.719,190,0.583,191,0.719,192,0.355,193,0.719,194,0.583,195,0.719,196,0.583,197,0.719,198,0.583,199,0.719,200,0.525,201,0.719,202,0.583,203,0.682,204,0.719,205,0.355,206,0.553,207,0.719,208,0.017,209,0.014,261,0.719,279,0.314,280,1.529,283,1.062,291,1.315,294,1.594,298,1.062,304,0.907,318,1.532,341,1.302,358,3.95,364,0.8,366,1.657,376,1.69,392,1.43,396,0.377,400,1.114,404,1.396,416,1.245,418,2.323,419,1.614,424,1.725,437,1.529,441,1.78,458,1.39,470,0.758,480,1.657,481,1.657,482,2.161,484,2.297,486,3.044,487,3.092,512,5.374,543,3.404,544,2.959,557,4.653,558,3.583,559,3.794,579,1.69,614,1.9,627,4.564,658,1.69,672,2.959,673,2.631,674,5.033,675,1.69,676,2.631,677,3.457,678,2.959,679,2.959,680,6.234,681,4.79,682,5.191,683,5.936,684,5.191,685,4.244,686,3.646,687,3.457,688,3.457,689,2.22,690,3.457,691,2.22,692,2.631,693,3.457,694,3.457,695,2.631,696,4.79,697,2.22,698,3.951,699,2.959,700,4.79,701,2.631,702,3.457,703,2.22,704,5.936,705,3.457,706,2.959,707,2.959,708,2.22,709,5.936,710,2.22,711,2.22,712,2.22,713,2.22,714,2.22,715,2.22,716,2.22,717,2.22,718,2.22,719,2.22,720,2.22,721,2.22,722,1.9,723,2.22,724,2.22,725,1.532,726,1.69,727,2.22,728,4.244,729,2.22,730,3.457,731,2.22,732,1.69,733,3.457,734,1.532,735,2.22,736,2.22,737,2.22,738,2.22,739,2.22,740,2.22,741,1.69,742,2.22,743,2.22,744,2.22,745,3.457,746,1.9,747,1.9,748,1.69,749,2.22,750,2.22,751,2.22,752,4.244,753,2.22,754,2.22,755,3.457,756,3.457,757,2.22,758,2.22,759,2.22,760,3.457,761,2.22,762,3.457,763,2.22,764,2.22,765,2.22,766,3.23,767,2.22,768,2.027,769,3.457,770,3.457,771,3.457,772,3.457,773,4.79,774,3.457,775,3.457,776,3.457,777,3.457,778,3.457,779,3.457,780,3.457]],["title/injectables/CourseService.html",[32,1.188,271,1.555]],["body/injectables/CourseService.html",[2,0.284,3,0.284,7,0.226,9,0.71,13,2.576,17,0.792,24,1.555,29,1.284,32,1.147,37,1.609,44,1.345,49,2.841,54,2.961,60,2.961,62,1.448,63,0.021,64,0.888,65,0.759,66,0.875,67,0.922,68,0.96,69,1.209,70,1.274,71,1.848,72,1.12,73,1.684,83,0.523,84,0.466,94,0.245,95,0.501,96,1.484,102,0.633,105,1.693,108,1.907,111,2.365,131,1.227,137,1.068,142,1.79,146,0.98,155,1.218,170,1.551,182,0.416,186,1.258,208,0.01,209,0.01,264,1.867,271,1.817,279,0.347,283,1.147,294,1.388,304,0.98,311,2.518,364,1.957,366,1.79,380,1.345,386,2.841,387,3.843,391,1.646,392,1.258,396,0.416,400,0.98,401,2.436,404,2.001,409,0.986,410,0.884,416,0.884,419,2.476,424,1.345,426,1.759,434,2.093,437,1.345,450,1.501,451,1.772,452,2.039,453,1.718,454,2.039,455,1.817,470,2.254,483,1.044,485,2.278,519,2.961,520,1.555,542,1.693,543,1.34,595,3.485,645,3.843,648,3.195,668,2.1,669,1.439,670,3.485,671,2.1,686,1.867,692,3.843,725,1.693,741,3.843,766,4.355,781,2.1,782,3.733,783,3.733,784,3.733,785,2.841,786,5.482,787,5.05,788,5.05,789,5.05,790,5.05,791,3.733,792,3.733,793,3.733,794,3.733,795,3.733,796,3.733,797,3.733,798,2.454,799,3.733,800,2.454,801,2.576,802,3.733,803,3.733,804,3.733,805,2.454,806,3.733,807,4.322,808,3.949,809,3.733,810,2.454,811,4.898,812,5.05,813,5.05,814,3.843,815,3.733,816,2.454,817,4.322,818,3.733,819,2.454,820,3.733,821,3.733,822,2.454,823,3.733,824,2.454,825,2.454,826,2.454,827,2.454,828,2.454,829,2.1,830,3.733,831,2.454,832,2.454,833,2.1,834,2.454,835,2.454,836,1.693,837,4.518,838,2.454,839,2.454,840,2.454,841,2.454,842,2.454,843,2.1,844,2.454,845,2.454,846,3.733,847,2.454,848,2.454,849,4.518,850,5.05,851,2.454,852,2.454,853,3.195,854,2.454,855,2.454,856,2.1,857,2.454,858,2.454,859,2.454,860,2.454,861,2.1,862,2.1,863,2.454,864,2.454,865,2.454,866,3.733,867,5.433,868,3.195,869,1.867,870,2.454,871,4.518,872,2.1,873,4.322,874,3.733,875,3.733,876,2.454,877,1.867,878,2.1]],["title/components/CourseSidebarComponent.html",[0,0.416,188,1.015]],["body/components/CourseSidebarComponent.html",[0,0.68,1,0.852,2,0.375,3,0.375,4,0.996,5,1.05,6,1.05,7,0.299,9,0.659,17,1.225,18,2.197,21,1.05,22,2.343,23,2.231,25,1.484,27,1.484,29,1.255,31,3.181,32,2.145,34,2.39,37,1.439,45,1.336,47,0.489,48,0.823,54,3.386,61,1.564,62,1.083,63,0.021,64,0.816,65,0.704,66,0.704,67,0.69,68,1.235,69,1.972,70,2.218,71,1.913,72,1.128,78,1.203,83,0.731,84,0.617,88,1.234,89,1.168,92,1.381,94,0.324,95,0.422,96,1.439,98,2.021,102,0.777,113,2.777,114,5.561,115,2.777,116,2.777,131,0.979,137,0.916,146,1.516,152,3.922,155,1.202,168,0.808,169,0.871,170,1.632,171,1.484,172,1.683,173,1.05,176,1.05,177,0.852,178,1.05,179,0.519,180,1.05,181,0.852,182,0.55,183,1.05,184,0.852,185,1.05,186,1.517,187,1.484,188,1.516,189,1.05,190,0.852,191,1.05,192,0.519,193,1.05,194,0.852,195,1.05,196,0.852,197,1.05,198,0.852,199,1.05,200,0.766,201,1.05,202,0.852,203,0.996,204,1.05,205,0.519,206,0.808,207,1.05,208,0.012,209,0.012,279,0.459,280,1.65,283,1.407,290,4.811,313,1.381,356,1.842,362,3.707,364,1.914,366,3.03,378,1.203,391,1.268,392,1.141,396,0.55,519,3.116,524,4.548,627,4.363,636,1.772,676,4.044,833,3.922,879,4.811,880,2.777,881,4.583,882,4.583,883,5.773,884,5.773,885,4.583,886,5.773,887,3.244,888,3.244,889,3.244,890,3.244,891,3.163,892,3.244,893,2.055,894,3.244,895,4.583,896,3.244,897,6.09,898,3.244,899,2.777,900,5.313,901,4.583,902,3.244,903,3.244,904,2.469,905,3.244,906,3.244]],["title/interfaces/DiscoverOption.html",[396,0.656,415,1.555]],["body/interfaces/DiscoverOption.html",[2,0.303,3,0.303,7,0.242,9,0.82,12,2.254,17,1.245,45,0.764,47,0.596,48,0.471,63,0.021,64,0.37,65,0.958,66,0.961,67,1.058,72,1.028,77,0.688,78,1.642,83,0.454,94,0.624,95,0.242,102,0.665,131,0.444,135,1.256,137,1.019,138,1.061,146,0.688,155,0.894,163,1.577,169,1.115,179,0.627,182,0.665,192,0.752,205,0.419,208,0.013,209,0.011,246,1.182,261,2.14,279,0.37,293,1.669,294,1.868,298,1.205,304,1.234,311,1.339,335,1.669,345,1.492,356,1.577,359,1.521,360,1.182,371,0.996,378,0.688,379,2.359,380,0.943,391,1.944,392,1.515,396,1.169,397,1.256,398,1.338,399,1.053,400,1.758,401,1.492,402,2.531,403,1.77,404,2.187,405,1.338,406,2.68,407,2.522,408,2.522,409,2.098,410,0.943,411,2.126,412,2.855,413,1.669,414,2.001,415,2.098,416,2.303,417,2.662,418,1.693,419,2.547,420,2.254,421,2.401,422,2.822,423,2.855,424,2.013,425,2.662,426,1.522,427,1.339,428,1.89,429,2.001,430,1.77,431,2.121,432,1.338,433,1.338,434,1.339,435,1.182,436,1.182,437,2.113,438,1.256,439,1.338,440,1.338,441,2.168,442,1.182,443,1.77,444,1.88,445,1.338,446,2.254,447,1.115,448,1.256,449,1.338,450,1.577,451,1.444,452,1.182,453,0.996,454,1.182,455,1.053,456,1.77,457,1.115,458,1.053,459,1.182,460,1.338,461,1.338,462,1.053,463,1.256,464,1.338,465,1.338,466,2.076,467,1.115,468,1.256,469,1.338,470,1.605,471,1.338,472,1.256,473,1.338,474,1.256,475,1.338,476,1.338,477,1.338,478,2.003,479,1.338,480,1.256,481,1.256,482,1.77,483,1.115,484,1.256,485,1.182,486,1.88,487,1.88,488,1.256,489,1.115]],["title/interfaces/EditorTab.html",[396,0.656,431,1.745]],["body/interfaces/EditorTab.html",[2,0.316,3,0.316,7,0.252,9,0.765,12,1.941,17,1.265,45,0.797,47,0.596,48,0.491,63,0.021,64,0.386,65,0.913,66,0.927,67,1.058,72,1.036,77,0.718,78,1.564,83,0.468,94,0.632,95,0.252,102,0.687,131,0.464,135,1.31,137,1.036,138,1.046,146,0.718,155,0.917,163,1.628,169,1.204,179,0.647,182,0.818,192,0.771,205,0.437,208,0.013,209,0.011,246,1.233,261,2.161,279,0.386,293,1.723,294,1.894,298,1.243,304,1.063,311,1.382,335,1.723,345,1.54,356,1.628,359,1.554,360,1.233,371,1.04,378,0.718,379,2.479,380,0.984,391,1.956,392,1.417,396,1.177,397,1.31,398,1.396,399,1.099,400,1.728,401,1.54,402,2.547,403,1.827,404,2.184,405,1.396,406,2.728,407,2.405,408,2.568,409,2.143,410,0.984,411,2.164,412,2.723,413,1.163,414,1.723,415,1.938,416,2.146,417,2.536,418,1.458,419,2.409,420,1.941,421,2.068,422,2.405,423,2.068,424,1.92,425,2.268,426,1.561,427,1.382,428,1.938,429,2.422,430,2.175,431,2.405,432,2.068,433,2.723,434,1.646,435,1.827,436,2.405,437,2.146,438,1.31,439,1.396,440,1.396,441,2.187,442,1.233,443,1.827,444,1.941,445,1.396,446,2.311,447,1.163,448,1.31,449,1.396,450,1.628,451,1.474,452,1.233,453,1.04,454,1.233,455,1.099,456,1.827,457,1.163,458,1.099,459,1.233,460,1.396,461,1.396,462,1.099,463,1.31,464,1.396,465,1.396,466,2.105,467,1.163,468,1.31,469,1.396,470,1.646,471,1.396,472,1.31,473,1.396,474,1.31,475,1.396,476,1.396,477,1.396,478,2.068,479,1.396,480,1.31,481,1.31,482,1.827,483,1.163,484,1.31,485,1.233,486,1.941,487,1.941,488,1.31,489,1.163]],["title/interfaces/FixOption.html",[396,0.656,428,1.555]],["body/interfaces/FixOption.html",[2,0.303,3,0.303,7,0.242,9,0.82,12,2.254,17,1.245,45,0.764,47,0.596,48,0.471,63,0.021,64,0.37,65,0.958,66,0.955,67,1.058,72,1.028,77,0.688,78,1.642,83,0.454,94,0.624,95,0.242,102,0.665,131,0.444,135,1.256,137,1.028,138,1.031,146,0.688,155,0.894,163,1.577,169,1.115,179,0.627,182,0.665,192,0.752,205,0.419,208,0.013,209,0.011,246,1.182,261,2.14,279,0.37,293,1.669,294,1.868,298,1.205,304,1.234,311,1.339,335,1.669,345,1.492,356,1.577,359,1.629,360,1.182,371,0.996,378,0.688,379,2.359,380,0.943,391,1.944,392,1.515,396,1.169,397,1.256,398,1.338,399,1.053,400,1.758,401,1.492,402,2.531,403,1.77,404,2.187,405,1.338,406,2.68,407,2.522,408,2.522,409,2.098,410,0.943,411,2.126,412,2.855,413,1.115,414,2.001,415,1.89,416,2.303,417,2.662,418,1.693,419,2.547,420,2.254,421,2.401,422,2.822,423,2.855,424,2.013,425,2.662,426,1.69,427,1.605,428,2.098,429,2.001,430,1.77,431,2.121,432,1.338,433,1.338,434,1.339,435,1.182,436,1.182,437,2.113,438,1.256,439,1.338,440,1.338,441,2.168,442,1.182,443,1.77,444,1.88,445,1.338,446,2.254,447,1.115,448,1.256,449,1.338,450,1.577,451,1.444,452,1.182,453,0.996,454,1.182,455,1.053,456,1.77,457,1.115,458,1.053,459,1.182,460,1.338,461,1.338,462,1.053,463,1.256,464,1.338,465,1.338,466,2.076,467,1.115,468,1.256,469,1.338,470,1.605,471,1.338,472,1.256,473,1.338,474,1.256,475,1.338,476,1.338,477,1.338,478,2.003,479,1.338,480,1.256,481,1.256,482,1.77,483,1.115,484,1.256,485,1.182,486,1.88,487,1.88,488,1.256,489,1.115]],["title/modules/HomePageModule.html",[210,1.555,220,2.45]],["body/modules/HomePageModule.html",[2,0.556,3,0.556,7,0.443,47,0.407,55,2.818,63,0.02,66,0.637,68,0.914,83,0.85,84,0.914,88,1.828,94,0.674,95,0.443,120,1.932,168,1.197,177,1.947,179,1.13,200,1.67,205,1.13,208,0.016,209,0.016,210,2.391,212,2.624,213,4.092,214,3.045,220,4.716,223,3.768,228,4.105,229,4.105,234,2.304,247,4.113,253,3.657,254,3.317,255,3.657,257,3.317,339,2.818,369,2.455,410,1.731,893,3.045,907,4.113,908,4.113,909,4.113,910,4.113,911,4.526,912,4.526,913,4.806,914,4.806,915,5.528,916,5.528]],["title/interfaces/Issue.html",[137,0.582,396,0.656]],["body/interfaces/Issue.html",[2,0.297,3,0.297,7,0.237,9,0.749,12,1.854,17,1.177,45,0.749,47,0.594,48,0.462,63,0.021,64,0.363,65,0.938,66,0.953,67,1.065,72,1.025,77,0.675,78,1.529,83,0.447,94,0.621,95,0.237,102,0.656,131,0.436,135,1.232,137,1.065,138,1.055,146,0.675,155,0.983,163,1.554,169,1.251,179,0.618,182,0.656,192,0.827,205,0.411,208,0.014,209,0.011,246,1.16,261,2.131,279,0.363,293,1.645,294,1.703,298,1.187,304,1.015,311,1.988,335,1.645,345,2.215,356,1.554,359,1.507,360,1.744,371,0.977,378,1.015,379,2.558,380,0.926,391,1.959,392,1.614,396,1.155,397,1.232,398,1.313,399,1.033,400,1.788,401,1.47,402,2.524,403,1.744,404,2.179,405,1.313,406,2.793,407,2.333,408,2.501,409,2.606,410,0.926,411,2.537,412,2.641,413,1.094,414,1.645,415,1.868,416,1.997,417,2.646,418,1.392,419,2.365,420,1.854,421,1.975,422,2.333,423,1.975,424,1.862,425,2.2,426,1.674,427,1.32,428,2.078,429,1.978,430,1.744,431,2.097,432,1.313,433,1.313,434,1.32,435,1.16,436,1.16,437,2.098,438,1.232,439,1.313,440,1.313,441,2.159,442,1.16,443,1.744,444,1.854,445,1.313,446,2.479,447,1.094,448,1.232,449,1.313,450,1.868,451,1.534,452,1.744,453,1.47,454,1.744,455,1.554,456,2.097,457,1.645,458,1.554,459,1.744,460,1.975,461,2.641,462,1.554,463,1.854,464,1.975,465,2.641,466,2.063,467,1.094,468,1.232,469,1.313,470,1.586,471,1.313,472,1.232,473,1.313,474,1.232,475,1.313,476,1.313,477,1.313,478,1.975,479,1.313,480,1.232,481,1.232,482,1.744,483,1.094,484,1.232,485,1.16,486,1.854,487,1.854,488,1.232,489,1.094]],["title/components/IssueCardComponent.html",[0,0.416,190,1.015]],["body/components/IssueCardComponent.html",[0,0.743,1,0.84,2,0.37,3,0.37,4,0.983,5,1.036,6,1.036,7,0.529,9,0.563,19,3.884,21,1.036,22,2.339,23,2.219,25,1.469,27,1.469,29,1.246,32,2.14,37,1.529,47,0.385,48,0.947,49,3.454,62,0.756,63,0.02,64,0.745,65,0.923,66,0.602,67,0.947,68,1.003,69,1.707,70,2.068,71,1.459,72,0.947,83,0.61,84,0.608,89,1.153,94,0.319,95,0.486,96,0.756,102,0.973,125,2.478,131,1.027,137,1.038,138,1.141,168,0.797,169,0.863,170,1.933,171,1.469,172,1.672,173,1.036,176,1.036,177,0.84,178,1.036,179,0.512,180,1.036,181,0.84,182,0.543,183,1.036,184,0.84,185,1.036,186,0.797,187,1.469,188,0.84,189,1.036,190,1.506,191,1.036,192,0.512,193,1.036,194,0.84,195,1.036,196,1.384,197,1.036,198,0.84,199,1.036,200,0.756,201,1.036,202,0.84,203,0.983,204,1.036,205,0.512,206,0.797,207,1.036,208,0.012,209,0.012,210,2.307,274,3.454,279,0.452,280,1.635,283,1.394,309,3.636,313,1.362,364,1.153,378,1.191,380,1.635,391,1.459,396,0.543,400,1.506,401,2.594,402,1.635,404,0.933,418,1.899,434,1.549,441,1.469,442,2.734,443,2.048,450,1.825,451,1.887,466,2.068,468,2.751,470,1.549,472,2.176,490,2.984,519,2.661,538,3.132,543,2.478,557,3.96,558,2.208,559,3.132,636,1.747,673,3.454,707,5.186,808,3.96,811,3.884,817,3.884,917,3.878,918,5.032,919,2.739,920,6.059,921,4.538,922,4.538,923,6.059,924,6.293,925,5.738,926,4.538,927,3.2,928,3.2,929,3.2,930,4.538,931,4.538,932,3.2,933,4.538,934,3.132,935,5.273,936,3.132,937,3.2,938,4.538,939,3.2,940,3.2,941,3.2,942,3.2,943,4.912,944,5.738,945,3.884,946,3.2,947,3.2,948,3.2,949,3.2,950,3.2,951,3.2,952,3.2,953,3.2,954,3.2,955,3.2,956,3.2,957,3.884,958,3.884,959,3.454]],["title/components/IssueContainerComponent.html",[0,0.416,192,0.618]],["body/components/IssueContainerComponent.html",[0,0.623,1,0.595,2,0.262,3,0.262,4,1.321,5,0.734,6,0.734,7,0.209,9,0.65,21,0.734,22,2.224,23,2.135,25,1.137,27,1.137,29,1.016,32,1.836,34,2.083,37,1.508,44,1.265,47,0.47,48,0.407,54,2.06,61,1.199,62,1.145,63,0.021,64,0.845,65,0.695,66,0.813,67,0.899,68,1.054,69,1.568,70,2.04,71,0.972,72,0.87,78,1.272,83,0.607,84,0.431,89,0.817,92,0.965,94,0.226,95,0.598,96,1.31,97,1.33,98,0.862,102,0.596,131,1.172,137,1.108,142,1.087,146,1.272,150,1.238,153,1.437,155,0.921,168,0.565,169,0.921,170,1.703,171,1.137,172,1.412,173,0.734,176,0.734,177,0.595,178,0.734,179,0.362,180,0.734,181,0.595,182,0.73,183,0.734,184,0.595,185,0.734,186,0.565,187,1.137,188,0.595,189,0.734,190,0.595,191,0.734,192,0.775,193,0.734,194,0.595,195,0.734,196,0.595,197,0.734,198,0.595,199,0.734,200,0.536,201,0.734,202,0.595,203,0.696,204,0.734,205,0.362,206,0.565,207,0.734,208,0.01,209,0.01,275,2.425,279,0.784,283,1.079,291,1.636,294,1.321,309,2.226,311,2.213,341,2.841,345,1.336,353,3.618,358,2.226,359,1.412,364,1.549,378,1.456,380,1.265,384,1.565,386,2.674,387,2.674,391,1.45,392,1.071,396,0.385,400,1.646,401,1.336,402,1.549,404,1.828,408,1.585,411,0.862,416,1.265,417,2.062,418,1.549,419,1.636,424,1.745,426,2.126,428,0.912,429,2.062,430,2.502,434,1.654,436,1.023,437,1.265,446,1.087,450,1.413,452,2.186,453,2.334,454,2.769,455,2.325,459,1.941,466,1.199,470,1.199,488,1.684,490,2.925,496,3.682,504,4.147,520,1.437,530,3.007,534,2.674,543,1.919,555,2.425,557,3.344,558,1.565,559,2.425,595,2.425,669,3.677,698,3.687,725,1.565,768,2.06,808,2.425,861,3.007,862,3.007,868,1.941,872,1.941,873,1.941,877,1.726,899,3.007,917,3.802,959,2.674,960,4.933,961,1.941,962,3.513,963,3.513,964,4.845,965,4.845,966,3.513,967,4.845,968,3.513,969,3.513,970,4.845,971,3.513,972,5.545,973,2.267,974,2.267,975,2.267,976,3.513,977,2.06,978,3.513,979,3.513,980,5.242,981,2.267,982,5.242,983,2.267,984,2.267,985,3.513,986,3.513,987,2.267,988,3.513,989,3.513,990,3.513,991,3.513,992,2.267,993,4.845,994,2.267,995,3.513,996,3.007,997,3.007,998,3.513,999,3.007,1000,2.267,1001,2.267,1002,2.267,1003,2.267,1004,2.267,1005,2.267,1006,2.267,1007,2.267,1008,2.267,1009,2.267,1010,4.301,1011,2.267,1012,1.941,1013,2.267,1014,2.267,1015,2.267,1016,2.267,1017,2.267,1018,2.267,1019,2.267,1020,2.267,1021,2.267,1022,2.267,1023,6.137,1024,3.513,1025,2.267,1026,2.267,1027,2.267,1028,2.267,1029,2.267,1030,2.267,1031,3.007,1032,3.007,1033,4.845,1034,4.845,1035,2.425,1036,3.007]],["title/components/IssueDetailsComponent.html",[0,0.416,194,1.015]],["body/components/IssueDetailsComponent.html",[0,0.716,1,1.097,2,0.484,3,0.484,4,1.284,5,1.353,6,1.353,7,0.385,9,0.675,21,1.353,22,2.409,23,2.286,25,1.762,27,1.762,29,1.43,32,2.235,37,1.286,47,0.461,48,0.751,62,0.987,63,0.02,64,0.856,65,0.721,66,0.721,67,0.819,68,1.151,69,1.959,70,2.066,71,1.839,72,1.026,83,0.63,84,0.794,89,1.505,94,0.417,95,0.385,96,0.987,102,0.923,137,1.11,155,1.035,168,1.041,169,1.035,170,1.672,171,1.762,172,1.869,173,1.353,176,1.353,177,1.097,178,1.353,179,0.668,180,1.353,181,1.097,182,0.709,183,1.353,184,1.097,185,1.353,186,1.041,187,1.762,188,1.097,189,1.353,190,1.097,191,1.353,192,0.87,193,1.353,194,1.683,195,1.353,196,1.097,197,1.353,198,1.097,199,1.353,200,0.987,201,1.353,202,1.097,203,1.284,204,1.353,205,0.668,206,1.041,207,1.353,208,0.015,209,0.015,279,0.591,280,1.96,313,1.778,345,2.07,378,1.429,391,1.505,400,1.429,451,1.505,474,2.609,490,2.731,636,2.282,917,3.549,1037,4.606,1038,3.577,1039,5.442,1040,5.442,1041,4.179,1042,4.179,1043,4.179,1044,4.658,1045,5.442]],["title/interfaces/IssueItem.html",[396,0.656,451,1.07]],["body/interfaces/IssueItem.html",[2,0.307,3,0.307,7,0.245,9,0.758,12,1.899,17,1.193,45,0.774,47,0.597,48,0.712,63,0.021,64,0.375,65,0.928,66,0.922,67,1.047,72,1.039,77,0.697,78,1.548,83,0.458,94,0.627,95,0.245,102,0.672,131,0.45,135,1.273,137,1.065,138,1.089,146,0.697,155,0.901,163,1.593,169,1.121,179,0.633,182,0.672,192,0.758,205,0.424,208,0.013,209,0.011,246,1.198,261,2.236,279,0.375,293,1.686,294,1.727,298,1.217,304,1.04,311,1.352,335,1.686,345,1.507,356,1.593,359,1.532,360,1.198,371,1.01,378,0.697,379,2.37,380,0.956,391,1.983,392,1.4,396,1.162,397,1.273,398,1.356,399,1.067,400,1.715,401,1.507,402,2.537,403,1.788,404,2.182,405,1.356,406,2.827,407,2.371,408,2.757,409,2.113,410,0.956,411,2.138,412,2.684,413,1.13,414,1.686,415,1.905,416,2.025,417,2.509,418,1.427,419,2.388,420,1.899,421,2.024,422,2.371,423,2.024,424,1.893,425,2.236,426,1.534,427,1.618,428,1.905,429,2.017,430,1.788,431,2.138,432,1.356,433,1.356,434,1.352,435,1.198,436,1.198,437,2.262,438,1.273,439,1.356,440,1.356,441,2.267,442,1.198,443,2.138,444,2.272,445,1.356,446,2.272,447,1.13,448,1.273,449,1.356,450,1.593,451,1.555,452,1.198,453,1.01,454,1.198,455,1.067,456,2.138,457,1.13,458,1.067,459,1.198,460,1.356,461,1.356,462,1.067,463,1.273,464,1.356,465,1.356,466,2.339,467,1.686,468,1.899,469,2.684,470,2.085,471,2.684,472,1.899,473,1.356,474,1.899,475,1.356,476,1.356,477,1.356,478,2.024,479,1.356,480,1.273,481,1.273,482,1.788,483,1.13,484,1.273,485,1.198,486,1.899,487,1.899,488,1.273,489,1.13]],["title/components/IssueListComponent.html",[0,0.416,196,1.015]],["body/components/IssueListComponent.html",[0,0.708,1,1.062,2,0.468,3,0.468,4,1.242,5,1.309,6,1.309,7,0.373,9,0.661,21,1.309,22,2.401,23,2.278,25,1.725,27,1.725,29,1.407,32,2.224,37,1.259,47,0.537,48,0.727,60,3.713,61,1.819,62,0.956,63,0.02,64,0.93,65,0.706,66,0.706,68,1.132,69,1.928,70,2.033,71,1.82,72,1.101,83,0.616,84,0.769,89,1.457,94,0.404,95,0.373,96,0.956,102,0.903,106,4.56,137,1.095,142,2.554,155,1.013,168,1.007,169,1.013,170,1.636,171,1.725,172,1.845,173,1.309,176,1.309,177,1.062,178,1.309,179,0.647,180,1.309,181,1.062,182,0.686,183,1.309,184,1.062,185,1.309,186,1.007,187,1.725,188,1.062,189,1.309,190,1.062,191,1.309,192,0.647,193,1.309,194,1.062,195,1.309,196,1.662,197,1.309,198,1.062,199,1.309,200,0.956,201,1.309,202,1.062,203,1.242,204,1.309,205,0.647,206,1.007,207,1.309,208,0.015,209,0.015,279,0.572,280,1.919,298,1.636,313,1.721,391,1.119,400,1.398,427,1.819,437,1.919,451,1.119,455,2.142,466,1.819,483,1.721,490,2.688,636,2.209,768,3.124,917,3.493,1035,3.677,1036,4.56,1046,4.533,1047,3.462,1048,5.327,1049,5.327,1050,4.045,1051,4.045,1052,5.327,1053,5.327,1054,5.327,1055,5.327]],["title/components/IssueNavComponent.html",[0,0.416,198,1.015]],["body/components/IssueNavComponent.html",[0,0.586,1,0.647,2,0.285,3,0.285,4,1.151,5,0.798,6,0.798,7,0.227,9,0.628,16,2.197,17,1.074,18,1.796,21,0.798,22,2.254,23,2.139,25,1.213,27,1.213,29,1.071,31,2.944,32,2.03,33,3.416,34,2.409,37,1.515,44,0.888,45,1.092,47,0.505,48,0.814,52,2.197,54,1.446,59,2.046,61,1.547,62,1.071,63,0.021,64,0.77,65,0.76,66,0.671,67,0.946,68,1.271,69,1.856,70,2.096,71,1.803,72,1.073,73,2.045,74,2.969,75,2.475,76,2.658,77,1.19,78,1.19,83,0.71,84,0.712,88,0.938,89,0.888,90,1.562,92,1.049,94,0.246,95,0.227,96,1.486,98,0.938,102,0.635,111,1.562,131,1.165,137,1.08,138,0.635,146,1.505,155,1.219,160,1.346,168,0.614,169,0.712,170,1.151,171,1.213,172,1.869,173,0.798,176,0.798,177,0.647,178,0.798,179,0.394,180,0.798,181,0.647,182,0.418,183,0.798,184,0.647,185,0.798,186,0.614,187,1.213,188,0.647,189,0.798,190,0.647,191,0.798,192,0.394,193,0.798,194,0.647,195,0.798,196,0.647,197,0.798,198,1.329,199,0.798,200,0.583,201,0.798,202,0.647,203,0.757,204,0.798,205,0.394,206,0.614,207,0.798,208,0.01,209,0.01,234,2.857,279,0.349,280,2.211,283,1.151,291,1.724,304,0.647,307,3.957,313,1.049,341,2.197,345,1.425,348,3.853,350,3.853,351,3.853,353,2.586,356,1.506,362,3.193,363,4.673,364,1.823,366,2.61,368,1.876,369,3.044,370,2.852,371,1.925,378,1.329,391,1.254,400,0.984,408,2.284,426,1.988,451,1.803,453,2.18,467,1.594,483,1.049,490,2.941,542,1.702,636,1.346,669,2.197,670,2.586,801,2.586,843,3.207,904,1.876,917,3.823,957,3.207,958,3.207,959,2.852,1044,2.11,1056,4.961,1057,2.11,1058,3.747,1059,3.747,1060,3.747,1061,5.062,1062,3.747,1063,3.747,1064,3.747,1065,2.466,1066,2.466,1067,5.445,1068,5.445,1069,3.747,1070,3.747,1071,2.466,1072,2.466,1073,3.747,1074,2.466,1075,2.466,1076,2.466,1077,2.466,1078,2.466,1079,2.466,1080,2.11,1081,2.11,1082,3.879,1083,3.879,1084,2.466,1085,3.207,1086,2.466,1087,2.466,1088,2.466,1089,3.747,1090,2.466,1091,2.466,1092,2.466,1093,5.062,1094,3.747,1095,3.747,1096,3.747,1097,3.747,1098,3.747,1099,4.333,1100,3.747,1101,3.747,1102,3.747,1103,3.747,1104,2.11,1105,2.11,1106,2.466,1107,1.562,1108,2.466,1109,3.747,1110,2.466,1111,2.466,1112,2.466,1113,2.466,1114,2.466,1115,2.466,1116,2.466,1117,2.466,1118,3.747,1119,3.747,1120,3.207]],["title/injectables/KatanaService.html",[33,1.975,271,1.555]],["body/injectables/KatanaService.html",[2,0.263,3,0.263,7,0.209,9,0.436,17,1.228,18,1.685,24,1.437,29,1.017,31,2.866,32,1.836,33,1.796,34,2.153,35,3.788,36,2.774,37,1.412,42,2.524,44,1.889,45,1.025,47,0.578,54,2.062,59,3.265,60,3.075,61,1.2,62,1.239,63,0.021,64,0.741,65,0.767,66,0.859,67,0.729,68,1.192,69,1.569,70,1.2,71,1.534,72,1.052,73,1.586,74,2.062,76,2.062,77,1.815,78,0.923,79,2.675,81,0.774,82,2.842,83,0.692,84,0.431,85,3.071,88,0.863,89,0.817,91,1.942,92,0.965,93,1.437,94,0.226,95,0.209,96,1.45,97,1.331,98,1.994,102,0.596,108,3.203,111,1.437,112,5.117,120,1.413,121,3.688,122,4.934,125,2.647,127,3.009,131,1.179,137,0.961,142,1.685,146,0.596,150,3.029,153,1.437,154,2.675,155,1.192,160,3.029,172,1.254,208,0.01,209,0.01,233,1.942,258,2.426,271,1.73,275,1.566,278,2.426,279,0.321,283,1.08,291,2.385,298,0.697,304,0.923,308,3.345,311,1.469,318,1.566,326,4.148,327,3.991,335,0.965,356,1.413,358,3.071,359,0.661,362,2.842,364,0.817,366,1.685,378,0.923,392,1.382,404,1.743,409,0.912,413,1.496,414,1.496,426,1.698,427,1.654,437,1.266,441,1.569,444,1.685,447,2.062,453,0.863,456,1.586,457,1.496,463,1.685,466,2.041,512,2.675,520,2.227,579,2.675,639,3.009,669,1.331,686,2.675,734,2.426,766,3.688,801,2.426,814,2.675,836,1.566,853,3.683,904,2.675,934,3.828,936,3.619,1099,1.942,1105,4.748,1121,1.942,1122,4.846,1123,3.515,1124,3.515,1125,4.846,1126,3.515,1127,2.269,1128,4.846,1129,3.515,1130,4.303,1131,3.009,1132,3.515,1133,2.269,1134,3.515,1135,2.269,1136,3.515,1137,2.269,1138,3.009,1139,2.269,1140,3.515,1141,2.269,1142,4.846,1143,3.515,1144,4.846,1145,2.426,1146,3.683,1147,2.269,1148,4.303,1149,2.269,1150,2.269,1151,2.269,1152,2.269,1153,4.846,1154,4.846,1155,2.269,1156,2.269,1157,2.269,1158,2.269,1159,1.942,1160,1.942,1161,2.269,1162,4.846,1163,3.515,1164,2.269,1165,2.269,1166,2.269,1167,4.303,1168,4.303,1169,4.303,1170,2.269,1171,3.515,1172,2.269,1173,3.515,1174,5.547,1175,2.269,1176,3.515,1177,3.515,1178,4.303,1179,2.269,1180,1.942,1181,5.785,1182,3.515,1183,3.515,1184,3.515,1185,3.009,1186,3.515,1187,3.515,1188,3.515,1189,3.515,1190,3.515,1191,4.846,1192,3.515,1193,2.269,1194,3.515,1195,3.515,1196,3.009,1197,2.269,1198,2.269,1199,2.269,1200,2.269,1201,2.269,1202,2.269,1203,2.269,1204,2.269,1205,2.269,1206,1.942,1207,3.515,1208,2.269,1209,2.269,1210,2.269]],["title/classes/OptionModel.html",[95,0.357,411,1.471]],["body/classes/OptionModel.html",[2,0.532,3,0.532,7,0.424,9,0.718,29,1.496,37,1.496,39,3.666,44,1.656,45,1.687,62,1.087,63,0.021,64,0.65,65,0.61,66,0.991,67,0.871,68,1.1,83,0.532,94,0.459,95,0.533,96,1.087,102,0.981,131,0.981,192,0.925,200,1.367,208,0.016,209,0.016,275,3.174,279,0.65,283,1.777,291,2.604,304,1.207,341,4.099,359,1.687,391,2.017,409,2.753,410,1.656,411,2.201,417,2.974,1211,3.936,1212,5.786,1213,5.786,1214,5.786,1215,5.786,1216,6.644,1217,5.786,1218,5.786,1219,4.599,1220,5.786,1221,5.786,1222,6.331,1223,4.599,1224,4.599,1225,4.599,1226,4.599,1227,5.786,1228,4.599,1229,4.599]],["title/components/OptionsViewComponent.html",[0,0.416,200,0.914]],["body/components/OptionsViewComponent.html",[0,0.657,1,0.694,2,0.306,3,0.306,4,0.812,5,0.856,6,0.856,7,0.244,9,0.65,13,2.725,16,2.316,17,1.113,18,1.893,21,0.856,22,2.278,23,2.162,25,1.278,27,1.278,29,1.117,31,3.074,32,1.969,33,3.497,34,2.443,37,1.565,44,0.952,45,1.151,47,0.532,48,0.849,53,2.502,61,1.915,62,0.624,63,0.021,64,0.668,65,0.809,66,0.956,67,0.982,68,1.192,69,1.816,70,1.915,71,1.628,72,1.03,73,2.133,74,2.772,75,2.581,76,2.772,77,1.241,78,1.241,83,0.742,84,0.502,88,1.005,89,0.952,90,1.675,92,1.125,94,0.264,95,0.364,96,1.391,98,1.502,102,0.67,125,3.215,131,1.035,137,0.844,138,0.889,142,1.267,155,0.751,168,0.658,169,0.751,170,1.213,171,1.278,172,1.635,173,0.856,176,0.856,177,0.694,178,0.856,179,0.423,180,0.856,181,0.694,182,0.448,183,0.856,184,0.694,185,0.856,186,0.658,187,1.278,188,0.694,189,0.856,190,0.694,191,0.856,192,0.423,193,0.856,194,0.694,195,0.856,196,0.694,197,0.856,198,0.694,199,0.856,200,1.239,201,0.856,202,0.694,203,0.812,204,0.856,205,0.423,206,0.658,207,0.856,208,0.011,209,0.011,234,2.925,256,5.106,257,4.631,261,1.906,279,0.374,280,2.021,283,1.213,291,1.798,294,1.452,304,0.694,307,4.063,311,1.348,313,1.125,318,1.824,339,3.935,348,3.99,350,3.99,351,3.99,353,2.725,362,3.291,363,5.106,364,2.12,366,2.925,368,2.012,369,3.116,370,3.005,371,1.994,374,3.38,378,1.037,384,1.824,391,1.307,396,0.448,400,1.037,409,2.624,410,0.952,411,2.482,413,1.68,414,1.68,415,2.108,417,2.505,422,2.366,424,1.422,434,1.348,489,1.68,519,2.316,531,3.005,539,3.005,676,2.012,732,3.005,734,1.824,746,4.488,891,2.725,1031,3.38,1032,3.38,1082,4.046,1083,4.046,1120,3.38,1185,2.262,1230,2.012,1231,3.38,1232,3.38,1233,5.243,1234,5.243,1235,3.948,1236,2.643,1237,2.643,1238,3.948,1239,2.643,1240,3.38,1241,3.38,1242,3.948,1243,3.948,1244,2.643,1245,2.643,1246,2.643,1247,2.643,1248,2.643,1249,2.643,1250,2.643,1251,2.643,1252,2.643,1253,2.643,1254,2.643,1255,2.643,1256,2.643,1257,2.643,1258,2.643,1259,2.643,1260,2.643,1261,2.643,1262,2.643,1263,2.643,1264,2.643,1265,2.643,1266,2.262,1267,2.643,1268,2.643,1269,3.948,1270,3.948,1271,3.948]],["title/modules/SidebarModule.html",[210,1.555,221,2.45]],["body/modules/SidebarModule.html",[2,0.574,3,0.574,7,0.457,55,2.91,63,0.02,68,0.943,72,0.986,83,0.842,84,0.943,88,1.887,94,0.681,95,0.457,120,1.995,168,1.236,184,1.869,186,1.774,188,1.955,208,0.017,209,0.017,210,2.438,212,2.709,213,4.151,214,3.143,221,4.698,223,3.843,228,4.186,229,4.186,234,2.379,255,3.776,369,2.534,628,3.776,674,3.776,879,3.776,893,3.143,911,4.616,912,4.616,1272,4.247,1273,4.247,1274,4.247,1275,4.961,1276,4.961,1277,4.961]],["title/components/StatBadgeComponent.html",[0,0.416,202,1.015]],["body/components/StatBadgeComponent.html",[0,0.704,1,1.043,2,0.46,3,0.46,4,1.22,5,1.286,6,1.286,7,0.366,9,0.493,21,1.286,22,2.397,23,2.274,25,1.704,27,1.704,29,1.545,37,1.545,44,1.896,47,0.446,48,0.714,63,0.02,64,0.744,65,0.833,66,0.526,72,0.888,83,0.46,84,0.755,94,0.396,95,0.366,137,0.984,168,0.989,169,1.001,170,1.617,171,1.704,172,1.832,173,1.286,176,1.286,177,1.043,178,1.286,179,0.635,180,1.286,181,1.043,182,0.674,183,1.286,184,1.043,185,1.286,186,0.989,187,1.704,188,1.043,189,1.286,190,1.043,191,1.286,192,0.635,193,1.286,194,1.043,195,1.286,196,1.043,197,1.286,198,1.043,199,1.286,200,0.938,201,1.286,202,1.65,203,2.106,204,1.286,205,0.635,206,0.989,207,1.286,208,0.014,209,0.014,279,0.561,304,1.382,378,1.382,400,1.828,402,2.421,404,1.959,418,2.126,450,2.116,470,2.377,490,3.032,807,4.505,877,4.006,1278,5.753,1279,5.115,1280,3.4,1281,6.721,1282,5.264,1283,5.264,1284,5.264,1285,5.598,1286,6.856,1287,6.856,1288,5.904,1289,5.264,1290,4.505,1291,3.972,1292,3.972,1293,3.972,1294,3.972,1295,3.972,1296,3.972,1297,3.972]],["title/injectables/ToastService.html",[35,2.45,271,1.555]],["body/injectables/ToastService.html",[2,0.49,3,0.49,7,0.39,9,0.755,17,1.452,20,4.698,24,2.683,29,1.577,35,3.478,37,1.439,52,3.219,62,1.297,63,0.021,64,0.776,66,0.728,68,1.044,73,2.477,77,1.112,79,5.429,80,5.855,83,0.635,84,0.805,85,2.683,94,0.423,95,0.39,96,1.297,100,5.213,121,3.222,122,3.222,131,1.093,208,0.015,209,0.015,234,2.03,271,2.449,279,0.599,283,1.979,335,3.035,362,2.483,364,1.977,369,2.163,392,1.055,400,1.853,404,1.234,419,2.602,447,3.062,666,5.081,725,2.922,785,5.206,836,2.922,869,3.222,1146,4.698,1196,4.698,1298,3.624,1299,5.489,1300,5.489,1301,4.234,1302,5.489,1303,4.234,1304,5.489,1305,4.234,1306,5.489,1307,4.234,1308,4.234,1309,6.091,1310,5.489,1311,4.234,1312,4.234,1313,4.234,1314,4.234,1315,4.234,1316,5.489,1317,5.489,1318,5.489,1319,5.489,1320,4.234,1321,4.234]],["title/interfaces/Tool.html",[47,0.328,396,0.656]],["body/interfaces/Tool.html",[2,0.292,3,0.292,7,0.232,9,0.813,12,1.826,17,1.274,45,1.11,47,0.612,48,0.453,63,0.021,64,0.356,65,0.948,66,0.944,67,1.067,72,1.021,77,1,78,1.623,83,0.441,94,0.617,95,0.232,102,0.646,131,0.427,135,1.826,137,1.03,138,1.073,146,0.662,155,0.873,163,1.532,169,1.141,179,0.734,182,0.646,192,0.879,205,0.609,208,0.013,209,0.01,246,1.137,261,2.233,279,0.356,293,1.955,294,1.688,298,1.17,304,1,311,1.3,335,1.621,345,1.449,356,1.532,359,1.685,360,1.137,371,1.449,378,0.662,379,2.485,380,0.908,391,1.933,392,1.369,396,1.161,397,1.208,398,1.287,399,1.013,400,1.764,401,2.091,402,2.517,403,2.48,404,2.192,405,1.287,406,2.772,407,2.48,408,2.609,409,2.058,410,0.908,411,2.091,412,2.953,413,1.072,414,1.621,415,2.544,416,1.98,417,2.46,418,1.372,419,2.351,420,1.826,421,1.946,422,2.31,423,1.946,424,1.844,425,2.178,426,1.657,427,1.3,428,2.544,429,2.178,430,2.072,431,2.789,432,1.287,433,1.287,434,1.568,435,1.137,436,1.137,437,2.323,438,2.454,439,1.946,440,1.946,441,2.175,442,1.719,443,2.072,444,2.202,445,1.287,446,2.202,447,1.621,448,1.826,449,2.615,450,1.532,451,1.416,452,1.137,453,0.959,454,1.137,455,1.013,456,1.719,457,1.072,458,1.013,459,1.137,460,1.287,461,1.287,462,1.013,463,1.208,464,1.287,465,1.287,466,2.049,467,1.072,468,1.208,469,1.287,470,1.568,471,1.287,472,1.208,473,1.287,474,1.208,475,1.287,476,1.287,477,1.287,478,1.946,479,1.287,480,1.208,481,1.208,482,1.719,483,1.072,484,1.208,485,1.137,486,1.826,487,1.826,488,1.208,489,1.072]],["title/modules/ToolPageModule.html",[210,1.555,222,2.45]],["body/modules/ToolPageModule.html",[2,0.518,3,0.518,7,0.413,47,0.379,55,2.625,63,0.021,68,0.851,83,0.857,84,0.851,88,1.702,94,0.624,95,0.413,120,1.8,137,1.022,168,1.115,181,1.822,182,0.759,190,1.822,192,1.11,194,1.822,196,1.822,198,1.822,202,1.822,203,1.375,206,1.729,208,0.016,209,0.016,210,2.287,212,2.444,213,3.962,214,2.836,222,4.765,223,3.604,228,3.926,229,3.926,234,2.146,249,2.836,252,3.089,253,3.407,369,2.286,410,1.612,490,2.02,492,3.407,893,2.836,910,3.831,911,4.329,912,4.329,915,5.352,916,5.352,918,3.407,960,3.407,1037,3.407,1046,3.407,1056,3.407,1279,3.407,1322,3.831,1323,3.831,1324,4.476,1325,4.476,1326,4.476,1327,4.476,1328,4.476,1329,4.476,1330,4.476]],["title/components/ToolSelectionComponent.html",[0,0.416,205,0.618]],["body/components/ToolSelectionComponent.html",[0,0.715,1,1.092,2,0.481,3,0.481,4,1.277,5,1.346,6,1.346,7,0.383,9,0.673,21,1.346,22,2.408,23,2.285,25,1.756,27,1.756,29,1.427,32,2.16,34,2.619,37,1.282,47,0.62,48,1.085,62,0.983,63,0.02,64,0.854,65,0.719,66,0.719,68,1.262,69,2.149,70,2.266,71,1.883,72,0.999,78,1.585,83,0.699,84,0.791,89,1.498,92,1.77,94,0.415,95,0.383,96,1.282,98,1.582,102,0.92,137,0.999,168,1.036,169,1.031,170,1.666,171,1.756,172,1.865,173,1.346,176,1.346,177,1.092,178,1.346,179,0.665,180,1.346,181,1.092,182,0.705,183,1.346,184,1.092,185,1.346,186,1.036,187,1.756,188,1.092,189,1.346,190,1.092,191,1.346,192,0.665,193,1.346,194,1.092,195,1.346,196,1.092,197,1.346,198,1.092,199,1.346,200,0.983,201,1.346,202,1.092,203,1.277,204,1.346,205,1.023,206,1.036,207,1.346,208,0.015,209,0.015,249,3.826,254,4.168,279,0.588,280,1.954,313,1.77,339,3.541,384,2.871,675,3.165,678,4.644,679,4.644,1145,3.745,1331,4.159,1332,4.159,1333,5.426,1334,5.426]],["title/injectables/ToolService.html",[34,1.393,271,1.555]],["body/injectables/ToolService.html",[2,0.373,3,0.373,7,0.297,9,0.565,17,1.52,18,2.186,24,2.04,29,1.25,30,2.451,31,3.108,33,1.645,34,1.642,36,1.544,37,1.661,44,2.187,45,1.329,47,0.63,48,0.819,53,3.646,59,2.49,60,2.674,62,1.25,63,0.021,64,0.748,65,0.878,66,0.859,67,0.866,69,1.863,70,1.556,71,1.832,77,1.197,78,1.739,83,0.703,84,0.612,88,1.225,90,2.04,93,2.04,94,0.321,95,0.297,96,0.761,97,1.889,102,0.773,108,2.939,130,3.902,131,0.976,138,0.773,146,1.655,155,1.259,169,1.094,182,0.773,208,0.012,209,0.012,261,2.319,271,2.128,279,0.455,294,1.937,298,1.937,304,1.594,364,1.642,378,1.197,379,1.833,388,2.756,395,3.902,396,0.546,400,1.197,401,2.189,402,2.073,403,2.596,404,1.542,413,1.94,424,2.271,447,1.94,466,1.556,538,3.146,542,3.146,726,3.469,829,2.756,836,2.223,1145,3.146,1159,4.926,1290,3.902,1335,2.756,1336,5.755,1337,5.755,1338,5.755,1339,5.755,1340,5.755,1341,3.22,1342,3.22,1343,3.22,1344,4.559,1345,3.22,1346,3.902,1347,4.559,1348,3.902,1349,3.22,1350,4.559,1351,4.559,1352,3.22,1353,4.559,1354,3.22,1355,4.559,1356,3.22,1357,3.22,1358,4.559,1359,4.559,1360,3.22,1361,3.22,1362,3.22,1363,4.559,1364,3.22,1365,3.22,1366,3.22,1367,3.22,1368,6.073,1369,3.22,1370,5.292,1371,6.073,1372,3.22,1373,5.292,1374,4.559,1375,3.22,1376,3.22,1377,4.559,1378,3.22,1379,4.559,1380,3.22,1381,4.559,1382,4.559]],["title/components/ToolViewComponent.html",[0,0.416,206,0.963]],["body/components/ToolViewComponent.html",[0,0.692,1,0.992,2,0.437,3,0.437,4,1.161,5,1.224,6,1.224,7,0.348,9,0.631,21,1.224,22,2.384,23,2.262,25,1.649,27,1.649,29,1.361,32,2.201,34,2.597,37,1.456,47,0.618,48,1.156,62,0.893,63,0.02,64,0.814,65,0.763,66,0.675,68,1.26,69,2.145,70,2.262,71,1.873,72,1.05,78,1.512,83,0.666,84,0.719,89,1.361,92,1.609,94,0.377,95,0.348,96,1.203,102,0.864,111,2.395,131,1.124,137,1.019,142,2.441,155,1.287,168,0.942,169,0.968,170,1.564,171,1.649,172,1.796,173,1.224,176,1.224,177,0.992,178,1.224,179,0.604,180,1.224,181,0.992,182,0.641,183,1.224,184,0.992,185,1.224,186,0.942,187,1.649,188,0.992,189,1.224,190,0.992,191,1.224,192,0.604,193,1.224,194,0.992,195,1.224,196,0.992,197,1.224,198,0.992,199,1.224,200,0.893,201,1.224,202,0.992,203,1.161,204,1.224,205,0.604,206,1.535,207,1.224,208,0.014,209,0.014,249,4.075,252,4.439,279,0.534,280,2.317,283,1.564,313,1.609,378,1.337,427,1.738,434,1.738,451,1.046,490,2.902,634,5.274,636,2.064,645,3.876,670,3.515,786,4.359,856,3.235,1085,3.235,1230,2.877,1231,4.359,1232,4.359,1383,3.78,1384,3.78,1385,3.78,1386,3.78,1387,3.78,1388,3.78,1389,5.092,1390,5.092]],["title/coverage.html",[1391,4.426]],["body/coverage.html",[0,0.798,1,1.12,7,0.393,8,3.65,32,1.31,33,2.179,34,1.536,35,2.702,36,2.045,47,0.362,63,0.02,65,0.565,72,0.642,95,0.393,137,0.642,177,1.12,179,0.682,181,1.12,184,1.12,186,1.062,188,1.12,190,1.12,192,0.682,194,1.12,196,1.12,198,1.12,200,1.008,202,1.12,205,0.682,206,1.062,208,0.015,209,0.015,243,3.246,249,3.494,252,2.943,254,2.943,256,3.246,257,2.943,261,1.381,271,2.69,272,3.65,291,1.622,339,3.789,340,3.65,377,3.65,396,1.199,397,3.389,407,1.924,411,1.622,415,1.715,428,1.715,431,1.924,451,1.18,490,3.189,491,3.65,492,3.246,493,3.65,627,4.218,628,3.246,629,3.65,674,3.246,675,4.197,695,3.246,781,3.65,879,3.246,880,3.65,917,3.924,918,3.246,919,3.65,960,3.246,961,3.65,1037,3.246,1038,3.65,1046,3.246,1047,3.65,1056,3.246,1057,3.65,1121,3.65,1211,3.65,1230,4.197,1278,3.65,1279,3.246,1280,3.65,1298,3.65,1335,3.65,1391,3.65,1392,2.702,1393,4.265,1394,7.598,1395,4.265,1396,5.515,1397,6.691,1398,5.515,1399,3.65,1400,3.246,1401,4.265,1402,6.112,1403,6.462,1404,6.112,1405,6.112,1406,5.515,1407,4.265,1408,5.515,1409,4.265,1410,4.265,1411,4.265]],["title/dependencies.html",[212,2.524,1412,2.81]],["body/dependencies.html",[63,0.021,75,3.321,81,2.076,84,0.947,88,1.895,166,3.792,208,0.017,209,0.017,212,2.721,226,5.205,227,4.628,231,4.265,234,2.915,235,4.265,236,4.628,238,3.792,369,3.106,392,1.241,410,1.795,441,1.613,893,3.157,1080,4.265,1081,5.205,1138,4.265,1346,4.265,1413,4.982,1414,7.339,1415,4.982,1416,4.982,1417,4.982,1418,4.982,1419,4.982,1420,4.982,1421,4.982,1422,4.982,1423,4.982,1424,4.982,1425,2.922,1426,4.982,1427,4.982,1428,4.982,1429,4.982,1430,4.265,1431,4.982,1432,4.982,1433,4.982,1434,4.982,1435,4.982,1436,4.982,1437,6.081,1438,4.982,1439,6.081,1440,4.982,1441,4.982,1442,4.982,1443,4.982,1444,4.982,1445,4.982,1446,4.982,1447,4.982,1448,4.982,1449,4.982,1450,4.982,1451,4.982,1452,4.982,1453,4.982,1454,4.982,1455,4.982]],["title/index.html",[279,0.464,741,2.499,1456,2.81]],["body/index.html",[7,0.603,47,0.554,56,2.897,59,2.698,61,2.232,63,0.017,67,0.984,68,0.939,70,1.687,77,1.717,81,1.687,82,2.897,125,3.571,146,1.297,160,2.698,208,0.016,209,0.016,278,3.41,293,2.102,308,3.41,341,4.1,359,1.44,396,0.838,416,1.779,426,1.599,427,1.687,441,1.958,531,3.76,555,3.41,768,3.996,785,3.76,814,3.76,869,3.76,934,3.41,977,2.897,996,4.229,997,4.229,1107,3.13,1425,2.897,1457,5.597,1458,4.229,1459,4.941,1460,6.05,1461,4.941,1462,4.941,1463,5.178,1464,4.941,1465,4.941,1466,4.941,1467,4.941,1468,4.941,1469,4.941,1470,4.941,1471,3.76,1472,6.05,1473,6.814,1474,4.941,1475,4.941,1476,4.941,1477,4.941,1478,4.941,1479,6.05,1480,4.175,1481,4.941,1482,4.941,1483,5.178,1484,4.941,1485,4.941,1486,4.941,1487,4.941,1488,4.941,1489,4.941,1490,4.941,1491,4.941,1492,4.941,1493,4.941,1494,4.941,1495,3.76,1496,4.941,1497,4.941,1498,4.941,1499,4.941,1500,4.941,1501,3.76,1502,3.41,1503,5.178,1504,4.941,1505,3.41,1506,4.941,1507,4.229]],["title/modules.html",[210,2.079]],["body/modules.html",[63,0.018,208,0.018,209,0.018,210,2.306,211,3.959,220,3.635,221,3.635,222,3.635,227,5.447,1508,7.157,1509,7.157,1510,7.157]],["title/overview.html",[1511,3.569]],["body/overview.html",[0,0.494,1,1.861,36,3.032,55,2.69,63,0.02,68,0.872,94,0.458,95,0.423,120,1.844,168,1.143,177,1.861,179,1.011,181,1.66,184,1.66,186,1.575,188,1.861,190,1.66,192,1.011,194,1.66,196,1.66,198,1.66,200,1.494,202,1.66,205,1.011,206,1.575,208,0.016,209,0.016,210,2.323,211,5.108,212,2.505,213,2.906,214,2.906,215,3.926,216,3.926,217,3.926,218,3.926,219,3.926,220,4.67,221,4.619,222,4.767,223,3.66,271,1.844,396,0.778,595,3.166,658,3.491,878,3.926,907,3.926,908,3.926,909,3.926,1272,3.926,1273,3.926,1274,3.926,1322,3.926,1323,3.926,1511,3.166,1512,4.587,1513,4.587]],["title/miscellaneous/variables.html",[1400,3.517,1514,2.81]],["body/miscellaneous/variables.html",[44,2.007,61,2.35,63,0.02,65,0.739,67,0.839,81,2.219,82,3.269,208,0.018,209,0.018,243,5.239,279,0.788,304,1.463,392,1.619,1399,4.771,1400,4.242,1514,4.771,1515,5.573,1516,5.573,1517,5.573,1518,5.573,1519,5.573,1520,5.573,1521,5.573,1522,5.573,1523,5.573,1524,5.573,1525,5.573,1526,5.573,1527,5.573,1528,4.771]],["title/additional-documentation/architecture.html",[138,0.557,1495,2.499,1529,1.397]],["body/additional-documentation/architecture.html",[63,0.018,208,0.018,209,0.018,1348,5.016,1392,3.713,1495,5.094,1530,4.241,1531,5.861,1532,5.861]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.749,138,0.484,1502,1.969,1529,1.214]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.018,77,1.759,208,0.018,209,0.018,359,1.711,399,2.36,1502,4.624,1530,3.719]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,138,0.383,426,0.732,427,0.772,1501,1.72,1529,0.962]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.565,63,0.019,67,0.876,208,0.018,209,0.018,426,1.885,427,1.987,977,3.91,1501,5.074,1533,4.431,1534,5.822]],["title/additional-documentation/architecture/data-flow-diagram.html",[138,0.428,936,1.741,1529,1.073,1535,2.159,1536,2.522]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.018,208,0.018,209,0.018]],["title/additional-documentation/architecture/high-level-overview.html",[138,0.428,1511,1.741,1529,1.073,1537,2.159,1538,2.522]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.018,208,0.018,209,0.018]],["title/additional-documentation/processes.html",[138,0.557,298,1.008,1529,1.397]],["body/additional-documentation/processes.html",[17,1.214,39,3.623,47,0.485,52,3.353,61,1.952,63,0.018,81,1.952,208,0.018,209,0.018,291,2.175,298,2.137,359,1.667,467,2.433,494,4.352,553,4.352,977,3.353,1107,3.623,1392,3.623,1530,3.623,1539,4.894,1540,5.718,1541,4.894,1542,5.718,1543,5.718]],["title/additional-documentation/processes/node-tools.html",[47,0.242,138,0.484,977,1.673,1529,1.214]],["body/additional-documentation/processes/node-tools.html",[4,1.425,7,0.356,9,0.836,16,1.503,17,1.096,18,1.229,39,2.444,42,3.247,45,1.505,46,3.302,47,0.607,48,0.46,51,2.193,52,1.503,59,1.399,63,0.021,64,0.545,65,0.615,66,0.91,68,1.053,71,1.532,72,0.58,73,3.098,74,3.028,75,2.819,77,0.673,78,0.673,96,1.575,105,1.768,120,1.03,131,0.939,137,1.06,138,0.435,146,1.355,150,2.819,155,0.487,169,0.882,172,1.505,208,0.011,209,0.011,258,1.768,261,0.83,291,2.418,293,1.09,296,1.95,298,1.425,311,1.584,327,2.936,345,2.106,358,2.444,359,1.614,378,0.673,380,1.389,392,1.66,399,1.551,400,1.631,401,1.764,402,2.333,403,1.156,415,1.03,416,1.671,419,2.296,420,1.229,422,1.741,425,1.642,426,2.254,427,2.301,428,1.03,434,1.317,435,1.156,437,1.389,438,1.849,441,2.204,442,1.156,443,1.156,448,1.229,451,1.913,453,1.963,455,1.551,456,1.156,457,2.197,458,1.865,466,2.391,470,0.875,485,1.741,489,1.642,509,2.193,513,2.193,519,2.262,520,2.939,534,2.936,550,2.193,609,4.739,666,2.936,669,3.541,698,2.936,699,2.193,706,5.826,726,1.95,747,3.971,808,3.563,891,2.662,934,1.768,943,2.193,945,2.193,977,3.412,999,2.193,1035,1.768,1104,3.302,1131,2.193,1160,4.419,1180,2.193,1206,4.419,1241,2.193,1285,2.193,1425,3.028,1430,2.193,1456,2.193,1463,2.193,1471,3.929,1511,1.768,1528,2.193,1530,1.623,1533,1.95,1537,2.193,1544,2.562,1545,2.562,1546,2.562,1547,3.858,1548,2.562,1549,2.562,1550,2.562,1551,3.858,1552,2.562,1553,2.562,1554,2.562,1555,2.562,1556,2.562,1557,2.562,1558,2.562,1559,2.562,1560,4.639,1561,2.562,1562,2.562,1563,3.858,1564,5.537,1565,4.419,1566,3.858,1567,2.562,1568,2.562,1569,3.858,1570,5.162,1571,3.858,1572,2.193,1573,2.562,1574,2.562,1575,3.858,1576,2.562,1577,3.858,1578,3.858,1579,3.858,1580,3.858,1581,2.562,1582,3.858,1583,3.858,1584,3.858,1585,3.858,1586,7.27,1587,7.137,1588,2.562,1589,3.858,1590,3.858,1591,2.562,1592,2.562,1593,2.562,1594,2.562,1595,2.562,1596,2.562,1597,2.562,1598,2.562,1599,5.537,1600,2.562,1601,2.562,1602,3.858,1603,2.562,1604,2.562,1605,2.562,1606,2.562,1607,2.562,1608,2.562,1609,2.562,1610,2.562,1611,2.562,1612,2.562,1613,2.562,1614,2.562,1615,2.193,1616,2.562,1617,2.562,1618,2.562,1619,2.562,1620,2.562,1621,2.562,1622,1.768,1623,2.562]],["title/additional-documentation/firebase.html",[81,1.121,138,0.557,1529,1.397]],["body/additional-documentation/firebase.html",[63,0.018,81,2.289,208,0.018,209,0.018,494,4.475,1392,3.726,1471,4.475,1624,5.88]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.974,82,1.673,138,0.484,1529,1.214]],["body/additional-documentation/firebase/firebase-authentication.html",[63,0.018,67,0.882,81,2.285,82,3.925,208,0.018,209,0.018,298,1.8,1530,3.713,1535,5.016]],["title/additional-documentation/firebase/database-structure.html",[138,0.484,1505,1.969,1529,1.214,1622,1.969]],["body/additional-documentation/firebase/database-structure.html",[9,0.596,17,1.432,42,2.818,47,0.504,61,2.412,63,0.016,67,0.972,69,2.091,77,1.561,81,2.03,85,3.045,120,2.391,125,3.248,148,3.657,155,1.343,160,3.912,161,4.916,163,1.932,208,0.016,209,0.016,371,2.457,379,1.932,392,1.197,396,0.815,399,1.932,402,1.731,425,2.045,451,1.329,458,2.391,462,2.88,489,2.045,538,3.317,539,3.657,543,2.624,547,4.113,553,3.657,555,4.458,574,4.113,613,4.113,695,4.526,701,3.657,722,4.113,734,3.317,748,4.526,768,2.818,1012,4.113,1107,3.045,1145,3.317,1240,4.113,1266,4.113,1392,3.768,1425,2.818,1458,4.113,1480,4.458,1483,4.113,1502,3.317,1505,4.944,1541,5.528,1565,4.113,1572,4.113,1615,4.113,1622,4.458,1625,4.806,1626,4.806,1627,4.806,1628,5.948,1629,5.948,1630,4.806,1631,6.049,1632,4.806,1633,4.806,1634,4.806,1635,4.806,1636,4.806,1637,4.806,1638,4.113,1639,4.806,1640,4.806,1641,4.113,1642,4.806]],["title/additional-documentation/firebase/firestore-wrapper.html",[138,0.484,1425,1.673,1480,1.969,1529,1.214]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.711,17,1.216,23,1.391,45,1.32,47,0.384,48,0.814,50,3.876,61,1.956,62,1.354,63,0.018,67,1.086,68,0.861,69,2.035,73,3.228,75,3.129,76,2.655,78,1.504,81,1.546,94,0.452,98,1.722,120,1.82,125,2.473,131,1.066,148,3.446,153,3.983,160,3.973,166,3.446,182,0.768,208,0.016,209,0.017,258,3.955,278,3.125,280,1.631,283,1.76,309,2.869,364,2.38,371,2.179,392,1.646,399,1.82,425,1.927,457,2.438,462,1.82,467,1.927,543,3.433,556,3.876,656,3.876,692,3.446,701,4.361,732,3.446,748,3.446,768,2.655,801,3.125,891,3.125,936,4.938,1035,3.125,1107,2.869,1412,3.876,1425,3.997,1457,4.904,1480,4.938,1503,4.904,1505,4.805,1507,3.876,1533,3.446,1539,3.876,1622,3.955,1631,5.381,1638,3.876,1641,4.904,1643,4.528,1644,4.528,1645,4.528,1646,5.73,1647,4.528,1648,4.528,1649,4.528,1650,4.528,1651,4.528,1652,6.286,1653,4.528,1654,4.528,1655,4.528,1656,4.528,1657,4.528,1658,4.528,1659,4.528,1660,5.73,1661,4.528,1662,4.528,1663,4.528,1664,4.528,1665,4.528,1666,6.286,1667,5.73,1668,4.528,1669,4.528,1670,4.528,1671,4.528,1672,4.528,1673,4.528]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["0",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["15.1.10",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1320,"title":{},"body":{"injectables/ToastService.html":{}}}],["16",{"_index":1512,"title":{},"body":{"overview.html":{}}}],["2",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.4.1",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["3/3",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1321,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1513,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":886,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_log(collectiontitl",{"_index":1672,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1336,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1337,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":499,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["abstract",{"_index":1576,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["ac",{"_index":495,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1098,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1389,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["account.if",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":630,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activatedrout",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["activetab",{"_index":500,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["add",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["add/remov",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1529,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["afauth",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":920,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["along",{"_index":1642,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1586,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["alt_attribut",{"_index":1605,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["altcondit",{"_index":1610,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["andhow",{"_index":1554,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["angular",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":893,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1242,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1567,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1506,"title":{},"body":{"index.html":{}}}],["appli",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["application/json",{"_index":1162,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["approut",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["architectur",{"_index":1495,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1261,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1271,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["async",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["auth",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["auth().currentuser.email",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().getredirectresult",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1150,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1582,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["b",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["background",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1282,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1329,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1283,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1284,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1280,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1292,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1291,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1293,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1289,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1279,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["basic",{"_index":1131,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["be",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["befor",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behind",{"_index":1561,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["belong",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1546,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["best",{"_index":1542,"title":{},"body":{"additional-documentation/processes.html":{}}}],["better",{"_index":1497,"title":{},"body":{"index.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1636,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{}}}],["blueprint",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1138,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["bootstrap",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1215,"title":{},"body":{"classes/OptionModel.html":{}}}],["bottom",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["box",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":342,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":346,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":347,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":914,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":177,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1466,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1510,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":341,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":965,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1306,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":633,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":349,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1457,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["c.id",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["call_missed_outgo",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["canvasitem",{"_index":1564,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1589,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1604,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["canvasitem.upd",{"_index":1583,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["card",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["card'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1325,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":921,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":922,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":919,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":927,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":928,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":926,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":937,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":932,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":929,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":918,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":894,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1584,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["catch(console.error",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["categor",{"_index":398,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":261,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{}}}],["categories'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":913,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":179,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1264,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1260,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1263,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1606,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["certain",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["check_circl",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1430,"title":{},"body":{"dependencies.html":{},"additional-documentation/processes/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1590,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["chip",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1277,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":631,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":632,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":629,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:20",{"_index":637,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:27",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:33",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:41",{"_index":638,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:57",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":628,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["choice.text",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["chosen",{"_index":1355,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":95,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1312,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["client",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/processes/node-tools.html":{}}}],["clone",{"_index":1475,"title":{},"body":{"index.html":{}}}],["close",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1626,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":907,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":908,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":909,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1272,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1273,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1274,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1322,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1323,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditorcompon",{"_index":181,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collect",{"_index":1631,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1673,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{}}}],["command",{"_index":1485,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":911,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":934,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["compodoc",{"_index":1532,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component'",{"_index":1078,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1069,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1570,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1507,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(`${course.course_cod",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(err",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1307,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":636,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1127,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["constructor(opt",{"_index":1217,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["container'},{'nam",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1328,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":962,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":963,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":961,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:114",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:128",{"_index":983,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:138",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":974,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":973,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":971,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:43",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:63",{"_index":975,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:78",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:95",{"_index":981,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":960,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["continu",{"_index":1270,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["control",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1618,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["core",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":274,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{}}}],["course'",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course.account",{"_index":778,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1086,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1091,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1084,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1388,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":779,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["coursechipcompon",{"_index":184,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":883,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":186,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1052,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1053,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":188,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["cover",{"_index":1530,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["coverag",{"_index":1391,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{}}}],["credenti",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1068,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1079,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1089,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["d3",{"_index":1080,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":936,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["databas",{"_index":1505,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["databaseurl",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datatyp",{"_index":1629,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1652,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1551,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["declar",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1607,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["delet",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["depend",{"_index":212,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1463,"title":{},"body":{"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["describ",{"_index":1533,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["desir",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":982,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":345,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["details'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1326,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1039,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1040,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1038,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1041,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1042,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1037,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["develop",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1536,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{}}],["direct",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1620,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["disabl",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["discov",{"_index":427,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/processes/node-tools.html":{}}}],["discover(canvasitem",{"_index":1566,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["discoveri",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1123,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1132,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":415,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{}}}],["discoveroption}",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["dismiss",{"_index":1310,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":400,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["dist",{"_index":1484,"title":{},"body":{"index.html":{}}}],["div",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["do",{"_index":1350,"title":{},"body":{"injectables/ToolService.html":{}}}],["doc",{"_index":1500,"title":{},"body":{"index.html":{}}}],["document",{"_index":1392,"title":{},"body":{"coverage.html":{},"additional-documentation/architecture.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1254,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1319,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":896,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1067,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1061,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["dsv",{"_index":1081,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1346,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["e.messag",{"_index":1313,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1315,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1316,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{}}}],["easi",{"_index":1644,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1630,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["editor",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["editor'",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1330,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":497,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":498,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":493,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:105",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:128",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":492,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":431,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["editortab.readonli",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":980,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1663,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["empty/miss",{"_index":1596,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["enabl",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["end",{"_index":1487,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1502,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1613,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1167,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{}}}],["error('cours",{"_index":1161,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1155,"title":{},"body":{"injectables/KatanaService.html":{}}}],["etc",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["even",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["ex",{"_index":938,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["exist",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["expand",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["export",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1656,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1667,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1614,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["fall",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["feedback",{"_index":344,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1381,"title":{},"body":{"injectables/ToolService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["filenam",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["fill",{"_index":1621,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["filter",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["fire",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firebase.auth",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["firestor",{"_index":1480,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1654,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1650,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1653,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{}}}],["fit",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":426,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/processes/node-tools.html":{}}}],["fix(canvasitem",{"_index":1578,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["fix/discov",{"_index":1534,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1558,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["fixabl",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1577,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["fixedmessag",{"_index":1609,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["fixissu",{"_index":1124,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1134,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["fixopt",{"_index":428,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{}}}],["fixoption}",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1503,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1093,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1535,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["follow",{"_index":1471,"title":{},"body":{"index.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["form",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{}}}],["formcontrol",{"_index":1222,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1214,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1229,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":915,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1595,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["four",{"_index":1655,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1461,"title":{},"body":{"index.html":{}}}],["fromhttps://material.io/tools/icons/style=baselin",{"_index":1557,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["front",{"_index":1486,"title":{},"body":{"index.html":{}}}],["full",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1490,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["functionthat",{"_index":1548,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["gain",{"_index":1496,"title":{},"body":{"index.html":{}}}],["gather",{"_index":1241,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["gavel",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":741,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":966,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":979,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1136,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":634,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1062,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1070,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1360,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1364,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1125,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":924,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1474,"title":{},"body":{"index.html":{}}}],["git+https://github.com/byuitechops/canva",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":1647,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["github:byuitechops/logg",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["go",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1314,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1598,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["googl",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{}}}],["grab",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1224,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1227,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1145,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["header",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1163,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help_outlin",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1212,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["high",{"_index":1537,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/processes/node-tools.html":{}}}],["highlight",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["home/tool",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":220,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1627,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["htmlelement",{"_index":895,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1262,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["htmlstring",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1130,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1128,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1148,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1083,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["icon",{"_index":401,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["id",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["idaho",{"_index":1469,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["if(issue.statu",{"_index":1581,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["imag",{"_index":1587,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["image).attr('alt",{"_index":1603,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["image.attr('alt",{"_index":1593,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["image.attr('src",{"_index":1600,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["images.each((i",{"_index":1592,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["img",{"_index":1591,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1601,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["immedi",{"_index":1489,"title":{},"body":{"index.html":{}}}],["implement",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":279,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1665,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":271,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{}}}],["input('index",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":939,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('searchphras",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('sid",{"_index":1297,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1295,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1294,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1296,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["insert_drive_fil",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1473,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["instanceof",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instructor",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1460,"title":{},"body":{"index.html":{}}}],["integr",{"_index":494,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase.html":{}}}],["interfac",{"_index":396,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1666,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["intial",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isad",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":967,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issu",{"_index":137,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{}}}],["issue'",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1099,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1602,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["issue.questionmodel",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["issue.titl",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":190,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":192,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1043,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":964,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":194,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":451,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":930,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1101,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1085,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1087,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1100,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1102,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1571,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["issueitem.titl",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":196,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":198,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["item'",{"_index":972,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":931,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1344,"title":{},"body":{"injectables/ToolService.html":{}}}],["itself",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1092,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1635,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1309,"title":{},"body":{"injectables/ToastService.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["katana'",{"_index":1531,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["katana/server/node_tool",{"_index":1617,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.socket",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["keep",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["key",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["key.includes('katana_cours",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["last",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1347,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1488,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1563,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["learn",{"_index":1458,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["legend",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["level",{"_index":1538,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{}}],["lighten",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linter/syntax",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["list').subscribe((toollist",{"_index":1157,"title":{},"body":{"injectables/KatanaService.html":{}}}],["list'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1324,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1048,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1049,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1047,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":1050,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":1051,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1046,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["listen",{"_index":1149,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1375,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1377,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1379,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1491,"title":{},"body":{"index.html":{}}}],["locat",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["log",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logger",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["logic",{"_index":1560,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["login",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["loguserstatu",{"_index":1126,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1140,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1670,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1358,"title":{},"body":{"injectables/ToolService.html":{}}}],["made",{"_index":1572,"title":{},"body":{"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1351,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1470,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1465,"title":{},"body":{"index.html":{}}}],["major",{"_index":1559,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["mass",{"_index":1464,"title":{},"body":{"index.html":{}}}],["master",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["materi",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["materialize]{@link",{"_index":1082,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":912,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["matter",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["mcicon",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["meet",{"_index":1569,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["messag",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["minim",{"_index":1574,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["mint",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1514,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1599,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["modal",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":348,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1233,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":210,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["module.export",{"_index":1547,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["moduleitem",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["more",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1594,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["much",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["multiselect",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mute",{"_index":1504,"title":{},"body":{"index.html":{}}}],["n",{"_index":1103,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["name1",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1058,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1327,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1059,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1060,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1057,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:25",{"_index":1064,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1075,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:35",{"_index":1077,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:36",{"_index":1076,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:43",{"_index":1072,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:50",{"_index":1065,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:59",{"_index":1071,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:72",{"_index":1074,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:82",{"_index":1066,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1056,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["navigationend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["new",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{}}}],["newalttext",{"_index":1612,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["newli",{"_index":1540,"title":{},"body":{"additional-documentation/processes.html":{}}}],["newstatu",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1481,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":925,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":977,"title":{"additional-documentation/processes/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{}}}],["node_tool_template.j",{"_index":1619,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["nodej",{"_index":1477,"title":{},"body":{"index.html":{}}}],["none",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["nosql",{"_index":1628,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1662,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1645,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1299,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1479,"title":{},"body":{"index.html":{}}}],["null",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["number",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["numer",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1094,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1257,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["observ",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1539,"title":{},"body":{"additional-documentation/processes.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":891,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["onc",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":968,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":496,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onsubmit",{"_index":1234,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["open/clos",{"_index":1238,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":635,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["option.descript",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1226,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":411,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1251,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1597,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1265,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1258,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":200,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1573,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["out",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["outsid",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":897,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":898,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1511,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/processes/node-tools.html":{}}}],["packag",{"_index":1412,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":138,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["page.modul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":910,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":340,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:22",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:21",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:29",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":491,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/hom",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":917,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1278,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1095,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1096,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1097,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1499,"title":{},"body":{"index.html":{}}}],["pass",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["path",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["pathmatch",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pertin",{"_index":1664,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1281,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1382,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1348,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1493,"title":{},"body":{"index.html":{}}}],["posit",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1575,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["practic",{"_index":1543,"title":{},"body":{"additional-documentation/processes.html":{}}}],["pre",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"index.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":298,"title":{"additional-documentation/processes.html":{}},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1338,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1482,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1565,"title":{},"body":{"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1483,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["projectid",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1579,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["prop",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1649,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["providedin",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["purpos",{"_index":399,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1221,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1669,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["quizz",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.11",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1213,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":916,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["readonli",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["reason",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["recommend",{"_index":1671,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["redirect",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["redirectto",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1568,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["reg",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1624,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.searchphras",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["reject(",{"_index":1585,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["reject(new",{"_index":1154,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["remove_circl",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":884,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":933,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["report",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1476,"title":{},"body":{"index.html":{}}}],["repres",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":1266,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1651,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1588,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resolv",{"_index":1160,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["resolve(data",{"_index":1166,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["return",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["right",{"_index":1290,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1632,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rxj",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["save",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1353,"title":{},"body":{"injectables/ToolService.html":{}}}],["screenshot",{"_index":1544,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["search",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["search_term",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section.at",{"_index":1545,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["see",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["selectedcategori",{"_index":1359,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1369,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1339,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1363,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1372,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1331,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":1332,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1063,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1073,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1311,"title":{},"body":{"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1055,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1648,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/settings.json",{"_index":1494,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1638,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1122,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1658,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["session",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sessionstorage.selectedcategori",{"_index":1370,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["sessionstorage.selectedtool",{"_index":1373,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["seteditorsess",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":969,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":885,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1366,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1318,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["show",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["showeditor",{"_index":970,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1285,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["sidebar",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1276,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":881,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":882,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":880,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:17",{"_index":887,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":892,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":888,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:57",{"_index":890,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:64",{"_index":889,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":879,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":221,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["signific",{"_index":1639,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1541,"title":{},"body":{"additional-documentation/processes.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1615,"title":{},"body":{"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1562,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["singl",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{}}}],["size",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1643,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1625,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["spawn",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["split",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":272,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:20",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1211,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1218,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1219,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:113",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:125",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:142",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:158",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:19",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:24",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:29",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:36",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:47",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:49",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:63",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:82",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":339,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":397,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1121,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:108",{"_index":1133,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:177",{"_index":1135,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1129,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:54",{"_index":1147,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1139,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:74",{"_index":1137,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:95",{"_index":1141,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":627,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1275,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1298,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1301,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1305,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1303,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":490,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1335,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:23",{"_index":1345,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:36",{"_index":1349,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:40",{"_index":1352,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:44",{"_index":1357,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:49",{"_index":1356,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:54",{"_index":1342,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:58",{"_index":1343,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1354,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:64",{"_index":1361,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:67",{"_index":1362,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:72",{"_index":1365,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:75",{"_index":1367,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:78",{"_index":1341,"title":{},"body":{"injectables/ToolService.html":{}}}],["standard",{"_index":1633,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1456,"title":{"index.html":{}},"body":{"additional-documentation/processes/node-tools.html":{}}}],["startup",{"_index":1668,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":202,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1286,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1287,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["statuscolor",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1472,"title":{},"body":{"index.html":{}}}],["still",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1616,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["string",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["structur",{"_index":1622,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1243,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1165,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["such",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/processes.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["support",{"_index":1508,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1640,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1509,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1459,"title":{},"body":{"index.html":{}}}],["tab",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["tab'",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":976,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":999,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["tag_fac",{"_index":1054,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1220,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1240,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1462,"title":{},"body":{"index.html":{}}}],["tell",{"_index":1549,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tempvalu",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1478,"title":{},"body":{"index.html":{}}}],["text",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["text_rotation_non",{"_index":1608,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["the_tool_nam",{"_index":1555,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["then((cours",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["thetool",{"_index":1556,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["thing",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcategori",{"_index":1368,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1371,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1153,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1380,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1088,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1090,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1255,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1387,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1044,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1045,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"maxlin",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"minlin",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.formgroup",{"_index":1252,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1259,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1151,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.get('/tool",{"_index":1156,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/cours",{"_index":1164,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/us",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1267,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1256,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1223,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1250,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1253,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1225,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1268,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchphras",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1378,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1158,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["though",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1634,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{}}}],["time",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["titl",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1288,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1317,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1302,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1300,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1304,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["todisplay",{"_index":1552,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["toget",{"_index":1550,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["toggl",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1216,"title":{},"body":{"classes/OptionModel.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["tool.icon",{"_index":1333,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1374,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1334,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["tool_log",{"_index":1641,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["toolid",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1159,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["toollog(data",{"_index":1659,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":222,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":205,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1390,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1269,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1152,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":935,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["toolview",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":206,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1340,"title":{},"body":{"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1580,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["true",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/processes/node-tools.html":{}}}],["typeicon",{"_index":923,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1308,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1660,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/processes/node-tools.html":{}}}],["understand",{"_index":1498,"title":{},"body":{"index.html":{}}}],["unexpectedli",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["univers",{"_index":1468,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["up",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"index.html":{}}}],["updat",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/processes/node-tools.html":{}}}],["uri",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["useabl",{"_index":978,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user'",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1637,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1142,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1661,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["valid",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{}}}],["validators.requir",{"_index":1228,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["variabl",{"_index":1400,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/processes.html":{},"additional-documentation/processes/node-tools.html":{}}}],["verifi",{"_index":273,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["via",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1231,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1232,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1230,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1383,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1385,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1386,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1248,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1384,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1247,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1245,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1235,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1249,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1246,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1244,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1236,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1237,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1239,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('editor",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["visibl",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["want",{"_index":1611,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["warn",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1146,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/discov",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/fix",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":343,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["whichev",{"_index":1492,"title":{},"body":{"index.html":{}}}],["white",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["willtel",{"_index":1553,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["window",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1143,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1376,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1144,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["without",{"_index":1104,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["word",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/processes/node-tools.html":{}}}],["work",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{},"index.html":{}}}],["workaround",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1501,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1425,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/processes/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1657,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.git",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["wrapper.j",{"_index":1646,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["write",{"_index":1623,"title":{},"body":{"additional-documentation/processes/node-tools.html":{}}}],["ws",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["young",{"_index":1467,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to \nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to \n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     * \n     * This will also retrieve the list of tools from the Katana service when it is\n     * created. \n     * \n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools',\n        component: ToolSelectionComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /** \n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            let provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                })\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from '../../authguard.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button.\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, so styling can be applied\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:21\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, so styling can be applied\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the \nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor) \ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can \ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is \ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /** \n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor) \n     * can also be passed in.\n     */\n    @Input('searchPhrase') searchPhrase: string;\n\n    /**\n     * Element reference to the editor div itself so we can \n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is \n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded: boolean = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        let EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        let searchBox = window['ace'].require('ace/searchbox');\n\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            let code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption(\"minLines\", 10);\n        this.editor.setOption(\"maxLines\", 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.searchPhrase) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.searchPhrase, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption(\"maxLines\", this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:27\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:24\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:19\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:29\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:36\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:47\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Course, IssueItem } from './interfaces';\n\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL location of the user in Katana.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param _location The current URL location of the user in Katana.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is intialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is intialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            }\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:18\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:36\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:35\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:108\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:54\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.http.get('/tool-list').subscribe((toolList: any): any => {\n                this.toolService.toolList = toolList;\n                resolve();\n            }, reject);\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n            this.http.post('/course-retrieval', body, { headers: headers }).subscribe(\n                (data) => {\n                    resolve(data);\n                },\n                (err) => {\n                    this.toastService.toastError(err);\n                    console.error(err);\n                });\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     */\n    logUserStatus(userEmail: string, message: string) {\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/user-status', { userEmail, message }, { headers: headers });\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/discover`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/fix`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    // Save the option values for each issue, but remove the formGroup and questionModel\n                    course.issueItems.forEach(issueItem => {\n                        issueItem.issues.forEach(issue => {\n                            if (issue.formGroup) {\n                                issue.optionValues = issue.formGroup.value;\n                                delete issue.formGroup;\n                                delete issue.questionModel;\n                            }\n                        });\n                    });\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:78\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:54\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:58\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:23\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:36\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:40\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:62\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:49\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:44\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:64\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:72\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\nimport { AuthGuardService } from './authguard.service';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : git+https://github.com/byuitechops/canvas-api-wrapper.git\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall and use git to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\nAfter step 3 is complete...\n\n(Firestore auth file)\n\n(Canvas developer key)\n\nRun ng build --prod to build the production files\n\nRetrieve the production files from /dist and deploy them from a server however you would like\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nArchitecture\nYou can gain a better understanding of how each part of Katana works through these docs:\nFirebase Authentication\nFirestore Wrapper\nDiscover & Fix Workflow\nNode Tools\nServer Endpoints\nFlags\n\n\n\nFlag\nUse\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: \"AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc\",\n        authDomain: \"katana-24a36.firebaseapp.com\",\n        databaseURL: \"https://katana-24a36.firebaseio.com\",\n        projectId: \"katana-24a36\",\n        storageBucket: \"katana-24a36.appspot.com\"\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/processes.html":{"url":"additional-documentation/processes.html","title":"additional-page - Processes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/processes/node-tools.html":{"url":"additional-documentation/processes/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nInsert screenshots to complete this section.At the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\nmodule.exports = {\n    discover, // the discover functionthat will tell the tool what items toget from Canvas and decide how todisplay them\n    fix, // the fix function that willtell the tool what items to fix andhow to do it\n    id: 'the_tool_name',\n    title: 'The Tool Name',\n    description: 'A description of thetool',\n    icon: 'A one word icon name fromhttps://material.io/tools/icons/style=baseline',\n    toolType: 'fix/search Discover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings\n\n(This will cover the structure of a basic node tool, how to write one, add it to the server, and deploy it)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\n(This will cover the flow of authentication using Firebase)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that tracks datatypes much easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
