var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.014,1,0.624]],["body/components/AppComponent.html",[0,0.024,1,1.066,2,0.221,3,0.188,4,0.797,5,0.738,6,0.797,7,0.157,8,2.524,9,0.738,10,1.592,11,1.483,12,1.51,13,1.032,14,4.205,15,1.032,16,4.205,17,0.221,18,0.526,19,1.748,20,0.564,21,2.205,22,1.851,23,0.973,24,1.957,25,1.334,26,3.475,27,0.682,28,3.007,29,0.533,30,0.03,31,0.526,32,0.263,33,0.405,34,0.881,35,1.001,36,1.4,37,3.007,38,0.432,39,0.188,40,3.267,41,5.252,42,3.007,43,0.86,44,0.928,45,0.738,46,2.524,47,1.366,48,1.366,49,1.261,50,2.524,51,1.08,52,0.188,53,0.177,54,3.007,55,3.529,56,3.007,57,1.778,58,0.693,59,1.366,60,3.007,61,0.669,62,1.19,63,1.484,64,1.4,65,1.261,66,1.886,67,3.007,68,4.205,69,4.205,70,2.205,71,1.166,72,3.007,73,3.007,74,2.486,75,3.529,76,4.205,77,1.192,78,3.007,79,1.366,80,2.524,81,4.408,82,0.459,83,3.529,84,4.639,85,2.524,86,3.529,87,3.007,88,1.968,89,3.007,90,2.524,91,3.007,92,3.007,93,1.778,94,3.007,95,2.524,96,3.007,97,1.497,98,1.62,99,3.007,100,3.007,101,3.007,102,0.86,103,3.007,104,3.007,105,3.007,106,1.032,107,3.007,108,3.007,109,3.007,110,2.394,111,3.007,112,3.007,113,2.524,114,1.968,115,1.08,116,2.524,117,3.007,118,3.007,119,3.007,120,3.007,121,1.778,122,2.524,123,3.007,124,3.007,125,2.524,126,1.261,127,3.007,128,3.007,129,3.007,130,3.007,131,0.683,132,0.745,133,1.115,134,1.115,135,1.1,136,0.797,137,0.797,138,0.58,139,0.797,140,0.58,141,0.797,142,0.58,143,0.797,144,0.58,145,1.115,146,0.58,147,0.797,148,0.58,149,0.797,150,0.58,151,0.797,152,0.58,153,0.797,154,0.58,155,0.797,156,0.58,157,0.797,158,0.533,159,0.797,160,0.58,161,0.738,162,0.797,163,0.58,164,0.58,165,0.797,166,0.019,167,0.019]],["title/modules/AppModule.html",[168,1.741,169,2.115]],["body/modules/AppModule.html",[0,0.024,1,1.215,2,0.222,3,0.189,7,0.157,30,0.03,33,0.468,38,0.488,39,0.189,43,0.863,47,1.37,48,1.914,52,0.33,53,0.127,58,0.694,61,0.588,70,2.212,82,0.357,88,1.974,97,0.931,131,0.685,138,1.106,140,1.135,142,1.106,144,1.106,146,1.106,148,1.106,150,1.106,152,1.106,154,1.106,156,1.106,158,1.043,160,1.106,161,0.741,163,1.135,164,1.135,166,0.019,167,0.019,168,2.27,169,4.417,170,1.974,171,4.077,172,4.077,173,2.27,174,2.532,175,2.532,176,2.532,177,3.389,178,3.537,179,3.017,180,4.215,181,2.212,182,1.974,183,4.215,184,3.017,185,2.758,186,4.858,187,4.858,188,1.974,189,4.215,190,2.532,191,2.532,192,4.215,193,2.212,194,1.17,195,3.017,196,2.212,197,3.017,198,2.212,199,3.017,200,2.212,201,3.017,202,2.212,203,3.017,204,2.212,205,3.017,206,3.017,207,3.017,208,2.212,209,4.215,210,2.212,211,4.215,212,2.212,213,3.017,214,2.212,215,3.017,216,2.212,217,1.974,218,2.212,219,3.017,220,2.212,221,3.017,222,2.532,223,4.215,224,5.533,225,3.017,226,1.288,227,3.017,228,1.783,229,4.058,230,4.644,231,2.532,232,3.017,233,3.017,234,3.017,235,3.017]],["title/components/BreadcrumbsComponent.html",[0,0.014,138,0.624]],["body/components/BreadcrumbsComponent.html",[0,0.025,1,0.586,2,0.223,3,0.19,4,0.805,5,0.745,6,0.805,7,0.158,9,0.745,10,1.594,11,1.474,13,1.039,15,1.039,17,0.223,18,0.529,19,1.912,20,0.407,21,2.227,22,1.773,23,0.956,25,1.431,27,0.975,29,0.75,30,0.03,31,0.572,32,0.305,33,0.47,34,0.636,35,1.409,36,1.409,38,0.408,39,0.19,40,1.795,43,0.869,45,0.745,47,1.379,48,1.379,51,1.09,52,0.19,53,0.128,58,0.672,61,0.639,62,1.197,63,2.09,64,1.623,65,1.273,66,1.09,77,0.689,82,0.358,106,0.745,131,0.689,132,0.75,133,1.123,134,1.123,135,1.105,136,0.805,137,0.805,138,1.017,139,0.805,140,0.586,141,0.805,142,0.586,143,0.805,144,0.586,145,1.123,146,0.586,147,0.805,148,0.586,149,0.805,150,0.586,151,0.805,152,0.586,153,0.805,154,0.586,155,0.805,156,0.586,157,0.805,158,0.538,159,0.805,160,0.586,161,0.745,162,0.805,163,0.586,164,0.586,165,0.805,166,0.019,167,0.021,173,1.635,230,4.821,231,4.426,236,2.548,237,2.548,238,2.09,239,2.882,240,4.234,241,4.234,242,3.451,243,1.505,244,1.106,245,4.234,246,3.451,247,3.451,248,3.451,249,3.036,250,4.234,251,3.036,252,3.036,253,0.672,254,0.869,255,3.036,256,1.505,257,3.036,258,3.036,259,3.094,260,3.553,261,3.553,262,3.036,263,1.923,264,3.19,265,3.036,266,3.036,267,3.553,268,1.987,269,1.795,270,3.857,271,2.841,272,2.987,273,1.795,274,2.503,275,1.273,276,2.77,277,1.987,278,0.937,279,1.987,280,0.869,281,1.273,282,1.987,283,1.011,284,2.227,285,2.77,286,2.77,287,3.036,288,4.234,289,3.553,290,4.234,291,3.553]],["title/pipes/BypassSanitize.html",[177,1.911,292,2.115]],["body/pipes/BypassSanitize.html",[2,0.348,3,0.297,7,0.247,9,1.162,27,0.768,29,0.839,30,0.03,31,0.655,32,0.297,33,0.456,34,1.264,38,0.415,39,0.297,52,0.297,53,0.199,65,1.985,166,0.025,167,0.025,177,3.693,181,3.472,182,3.098,218,4.141,238,2.337,244,1.075,253,0.684,292,3.948,293,3.694,294,3.974,295,4.735,296,5.646,297,4.735,298,4.735,299,6.033,300,5.646,301,5.646,302,4.735,303,4.735]],["title/components/CategoriesComponent.html",[0,0.014,140,0.624]],["body/components/CategoriesComponent.html",[0,0.026,1,0.705,2,0.268,3,0.229,4,0.968,5,0.896,6,0.968,7,0.191,9,0.896,10,1.629,11,1.506,13,1.178,15,1.178,17,0.268,18,0.521,20,0.49,22,1.127,23,1.003,25,1.465,27,0.869,29,0.85,30,0.03,31,0.617,32,0.301,33,0.517,38,0.394,39,0.229,45,0.896,51,1.311,52,0.229,53,0.153,58,0.716,59,1.659,61,0.649,62,0.896,63,2.368,64,1.215,66,1.311,77,1.216,82,0.394,97,1.127,106,1.178,131,0.829,132,0.85,133,1.272,134,1.272,135,1.192,136,0.968,137,0.968,138,0.705,139,0.968,140,1.098,141,0.968,142,0.705,143,0.968,144,0.705,145,1.272,146,0.705,147,0.968,148,0.705,149,0.968,150,0.705,151,0.968,152,0.705,153,0.968,154,0.705,155,0.968,156,0.705,157,0.968,158,0.647,159,0.968,160,0.705,161,0.896,162,0.968,163,0.705,164,0.705,165,0.968,166,0.021,167,0.021,226,1.64,243,1.481,244,1.089,253,0.689,254,1.045,304,3.065,305,4.798,306,4.798,307,4.798,308,2.678,309,3.652,310,4.027,311,3.652,312,3.652,313,1.311,314,3.652,315,4.798,316,3.065,317,4.798,318,3.652,319,0.968,320,3.652,321,3.652,322,4.798,323,2.836]],["title/interfaces/Category.html",[226,0.857,324,0.793]],["body/interfaces/Category.html",[2,0.254,3,0.217,7,0.18,12,1.242,17,0.254,18,0.502,19,2.187,22,1.61,24,1.151,25,0.785,30,0.03,32,0.349,34,1.397,38,0.383,39,0.217,43,0.99,49,1.45,52,0.349,53,0.145,59,1.571,61,0.703,65,1.45,77,1.05,82,0.254,106,1.467,115,1.242,132,0.82,166,0.02,167,0.02,194,1.341,226,1.584,253,0.56,254,1.492,278,1.067,280,0.99,319,1.227,323,2.736,324,1.367,325,2.045,326,2.701,327,4.216,328,1.136,329,2.369,330,2.736,331,1.863,332,2.263,333,1.707,334,1.151,335,2.263,336,1.341,337,1.341,338,2.809,339,2.263,340,1.54,341,2.263,342,2.263,343,1.067,344,2.263,345,2.263,346,3.028,347,2.263,348,2.263,349,2.263,350,1.707,351,2.263,352,2.045,353,2.263,354,2.263,355,2.263,356,2.263,357,2.263,358,3.799,359,2.263,360,3.413,361,2.263,362,3.799,363,2.263,364,3.413,365,3.028,366,2.263,367,2.263,368,3.028,369,2.263,370,3.028,371,2.263,372,1.94,373,3.028,374,2.736,375,3.028,376,3.028]],["title/interfaces/Course.html",[82,0.238,324,0.793]],["body/interfaces/Course.html",[2,0.193,3,0.165,7,0.137,12,0.943,17,0.193,18,0.414,19,1.271,20,0.353,23,0.426,30,0.03,31,0.285,32,0.381,33,0.592,34,1.39,38,0.193,39,0.165,44,1.875,52,0.31,53,0.11,57,1.553,58,0.736,64,1.823,71,1.481,74,1.553,77,0.867,79,1.735,82,0.482,97,1.62,98,1.415,102,1.093,106,0.938,115,1.372,126,1.601,166,0.017,167,0.017,226,0.697,228,1.553,253,0.757,254,1.657,259,2.661,278,0.811,280,1.414,283,0.875,319,1.193,324,1.213,326,2.071,328,0.938,334,1.823,336,1.019,337,1.019,340,1.271,343,1.179,372,1.101,377,1.553,378,2.921,379,2.921,380,2.921,381,2.921,382,2.921,383,2.661,384,2.921,385,2.998,386,3.107,387,1.553,388,1.415,389,1.553,390,1.553,391,1.553,392,1.719,393,1.719,394,1.719,395,1.719,396,1.719,397,2.944,398,1.719,399,1.553,400,1.719,401,1.719,402,1.415,403,1.553,404,1.719,405,2.949,406,1.719,407,1.719,408,1.719,409,1.719,410,1.719,411,2.071,412,1.719,413,1.553,414,1.719,415,1.885,416,1.719,417,1.719,418,1.719,419,2.499,420,1.719,421,1.719,422,1.719,423,2.944,424,3.232,425,1.719,426,1.719,427,1.719,428,2.258,429,2.057,430,3.232,431,2.499,432,2.057,433,1.719,434,2.499,435,2.66,436,2.499,437,2.499,438,2.258,439,1.719,440,1.719,441,1.719,442,1.553,443,1.553,444,1.193,445,1.553,446,1.719,447,1.719,448,1.719,449,2.424,450,2.258,451,2.258,452,1.553,453,2.044,454,1.719,455,1.719,456,1.719,457,1.735,458,1.553,459,1.885,460,1.553,461,1.885,462,1.719,463,2.057,464,1.719,465,1.719,466,1.719,467,1.719,468,1.719,469,1.719,470,2.944,471,2.474,472,2.258,473,1.297,474,1.719,475,1.297,476,2.499,477,1.553,478,1.553,479,1.553,480,1.719,481,1.719]],["title/components/CourseChipComponent.html",[0,0.014,142,0.624]],["body/components/CourseChipComponent.html",[0,0.025,1,0.606,2,0.231,3,0.197,4,0.833,5,0.771,6,0.833,7,0.164,9,0.771,10,1.601,11,1.48,13,1.064,15,1.064,17,0.231,18,0.47,20,0.422,22,1.836,23,1.02,25,1.35,27,0.942,29,0.768,30,0.03,31,0.609,32,0.311,33,0.479,38,0.393,39,0.197,43,0.899,44,0.97,45,0.771,51,1.128,52,0.197,53,0.132,55,3.638,58,0.703,61,0.525,62,0.771,66,1.557,82,0.475,86,3.638,102,1.24,110,1.551,131,0.713,132,0.768,133,1.149,134,1.149,135,1.176,136,0.833,137,0.833,138,0.606,139,0.833,140,0.606,141,0.833,142,1.032,143,0.833,144,0.606,145,1.149,146,0.606,147,0.833,148,0.606,149,0.833,150,0.606,151,0.833,152,0.606,153,0.833,154,0.606,155,0.833,156,0.606,157,0.833,158,0.557,159,0.833,160,0.606,161,0.771,162,0.833,163,0.606,164,0.606,165,0.833,166,0.019,167,0.019,212,4.364,243,1.338,244,0.984,253,0.754,256,0.97,275,2.243,281,1.817,313,1.128,383,1.692,386,2.45,411,1.317,443,1.857,444,1.427,445,1.857,482,3.893,483,2.637,484,4.335,485,4.335,486,5.806,487,3.638,488,5.352,489,1.551,490,4.335,491,3.142,492,4.335,493,3.142,494,3.142,495,3.142,496,3.142,497,3.142,498,3.142,499,3.142,500,3.142,501,5.352,502,4.335,503,3.142,504,4.335,505,3.142,506,3.142,507,3.142,508,3.142,509,3.142,510,3.142,511,3.142,512,2.637,513,3.142,514,3.638,515,3.142,516,3.142,517,3.142,518,3.142,519,3.142,520,3.142,521,3.142,522,3.142,523,3.142,524,3.142,525,3.179,526,3.142,527,3.142,528,3.142,529,3.142,530,3.142,531,3.142,532,3.142,533,3.142,534,3.142,535,3.142]],["title/components/CourseSelectionComponent.html",[0,0.014,144,0.624]],["body/components/CourseSelectionComponent.html",[0,0.021,1,0.395,2,0.151,3,0.128,4,0.543,5,0.503,6,0.543,7,0.165,9,0.503,10,1.503,11,1.39,13,0.778,15,0.778,17,0.151,18,0.344,20,0.275,23,0.957,24,1.66,27,0.977,29,0.884,30,0.03,31,0.564,32,0.353,33,0.42,34,0.914,35,1.055,36,1.055,38,0.285,39,0.128,44,0.978,45,0.503,49,0.859,52,0.128,53,0.086,58,0.571,59,0.931,61,0.384,62,0.503,64,1.909,65,0.859,66,2.163,71,0.794,77,1.18,82,0.481,97,1.539,102,1.349,106,0.503,110,1.913,114,2.074,121,1.873,126,0.859,131,0.465,132,0.687,133,0.84,134,0.84,135,0.988,136,0.543,137,0.543,138,0.395,139,0.543,140,0.395,141,0.543,142,0.395,143,0.543,144,0.841,145,0.84,146,0.395,147,0.543,148,0.395,149,0.543,150,0.395,151,0.543,152,0.395,153,0.543,154,0.395,155,0.543,156,0.395,157,0.543,158,0.363,159,0.543,160,0.395,161,0.503,162,0.543,163,0.395,164,0.395,165,0.543,166,0.023,167,0.019,194,1.502,210,4.417,226,0.543,238,1.564,243,1.196,244,0.719,253,0.714,254,1.349,256,0.978,259,1.707,260,1.72,261,1.72,263,0.931,271,1.707,273,1.211,275,1.328,278,0.632,281,0.859,283,0.682,291,1.72,319,1.156,334,1.57,337,1.229,378,3.074,379,3.441,380,1.873,381,1.873,383,2.686,384,3.39,385,1.011,387,1.873,405,2.087,429,1.104,432,1.104,471,0.859,473,1.564,482,3.941,514,2.66,525,2.324,536,1.503,537,3.252,538,2.66,539,2.66,540,5.2,541,4.361,542,4.716,543,4.886,544,5.372,545,4.716,546,3.875,547,3.199,548,3.169,549,3.66,550,3.169,551,2.049,552,2.049,553,2.049,554,4.361,555,2.049,556,2.049,557,3.169,558,2.049,559,4.456,560,3.459,561,3.657,562,2.049,563,3.169,564,3.169,565,2.66,566,3.169,567,3.169,568,4.361,569,3.169,570,3.169,571,2.049,572,2.049,573,2.049,574,2.049,575,2.049,576,2.049,577,2.049,578,1.72,579,2.049,580,2.049,581,2.049,582,2.049,583,2.049,584,3.086,585,3.958,586,1.72,587,2.66,588,2.049,589,2.049,590,2.049,591,1.72,592,2.049,593,2.049,594,2.049,595,3.875,596,2.049,597,3.169,598,2.049,599,1.72,600,3.169,601,1.341,602,1.341,603,2.049,604,1.72,605,2.049,606,2.049,607,2.049,608,2.049,609,2.049,610,2.536,611,2.049,612,2.049,613,2.049,614,2.049,615,3.169,616,1.503,617,4.361,618,2.049,619,1.72,620,1.72,621,2.049,622,1.72,623,2.049,624,2.049,625,2.049,626,3.875,627,2.049,628,2.049,629,3.169,630,3.169,631,2.049,632,2.049,633,2.049,634,3.169,635,2.049,636,3.169,637,2.049,638,1.72,639,3.169,640,2.049,641,2.049,642,2.049,643,2.049,644,2.049,645,2.049,646,3.169,647,3.169,648,3.169,649,3.169,650,3.169,651,3.169,652,4.361,653,3.169,654,3.169,655,3.169,656,3.169,657,3.169,658,3.169,659,3.169]],["title/injectables/CourseService.html",[23,0.524,328,0.793]],["body/injectables/CourseService.html",[2,0.18,3,0.153,7,0.127,12,0.877,17,0.18,18,0.393,19,1.205,20,0.579,23,0.587,27,1.009,29,0.978,30,0.03,31,0.615,32,0.346,33,0.558,34,1.32,35,1.436,36,1.436,38,0.18,39,0.153,44,1.75,52,0.299,53,0.103,57,2.14,58,0.724,64,1.776,71,1.404,74,1.444,77,1.083,79,1.644,82,0.487,97,1.572,98,1.316,102,1.036,106,0.889,115,1.3,126,1.518,166,0.016,167,0.016,226,0.648,228,1.444,244,0.822,253,0.778,254,1.623,256,1.331,259,1.316,278,0.754,280,0.699,283,0.813,319,1.351,324,1.059,326,2,328,1.059,334,1.436,336,0.947,337,0.947,340,1.205,343,1.117,372,1.024,377,1.444,378,1.444,379,1.444,380,1.444,381,1.444,382,1.444,383,1.316,384,1.444,385,2.859,386,3.143,387,1.444,388,1.316,389,1.444,390,1.444,391,1.444,392,3.121,393,3.121,394,3.121,395,3.121,396,3.121,397,2.822,398,1.598,399,1.444,400,1.598,401,1.598,402,1.316,403,1.444,404,1.598,405,2.874,406,1.598,407,1.598,408,1.598,409,1.598,410,1.598,411,2,412,1.598,413,1.444,414,2.822,415,1.787,416,1.598,417,1.598,418,1.598,419,2.369,420,1.598,421,1.598,422,2.369,423,2.822,424,3.121,425,1.598,426,1.598,427,2.369,428,2.14,429,1.95,430,3.121,431,2.369,432,1.95,433,1.598,434,2.369,435,2.55,436,2.369,437,2.369,438,2.14,439,2.369,440,1.598,441,1.598,442,1.444,443,1.444,444,1.109,445,1.444,446,2.369,447,1.598,448,1.598,449,2.323,450,2.14,451,2.14,452,1.444,453,1.959,454,2.369,455,1.598,456,1.598,457,1.644,458,1.444,459,1.787,460,1.444,461,1.787,462,1.598,463,1.95,464,1.598,465,1.598,466,1.598,467,1.598,468,2.369,469,1.598,470,2.822,471,2.428,472,2.14,473,1.206,474,1.598,475,1.206,476,2.369,477,1.444,478,1.444,479,1.444,480,1.598,481,1.598,547,1.791,660,3.62,661,3.62,662,3.62,663,3.62,664,3.62,665,2.442,666,2.442,667,2.442,668,2.442,669,2.442,670,2.442,671,2.442,672,2.442,673,2.442,674,2.442,675,2.442,676,2.442,677,2.05,678,2.442,679,2.442,680,2.05,681,2.442,682,2.442]],["title/components/CourseSidebarComponent.html",[0,0.014,146,0.624]],["body/components/CourseSidebarComponent.html",[0,0.026,1,0.615,2,0.234,3,0.2,4,0.845,5,0.783,6,0.845,7,0.166,9,0.783,10,1.604,11,1.488,13,1.075,15,1.075,17,0.234,18,0.475,20,0.428,22,1.844,23,1.023,25,1.356,27,0.916,29,0.776,30,0.03,31,0.584,32,0.313,33,0.482,38,0.415,39,0.2,43,0.912,45,0.783,51,1.145,52,0.2,53,0.184,58,0.684,61,0.53,62,1.075,66,1.796,81,2.675,82,0.485,83,4.198,84,2.675,85,2.675,97,1.351,113,3.675,131,0.724,132,0.776,133,1.326,134,1.161,135,1.128,136,0.845,137,0.845,138,0.615,139,0.845,140,0.615,141,0.845,142,0.615,143,0.845,144,0.615,145,1.161,146,1.039,147,0.845,148,0.615,149,0.845,150,0.615,151,0.845,152,0.615,153,0.845,154,0.615,155,0.845,156,0.615,157,0.845,158,0.565,159,0.845,160,0.615,161,0.783,162,0.845,163,0.615,164,0.615,165,0.845,166,0.019,167,0.019,196,4.277,243,1.351,244,0.994,253,0.652,256,1.544,271,2.901,272,2.901,313,1.145,319,1.161,340,1.458,415,2.469,482,3.816,489,1.573,680,3.675,683,2.675,684,4.379,685,4.379,686,5.385,687,5.385,688,4.379,689,5.002,690,5.385,691,3.188,692,3.188,693,3.188,694,3.188,695,3.188,696,2.675,697,3.188,698,4.379,699,2.338,700,3.188,701,3.188,702,5.645,703,3.188,704,3.188,705,5.002,706,4.379,707,3.188,708,3.188,709,2.338,710,3.188,711,3.188]],["title/interfaces/DiscoverOption.html",[324,0.793,329,1.468]],["body/interfaces/DiscoverOption.html",[2,0.245,3,0.209,7,0.174,12,1.198,17,0.245,18,0.49,19,2.178,22,1.58,24,1.11,25,0.757,30,0.03,32,0.398,33,0.435,34,1.403,38,0.376,39,0.209,43,0.954,49,1.398,52,0.344,53,0.14,59,1.515,61,0.694,65,1.398,77,1.025,82,0.245,106,1.451,115,1.198,132,0.8,166,0.02,167,0.02,194,1.293,226,1.521,253,0.547,254,1.641,278,1.694,280,0.954,319,1.455,323,2.67,324,1.347,325,1.972,326,2.613,327,4.078,328,1.109,329,2.493,330,3.39,331,2.956,332,3.591,333,2.709,334,1.11,335,2.182,336,1.293,337,1.293,338,2.758,339,2.182,340,1.503,341,2.182,342,2.182,343,1.029,344,2.182,345,2.182,346,2.955,347,2.182,348,2.182,349,2.182,350,1.646,351,2.182,352,1.972,353,2.182,354,2.182,355,2.182,356,2.182,357,2.182,358,3.752,359,2.182,360,3.35,361,2.182,362,3.752,363,2.182,364,3.35,365,2.955,366,2.182,367,2.182,368,2.955,369,2.182,370,2.955,371,2.182,372,1.893,373,2.955,374,2.67,375,2.955,376,2.955]],["title/interfaces/Issue.html",[58,0.391,324,0.793]],["body/interfaces/Issue.html",[2,0.204,3,0.174,7,0.145,12,0.999,17,0.204,18,0.432,19,1.786,20,0.373,23,0.451,30,0.03,31,0.302,32,0.318,33,0.384,34,1.374,38,0.204,39,0.174,44,1.723,52,0.318,53,0.117,57,1.644,58,0.752,64,1.858,71,1.543,74,1.644,77,0.903,79,1.807,82,0.483,97,1.656,98,1.498,102,1.139,106,0.977,115,1.429,126,1.668,166,0.018,167,0.018,226,0.737,228,1.644,253,0.764,254,1.451,259,1.498,278,0.858,280,0.796,283,0.926,319,1.423,324,1.245,326,2.126,328,0.977,334,1.547,336,1.078,337,1.078,340,1.324,343,1.228,372,1.166,377,1.644,378,1.644,379,1.644,380,1.644,381,1.644,382,1.644,383,1.498,384,1.644,385,2.954,386,3.183,387,2.998,388,2.732,389,1.644,390,1.644,391,1.644,392,1.82,393,1.82,394,1.82,395,1.82,396,1.82,397,3.04,398,1.82,399,1.644,400,1.82,401,1.82,402,1.498,403,1.644,404,1.82,405,3.007,406,1.82,407,1.82,408,1.82,409,1.82,410,1.82,411,2.126,412,1.82,413,1.644,414,1.82,415,1.964,416,1.82,417,1.82,418,1.82,419,2.604,420,1.82,421,1.82,422,1.82,423,3.04,424,3.319,425,1.82,426,1.82,427,1.82,428,2.352,429,2.143,430,3.319,431,2.604,432,2.143,433,1.82,434,2.604,435,2.747,436,2.604,437,2.604,438,2.352,439,1.82,440,1.82,441,1.82,442,1.644,443,1.644,444,1.263,445,1.644,446,1.82,447,1.82,448,1.82,449,2.503,450,2.352,451,2.352,452,1.644,453,2.11,454,1.82,455,1.82,456,1.82,457,1.807,458,1.644,459,1.964,460,1.644,461,1.964,462,1.82,463,2.143,464,1.82,465,1.82,466,1.82,467,1.82,468,1.82,469,1.82,470,3.04,471,2.509,472,2.352,473,1.373,474,1.82,475,1.373,476,2.604,477,1.644,478,1.644,479,1.644,480,1.82,481,1.82]],["title/components/IssueCardComponent.html",[0,0.014,148,0.624]],["body/components/IssueCardComponent.html",[0,0.025,1,0.603,2,0.23,3,0.196,4,0.829,5,0.768,6,0.829,7,0.279,9,0.768,10,1.6,11,1.479,13,1.061,15,1.061,17,0.23,18,0.537,20,0.42,23,1.02,27,0.964,29,0.554,30,0.03,31,0.537,32,0.372,33,0.417,38,0.318,39,0.196,44,1.789,45,0.768,52,0.196,53,0.182,58,0.768,61,0.523,62,0.768,63,2.767,71,1.213,82,0.364,93,1.849,131,0.71,132,0.766,133,1.313,134,1.146,135,1.119,136,0.829,137,0.829,138,0.603,139,0.829,140,0.603,141,0.829,142,0.603,143,0.829,144,0.603,145,1.146,146,0.603,147,0.829,148,1.031,149,0.829,150,0.603,151,0.829,152,0.603,153,0.829,154,0.603,155,0.829,156,0.603,157,0.829,158,0.554,159,0.829,160,0.603,161,0.768,162,0.829,163,0.603,164,0.603,165,0.829,166,0.019,167,0.019,168,2.877,200,4.442,229,2.294,238,2.444,239,1.849,243,1.334,244,0.981,253,0.647,256,0.965,274,1.849,275,2.35,313,1.123,326,1.311,343,1.528,385,2.133,402,1.685,415,1.544,435,1.849,449,1.685,450,1.849,451,3.158,452,1.849,489,1.544,525,3.17,537,4.483,549,4.483,559,3.918,560,2.294,561,3.17,584,2.046,619,4.483,712,3.262,713,2.625,714,4.322,715,4.322,716,5.798,717,5.798,718,4.322,719,3.128,720,3.128,721,3.128,722,3.128,723,3.128,724,3.128,725,3.128,726,3.128,727,2.625,728,4.322,729,3.128,730,3.128,731,5.342,732,4.156,733,5.342,734,4.322,735,3.627,736,4.322,737,3.128,738,4.322,739,3.128,740,3.128,741,3.128,742,3.128,743,2.625,744,3.128,745,3.128,746,3.128,747,3.128,748,3.128,749,3.128,750,3.128,751,3.128,752,4.322,753,3.627,754,3.627]],["title/components/IssueContainerComponent.html",[0,0.014,150,0.624]],["body/components/IssueContainerComponent.html",[0,0.024,1,0.548,2,0.209,3,0.178,4,0.753,5,0.697,6,0.753,7,0.148,9,0.697,10,1.58,11,1.461,13,0.992,15,0.992,17,0.209,18,0.438,19,1.344,20,0.631,27,0.938,29,0.716,30,0.03,31,0.61,32,0.295,33,0.453,34,1.238,38,0.297,39,0.178,45,0.697,52,0.178,53,0.243,58,0.789,61,0.489,62,0.697,82,0.398,121,2.388,131,0.645,132,0.716,133,1.071,134,1.071,135,1.073,136,0.753,137,0.753,138,0.548,139,0.753,140,0.548,141,0.753,142,0.548,143,0.753,144,0.548,145,1.071,146,0.548,147,0.753,148,0.548,149,0.753,150,0.988,151,0.753,152,0.548,153,0.753,154,0.548,155,0.753,156,0.548,157,0.753,158,0.503,159,0.753,160,0.548,161,0.697,162,0.753,163,0.548,164,0.548,165,0.753,166,0.018,167,0.018,194,1.566,214,4.335,238,1.994,239,2.779,244,0.917,247,3.35,253,0.7,256,1.247,275,2.146,283,0.945,334,1.344,340,1.344,343,1.247,444,2.771,453,2.685,457,2.771,458,2.388,459,3.011,460,2.388,461,2.32,463,2.532,471,1.971,472,1.679,475,1.994,477,1.679,478,1.679,559,3.755,560,2.083,561,2.962,610,2.643,712,3.184,754,3.39,755,2.383,756,3.39,757,4.039,758,4.039,759,5.12,760,5.12,761,4.039,762,4.039,763,4.039,764,2.84,765,2.84,766,4.039,767,5.12,768,2.84,769,5.12,770,2.84,771,4.039,772,2.84,773,3.945,774,2.84,775,2.84,776,2.84,777,5.622,778,2.84,779,4.039,780,2.84,781,2.84,782,2.84,783,2.84,784,2.84,785,2.84,786,2.84,787,2.84,788,2.84,789,2.84,790,2.84,791,2.84,792,2.962,793,3.39]],["title/components/IssueDetailsComponent.html",[0,0.014,152,0.624]],["body/components/IssueDetailsComponent.html",[0,0.026,1,0.731,2,0.279,3,0.237,4,1.005,5,0.93,6,1.005,7,0.198,9,0.93,10,1.635,11,1.512,13,1.207,15,1.207,17,0.279,18,0.533,20,0.509,23,1.053,27,0.885,29,0.671,30,0.03,31,0.592,32,0.308,33,0.474,38,0.361,39,0.237,45,0.93,52,0.237,53,0.159,58,0.795,61,0.595,62,0.93,82,0.401,131,0.86,132,0.871,133,1.303,134,1.303,135,1.209,136,1.005,137,1.005,138,0.731,139,1.005,140,0.731,141,1.005,142,0.731,143,1.005,144,0.731,145,1.303,146,0.731,147,1.005,148,0.731,149,1.005,150,0.731,151,1.005,152,1.114,153,1.005,154,0.731,155,1.005,156,0.731,157,1.005,158,0.671,159,1.005,160,0.731,161,0.93,162,1.005,163,0.731,164,0.731,165,1.005,166,0.022,167,0.022,202,4.233,238,2.426,239,3.225,243,1.517,244,1.116,247,3.777,253,0.459,256,1.17,313,1.361,388,2.647,489,1.871,712,3.109,794,3.181,795,4.915,796,4.915,797,3.79,798,3.79,799,3.79,800,4.125,801,4.915]],["title/interfaces/IssueItem.html",[44,0.998,324,0.793]],["body/interfaces/IssueItem.html",[2,0.202,3,0.172,7,0.143,12,0.985,17,0.202,18,0.428,19,1.777,20,0.368,23,0.445,30,0.03,31,0.298,32,0.348,33,0.38,34,1.372,38,0.202,39,0.172,44,1.767,52,0.316,53,0.115,57,1.622,58,0.772,64,1.85,71,1.528,74,1.622,77,0.894,79,1.79,82,0.483,97,1.647,98,1.477,102,1.127,106,0.967,115,1.415,126,1.652,166,0.017,167,0.017,226,1.336,228,1.622,253,0.762,254,1.442,259,1.477,278,0.847,280,0.785,283,0.913,319,1.223,324,1.237,326,2.113,328,0.967,334,1.535,336,1.063,337,1.063,340,1.311,343,1.216,372,1.15,377,1.622,378,1.622,379,1.622,380,1.622,381,1.622,382,1.622,383,1.477,384,1.622,385,3.084,386,3.128,387,1.622,388,1.477,389,2.979,390,2.979,391,2.979,392,1.795,393,1.795,394,1.795,395,1.795,396,1.795,397,3.017,398,1.795,399,1.622,400,1.795,401,1.795,402,1.477,403,1.622,404,1.795,405,2.993,406,1.795,407,1.795,408,1.795,409,1.795,410,1.795,411,2.113,412,1.795,413,1.622,414,1.795,415,1.945,416,1.795,417,1.795,418,1.795,419,2.578,420,1.795,421,1.795,422,1.795,423,3.017,424,3.298,425,1.795,426,1.795,427,1.795,428,2.329,429,2.122,430,3.298,431,2.578,432,2.122,433,1.795,434,2.578,435,2.726,436,2.578,437,2.578,438,2.329,439,1.795,440,1.795,441,1.795,442,1.622,443,1.622,444,1.246,445,1.622,446,1.795,447,1.795,448,1.795,449,2.483,450,2.329,451,2.329,452,1.622,453,2.094,454,1.795,455,1.795,456,1.795,457,1.79,458,1.622,459,1.945,460,1.622,461,1.945,462,1.795,463,2.122,464,1.795,465,1.795,466,1.795,467,1.795,468,1.795,469,1.795,470,3.017,471,2.501,472,2.329,473,1.354,474,1.795,475,1.354,476,2.578,477,1.622,478,1.622,479,1.622,480,1.795,481,1.795]],["title/components/IssueListComponent.html",[0,0.014,154,0.624]],["body/components/IssueListComponent.html",[0,0.026,1,0.697,2,0.266,3,0.226,4,0.958,5,0.887,6,0.958,7,0.189,9,0.887,10,1.627,11,1.504,13,1.17,15,1.17,17,0.266,18,0.517,20,0.485,23,1.045,27,0.865,29,0.64,30,0.03,31,0.639,32,0.299,33,0.459,38,0.35,39,0.226,45,0.887,52,0.226,53,0.152,58,0.79,61,0.686,62,0.887,75,3.999,82,0.466,102,1.364,115,1.711,121,2.817,131,0.82,132,0.844,133,1.264,134,1.264,135,1.187,136,0.958,137,0.958,138,0.697,139,0.958,140,0.697,141,0.958,142,0.697,143,0.958,144,0.697,145,1.264,146,0.697,147,0.958,148,0.697,149,0.958,150,0.697,151,0.958,152,0.697,153,0.958,154,1.093,155,0.958,156,0.697,157,0.958,158,0.64,159,0.958,160,0.697,161,0.887,162,0.958,163,0.697,164,0.697,165,0.958,166,0.021,167,0.021,194,1.847,198,4.157,238,2.352,239,3.152,243,1.471,244,1.082,247,3.708,253,0.438,256,1.115,280,1.364,313,1.298,334,1.586,343,1.471,463,2.567,489,1.784,712,3.053,792,3.495,793,3.999,802,3.033,803,4.765,804,4.765,805,3.614,806,3.614,807,3.614,808,4.765,809,4.765,810,3.999,811,4.765,812,4.765]],["title/components/IssueNavComponent.html",[0,0.014,156,0.624]],["body/components/IssueNavComponent.html",[0,0.024,1,0.491,2,0.187,3,0.159,4,0.989,5,0.625,6,0.675,7,0.133,9,0.625,10,1.556,11,1.439,13,0.916,15,0.916,17,0.187,18,0.479,20,0.341,22,1.727,23,0.979,24,2.031,25,1.385,27,0.99,29,0.918,30,0.03,31,0.607,32,0.339,33,0.522,34,1.226,35,1.242,36,1.242,38,0.411,39,0.234,43,0.728,44,0.785,45,0.625,47,1.156,48,1.156,49,1.067,51,0.914,52,0.159,53,0.107,58,0.791,61,0.452,62,0.625,64,1.619,66,0.914,71,0.986,79,1.156,82,0.411,106,0.625,131,0.577,132,0.661,133,0.989,134,0.989,135,1.019,136,0.675,137,0.675,138,0.491,139,0.675,140,0.491,141,0.675,142,0.491,143,0.675,144,0.491,145,0.989,146,0.491,147,0.675,148,0.491,149,0.675,150,0.491,151,0.675,152,0.491,153,0.675,154,0.491,155,0.675,156,0.939,157,0.675,158,0.451,159,0.675,160,0.491,161,0.625,162,0.675,163,0.491,164,0.491,165,0.675,166,0.016,167,0.019,204,4.52,242,3.183,243,1.771,244,0.847,246,3.183,248,2.441,253,0.731,256,1.502,263,2.006,264,2.89,268,1.665,269,1.504,270,3.39,271,2.379,272,2.379,273,1.504,274,1.504,275,1.067,276,1.665,277,1.665,278,0.785,279,1.665,280,0.728,281,1.067,283,0.847,285,2.441,286,2.441,313,0.914,340,0.847,343,1.363,372,1.067,386,1.841,411,1.564,444,2.21,449,1.37,453,2.659,457,2.659,459,1.841,461,1.841,473,1.256,489,1.256,602,2.441,638,2.135,709,1.866,712,3.319,753,3.131,773,4.544,800,2.135,813,2.135,814,3.731,815,3.731,816,3.731,817,4.865,818,3.731,819,4.865,820,3.731,821,3.731,822,3.731,823,2.544,824,3.731,825,2.544,826,2.544,827,3.731,828,2.544,829,3.731,830,3.731,831,2.544,832,3.731,833,2.544,834,2.544,835,2.544,836,3.731,837,2.544,838,2.544,839,2.544,840,3.731,841,2.544,842,2.544,843,2.544,844,3.731,845,2.544,846,2.544,847,2.544,848,2.544,849,3.131,850,2.544,851,2.544,852,2.544,853,3.731,854,3.731,855,3.731,856,3.131]],["title/injectables/KatanaService.html",[24,1.076,328,0.793]],["body/injectables/KatanaService.html",[2,0.169,3,0.144,7,0.12,12,0.823,17,0.169,18,0.502,20,0.308,22,1.669,23,0.877,24,1.149,25,1.228,26,3.197,27,0.845,29,0.923,30,0.03,31,0.502,32,0.29,33,0.559,34,0.723,35,0.763,36,1.383,38,0.409,39,0.144,40,2.733,43,0.656,44,1.066,45,0.563,50,1.924,51,0.823,52,0.144,53,0.096,58,0.631,59,1.569,61,0.731,64,1.539,65,0.961,66,1.66,71,1.339,77,1.317,79,1.041,80,4.374,82,0.474,90,4.671,93,2.456,95,2.898,97,1.427,102,0.988,106,1.135,110,2.572,114,2.718,115,1.24,122,1.924,125,2.898,126,1.938,135,0.87,166,0.015,167,0.015,173,2.237,190,1.924,193,1.682,222,2.898,229,3.391,244,0.784,253,0.756,263,2.528,272,1.86,280,1.419,281,1.938,282,1.5,283,1.383,319,1.51,328,1.02,334,1.149,336,0.889,340,0.763,343,1.427,350,2.572,352,2.042,382,2.456,403,2.042,405,2.49,428,1.356,432,1.86,438,1.356,444,1.041,453,2.1,457,1.041,473,2.05,475,1.705,479,2.042,543,1.924,547,2.533,584,1.5,585,2.898,601,3.025,602,2.26,604,2.898,709,2.533,727,4.374,756,2.898,810,2.898,857,1.924,858,3.453,859,3.453,860,4.623,861,2.293,862,4.623,863,2.293,864,2.898,865,3.453,866,2.293,867,3.453,868,2.293,869,3.453,870,2.293,871,2.898,872,2.293,873,4.154,874,2.293,875,3.453,876,2.293,877,2.293,878,2.293,879,2.293,880,2.293,881,4.959,882,3.637,883,4.154,884,1.924,885,4.623,886,5.408,887,2.293,888,2.293,889,2.293,890,2.293,891,4.154,892,3.453,893,2.293,894,2.293,895,2.293,896,2.293,897,4.154,898,4.154,899,4.154,900,3.453,901,3.453,902,3.453,903,2.293,904,3.453,905,3.453,906,3.453,907,5.212,908,2.293,909,3.453,910,3.453,911,2.293,912,2.293,913,2.293,914,4.959,915,3.453,916,3.453,917,3.453,918,2.533,919,3.453,920,3.453,921,3.453,922,3.453,923,4.623,924,3.453,925,2.293,926,3.453,927,2.293,928,2.293,929,2.293,930,2.293,931,2.293,932,2.293,933,2.293,934,2.293]],["title/classes/OptionModel.html",[53,0.136,935,2.115]],["body/classes/OptionModel.html",[0,0.022,2,0.23,3,0.196,5,0.768,7,0.163,10,0.768,11,0.71,13,0.768,15,0.768,17,0.23,18,0.537,20,0.42,22,1.528,23,0.803,24,1.648,25,1.124,27,0.803,29,0.554,30,0.03,31,0.339,32,0.196,33,0.631,34,0.905,35,1.041,36,1.041,38,0.437,39,0.196,40,1.849,43,0.895,45,0.768,47,1.421,48,1.421,49,1.311,51,1.123,52,0.196,53,0.208,61,0.523,62,0.768,63,1.544,64,1.778,66,1.552,77,0.981,97,0.965,102,0.895,106,0.768,110,1.544,126,1.311,132,0.554,135,0.905,158,0.554,166,0.019,167,0.022,173,2.328,188,2.046,217,3.495,226,1.146,242,2.046,243,0.965,244,1.124,246,2.046,248,2.046,253,0.72,254,0.895,263,2.546,264,2.828,268,2.046,269,1.849,270,3.888,271,2.877,272,3.02,273,1.849,274,2.928,275,1.311,276,2.828,277,2.046,278,0.965,279,2.046,280,0.895,281,1.311,282,2.046,283,1.041,284,2.294,285,2.828,286,2.828,293,3.495,313,1.123,319,0.829,329,2.249,331,2.877,338,1.685,411,1.311,471,1.311,601,2.046,616,2.294,699,2.294,882,2.294,918,2.294,935,3.495,936,2.046,937,4.483,938,3.627,939,4.322,940,3.128,941,3.627,942,2.625,943,4.156,944,2.294,945,2.294,946,2.625,947,3.627,948,2.625,949,2.625,950,2.625,951,2.625,952,2.625,953,3.627,954,2.625,955,2.625,956,2.625,957,2.625,958,2.625,959,2.625,960,2.625,961,2.625,962,2.625,963,2.625,964,2.625,965,2.625,966,2.625,967,2.625,968,2.625,969,2.625,970,2.625,971,2.625,972,2.625,973,2.625,974,2.625,975,2.625,976,4.156,977,4.156,978,2.625,979,2.625,980,2.625,981,2.625,982,2.625,983,2.625,984,3.627,985,2.625,986,2.625]],["title/components/OptionsViewComponent.html",[0,0.014,158,0.573]],["body/components/OptionsViewComponent.html",[0,0.023,1,0.457,2,0.174,3,0.148,4,0.628,5,0.869,6,0.628,7,0.124,9,0.581,10,1.54,11,1.423,13,0.869,15,0.869,17,0.174,18,0.46,20,0.318,22,1.687,23,0.887,24,2.002,25,1.348,27,0.986,29,0.627,30,0.03,31,0.51,32,0.331,33,0.625,34,0.741,35,1.178,36,1.178,38,0.402,39,0.148,40,1.4,43,0.678,45,0.581,47,1.076,48,1.076,49,0.993,51,0.85,52,0.148,53,0.149,58,0.609,61,0.639,62,1.04,63,1.169,64,1.564,66,1.27,77,0.961,82,0.422,93,2.092,97,1.552,102,0.678,106,0.581,110,1.169,126,0.993,131,0.538,132,0.75,133,0.938,134,0.938,135,1.105,136,0.628,137,0.628,138,0.457,139,0.628,140,0.457,141,0.628,142,0.457,143,0.628,144,0.457,145,0.938,146,0.457,147,0.628,148,0.457,149,0.628,150,0.457,151,0.628,152,0.457,153,0.628,154,0.457,155,0.628,156,0.457,157,0.628,158,0.833,159,0.628,160,0.457,161,0.581,162,0.628,163,0.457,164,0.457,165,0.628,166,0.016,167,0.019,173,1.906,188,1.55,217,4.015,226,1.399,242,3.074,243,1.552,244,0.961,246,3.074,248,3.074,253,0.719,254,1.344,256,1.307,263,2.396,264,2.771,268,1.55,269,1.4,270,3.577,271,2.531,272,2.708,273,1.4,274,2.504,275,0.993,276,2.315,277,2.771,278,0.731,279,1.55,280,0.678,281,0.993,282,1.55,283,0.788,284,1.737,285,2.315,286,2.315,289,2.969,293,4.015,308,1.737,313,0.85,319,0.628,329,2.284,331,2.531,333,1.746,338,1.276,411,0.993,415,1.746,471,0.993,599,2.969,601,1.55,616,1.737,620,2.969,699,1.737,856,2.969,882,1.737,918,1.737,935,3.677,936,1.55,937,1.988,938,1.988,941,4.22,942,1.988,943,3.555,944,2.595,945,2.595,946,3.943,947,2.969,948,1.988,949,1.988,950,1.988,951,1.988,952,1.988,953,2.969,954,3.943,955,1.988,956,3.943,957,1.988,958,1.988,959,1.988,960,1.988,961,1.988,962,1.988,963,1.988,964,1.988,965,1.988,966,1.988,967,1.988,968,1.988,969,1.988,970,1.988,971,1.988,972,2.969,973,1.988,974,4.22,975,1.988,976,4.22,977,4.22,978,1.988,979,1.988,980,1.988,981,1.988,982,1.988,983,1.988,984,2.969,985,1.988,986,1.988,987,3.538,988,3.538,989,2.368,990,2.368,991,2.368,992,2.368,993,2.368,994,2.368,995,2.368,996,1.988,997,2.368,998,2.368,999,2.368,1000,3.538,1001,3.538,1002,3.538,1003,3.538]],["title/components/StatBadgeComponent.html",[0,0.014,160,0.624]],["body/components/StatBadgeComponent.html",[0,0.026,1,0.732,2,0.279,3,0.238,4,1.006,5,0.932,6,1.006,7,0.198,9,0.932,10,1.635,11,1.512,13,1.208,15,1.208,17,0.279,20,0.733,27,0.937,30,0.03,31,0.534,32,0.342,33,0.366,34,1.21,35,1.263,36,1.263,38,0.279,39,0.238,52,0.238,53,0.159,58,0.725,61,0.596,62,0.932,82,0.401,131,0.861,132,0.872,133,1.304,134,1.304,135,1.21,136,1.006,137,1.006,138,0.732,139,1.006,140,0.732,141,1.006,142,0.732,143,1.006,144,0.732,145,1.304,146,0.732,147,1.006,148,0.732,149,1.006,150,0.732,151,1.006,152,0.732,153,1.006,154,0.732,155,1.006,156,0.732,157,1.006,158,0.672,159,1.006,160,1.114,161,1.532,162,1.006,163,0.732,164,0.732,165,1.006,166,0.022,167,0.022,220,4.388,275,2.288,374,2.908,385,2.428,1004,5.022,1005,3.185,1006,4.92,1007,4.92,1008,4.92,1009,5.459,1010,6.241,1011,6.241,1012,4.92,1013,3.795,1014,3.795,1015,3.795,1016,3.795,1017,3.795]],["title/injectables/ToastService.html",[26,1.911,328,0.793]],["body/injectables/ToastService.html",[2,0.307,3,0.262,7,0.218,12,1.5,17,0.307,18,0.568,20,0.766,26,3.092,27,0.971,29,0.927,30,0.03,31,0.568,32,0.262,33,0.504,35,1.391,36,1.391,38,0.385,39,0.262,46,4.792,47,1.898,48,1.898,52,0.262,53,0.176,77,1.187,114,2.734,135,0.875,166,0.023,167,0.023,194,1.62,244,1.187,253,0.725,254,1.634,256,1.614,328,1.402,336,1.62,350,2.062,413,3.092,471,2.394,512,3.507,610,2.734,792,3.065,864,3.507,884,3.507,1018,3.507,1019,5.984,1020,5.231,1021,5.231,1022,5.231,1023,4.179,1024,5.231,1025,4.179,1026,5.231,1027,5.231,1028,5.231,1029,5.231,1030,4.179,1031,4.179,1032,4.179,1033,4.179,1034,4.179,1035,4.179,1036,5.231,1037,5.231,1038,5.231,1039,4.179,1040,4.179]],["title/interfaces/Tool.html",[61,0.391,324,0.793]],["body/interfaces/Tool.html",[2,0.244,3,0.208,7,0.173,12,1.191,17,0.244,18,0.488,19,2.176,22,1.576,24,1.104,25,0.753,30,0.03,32,0.39,34,1.407,38,0.375,39,0.208,43,0.949,49,1.39,52,0.343,53,0.139,59,1.506,61,0.715,65,1.39,77,1.021,82,0.244,106,1.449,115,1.191,132,0.797,166,0.02,167,0.02,194,1.286,226,1.628,253,0.545,254,1.461,278,1.023,280,0.949,319,1.452,323,2.659,324,1.344,325,1.96,326,2.683,327,4.188,328,1.104,329,2.789,330,3.383,331,1.786,332,2.17,333,1.637,334,1.822,335,3.582,336,1.286,337,1.286,338,2.75,339,2.17,340,1.497,341,2.17,342,2.17,343,1.023,344,2.17,345,2.17,346,2.943,347,2.17,348,2.17,349,2.17,350,1.637,351,2.17,352,1.96,353,2.17,354,2.17,355,2.17,356,2.17,357,2.17,358,3.745,359,2.17,360,3.34,361,2.17,362,3.745,363,2.17,364,3.34,365,2.943,366,2.17,367,2.17,368,2.943,369,2.17,370,2.943,371,2.17,372,1.886,373,2.943,374,2.659,375,2.943,376,2.943]],["title/components/ToolSelectionComponent.html",[0,0.014,163,0.624]],["body/components/ToolSelectionComponent.html",[0,0.027,1,0.747,2,0.285,3,0.243,4,1.027,5,0.951,6,1.027,7,0.202,9,0.951,10,1.639,11,1.515,13,1.224,15,1.224,17,0.285,18,0.541,20,0.52,23,1.017,25,1.479,27,0.809,29,0.686,30,0.03,31,0.598,32,0.312,33,0.481,38,0.405,39,0.243,45,0.951,51,1.391,52,0.243,53,0.163,58,0.729,61,0.769,62,0.951,66,1.391,82,0.405,97,1.539,131,0.879,132,0.883,133,1.322,134,1.322,135,1.219,136,1.027,137,1.027,138,0.747,139,1.027,140,0.747,141,1.027,142,0.747,143,1.027,144,0.747,145,1.322,146,0.747,147,1.027,148,0.747,149,1.027,150,0.747,151,1.027,152,0.747,153,1.027,154,0.747,155,1.027,156,0.747,157,1.027,158,0.686,159,1.027,160,0.747,161,0.951,162,1.027,163,1.123,164,0.747,165,1.027,166,0.022,167,0.022,216,4.043,243,1.539,308,2.841,313,1.391,536,2.841,538,4.184,539,4.184,578,3.251,1041,4.043,1042,3.873,1043,4.985,1044,4.985]],["title/injectables/ToolService.html",[25,0.734,328,0.793]],["body/injectables/ToolService.html",[2,0.209,3,0.178,7,0.149,12,1.023,17,0.209,18,0.439,19,2.189,20,0.382,21,2.089,22,1.737,24,0.948,25,0.919,27,1.027,29,0.834,30,0.03,31,0.511,32,0.377,33,0.454,34,1.349,35,1.803,36,1.803,38,0.346,39,0.178,43,0.815,49,1.194,52,0.321,53,0.12,59,1.294,61,0.739,65,1.194,77,1.164,82,0.298,106,1.478,115,1.023,132,0.908,166,0.018,167,0.018,194,1.104,226,1.637,253,0.621,254,1.656,256,1.249,278,0.879,280,1.467,310,2.391,319,1.073,323,2.393,324,1.156,325,1.684,326,2.687,327,4.194,328,1.156,329,2.139,330,2.393,331,1.534,332,1.864,333,1.406,334,0.948,335,1.864,336,1.104,337,1.569,338,3.031,339,2.649,340,1.707,341,2.649,342,2.649,343,1.249,344,2.649,345,2.649,346,3.355,347,3.355,348,3.355,349,1.864,350,1.406,351,1.864,352,3.031,353,3.355,354,3.355,355,3.355,356,3.355,357,2.649,358,3.544,359,1.864,360,3.081,361,2.649,362,3.544,363,1.864,364,3.081,365,2.649,366,1.864,367,1.864,368,2.649,369,1.864,370,2.649,371,1.864,372,1.697,373,2.649,374,2.393,375,2.649,376,2.649,677,2.391,1045,2.849,1046,2.849,1047,2.849,1048,2.849,1049,2.849,1050,2.849,1051,2.849,1052,2.849,1053,2.849,1054,2.849,1055,2.849,1056,2.849,1057,2.849,1058,2.849,1059,2.849,1060,2.849,1061,2.849]],["title/components/ToolViewComponent.html",[0,0.014,164,0.624]],["body/components/ToolViewComponent.html",[0,0.026,1,0.676,2,0.257,3,0.219,4,0.928,5,0.86,6,0.928,7,0.183,9,0.86,10,1.621,11,1.499,13,1.145,15,1.145,17,0.257,18,0.506,20,0.47,23,1.04,25,1.465,27,0.946,29,0.62,30,0.03,31,0.569,32,0.329,33,0.45,38,0.386,39,0.219,44,1.081,45,0.86,51,1.257,52,0.219,53,0.147,58,0.706,61,0.753,62,1.288,79,2.119,82,0.429,102,1.502,131,0.795,132,0.827,133,1.237,134,1.237,135,1.172,136,0.928,137,0.928,138,0.676,139,0.928,140,0.676,141,0.928,142,0.676,143,0.928,144,0.676,145,1.237,146,0.676,147,0.928,148,0.676,149,0.928,150,0.676,151,0.928,152,0.676,153,0.928,154,0.676,155,0.928,156,0.676,157,0.928,158,0.62,159,0.928,160,0.676,161,0.86,162,0.928,163,0.676,164,1.08,165,0.928,166,0.021,167,0.021,208,4.397,243,1.799,244,1.059,253,0.77,313,1.257,411,2.346,442,2.07,487,4.697,489,1.728,849,2.939,936,2.291,944,3.422,945,3.422,996,2.939,1041,4.397,1062,5.597,1063,3.502,1064,3.502,1065,3.502,1066,3.502,1067,4.666,1068,3.502,1069,3.502,1070,4.666,1071,4.666]],["title/coverage.html",[1072,3.71]],["body/coverage.html",[0,0.029,1,0.716,7,0.194,8,3.113,23,0.602,24,1.235,25,0.842,26,2.193,30,0.03,32,0.232,44,1.145,53,0.156,58,0.449,61,0.449,82,0.273,102,1.947,138,0.716,140,0.716,142,0.716,144,0.716,146,0.716,148,0.716,150,0.716,152,0.716,154,0.716,156,0.716,158,0.657,160,0.716,163,0.716,164,0.716,166,0.021,167,0.021,177,2.193,196,2.721,198,2.721,200,2.721,202,2.721,204,2.721,208,2.721,210,2.721,212,2.721,214,2.721,216,2.721,217,3.172,218,2.721,220,2.721,226,0.984,237,3.113,263,1.685,292,2.427,293,3.533,294,3.113,304,3.113,324,1.496,325,3.385,328,1.405,329,1.685,333,1.831,377,3.385,482,3.533,483,3.113,536,3.555,586,3.113,683,3.113,712,3.2,713,3.113,755,3.113,794,3.113,802,3.113,813,3.113,857,3.113,935,2.427,936,3.533,1004,3.113,1005,3.113,1018,3.113,1041,3.555,1072,3.113,1073,3.71,1074,3.71,1075,3.71,1076,3.113,1077,4.357,1078,3.113,1079,6.093,1080,4.847,1081,4.847,1082,5.941,1083,5.399,1084,3.71,1085,4.847,1086,4.847,1087,3.71,1088,5.399,1089,5.399,1090,3.71,1091,3.71,1092,3.113,1093,4.068,1094,3.113,1095,4.068,1096,3.113,1097,3.71]],["title/dependencies.html",[170,2.545,1098,2.695]],["body/dependencies.html",[30,0.03,39,0.285,43,1.302,47,2.504,48,2.504,166,0.024,167,0.024,170,2.978,181,4.043,182,3.607,188,2.978,191,3.819,193,3.338,584,2.978,591,3.819,696,3.819,871,3.819,1099,4.551,1100,6.598,1101,4.551,1102,4.551,1103,4.551,1104,4.551,1105,4.551,1106,4.551,1107,4.551,1108,4.551,1109,4.551,1110,4.551,1111,4.551,1112,4.551,1113,4.551,1114,4.551,1115,4.551,1116,4.551,1117,4.551,1118,4.551,1119,4.551,1120,4.551,1121,4.551,1122,5.513,1123,4.551,1124,5.513,1125,4.551,1126,4.551,1127,4.551,1128,4.551,1129,4.551,1130,4.551,1131,4.551,1132,4.551,1133,4.551,1134,4.551]],["title/index.html",[17,0.198,116,2.262,429,1.451]],["body/index.html",[0,0.026,3,0.284,7,0.236,11,1.028,30,0.024,31,0.491,71,2.295,88,2.963,93,3.835,121,2.677,166,0.024,167,0.024,194,1.756,236,3.801,263,2.057,316,3.801,337,1.756,350,2.713,399,2.677,602,4.126,610,2.963,622,3.801,1135,5.497,1136,6.155,1137,5.919,1138,5.919,1139,4.529,1140,4.529,1141,6.488,1142,4.529,1143,4.529,1144,4.529,1145,4.529,1146,4.529,1147,4.529,1148,4.529,1149,4.529,1150,4.529,1151,4.529,1152,4.529,1153,4.529,1154,4.529,1155,3.801,1156,5.497,1157,6.306,1158,5.497,1159,5.497,1160,4.529,1161,6.155,1162,4.529,1163,4.529,1164,4.529,1165,5.919,1166,4.529]],["title/modules.html",[168,2.381]],["body/modules.html",[30,0.026,166,0.026,167,0.026,168,2.832,169,3.44,182,3.44,1167,5.257,1168,5.257,1169,5.257]],["title/overview.html",[1170,3.71]],["body/overview.html",[0,0.019,1,1.235,30,0.03,52,0.266,53,0.178,70,3.116,88,2.78,102,1.216,131,0.964,138,1.11,140,1.11,142,1.11,144,1.11,146,1.11,148,1.11,150,1.11,152,1.11,154,1.11,156,1.11,158,1.019,160,1.11,163,1.11,164,1.11,166,0.023,167,0.023,168,2.847,169,4.492,170,2.78,171,3.565,172,3.565,173,2.288,174,3.565,175,3.565,176,3.565,177,3.401,178,4.436,185,2.78,281,2.412,292,2.78,324,1.043,328,1.043,475,2.097,1170,3.565,1171,4.248,1172,4.248]],["title/routes.html",[185,2.893]],["body/routes.html",[30,0.027,166,0.027,167,0.027,185,3.473]],["title/miscellaneous/variables.html",[1077,2.853,1173,2.262]],["body/miscellaneous/variables.html",[17,0.146,19,2.217,30,0.03,32,0.268,35,1.426,36,1.426,58,0.725,63,2.694,77,0.45,82,0.459,98,2.94,110,1.525,166,0.014,167,0.014,267,4.582,269,2.908,281,1.591,283,1.263,319,1.136,330,3.862,333,1.873,386,3.225,388,3.519,389,3.537,390,3.537,391,3.537,402,2.044,453,2.109,457,2.479,459,2.623,461,2.923,565,4.582,587,3.185,732,3.185,735,3.185,743,5.022,1076,1.664,1077,1.454,1078,3.185,1092,1.664,1093,4.129,1094,1.664,1095,1.664,1096,3.185,1155,2.592,1173,1.664,1174,3.089,1175,1.982,1176,1.982,1177,1.982,1178,1.982,1179,1.982,1180,5.984,1181,3.795,1182,5.984,1183,5.984,1184,5.984,1185,4.92,1186,4.92,1187,3.795,1188,3.795,1189,4.92,1190,3.795,1191,3.795,1192,3.795,1193,3.795,1194,3.795,1195,3.795,1196,4.92,1197,3.795,1198,3.795,1199,3.795,1200,3.795,1201,5.459,1202,5.459,1203,5.459,1204,5.459,1205,3.795,1206,3.795,1207,3.795,1208,5.776,1209,5.776,1210,5.776,1211,5.776,1212,4.92,1213,4.92,1214,3.795,1215,3.795,1216,5.459,1217,5.459,1218,6.131,1219,5.459,1220,5.459,1221,5.459,1222,5.459,1223,5.459,1224,3.795,1225,3.795,1226,4.92,1227,3.795,1228,3.795,1229,3.795]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.100.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["00c853",{"_index":785,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["01",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":281,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["111",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112px",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["123",{"_index":565,"title":{},"body":{"components/CourseSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["1318",{"_index":563,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["15",{"_index":1171,"title":{},"body":{"overview.html":{}}}],["15.1.10",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1039,"title":{},"body":{"injectables/ToastService.html":{}}}],["2",{"_index":283,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["2.4.1",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":595,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["2018",{"_index":569,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":707,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["22",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2979ff",{"_index":784,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["3",{"_index":473,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["3.2.0",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["330px",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":475,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"overview.html":{}}}],["4.0.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":1032,"title":{},"body":{"injectables/ToastService.html":{}}}],["455a64",{"_index":786,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["456",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":479,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["5.2.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1040,"title":{},"body":{"injectables/ToastService.html":{}}}],["5px",{"_index":790,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["6",{"_index":1172,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1140,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["92px",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":498,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":689,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_sanit",{"_index":302,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["_selectedcategori",{"_index":353,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":393,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["_selectedtool",{"_index":354,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["a[param",{"_index":631,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":635,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["acc",{"_index":411,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc2",{"_index":1070,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":472,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["accessor",{"_index":677,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":618,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":378,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["action",{"_index":286,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["activatedrout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_compon",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add",{"_index":415,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["add_circl",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":414,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["addcourse(cours",{"_index":422,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["adjust",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":1035,"title":{},"body":{"injectables/ToastService.html":{}}}],["afterviewinit",{"_index":537,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["allow",{"_index":269,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["alphabet",{"_index":633,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["angular",{"_index":1137,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":696,"title":{},"body":{"components/CourseSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["anywher",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":591,"title":{},"body":{"components/CourseSelectionComponent.html":{},"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["app.compon",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appar",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":892,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":169,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":457,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{}}}],["approveal",{"_index":836,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["array",{"_index":585,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":963,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1002,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["artifact",{"_index":1149,"title":{},"body":{"index.html":{}}}],["asgardia",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asparagu",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":731,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["async",{"_index":546,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach_fil",{"_index":746,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":261,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["automat",{"_index":1146,"title":{},"body":{"index.html":{}}}],["avacado",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":1034,"title":{},"body":{"injectables/ToastService.html":{}}}],["b",{"_index":630,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b0rked",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b[param",{"_index":632,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":612,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["backstreet",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badg",{"_index":1006,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["badge.component.css",{"_index":1007,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1008,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1005,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:10",{"_index":1013,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:11",{"_index":1012,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:9",{"_index":1014,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["bar",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":274,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["be",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["befor",{"_index":599,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["blank",{"_index":436,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["block",{"_index":704,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["blue",{"_index":470,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blueprint",{"_index":379,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["bodi",{"_index":871,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":254,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["bootstrap",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":783,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["bordercolors[this.issue.statu",{"_index":791,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["box",{"_index":613,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["boy",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breadcrumb",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":240,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":241,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["breadcrumbscompon",{"_index":138,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["broccoli",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":1169,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":781,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":602,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["builder",{"_index":975,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["builders[option.typ",{"_index":980,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["buildhtml(messag",{"_index":1026,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":486,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":245,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":250,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["button",{"_index":778,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["bypasssanit",{"_index":177,"title":{"pipes/BypassSanitize.html":{}},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["c.id",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call_missed_outgo",{"_index":460,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["campu",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["cancel",{"_index":856,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":584,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["card",{"_index":451,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["card'},{'nam",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":714,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":715,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":713,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":719,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:13",{"_index":720,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:15",{"_index":718,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:17",{"_index":723,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:24",{"_index":722,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:45",{"_index":721,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":697,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch((",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["catch(console.error",{"_index":616,"title":{},"body":{"components/CourseSelectionComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["catcherror",{"_index":878,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categori",{"_index":226,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["categories'},{'nam",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":305,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":306,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["categories/tool",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["categories/tools/:tool_id/issu",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["categories/tools/:tool_id/opt",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescompon",{"_index":140,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":966,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":322,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":323,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":962,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":965,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["chalk",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":399,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"index.html":{}}}],["charact",{"_index":589,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["check",{"_index":610,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["check_circl",{"_index":456,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["check_circle_outlin",{"_index":458,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["cheerio",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["chip",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["chip.component.css",{"_index":484,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":485,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":483,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:12",{"_index":490,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:14",{"_index":495,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:18",{"_index":494,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:22",{"_index":491,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":493,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/CourseChipComponent.html":{},"coverage.html":{}}}],["choic",{"_index":331,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["choice.text",{"_index":974,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["circl",{"_index":598,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":53,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["cli",{"_index":1138,"title":{},"body":{"index.html":{}}}],["click",{"_index":620,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["close",{"_index":272,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["closemod",{"_index":246,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["cluster_appmodul",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":337,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["color",{"_index":466,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["comment",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complet",{"_index":727,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":839,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["console.error(",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(`${course.course_cod",{"_index":922,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(err",{"_index":899,"title":{},"body":{"injectables/KatanaService.html":{}}}],["const",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(courseservic",{"_index":489,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":861,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":551,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["constructor(opt",{"_index":938,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["constructor(priv",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":313,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":308,"title":{},"body":{"components/CategoriesComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":793,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":756,"title":{},"body":{"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["container'},{'nam",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["container.component.css",{"_index":757,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":758,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":755,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":764,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:12",{"_index":763,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:16",{"_index":770,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":772,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:30",{"_index":768,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:45",{"_index":765,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":282,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["contentkey",{"_index":276,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["context",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":1001,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["core",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":603,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["correctli",{"_index":729,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["count",{"_index":430,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["cours",{"_index":82,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.account",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":514,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":914,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":405,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":850,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.length",{"_index":1068,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.reduce((acc",{"_index":848,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1069,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":930,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":380,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_id",{"_index":389,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["course_nam",{"_index":381,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursechipcompon",{"_index":142,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":421,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseeditopen",{"_index":396,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseid",{"_index":419,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursenam",{"_index":420,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseoverlay",{"_index":686,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":540,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":929,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":911,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":925,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":144,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":395,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseservic",{"_index":23,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courseeditopen",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.foreach(cours",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon('approv",{"_index":517,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('fail",{"_index":521,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('fix",{"_index":523,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('skip",{"_index":519,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon('untouch",{"_index":515,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'approv",{"_index":528,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'fail",{"_index":532,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'fix",{"_index":534,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'skip",{"_index":530,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(\\'untouch",{"_index":526,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":753,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":808,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":809,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["courseset",{"_index":342,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["coursesidebarcompon",{"_index":146,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":392,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coverag",{"_index":1072,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":338,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["createopt",{"_index":987,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["createoption(opt",{"_index":972,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["crumb",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":854,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["current",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["d3",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["d50000",{"_index":788,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["darken",{"_index":477,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["data",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["declar",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":560,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":332,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delet",{"_index":428,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["delete_outlin",{"_index":339,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["depend",{"_index":170,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":330,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["desir",{"_index":437,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["desiredstatu",{"_index":769,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":388,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["details'},{'nam",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":795,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":796,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":794,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:11",{"_index":799,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":798,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:9",{"_index":797,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["determin",{"_index":449,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["dev",{"_index":1143,"title":{},"body":{"index.html":{}}}],["develop",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{}}}],["devmod",{"_index":1019,"title":{},"body":{"injectables/ToastService.html":{}}}],["direct",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1148,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1152,"title":{},"body":{"index.html":{}}}],["discov",{"_index":810,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{}}}],["discoveri",{"_index":900,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissu",{"_index":858,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":865,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":329,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["discuss",{"_index":732,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["dismiss",{"_index":1028,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":387,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["dist",{"_index":1151,"title":{},"body":{"index.html":{}}}],["divid",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["document.documentelement.style.setproperti",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.queryselector('.mod",{"_index":955,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1038,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":700,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":315,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["domsanit",{"_index":301,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["don't",{"_index":372,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["done",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":853,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":978,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["dsv",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["dynam",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":512,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/ToastService.html":{}}}],["e.messag",{"_index":1029,"title":{},"body":{"injectables/ToastService.html":{}}}],["e123",{"_index":566,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["e2",{"_index":1162,"title":{},"body":{"index.html":{}}}],["each",{"_index":844,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["eat",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eceff1",{"_index":787,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["effect",{"_index":780,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":559,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":767,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["embed",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emit",{"_index":284,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["end",{"_index":1161,"title":{},"body":{"index.html":{}}}],["entir",{"_index":317,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["environ",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":897,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":382,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["event",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":264,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["exampl",{"_index":564,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["execut",{"_index":1158,"title":{},"body":{"index.html":{}}}],["exist",{"_index":913,"title":{},"body":{"injectables/KatanaService.html":{}}}],["explor",{"_index":345,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["express",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":463,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{}}}],["failur",{"_index":1030,"title":{},"body":{"injectables/ToastService.html":{}}}],["fall",{"_index":568,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":290,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":373,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["fighter",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":453,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{}}}],["fixabl",{"_index":928,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":933,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":934,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissu",{"_index":859,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":867,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixopt",{"_index":335,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["flag",{"_index":1154,"title":{},"body":{"index.html":{}}}],["flat",{"_index":782,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["folder",{"_index":733,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["formcontrol",{"_index":943,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup",{"_index":941,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup(group",{"_index":986,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["formsmodul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1033,"title":{},"body":{"injectables/ToastService.html":{}}}],["freedom",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["function",{"_index":413,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{}}}],["further",{"_index":1164,"title":{},"body":{"index.html":{}}}],["gavel",{"_index":747,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":1136,"title":{},"body":{"index.html":{}}}],["get",{"_index":429,"title":{"index.html":{}},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbordercolor",{"_index":760,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclass",{"_index":761,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":766,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":547,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":660,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":439,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getcourses(bodi",{"_index":869,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":487,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount('approv",{"_index":518,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('fail",{"_index":522,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('fix",{"_index":524,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('skip",{"_index":520,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount('untouch",{"_index":516,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'approv",{"_index":529,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'fail",{"_index":533,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'fix",{"_index":535,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'skip",{"_index":531,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(\\'untouch",{"_index":527,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissuecount(statu",{"_index":492,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":818,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitemcount",{"_index":1062,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["getissueitems(cours",{"_index":824,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getmod",{"_index":819,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1055,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":678,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1058,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":661,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":454,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettextcolorclass",{"_index":662,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":468,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettoollist",{"_index":860,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":663,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":446,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettypeicon",{"_index":717,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["github:byuitechops/logg",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":432,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["go",{"_index":1166,"title":{},"body":{"index.html":{}}}],["green",{"_index":474,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["grey",{"_index":476,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["group",{"_index":981,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["group[option.key",{"_index":984,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["header",{"_index":891,"title":{},"body":{"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":893,"title":{},"body":{"injectables/KatanaService.html":{}}}],["help",{"_index":1165,"title":{},"body":{"index.html":{}}}],["help_outlin",{"_index":748,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["here",{"_index":1003,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["home",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["hostil",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["htmlelement",{"_index":698,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":964,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["http",{"_index":864,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["http://localhost:4200",{"_index":1145,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/cours",{"_index":1031,"title":{},"body":{"injectables/ToastService.html":{}}}],["httpclient",{"_index":862,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":875,"title":{},"body":{"injectables/KatanaService.html":{}}}],["https://byui.instructure.com/courses/12872/pages/setup",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hype",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.",{"_index":452,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["icon",{"_index":326,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["id",{"_index":334,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["identifi",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":842,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["immedi",{"_index":349,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["implement",{"_index":238,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":467,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inject",{"_index":328,"title":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":275,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{}}}],["input('sid",{"_index":1017,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1016,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1015,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":971,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["insert_drive_fil",{"_index":744,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instanceof",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["instructor",{"_index":383,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["instructor?module_item_id=850086",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instructornam",{"_index":501,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["interfac",{"_index":324,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["isad",{"_index":548,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":554,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["issu",{"_index":58,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue.statu",{"_index":444,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.titl",{"_index":754,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["issuecardcompon",{"_index":148,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":150,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuedetail",{"_index":759,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":152,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":44,"title":{"interfaces/IssueItem.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issueitem'",{"_index":742,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.course_id",{"_index":409,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issueitem.issu",{"_index":849,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":443,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issueitem.issues.foreach(issu",{"_index":847,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.includes(issu",{"_index":851,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":442,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.titl",{"_index":752,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":931,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issuelistcompon",{"_index":154,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":156,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":445,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["it'",{"_index":845,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["item",{"_index":343,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["item_id",{"_index":390,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["item_typ",{"_index":743,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["itemset",{"_index":344,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["jone",{"_index":567,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["js",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["json.parse(event.data",{"_index":921,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":915,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":425,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["karma",{"_index":1160,"title":{},"body":{"index.html":{}}}],["katana",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["katana.servic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["katanaservic",{"_index":24,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.socket",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":278,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["key.includes('katana_cours",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["languag",{"_index":341,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["last",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":541,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["leek",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":435,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["lesson",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lighten",{"_index":478,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["link",{"_index":391,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["list').subscribe((toollist",{"_index":888,"title":{},"body":{"injectables/KatanaService.html":{}}}],["list'},{'nam",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":803,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":804,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":802,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":805,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:12",{"_index":807,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:14",{"_index":806,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["live",{"_index":351,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["load",{"_index":291,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":366,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":368,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":370,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["local",{"_index":417,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["locat",{"_index":690,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["logger",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["make",{"_index":587,"title":{},"body":{"components/CourseSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["master",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["materializeact",{"_index":268,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["messag",{"_index":1027,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":244,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{}}}],["miscellan",{"_index":1173,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":270,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":242,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalcont",{"_index":279,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":954,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["modalnam",{"_index":829,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["modalopen",{"_index":946,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["mode",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["modifi",{"_index":260,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":168,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"modules.html":{},"overview.html":{}}}],["moduleitem",{"_index":738,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["more",{"_index":622,"title":{},"body":{"components/CourseSelectionComponent.html":{},"index.html":{}}}],["more_vert",{"_index":855,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["multiselect",{"_index":979,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["name1",{"_index":634,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":504,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":507,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":508,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":509,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":506,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nation",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nav",{"_index":814,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":815,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":816,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":813,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:16",{"_index":837,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:19",{"_index":822,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:21",{"_index":834,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:22",{"_index":838,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:23",{"_index":835,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:26",{"_index":826,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":828,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:38",{"_index":823,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:50",{"_index":833,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:62",{"_index":825,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:70",{"_index":831,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["navig",{"_index":1144,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":263,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["newli",{"_index":400,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["newstatu",{"_index":773,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["newwidth",{"_index":706,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1141,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":549,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":247,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["none",{"_index":503,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["note",{"_index":314,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["null",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["number",{"_index":385,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["numer",{"_index":628,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":319,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":410,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":959,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["observ",{"_index":876,"title":{},"body":{"injectables/KatanaService.html":{}}}],["on",{"_index":277,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["onc",{"_index":623,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["oninit",{"_index":239,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":956,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["open",{"_index":271,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":525,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":488,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":248,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["openmodal(modalnam",{"_index":827,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["option.choices.reduce((acc",{"_index":973,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.descript",{"_index":977,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":983,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["option.titl",{"_index":976,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["optionmodel",{"_index":935,"title":{"classes/OptionModel.html":{}},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["optionmodel(this.opt",{"_index":950,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["options.categories.push(category.id",{"_index":967,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":960,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":158,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":625,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":318,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["output",{"_index":724,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["outsid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlay",{"_index":699,"title":{},"body":{"components/CourseSidebarComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":702,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":703,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1170,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1098,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/IssueCardComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["painfulli",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panorama_fish_ey",{"_index":462,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["param",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["paramet",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["parser",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":970,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["path",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":252,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["pipe",{"_index":292,"title":{"pipes/BypassSanitize.html":{}},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":300,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["place",{"_index":375,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pleas",{"_index":792,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{}}}],["popul",{"_index":273,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["posit",{"_index":619,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":841,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["potato",{"_index":267,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":912,"title":{},"body":{"injectables/KatanaService.html":{}}}],["privat",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["probabl",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process",{"_index":280,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["processingmessag",{"_index":347,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["prod",{"_index":1153,"title":{},"body":{"index.html":{}}}],["product",{"_index":1155,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1135,"title":{},"body":{"index.html":{}}}],["promis",{"_index":881,"title":{},"body":{"injectables/KatanaService.html":{}}}],["promise((resolv",{"_index":885,"title":{},"body":{"injectables/KatanaService.html":{}}}],["prop",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["protractor",{"_index":1163,"title":{},"body":{"index.html":{}}}],["provid",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"overview.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["public",{"_index":243,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["queri",{"_index":596,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":737,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":745,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quiz",{"_index":735,"title":{},"body":{"components/IssueCardComponent.html":{},"miscellaneous/variables.html":{}}}],["quizquest",{"_index":736,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quizz",{"_index":734,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["rc.2",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":236,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"index.html":{}}}],["real",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receiv",{"_index":927,"title":{},"body":{"injectables/KatanaService.html":{}}}],["red",{"_index":480,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["redirectto",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":402,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":320,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["reject",{"_index":886,"title":{},"body":{"injectables/KatanaService.html":{}}}],["reload",{"_index":316,"title":{},"body":{"components/CategoriesComponent.html":{},"index.html":{}}}],["remov",{"_index":340,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["remove_circl",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":687,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":664,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":427,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["render",{"_index":726,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":593,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["request",{"_index":882,"title":{},"body":{"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["requir",{"_index":333,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":890,"title":{},"body":{"injectables/KatanaService.html":{}}}],["resolve(data",{"_index":896,"title":{},"body":{"injectables/KatanaService.html":{}}}],["respons",{"_index":884,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["result",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":879,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retriev",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["return",{"_index":253,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["revers",{"_index":624,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["right",{"_index":374,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":185,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":376,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["routermodul",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{}}}],["rxj",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":880,"title":{},"body":{"injectables/KatanaService.html":{}}}],["safehtml",{"_index":299,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["same",{"_index":621,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sanitize.pip",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitize.pipe.t",{"_index":294,"title":{},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["sanitize.pipe.ts:12",{"_index":297,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["save",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":1147,"title":{},"body":{"index.html":{}}}],["search",{"_index":543,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["search_term",{"_index":590,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":542,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":544,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{}}}],["select",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selectedcategori",{"_index":357,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":359,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcours",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedcourse(cours",{"_index":401,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteddiscoveropt",{"_index":355,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedfixopt",{"_index":356,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":394,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteditem",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedmod",{"_index":817,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectedtool",{"_index":361,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":363,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["selection.component.css",{"_index":538,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":539,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":536,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:10",{"_index":1042,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:11",{"_index":577,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:113",{"_index":555,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:117",{"_index":556,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:12",{"_index":578,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":562,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":576,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":574,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":575,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":573,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":571,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:30",{"_index":552,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":572,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":553,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:77",{"_index":558,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["selection/tool",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":820,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":830,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":601,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["sentiment_very_dissatisfi",{"_index":812,"title":{},"body":{"components/IssueListComponent.html":{}}}],["serv",{"_index":1142,"title":{},"body":{"index.html":{}}}],["server",{"_index":350,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["servic",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["service'",{"_index":903,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sessionstorage.selectedcategori",{"_index":360,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":404,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["sessionstorage.selectedtool",{"_index":364,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":424,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["set",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["setapprov",{"_index":821,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setapproved(newstatu",{"_index":832,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setissuestatu",{"_index":762,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":771,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":307,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":310,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":688,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":680,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1060,"title":{},"body":{"injectables/ToolService.html":{}}}],["setter",{"_index":398,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["settimeout",{"_index":1037,"title":{},"body":{"injectables/ToastService.html":{}}}],["shown",{"_index":450,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["side",{"_index":1009,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["sidebar",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.component.css",{"_index":684,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":685,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":683,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:12",{"_index":691,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":695,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":692,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":694,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":693,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["singl",{"_index":433,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["skip",{"_index":459,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["socket",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.addeventlistener('messag",{"_index":920,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":910,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":926,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":919,"title":{},"body":{"injectables/KatanaService.html":{}}}],["solid",{"_index":789,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["someth",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":617,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":550,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":557,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["space",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec\\.t",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":902,"title":{},"body":{"injectables/KatanaService.html":{}}}],["specifi",{"_index":438,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["split",{"_index":500,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../environment.prod.t",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generated_issues.t",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.t",{"_index":237,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:17",{"_index":265,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:19",{"_index":262,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:37",{"_index":258,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:40",{"_index":255,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:42",{"_index":249,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:44",{"_index":266,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:46",{"_index":257,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:48",{"_index":251,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/categories/categories.component.t",{"_index":304,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/categories/categories.component.ts:10",{"_index":309,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:12",{"_index":312,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:22",{"_index":311,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/cours",{"_index":482,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":377,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"coverage.html":{}}}],["src/app/course.service.ts:111",{"_index":667,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:129",{"_index":670,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:139",{"_index":668,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:154",{"_index":669,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:46",{"_index":675,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:47",{"_index":672,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:48",{"_index":676,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:49",{"_index":674,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:50",{"_index":673,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:52",{"_index":679,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:57",{"_index":681,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:65",{"_index":682,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:67",{"_index":665,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:79",{"_index":666,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:98",{"_index":671,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/generated_issues.t",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/issu",{"_index":712,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":857,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:14",{"_index":863,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:140",{"_index":868,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:22",{"_index":874,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:31",{"_index":872,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:45",{"_index":870,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:72",{"_index":866,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/opt",{"_index":293,"title":{},"body":{"pipes/BypassSanitize.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["src/app/stat",{"_index":1004,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["src/app/toast.service.t",{"_index":1018,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:12",{"_index":1025,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:31",{"_index":1023,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:9",{"_index":1021,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":1041,"title":{},"body":{"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":325,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:38",{"_index":1048,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:68",{"_index":1049,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:69",{"_index":1050,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1054,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1053,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:75",{"_index":1046,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1047,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:77",{"_index":1051,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:78",{"_index":1052,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:80",{"_index":1056,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:84",{"_index":1057,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:89",{"_index":1059,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:93",{"_index":1061,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:96",{"_index":1045,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/environments/environment.prod.t",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":116,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["stat",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":160,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1010,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statement",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1011,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":386,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["statuscolor",{"_index":469,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statuscolors[statu",{"_index":481,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicon",{"_index":455,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicons[statu",{"_index":465,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["still",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":418,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["store",{"_index":1150,"title":{},"body":{"index.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subaccount",{"_index":545,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subscrib",{"_index":895,"title":{},"body":{"injectables/KatanaService.html":{}}}],["success",{"_index":883,"title":{},"body":{"injectables/KatanaService.html":{}}}],["support",{"_index":1167,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":611,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["svg",{"_index":1168,"title":{},"body":{"modules.html":{}}}],["syllabu",{"_index":346,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tabl",{"_index":586,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["tag_fac",{"_index":811,"title":{},"body":{"components/IssueListComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["term",{"_index":384,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["test",{"_index":1157,"title":{},"body":{"index.html":{}}}],["test_issu",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":471,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["that\\'",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((cours",{"_index":614,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["thing",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._sanitizer.bypasssecuritytrusthtml(v",{"_index":303,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["this._selectedcategori",{"_index":358,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":397,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitem",{"_index":407,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":408,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedtool",{"_index":362,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":608,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":371,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.closemod",{"_index":852,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":511,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":497,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":502,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":505,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":499,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":510,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":513,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":615,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":627,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":629,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":447,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.courseservice.addcourse(cours",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courseeditopen",{"_index":905,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.courses.find(c",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":710,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":957,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1067,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":705,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":923,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":711,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":709,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":924,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.foreach(issueitem",{"_index":846,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":800,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":801,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":423,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.coursesobj[key",{"_index":412,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.formgroup",{"_index":951,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":961,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":448,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.http.get('/tool",{"_index":887,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/cours",{"_index":894,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":776,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":777,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":775,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":968,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":605,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.katanaservice.gettoollist",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastsortedbi",{"_index":626,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":285,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.modalopen",{"_index":953,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":958,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":947,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.optionmodel",{"_index":949,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":952,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":982,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.removecourse(cours",{"_index":426,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.router.navigate([`categories/tools/${this.toolservice.selectedtool.id}/issu",{"_index":969,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":287,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":600,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":609,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":592,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":597,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":440,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":441,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedissueitem",{"_index":406,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedmod",{"_index":840,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.sockets.push(socket",{"_index":909,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":606,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":607,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.devmod",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toast('y",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":898,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":369,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":907,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":906,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":321,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":918,"title":{},"body":{"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.discoveropt",{"_index":948,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":917,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":889,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":730,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":739,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["three",{"_index":588,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["throat",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":877,"title":{},"body":{"injectables/KatanaService.html":{}}}],["tingli",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1036,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1022,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1020,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1024,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":26,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toggl",{"_index":701,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":937,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["tomato",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":61,"title":{"interfaces/Tool.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["tool.icon",{"_index":1043,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":365,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tool.servic",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1044,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":916,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolcategori",{"_index":327,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolid",{"_index":901,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":352,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolselectioncompon",{"_index":163,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":25,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1071,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":288,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1000,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":289,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toolviewopen",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":728,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["toolview",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":164,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":348,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["top",{"_index":741,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["total",{"_index":434,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["track",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":295,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["transform(v",{"_index":296,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["true",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeicon",{"_index":716,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":751,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["types[this.issueitem.categori",{"_index":740,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["unapprov",{"_index":843,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["undefin",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":431,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["unit",{"_index":1156,"title":{},"body":{"index.html":{}}}],["unsuccess",{"_index":904,"title":{},"body":{"injectables/KatanaService.html":{}}}],["untouch",{"_index":461,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"miscellaneous/variables.html":{}}}],["updat",{"_index":403,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["uri",{"_index":604,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["url",{"_index":259,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["us",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["user",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["user'",{"_index":416,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["v",{"_index":298,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["valid",{"_index":942,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["validators.requir",{"_index":985,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{}}}],["valu",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["variabl",{"_index":1077,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1139,"title":{},"body":{"index.html":{}}}],["via",{"_index":1159,"title":{},"body":{"index.html":{}}}],["view",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view'},{'nam",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":945,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":944,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":936,"title":{},"body":{"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:10",{"_index":1063,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:117",{"_index":939,"title":{},"body":{"classes/OptionModel.html":{}}}],["view.component.ts:12",{"_index":1065,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:122",{"_index":940,"title":{},"body":{"classes/OptionModel.html":{}}}],["view.component.ts:13",{"_index":1066,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:15",{"_index":1064,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:17",{"_index":998,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:18",{"_index":997,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:19",{"_index":994,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:22",{"_index":996,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.ts:23",{"_index":988,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:25",{"_index":999,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:26",{"_index":995,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:42",{"_index":993,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:46",{"_index":989,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:51",{"_index":991,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:55",{"_index":992,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:86",{"_index":990,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/bypass",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["view/opt",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":749,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":750,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":561,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":581,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('issuedetail",{"_index":774,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":583,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":582,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":579,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":580,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":725,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["void",{"_index":256,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["want",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":464,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["wave",{"_index":779,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["way",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["websocket",{"_index":873,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket('ws://localhost:8000/tool/discov",{"_index":908,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket('ws://localhost:8000/tool/fix",{"_index":932,"title":{},"body":{"injectables/KatanaService.html":{}}}],["whether",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["whitespac",{"_index":594,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window.location.href",{"_index":367,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":708,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":496,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["winter",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["world\\'",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["wrong",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["www.google.com",{"_index":570,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["zero",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService, IssueItem } from './course.service';\nimport { toast } from 'angular2-materialize';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /***************************************************************************************\n     * Constructor for the AppComponent class. Listens for the \"NavigationEnd\" event\n     * on the Router, and then clears the selectedItem and selectedCourse values\n     * from the Issues service if the user is not on a tool view page.\n     * @param router\n     * @param courseService\n     ***************************************************************************************/\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseEditOpen = false;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Retrieve the tool list on start\n        this.katanaService.getToolList()\n            .catch((e) => {\n                this.toastService.devMode = true;\n                this.toastService.toast('You are in development mode.');\n                console.error(e);\n            });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n\n    title = 'app';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                BypassSanitize\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport { MaterializeModule } from 'angular2-materialize';\nimport 'rxjs';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { BypassSanitize } from './options-view/bypass-sanitize.pipe';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: '',\n        redirectTo: 'categories',\n        pathMatch: 'full',\n        data: {\n            breadcrumb: 'Home'\n        }\n    },\n    {\n        path: 'categories',\n        component: CategoriesComponent,\n        data: {\n            breadcrumb: 'Categories'\n        }\n    },\n    {\n        path: 'categories/tools',\n        component: ToolSelectionComponent,\n        data: {\n            breadcrumb: 'Tool Selection'\n        }\n    },\n    {\n        path: 'categories/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        data: {\n            breadcrumb: 'Options'\n        }\n    },\n    {\n        path: 'categories/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        data: {\n            breadcrumb: 'Issues'\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CourseSidebarComponent,\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolViewComponent,\n        CourseSelectionComponent,\n        CourseChipComponent,\n        IssueContainerComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        BypassSanitize,\n        StatBadgeComponent,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MaterializeModule,\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/breadcrumbs/breadcrumbs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breadcrumbs\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/breadcrumbs/breadcrumbs.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breadcrumbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breadcrumbs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        url: '/',\n        title: 'Home'\n    }, {\n        url: '/',\n        title: 'Pages'\n    }, {\n        url: '/tool-view',\n        title: 'Modify Attributes'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        POTATO\nThis is a potato.\n\n    \n\n    \n        import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\n\nexport class BreadcrumbsComponent implements OnInit {\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n\n    breadcrumbs = [{\n        url: '/',\n        title: 'Home'\n    }, {\n        url: '/',\n        title: 'Pages'\n    }, {\n        url: '/tool-view',\n        title: 'Modify Attributes'\n    }];\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    constructor(private router: Router, public toolService: ToolService, private courseService: CourseService) { }\n\n    ngOnInit() { }\n\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    feedback\n                \n            \n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BypassSanitize.html":{"url":"pipes/BypassSanitize.html","title":"pipe - BypassSanitize","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  BypassSanitize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/options-view/bypass-sanitize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        bypassSanitize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/bypass-sanitize.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeHtml\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'bypassSanitize'\n})\nexport class BypassSanitize implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/categories/categories.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/categories/categories.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /************************************************************\n     * This sets the selected category on the Tool service.\n     * Note that this MUST return false, so it doesn't reload\n     * the entire page, just the router-outlet.\n     * @param {object} category - The category to set\n     * @returns {false} - This is so it doesn't refresh the entire page\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n     * @function addCourse\n     * Adds a course to the list of currently selected courses. This\n     * will also add and remove them from the user's local storage.\n     * @param {number} courseId - The ID of the course\n     * @param {string} courseName - The full name of the course\n     * @param {string} courseCode - The course code\n     *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-chip/course-chip.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n    @Input() course: Course;\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private router: Router) { }\n\n    openCourse() {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    buildInstructorName() {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n\n        return instructorName;\n    }\n\n    getIssueCount(status) {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                \n                    {{courseService.getStatusIcon('untouched')}}\n                \n                \n                    {{getIssueCount('untouched')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('approved')}}\n                \n                \n                    {{getIssueCount('approved')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('skipped')}}\n                \n                \n                    {{getIssueCount('skipped')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('failed')}}\n                \n                \n                    {{getIssueCount('failed')}}\n                \n            \n            \n                \n                    {{courseService.getStatusIcon('fixed')}}\n                \n                \n                    {{getIssueCount('fixed')}}\n                \n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                                            {{courseService.getStatusIcon(\\'untouched\\')}}                                                    {{getIssueCount(\\'untouched\\')}}                                                                            {{courseService.getStatusIcon(\\'approved\\')}}                                                    {{getIssueCount(\\'approved\\')}}                                                                            {{courseService.getStatusIcon(\\'skipped\\')}}                                                    {{getIssueCount(\\'skipped\\')}}                                                                            {{courseService.getStatusIcon(\\'failed\\')}}                                                    {{getIssueCount(\\'failed\\')}}                                                                            {{courseService.getStatusIcon(\\'fixed\\')}}                                                    {{getIssueCount(\\'fixed\\')}}                                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-selection/course-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-selection/course-selection.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        id: 1318,\n        course_name: 'Example Course 123',\n        course_code: 'E123',\n        instructor: 'Katana Jones',\n        issueItems: [],\n        account: '3',\n        term: 'Fall 2018',\n        url: 'www.google.com',\n        blueprint: false\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { KatanaService } from '../katana.service';\nimport { Course, CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent implements AfterViewInit {\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    @ViewChild('term') private term: ElementRef;\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    @ViewChild('searchText') private searchText: ElementRef;\n    @ViewChild('searchBy') private searchBy: ElementRef;\n\n    searching: boolean = false;\n    lastSortedBy: string;\n\n    courseResults: Course[] = [{\n        id: 1318,\n        course_name: 'Example Course 123',\n        course_code: 'E123',\n        instructor: 'Katana Jones',\n        issueItems: [],\n        account: '3',\n        term: 'Fall 2018',\n        url: 'www.google.com',\n        blueprint: false\n    }];\n\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /*************************************************************************\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     *************************************************************************/\n    async getCourses() {\n        /* Canvas makes you have an input of at least three characters to use the search_term in the API */\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            /* Replace any whitespaces with '%20' for the query parameter */\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            /* Set the loading circle to display before retrieving the courses */\n            this.searching = true;\n\n            /* Send the search parameters to the katana service to build the correct URI */\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /******************************************************************\n     * Sorts the courseResults array according to the \n     * course attribute defined by 'param'\n     * @param {string} param - The object key to be sorted\n     * @returns {number} - The new position of the object in the array\n     ******************************************************************/\n    sortBy(param) {\n        /* If they click on the same category more than once, it will reverse the order of the results */\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        /* Sort numerically */\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            /* Sort alphabetically */\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /************************************************************\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course - The course that is being checked\n     * @returns {boolean} - Whether the course is already added\n     ************************************************************/\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n\n    ngAfterViewInit() { }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n            \n            {{course.course_name}}\n            {{course.course_code}}\n            {{course.instructor}}\n            {{course.account}}\n            {{course.term}}\n            {{course.blueprint}}\n            {{course.id}}\n            \n              \n                open_in_new\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n              \n            \n          \n        \n        \n          Searching ...\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                        {{course.course_name}}            {{course.course_code}}            {{course.instructor}}            {{course.account}}            {{course.term}}            {{course.blueprint}}            {{course.id}}                                          open_in_new                                                                                                                                                                                                                                                                          Searching ...                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseEditOpen\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssuecount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:67\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssuecount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssuecount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseEditOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseEditOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:48\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:52\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n     * @function addCourse\n     * Adds a course to the list of currently selected courses. This\n     * will also add and remove them from the user's local storage.\n     * @param {number} courseId - The ID of the course\n     * @param {string} courseName - The full name of the course\n     * @param {string} courseCode - The course code\n     *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-sidebar/course-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-sidebar/course-sidebar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { ToolService } from '../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n     * @function addCourse\n     * Adds a course to the list of currently selected courses. This\n     * will also add and remove them from the user's local storage.\n     * @param {number} courseId - The ID of the course\n     * @param {string} courseName - The full name of the course\n     * @param {string} courseCode - The course code\n     *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-card/issue-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService, IssueItem } from '../course.service';\n\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    // Issue Item\n    @Input() issueItem: IssueItem;\n    // Card Position\n    @Input() position: number;\n    // Reference to the typeIcon\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    constructor(public courseService: CourseService) { }\n\n    /***********************************************************************\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly.\n     **********************************************************************/\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     **********************************************************************/\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-container/issue-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBorderColor\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setIssueStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-container/issue-container.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBorderColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBorderColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Issue } from '../course.service';\n\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    @Input() // Issue\n    issue: Issue;\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n    }\n\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn-flat';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    getBorderColor() {\n        let borderColors = {\n            'fixed': '#2979ff',\n            'approved': '#00c853',\n            'skipped': '#455a64',\n            'untouched': '#eceff1',\n            'failed': '#d50000'\n        }\n        return `solid 5px ${borderColors[this.issue.status]}`;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n    \n\n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-details/issue-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-details/issue-details.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        Issues\n        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n     * @function addCourse\n     * Adds a course to the list of currently selected courses. This\n     * will also add and remove them from the user's local storage.\n     * @param {number} courseId - The ID of the course\n     * @param {string} courseName - The full name of the course\n     * @param {string} courseCode - The course code\n     *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssuecount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-5',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\n\nexport class IssueListComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process. Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process. Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-nav/issue-nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                selectedModal\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                getModal\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                            \n                                setApproved\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-nav/issue-nav.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal(modalName: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalName\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setApproved\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetApproved(newStatus: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedModal:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'approveAll'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    selectedModal: string = 'approveAll';\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n    getModal() {\n        return this.selectedModal;\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     ****************************************************************/\n    openModal(modalName) {\n        this.selectedModal = modalName;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /*****************************************************************\n     * Approves all issues for the course to be fixed if possible, ignoring skipped and fixed items.\n     * @param {string} newStatus - Either 'approved' or 'unapproved', determines the new status\n     * Process:\n     * 1. For each issue items, get its issues\n     * 2. For each issue on the issue item, see if it is skipped or fixed\n     * 3. If not, set it's status to approved\n     ****************************************************************/\n    setApproved(newStatus: string) {\n        this.courseService.selectedCourse.issueItems.forEach(issueItem => {\n            issueItem.issues.forEach(issue => {\n                if (newStatus === 'approved' && issue.status === 'untouched') {\n                    issue.status = newStatus;\n                } else if (newStatus === 'untouched' && issue.status === 'approved') {\n                    issue.status = newStatus;\n                }\n            });\n        });\n    }\n\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n    \n    \n        \n            \n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                    \n                \n            \n        \n\n\n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                                                                        Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService, IssueItem, Course } from './course.service';\nimport { ToolService, Tool } from './tool.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class KatanaService {\n\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private toastService: ToastService) { }\n\n    sockets: WebSocket[] = [];\n\n    /*****************************************************************\n     * Retrieves the list of tools from the server.\n     * Process:\n     * 1. Returns a promise\n     * 2. Sends a GET request to the server for the tool list\n     * 3. On success, sets the toolList property on the tools service to the response data\n     ****************************************************************/\n    getToolList() {\n        return new Promise((resolve, reject) => {\n            this.http.get('/tool-list').subscribe((toolList: any): any => {\n                this.toolService.toolList = toolList;\n                resolve();\n            }, reject);\n        });\n    }\n\n    /*****************************************************************\n     * Retrieves...\n     * Process:\n     * 1. \n     ****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n            this.http.post('/course-retrieval', body, { headers: headers }).subscribe(\n                (data) => {\n                    resolve(data);\n                },\n                (err) => {\n                    this.toastService.toastError(err);\n                    console.error(err);\n                });\n        });\n    }\n\n    /*****************************************************************\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     * Process:\n     * 1. Returns a promise\n     * 2. Builds the request object using the provided parameters\n     * 3. Sends the request to the discovery URI\n     * 4. When successful, sets the course service's courses to the new course objects with issueItems\n     * 5. When unsuccessful, rejects the promise with the given error\n     ****************************************************************/\n    discoverIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const socket = new WebSocket('ws://localhost:8000/tool/discover');\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n\n    /*****************************************************************\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     * Process:\n     * 1. Returns a promise\n     * 2. Builds the request object using the provided parameters\n     * 3. Sends the request to the fix tool URI\n     * 4. When successful, sets the courses property on the course service to the received courses\n     * 5. When unsuccessful, rejects the promise with the given error\n     ****************************************************************/\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket('ws://localhost:8000/tool/fix');\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options-view/options-view.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:117\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\n\nexport class OptionsViewComponent {\n\n    options: DiscoverOption[];\n    optionModel: OptionModel;\n    formGroup;\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n    modalOpen: boolean = false;\n\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.options = this.toolService.selectedTool.discoverOptions;\n        this.optionModel = new OptionModel(this.options);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalOpen = true;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalOpen = false;\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    modalIsOpen() {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    onSubmit() {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`categories/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n    /******************************************************************************\n     * Creates an option on the options page based on the options provided by the\n     * currently selected tool.\n     * @param {DiscoverOption} option - The options object passed in by the tool\n     * @returns {string} - The HTML to be inserted into the DOM\n     *****************************************************************************/\n    createOption(option) {\n        var choices = option.choices.reduce((acc, choice) => {\n            return acc += `${choice.text}`\n        }, '');\n\n        let builders = {\n            'text': `\n          ${option.title}\n          ${option.description}\n          \n        `,\n            'dropdown': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `,\n            'multiselect': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `\n        }\n        return builders[option.type];\n    }\n}\n\nclass OptionModel {\n    options = [];\n\n    constructor(options) {\n        this.options = options;\n    }\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            }\n            else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/options-view/options-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                modalOpen\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                createOption\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createOption\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateOption(option: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\n\nexport class OptionsViewComponent {\n\n    options: DiscoverOption[];\n    optionModel: OptionModel;\n    formGroup;\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n    modalOpen: boolean = false;\n\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.options = this.toolService.selectedTool.discoverOptions;\n        this.optionModel = new OptionModel(this.options);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalOpen = true;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalOpen = false;\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    modalIsOpen() {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    onSubmit() {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`categories/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n    /******************************************************************************\n     * Creates an option on the options page based on the options provided by the\n     * currently selected tool.\n     * @param {DiscoverOption} option - The options object passed in by the tool\n     * @returns {string} - The HTML to be inserted into the DOM\n     *****************************************************************************/\n    createOption(option) {\n        var choices = option.choices.reduce((acc, choice) => {\n            return acc += `${choice.text}`\n        }, '');\n\n        let builders = {\n            'text': `\n          ${option.title}\n          ${option.description}\n          \n        `,\n            'dropdown': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `,\n            'multiselect': `\n          ${option.title}\n          ${option.description}\n          \n            ${choices}\n          \n        `\n        }\n        return builders[option.type];\n    }\n}\n\nclass OptionModel {\n    options = [];\n\n    constructor(options) {\n        this.options = options;\n    }\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            }\n            else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Options\n            \n                {{toolService.selectedTool.title}}\n            \n        \n\n        \n            \n                {{toolService.selectedTool.description}}\n\n                Categories\n                \n                    \n                        \n                        {{category}}\n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice.text}}\n                            \n                        \n                        \n                            \n                                {{choice.text}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n                Required\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Options                            {{toolService.selectedTool.title}}                                                        {{toolService.selectedTool.description}}                Categories                                                                                    {{category}}                                                                        {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice.text}}                                                                                                                                        {{choice.text}}                                                                                                                                Cancel                Run Tool                Required                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stat-badge/stat-badge.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/stat-badge/stat-badge.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    @Input('statTitle') statTitle: string;\n    @Input('statCount') statCount: number;\n    @Input('side') side: string = 'right';\n\n    constructor() { }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                devMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devMode:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    devMode: boolean = false;\n    constructor() { }\n\n    toastError(e) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        var text = e.message;\n        if (e.message === 'Http failure response for http://localhost:4200/course-retrieval: 404 Not Found') {\n            text = 'The server is not available. Please check with a Katana Admin.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-selection/tool-selection.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-selection/tool-selection.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-selection/tool-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                selectedFixOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFixOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedFixOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:70\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:80\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:84\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:89\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-view/tool-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                            \n                                getIssueItemCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-view/tool-view.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItemCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    getIssueItemCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.length;\n        }, 0);\n    }\n\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                    {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/GENERATED_ISSUES.ts\n            \n            \n                variable\n            \n            \n                TEST_ISSUES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/options-view/bypass-sanitize.pipe.ts\n            \n            \n                pipe\n            \n            \n                BypassSanitize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.2.0\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.2.0\n        \n            ws : ^5.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis project was generated with Angular CLI version 6.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TEST_ISSUES   (src/.../GENERATED_ISSUES.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/GENERATED_ISSUES.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TEST_ISSUES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TEST_ISSUES:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'untouched',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'untouched',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'untouched',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'fixed',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'skipped',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'skipped',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'skipped',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'skipped',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'skipped',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'skipped',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'skipped',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 01: Potatoes',\n    course_id: 123,\n    item_id: 1,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'References Backstreet Boys',\n        status: 'skipped',\n        description: 'Any way you want it, that\\'s the way you need it.',\n        details: {}\n    }, {\n        title: 'Divides by zero',\n        status: 'approved',\n        description: 'I do not get the hype about Avacados. Probably because they make me painfully tingly in my throat.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 02: Tomatoes',\n    course_id: 123,\n    item_id: 11,\n    item_type: 'Discussion',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 03: Avacados',\n    course_id: 123,\n    item_id: 111,\n    item_type: 'Quiz',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Freedom Fighters of Asgardia',\n        status: 'approved',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 04: Leeks',\n    course_id: 456,\n    item_id: 2,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Freedom Fighters of Asgardia',\n        status: 'untouched',\n        description: 'Asgardia is a real thing, apparently. World\\'s first space nation.',\n        details: {}\n    }, {\n        title: 'Hostile Stack Overflow Comments Embedded',\n        status: 'approved',\n        description: 'Hostile stack overflow comments should not be allowed anywhere in the course.',\n        details: {}\n    }]\n}, {\n    title: 'Lesson 05: Broccoli',\n    course_id: 456,\n    item_id: 22,\n    item_type: 'Page',\n    link: 'https://byui.instructure.com/courses/12872/pages/setup-for-course-instructor?module_item_id=850086',\n    issues: [{\n        title: 'Thing Done B0rkEd',\n        status: 'fixed',\n        description: 'Potato.',\n        details: {}\n    }, {\n        title: 'Something is wrong',\n        status: 'untouched',\n        description: 'Do not eat that asparagus!',\n        details: {}\n    }]\n}]\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
