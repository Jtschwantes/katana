var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.128,1,0.678]],["body/components/AppComponent.html",[0,0.231,1,1.088,2,0.202,3,0.202,4,0.824,5,0.824,6,0.824,7,0.144,8,2.501,9,0.328,10,4.19,11,3.528,12,2.104,13,2.104,14,4.19,15,3.528,16,2.766,17,1.285,18,1.985,19,3.528,20,3.528,21,0.824,22,1.823,23,1.823,24,1.249,25,1.163,26,4.19,27,1.163,28,4.19,29,0.38,30,2.192,31,1.899,32,1.156,33,1.939,34,1.349,35,3.621,36,3.04,37,0.523,38,2.97,39,2.443,40,4.19,41,2.289,42,3.528,43,4.855,44,1.848,45,1.78,46,4.19,47,0.503,48,0.716,49,2.289,50,4.19,51,4.19,52,2.766,53,2.134,54,1.249,55,3.582,56,2.506,57,4.19,58,4.19,59,2.262,60,1.554,61,1.814,62,0.567,63,0.029,64,0.659,65,0.233,66,0.285,67,0.599,68,0.847,69,0.929,70,0.855,71,0.755,72,0.576,73,2.296,74,2.506,75,2.506,76,2.506,77,1.441,78,1.249,79,3.092,80,3.528,81,2.104,82,3.528,83,0.403,84,0.172,85,3.891,86,4.855,87,2.97,88,0.885,89,0.885,90,0.885,91,1.182,92,2.501,93,1.098,94,2.192,95,0.172,96,0.116,97,0.514,98,1.182,99,1.913,100,2.97,101,3.528,102,4.19,103,0.331,104,2.97,105,2.97,106,2.104,107,3.528,108,4.19,109,1.543,110,4.19,111,2.97,112,1.376,113,2.501,114,4.44,115,3.528,116,4.682,117,2.501,118,3.528,119,2.97,120,2.501,121,1.623,122,2.192,123,2.192,124,2.97,125,2.97,126,2.506,127,2.97,128,2.501,129,2.97,130,2.97,131,1.623,132,0.367,133,2.97,134,2.97,135,2.97,136,2.97,137,2.192,138,0.514,139,0.767,140,4.855,141,2.501,142,2.97,143,1.022,144,2.97,145,2.97,146,2.97,147,1.081,148,2.97,149,2.97,150,2.97,151,2.289,152,2.97,153,2.501,154,2.501,155,2.97,156,2.97,157,2.97,158,1.776,159,1.376,160,2.97,161,2.192,162,2.192,163,0.482,164,2.97,165,2.97,166,2.97,167,2.97,168,3.153,169,3.528,170,3.528,171,2.437,172,4.19,173,4.19,174,3.528,175,3.528,176,0.713,177,0.569,178,0.865,179,1.163,180,1.361,181,0.824,182,2.97,183,2.97,184,0.824,185,0.613,186,0.824,187,0.403,188,0.824,189,0.613,190,0.824,191,0.442,192,1.163,193,0.613,194,0.824,195,0.613,196,0.824,197,0.202,198,0.824,199,0.613,200,0.824,201,0.613,202,0.824,203,0.613,204,0.824,205,0.523,206,0.824,207,0.613,208,0.767,209,0.824,210,0.403,211,0.613,212,0.824,213,0.017,214,0.017]],["title/modules/AppModule.html",[215,1.794,216,2.168]],["body/modules/AppModule.html",[0,0.228,1,1.346,2,0.232,3,0.232,7,0.165,36,3.091,41,2.52,47,0.361,55,2.518,61,1.174,63,0.029,66,0.232,68,0.709,72,0.465,81,1.714,83,0.467,84,0.198,88,1.017,94,2.518,95,0.325,96,0.133,121,1.865,138,0.52,176,0.819,185,1.243,187,0.836,189,1.243,191,0.896,193,1.243,195,1.243,197,0.41,199,1.243,201,1.243,203,1.243,205,1.085,207,1.243,208,0.881,210,0.836,211,1.271,213,0.019,214,0.019,215,2.52,216,4.56,217,2.253,218,4.399,219,4.399,220,2.874,221,2.874,222,2.874,223,2.874,224,3.883,225,3.413,226,4.612,227,2.874,228,2.518,229,4.612,230,3.413,231,4.612,232,2.874,233,4.612,234,2.874,235,5.224,236,5.224,237,1.464,238,2.52,239,2.874,240,4.612,241,1.865,242,2.518,243,3.413,244,2.518,245,4.612,246,3.413,247,4.612,248,2.874,249,2.518,250,3.413,251,3.413,252,2.518,253,3.413,254,2.518,255,3.413,256,2.518,257,3.413,258,2.518,259,3.413,260,2.518,261,3.413,262,3.413,263,3.413,264,2.518,265,4.612,266,2.518,267,4.612,268,2.518,269,3.413,270,2.518,271,3.413,272,2.518,273,2.518,274,2.518,275,3.413,276,2.874,277,4.612,278,5.071,279,0.947,280,4.612,281,2.623,282,4.612,283,2.52,284,2.874,285,3.413,286,3.413,287,3.413,288,3.413,289,3.413]],["title/injectables/AuthGuardService.html",[36,1.649,290,0.533]],["body/injectables/AuthGuardService.html",[2,0.231,3,0.231,7,0.164,9,0.36,17,1.528,18,2.006,29,0.266,31,2.099,33,1.968,36,2.305,37,1.102,41,2.508,44,1.085,45,1.867,52,3.03,56,2.745,61,2.068,62,0.647,63,0.029,64,0.46,65,0.457,66,0.231,67,0.72,68,0.707,81,2.305,83,0.418,84,0.197,88,1.01,91,1.349,95,0.197,96,0.132,97,0.409,99,2.114,103,0.512,106,2.801,109,0.94,121,2.844,132,0.782,139,1.636,151,1.852,163,0.905,168,3.832,169,4.697,170,5.395,171,2.801,213,0.019,214,0.019,242,2.501,244,3.841,248,2.854,284,5.061,290,0.844,291,2.854,292,4.302,293,3.865,294,3.968,295,6.011,296,6.011,297,3.387,298,0.266,299,1.867,300,6.011,301,5.579,302,1.274,303,5.579,304,5.579,305,3.389,306,6.011,307,4.591,308,5.205,309,3.841,310,2.156,311,3.389,312,1.827,313,1.274,314,3.389,315,4.697,316,4.591,317,1.47,318,3.389,319,3.389,320,3.389,321,5.579,322,3.389,323,0.94,324,2.501,325,2.501,326,1.253,327,3.389,328,3.389,329,3.389,330,3.387,331,3.389,332,3.389,333,5.579,334,4.591,335,3.389,336,3.389,337,3.389,338,2.854,339,2.854,340,3.389,341,3.389,342,3.389,343,3.389,344,3.389,345,3.389,346,3.389,347,1.702,348,3.389,349,3.389,350,3.389]],["title/components/BreadcrumbsComponent.html",[0,0.128,185,0.678]],["body/components/BreadcrumbsComponent.html",[0,0.226,1,0.689,2,0.227,3,0.227,4,0.926,5,0.926,6,0.926,7,0.161,9,0.405,15,3.824,17,1.235,18,2.198,21,0.926,22,1.85,23,1.85,25,1.26,27,1.26,29,0.405,30,2.462,31,2.023,34,1.457,36,3.128,37,1.054,44,1.068,47,0.454,48,0.453,56,2.716,62,0.867,63,0.029,64,0.753,65,0.356,66,0.351,67,0.756,71,0.701,72,0.46,81,1.675,83,0.407,84,0.194,88,0.995,93,1.234,94,2.462,95,0.194,96,0.13,97,0.533,98,1.328,99,1.148,103,0.507,109,1.433,121,3.028,132,0.756,138,0.516,139,1.431,141,3.824,163,0.94,175,3.824,176,0.8,177,0.617,178,0.938,179,1.26,180,1.431,181,0.926,184,0.926,185,1.144,186,0.926,187,0.453,188,0.926,189,0.689,190,0.926,191,0.496,192,1.26,193,0.689,194,0.926,195,0.689,196,0.926,197,0.227,198,0.926,199,0.689,200,0.926,201,0.689,202,0.926,203,0.689,204,0.926,205,0.588,206,0.926,207,0.689,208,0.861,209,0.926,210,0.453,211,0.689,212,0.926,213,0.019,214,0.019,238,1.823,241,1.823,278,3.824,281,2.28,283,2.481,292,4.279,298,0.261,299,1.653,302,1.26,309,3.351,310,2.05,313,1.433,315,4.667,323,0.926,324,2.462,351,2.809,352,3.028,353,5.543,354,4.542,355,6.388,356,2.104,357,4.542,358,4.542,359,4.09,360,4.542,361,4.09,362,4.09,363,4.542,364,2.998,365,4.542,366,3.337,367,2.104,368,4.542,369,3.351,370,1.68,371,2.481,372,3.337,373,3.168,374,4.597,375,1.26,376,3.337,377,1.995,378,3.81,379,3.337,380,2.462,381,3.351,382,3.351,383,3.337,384,4.542,385,3.824,386,4.542,387,3.824]],["title/components/CategoriesComponent.html",[0,0.128,187,0.446]],["body/components/CategoriesComponent.html",[0,0.235,1,0.772,2,0.254,3,0.254,4,1.038,5,1.038,6,1.038,7,0.181,9,0.428,11,4.127,21,1.038,22,1.874,23,1.874,25,1.36,27,1.36,29,0.428,31,1.57,32,1.22,34,1.473,37,0.964,47,0.501,48,0.508,53,1.813,56,2.931,62,0.936,63,0.029,64,0.788,65,0.384,66,0.372,67,0.675,71,0.84,72,0.536,78,1.878,83,0.372,84,0.217,90,1.115,93,1.383,95,0.217,96,0.146,97,0.487,99,1.287,103,0.547,109,1.61,132,0.744,138,0.536,139,1.265,147,1.498,176,0.897,177,0.666,178,1.012,179,1.36,180,1.498,181,1.038,184,1.038,185,0.772,186,1.038,187,0.788,188,1.038,189,0.772,190,1.038,191,0.556,192,1.36,193,0.772,194,1.038,195,0.772,196,1.038,197,0.254,198,1.038,199,0.772,200,1.038,201,0.772,202,1.038,203,0.772,204,1.038,205,0.659,206,1.038,207,0.772,208,0.965,209,1.038,210,0.508,211,0.772,212,1.038,213,0.02,214,0.02,279,1.879,292,3.617,298,0.293,299,1.57,302,1.36,313,1.038,326,1.383,370,2.228,371,2.678,377,1.686,388,3.149,389,1.012,390,2.228,391,1.57,392,4.902,393,4.902,394,4.902,395,2.469,396,3.74,397,2.678,398,2.678,399,4.127,400,3.74,401,3.74,402,0.936,403,1.115,404,3.74,405,4.902,406,2.678]],["title/interfaces/Category.html",[279,0.911,407,0.678]],["body/interfaces/Category.html",[2,0.191,3,0.191,7,0.136,9,0.457,12,2.019,17,1.39,18,0.965,24,0.836,29,0.22,31,1.645,33,0.898,34,0.625,39,2.179,45,0.898,47,0.528,48,0.381,53,1.487,54,1.199,59,1.203,60,0.898,63,0.029,65,0.498,66,0.446,67,0.796,69,0.709,70,0.455,71,0.698,72,0.25,77,1.384,78,1.811,83,0.32,84,0.163,88,0.836,91,1.116,95,0.316,96,0.109,97,0.25,98,1.116,103,0.449,109,1.116,131,2.198,132,0.496,138,0.358,139,1.461,147,1.404,159,1.864,163,0.833,177,0.546,187,0.639,197,0.274,210,0.381,213,0.016,214,0.016,279,1.838,281,2.019,290,0.652,298,0.22,312,1.116,313,1.426,317,1.288,323,1.116,370,2.012,389,0.579,390,1.739,391,1.288,402,1.113,403,1.199,406,2.198,407,1.272,408,1.532,409,2.405,410,2.405,411,1.373,412,2.331,413,2.286,414,3.77,415,1.743,416,2.405,417,1.872,418,2.731,419,1.739,420,2.813,421,2.019,422,2.179,423,1.9,424,1.645,425,1.601,426,2.052,427,2.405,428,2.405,429,2.807,430,2.405,431,1.871,432,3.073,433,1.384,434,0.965,435,2.017,436,1.288,437,1.677,438,1.677,439,0.778,440,1.532,441,1.116,442,1.116,443,1.677,444,1.116,445,2.019,446,1.677,447,1.677,448,1.408,449,0.898,450,1.299,451,1.532,452,1.677,453,1.677,454,1.116,455,1.677,456,1.677,457,1.677,458,0.898,459,1.677,460,1.677,461,2.405,462,1.677,463,1.532,464,1.677,465,1.677,466,1.677,467,1.677,468,1.677,469,1.532,470,1.677,471,1.677,472,1.677,473,1.677,474,1.677,475,3.253,476,1.677,477,2.813,478,1.677,479,3.253,480,1.677,481,2.813,482,2.405,483,1.677,484,1.677,485,2.405,486,1.677,487,2.405,488,1.677,489,1.601,490,2.405,491,2.198,492,2.405]],["title/interfaces/Course.html",[72,0.292,407,0.678]],["body/interfaces/Course.html",[2,0.161,3,0.161,7,0.115,9,0.186,13,1.192,17,0.529,24,0.708,29,0.279,32,0.453,47,0.418,48,0.322,49,1.297,54,1.061,60,1.14,63,0.029,64,0.58,65,0.472,66,0.415,67,0.702,68,0.483,69,0.418,70,0.385,71,0.751,72,0.609,73,0.945,83,0.29,84,0.138,89,1.855,95,0.275,96,0.167,97,0.518,103,0.397,106,1.192,109,0.659,112,1.649,132,0.798,138,0.575,139,1.102,143,1.224,147,1.225,163,0.961,171,2.679,177,0.322,178,0.735,191,0.529,197,0.161,213,0.018,214,0.015,237,1.018,279,0.988,283,1.297,290,0.577,298,0.186,312,1.417,313,1.535,317,1.709,347,2.679,356,1.649,367,2.472,371,1.297,375,0.988,377,0.817,389,0.49,390,1.579,391,0.76,397,1.297,398,1.945,402,1.222,403,1.414,407,0.979,411,0.951,412,1.88,413,1.632,415,1.75,417,1.888,419,1.316,423,0.878,424,1.14,426,2.039,431,1.748,433,1.748,434,0.817,436,1.898,439,1.766,441,0.945,442,0.945,444,1.417,449,0.76,454,1.699,458,1.772,489,0.945,493,1.42,494,2.382,495,3.191,496,3.132,497,3.132,498,2.915,499,3.191,500,2.129,501,3.132,502,2.129,503,2.129,504,2.856,505,2.35,506,2.023,507,1.297,508,2.198,509,3.021,510,2.837,511,2.382,512,2.837,513,2.592,514,2.129,515,1.42,516,1.42,517,1.567,518,1.567,519,1.42,520,1.567,521,1.567,522,1.567,523,1.42,524,1.42,525,1.567,526,1.567,527,1.42,528,1.567,529,1.42,530,1.945,531,1.567,532,1.567,533,1.567,534,1.297,535,3.039,536,2.129,537,1.567,538,1.567,539,1.567,540,1.567,541,1.567,542,2.819,543,1.567,544,1.297,545,1.297,546,1.567,547,2.915,548,1.567,549,1.567,550,1.567,551,1.42,552,1.567,553,2.382,554,1.567,555,1.787,556,1.297,557,1.567,558,1.567,559,2.35,560,1.567,561,1.567,562,1.567,563,2.819,564,3.132,565,1.567,566,1.567,567,1.567,568,2.129,569,1.945,570,2.129,571,1.945,572,2.554,573,2.35,574,2.35,575,1.945,576,1.567,577,1.567,578,1.567,579,1.42,580,1.42,581,1.1,582,1.42,583,1.567,584,1.567,585,1.567,586,2.198,587,2.129,588,2.554,589,1.567,590,1.567,591,1.567,592,1.42,593,1.42,594,1.567,595,1.567,596,1.567,597,2.129,598,1.567,599,1.567,600,2.35,601,3.355,602,2.129,603,1.42,604,1.567,605,2.837,606,2.819,607,1.42,608,1.192,609,2.837,610,2.35,611,2.35,612,1.567,613,1.567,614,1.567,615,1.297,616,1.42]],["title/components/CourseChipComponent.html",[0,0.128,189,0.678]],["body/components/CourseChipComponent.html",[0,0.247,1,0.659,2,0.217,3,0.217,4,0.885,5,0.885,6,0.885,7,0.154,9,0.395,16,3.768,21,0.885,22,1.84,23,1.84,25,1.222,27,1.222,29,0.395,32,1.248,34,1.373,37,1.04,47,0.426,48,0.685,60,1.41,62,0.841,63,0.029,64,0.85,65,0.395,66,0.343,68,0.598,71,0.685,72,0.605,83,0.343,84,0.185,89,0.951,90,0.951,93,1.18,95,0.185,96,0.124,97,0.449,99,1.098,103,0.491,118,4.969,120,3.709,132,0.796,138,0.564,143,1.515,151,1.743,163,0.818,176,0.765,177,0.598,178,0.909,179,1.222,180,1.473,181,0.885,184,0.885,185,0.659,186,0.885,187,0.433,188,0.885,189,1.123,190,0.885,191,0.474,192,1.222,193,0.659,194,0.885,195,0.659,196,0.885,197,0.217,198,0.885,199,0.659,200,0.885,201,0.659,202,0.885,203,0.659,204,0.885,205,0.562,206,0.885,207,0.659,208,0.824,209,0.885,210,0.433,211,0.659,212,0.885,213,0.018,214,0.024,268,4.463,298,0.25,299,1.41,302,1.222,310,2.012,326,1.18,375,1.222,377,2.03,390,1.629,391,1.41,402,1.039,415,1.523,417,2.165,418,2.866,425,2.165,439,1.509,498,2.756,504,2.645,509,2.856,519,2.634,536,1.908,553,1.602,571,2.407,580,1.908,581,1.478,582,1.908,617,3.993,618,2.686,619,4.405,620,4.405,621,4.405,622,5.902,623,4.58,624,5.44,625,1.602,626,4.405,627,3.191,628,4.58,629,4.405,630,4.405,631,4.405,632,4.405,633,3.191,634,5.44,635,3.191,636,3.191,637,3.191,638,3.191,639,3.191,640,3.191,641,3.191,642,5.44,643,4.405,644,3.191,645,4.405,646,3.25,647,3.191,648,3.191,649,3.191,650,3.191,651,3.191,652,3.191,653,3.191,654,2.686,655,3.191,656,3.709,657,3.25]],["title/components/CourseSelectionComponent.html",[0,0.128,191,0.488]],["body/components/CourseSelectionComponent.html",[0,0.195,1,0.47,2,0.155,3,0.155,4,0.632,5,0.632,6,0.632,7,0.201,9,0.364,13,1.732,17,0.768,21,0.632,22,1.754,23,1.754,25,0.957,27,0.957,29,0.326,32,1.199,33,1.799,37,1.098,44,1.105,47,0.27,48,0.309,53,0.842,59,1.786,61,1.433,62,1.042,63,0.029,64,0.741,65,0.46,66,0.316,67,0.281,68,0.741,69,0.734,70,0.809,71,0.83,72,0.607,73,1.373,74,2.778,75,2.491,76,2.063,77,1.187,83,0.283,84,0.132,90,0.679,91,0.906,95,0.132,96,0.089,97,0.55,98,0.906,99,2.143,103,0.385,109,1.385,132,0.762,137,1.68,138,0.444,143,1.717,147,0.588,151,2.275,158,2.063,162,2.546,163,0.675,171,2.739,176,0.546,177,0.631,178,1.247,179,0.957,180,1.288,181,0.632,184,0.632,185,0.47,186,0.632,187,0.309,188,0.632,189,0.47,190,0.632,191,0.691,192,0.957,193,0.47,194,0.632,195,0.47,196,0.632,197,0.155,198,0.632,199,0.47,200,0.632,201,0.47,202,0.632,203,0.47,204,0.632,205,0.401,206,0.632,207,0.47,208,0.588,209,0.632,210,0.309,211,0.47,212,0.632,213,0.024,214,0.02,266,4.556,279,0.632,298,0.178,299,1.333,302,0.957,310,1.276,313,1.385,317,1.105,323,0.957,330,1.68,352,1.244,369,4.328,375,0.632,377,1.187,387,1.918,403,1.626,411,0.928,415,1.199,423,1.276,425,2.404,426,1.433,431,1.598,436,1.333,439,1.457,450,1.055,454,1.373,495,3.613,498,2.538,499,3.565,500,2.778,504,1.055,544,3.205,547,2.275,569,1.244,570,2.063,608,1.143,617,4.076,646,1.68,656,2.905,657,2.546,658,1.68,659,3.45,660,5.5,661,2.546,662,3.45,663,2.905,664,2.905,665,5.866,666,4.646,667,4.992,668,5.62,669,4.992,670,4.165,671,3.428,672,3.45,673,3.45,674,2.278,675,3.45,676,2.278,677,3.45,678,3.45,679,2.905,680,4.646,681,2.278,682,4.203,683,3.45,684,4.646,685,3.45,686,3.45,687,3.45,688,2.278,689,5.62,690,3.45,691,3.45,692,2.905,693,4.632,694,3.683,695,3.876,696,1.918,697,5.62,698,2.278,699,2.278,700,2.278,701,2.278,702,2.278,703,2.278,704,2.278,705,2.278,706,2.278,707,2.278,708,2.278,709,2.278,710,2.278,711,2.278,712,2.278,713,2.278,714,2.278,715,4.165,716,2.278,717,3.45,718,2.278,719,1.918,720,3.45,721,1.68,722,1.918,723,2.278,724,2.278,725,2.278,726,2.278,727,2.278,728,2.278,729,2.278,730,2.278,731,2.278,732,3.45,733,1.918,734,2.278,735,2.278,736,2.278,737,2.278,738,2.278,739,4.165,740,2.278,741,2.278,742,3.45,743,3.45,744,2.278,745,2.278,746,2.278,747,3.45,748,2.278,749,3.45,750,2.278,751,2.278,752,2.278,753,2.278,754,3.45,755,3.45,756,3.45,757,3.45,758,3.45,759,3.45,760,4.646,761,3.45,762,3.45,763,3.45,764,3.45,765,3.45,766,3.45,767,3.45]],["title/injectables/CourseService.html",[32,0.627,290,0.533]],["body/injectables/CourseService.html",[2,0.145,3,0.145,7,0.103,9,0.401,13,1.65,17,0.732,24,0.637,29,0.38,32,0.627,37,1.085,44,1.052,47,0.352,48,0.29,49,1.795,54,1.34,60,1.439,62,1.052,63,0.029,64,0.783,65,0.401,66,0.405,67,0.735,68,0.61,69,0.579,70,0.533,71,0.819,72,0.608,73,1.308,83,0.272,84,0.124,89,1.798,95,0.261,96,0.189,97,0.503,103,0.366,106,1.073,109,0.912,112,1.522,132,0.812,138,0.587,139,1.033,143,1.13,147,1.033,163,0.978,171,1.65,177,0.29,178,0.928,191,0.668,197,0.145,213,0.016,214,0.013,237,0.916,279,0.912,283,1.167,290,0.649,298,0.167,302,0.912,312,0.85,313,1.346,317,1.052,323,0.912,347,1.65,356,1.522,367,1.522,371,1.167,375,1.346,377,1.13,389,0.441,390,1.481,391,1.052,397,1.795,398,2.456,402,1.202,403,1.527,407,0.826,411,1.001,412,2.133,413,1.546,415,1.703,417,1.593,419,1.215,423,0.79,424,1.052,426,2.019,431,1.546,433,1.762,434,0.735,436,1.64,439,1.628,441,0.85,442,0.85,444,1.308,449,0.684,454,1.308,458,1.709,489,0.85,493,1.278,494,2.257,495,1.965,496,1.41,497,1.41,498,1.795,499,1.965,500,1.278,501,3.203,502,1.278,503,1.278,504,2.852,505,1.41,506,1.931,507,1.167,508,2.083,509,3.113,510,2.688,511,2.257,512,2.688,513,2.456,514,1.965,515,1.278,516,1.278,517,1.41,518,1.41,519,1.278,520,1.41,521,1.41,522,1.41,523,1.278,524,1.278,525,1.41,526,1.41,527,1.278,528,1.41,529,1.278,530,1.795,531,2.169,532,2.169,533,2.169,534,1.795,535,3.449,536,1.965,537,2.967,538,2.967,539,2.967,540,2.967,541,2.169,542,2.643,543,1.41,544,1.167,545,1.167,546,1.41,547,2.799,548,1.41,549,1.41,550,1.41,551,1.278,552,1.41,553,2.257,554,1.41,555,2.257,556,1.795,557,2.169,558,2.169,559,2.169,560,1.41,561,1.41,562,2.169,563,2.643,564,2.967,565,1.41,566,1.41,567,2.169,568,1.965,569,2.456,570,2.688,571,2.456,572,3.064,573,2.967,574,2.967,575,2.456,576,2.169,577,1.41,578,1.41,579,1.278,580,1.278,581,0.99,582,1.278,583,2.169,584,1.41,585,1.41,586,2.552,587,2.688,588,3.064,589,2.169,590,1.41,591,1.41,592,1.278,593,1.278,594,1.41,595,1.41,596,1.41,597,2.688,598,2.169,599,2.169,600,2.169,601,3.203,602,1.965,603,1.278,604,1.41,605,2.688,606,2.643,607,1.278,608,1.073,609,2.688,610,2.169,611,2.169,612,2.169,613,2.169,614,1.41,615,1.167,616,1.278,671,1.576,768,3.286,769,3.286,770,3.286,771,3.286,772,3.286,773,3.286,774,3.286,775,2.137,776,2.137,777,2.137,778,2.137,779,2.137,780,2.137,781,2.137,782,2.137,783,2.137,784,2.137,785,2.137,786,2.137,787,1.799,788,2.137,789,2.137,790,1.799,791,2.137,792,2.137]],["title/components/CourseSidebarComponent.html",[0,0.128,193,0.678]],["body/components/CourseSidebarComponent.html",[0,0.231,1,0.667,2,0.22,3,0.22,4,0.896,5,0.896,6,0.896,7,0.156,9,0.398,17,1.218,18,1.528,21,0.896,22,1.843,23,1.849,25,1.233,27,1.233,29,0.398,31,1.98,32,1.234,34,1.377,37,1.01,45,1.423,47,0.428,48,0.603,54,1.63,61,1.528,62,0.848,63,0.029,64,0.743,65,0.398,66,0.345,67,0.548,68,0.824,69,1.01,70,0.984,71,0.871,72,0.612,78,1.324,83,0.39,84,0.188,88,0.963,90,0.963,93,1.195,95,0.188,96,0.173,97,0.51,99,1.747,103,0.495,114,2.72,115,5.11,116,2.72,117,2.72,132,0.675,138,0.51,147,1.412,153,3.741,163,0.961,176,0.775,177,0.603,178,1.048,179,1.233,180,1.412,181,0.896,184,0.896,185,0.667,186,0.896,187,0.439,188,0.896,189,0.667,190,0.896,191,0.853,192,1.233,193,1.129,194,0.896,195,0.667,196,0.896,197,0.22,198,0.896,199,0.667,200,0.896,201,0.667,202,0.896,203,0.667,204,0.896,205,0.569,206,0.896,207,0.667,208,0.834,209,0.896,210,0.439,211,0.667,212,0.896,213,0.018,214,0.018,252,4.372,298,0.253,299,1.423,302,1.233,309,4.372,326,1.195,367,2.058,373,3.237,375,1.409,377,2.038,389,0.917,402,0.848,403,1.324,555,2.549,617,3.911,625,1.622,661,3.747,790,3.741,793,2.72,794,4.443,795,4.443,796,5.469,797,5.469,798,4.443,799,5.469,800,3.231,801,3.231,802,5.078,803,3.231,804,3.231,805,3.741,806,3.231,807,2.72,808,3.231,809,4.443,810,3.231,811,5.734,812,3.231,813,2.72,814,5.078,815,4.443,816,3.231,817,3.231,818,2.384,819,3.231,820,3.231]],["title/interfaces/DiscoverOption.html",[407,0.678,422,1.522]],["body/interfaces/DiscoverOption.html",[2,0.184,3,0.184,7,0.131,9,0.485,12,2.315,17,1.395,18,0.932,24,0.807,29,0.212,31,1.619,33,0.867,34,0.603,39,2.137,45,0.867,47,0.525,48,0.368,53,1.451,54,1.169,59,1.162,60,0.867,63,0.029,65,0.522,66,0.457,67,0.792,69,0.691,70,0.439,71,0.687,72,0.241,77,1.349,78,1.847,83,0.314,84,0.157,88,0.807,91,1.078,95,0.311,96,0.106,97,0.241,98,1.078,103,0.437,109,1.088,131,2.143,132,0.484,138,0.349,139,1.444,147,1.385,159,2.137,163,0.82,177,0.533,187,0.533,197,0.267,210,0.368,213,0.016,214,0.016,279,1.78,281,1.36,290,0.636,298,0.212,312,1.078,313,1.552,317,1.256,323,1.279,370,1.87,389,0.559,390,1.705,391,0.867,402,1.102,403,1.507,406,2.143,407,1.263,408,1.48,409,1.619,410,1.619,411,1.38,412,2.227,413,2.278,414,3.602,415,1.747,416,1.619,417,1.561,418,2.694,419,1.451,420,3.023,421,2.315,422,2.343,423,2.185,424,1.791,425,1.835,426,2.154,427,2.758,428,2.758,429,3.229,430,3.209,431,1.925,432,3.534,433,1.349,434,0.932,435,1.978,436,1.256,437,1.619,438,1.619,439,0.751,440,1.48,441,1.078,442,1.078,443,1.619,444,1.078,445,1.969,446,1.619,447,1.619,448,1.36,449,0.867,450,1.255,451,1.48,452,1.619,453,1.619,454,1.078,455,1.619,456,1.619,457,1.619,458,0.867,459,1.619,460,1.619,461,2.346,462,1.619,463,1.48,464,1.619,465,1.619,466,1.619,467,1.619,468,1.619,469,1.48,470,1.619,471,1.619,472,1.619,473,1.619,474,1.619,475,3.209,476,1.619,477,2.758,478,1.619,479,3.209,480,1.619,481,2.758,482,2.346,483,1.619,484,1.619,485,2.346,486,1.619,487,2.346,488,1.619,489,1.561,490,2.346,491,2.143,492,2.346]],["title/interfaces/FixOption.html",[407,0.678,435,1.409]],["body/interfaces/FixOption.html",[2,0.184,3,0.184,7,0.131,9,0.485,12,2.315,17,1.395,18,0.932,24,0.807,29,0.212,31,1.619,33,0.867,34,0.603,39,2.137,45,0.867,47,0.525,48,0.368,53,1.451,54,1.169,59,1.162,60,0.867,63,0.029,65,0.522,66,0.455,67,0.792,69,0.691,70,0.439,71,0.687,72,0.241,77,1.349,78,1.847,83,0.314,84,0.157,88,0.807,91,1.078,95,0.311,96,0.106,97,0.241,98,1.078,103,0.437,109,1.088,131,2.143,132,0.484,138,0.41,139,1.385,147,1.385,159,2.137,163,0.82,177,0.533,187,0.533,197,0.267,210,0.368,213,0.016,214,0.016,279,1.78,281,1.36,290,0.636,298,0.212,312,1.078,313,1.552,317,1.256,323,1.279,370,1.984,389,0.559,390,1.705,391,0.867,402,1.102,403,1.507,406,2.143,407,1.263,408,1.48,409,1.619,410,1.619,411,1.38,412,2.227,413,2.278,414,3.602,415,1.747,416,1.619,417,1.561,418,2.694,419,1.451,420,3.023,421,1.969,422,2.137,423,2.185,424,1.791,425,1.835,426,2.154,427,2.758,428,2.758,429,3.229,430,3.209,431,1.925,432,3.534,433,1.586,434,1.349,435,2.169,436,1.256,437,1.619,438,1.619,439,0.751,440,1.48,441,1.078,442,1.078,443,1.619,444,1.078,445,1.969,446,1.619,447,1.619,448,1.36,449,0.867,450,1.255,451,1.48,452,1.619,453,1.619,454,1.078,455,1.619,456,1.619,457,1.619,458,0.867,459,1.619,460,1.619,461,2.346,462,1.619,463,1.48,464,1.619,465,1.619,466,1.619,467,1.619,468,1.619,469,1.48,470,1.619,471,1.619,472,1.619,473,1.619,474,1.619,475,3.209,476,1.619,477,2.758,478,1.619,479,3.209,480,1.619,481,2.758,482,2.346,483,1.619,484,1.619,485,2.346,486,1.619,487,2.346,488,1.619,489,1.561,490,2.346,491,2.143,492,2.346]],["title/interfaces/Issue.html",[138,0.292,407,0.678]],["body/interfaces/Issue.html",[2,0.164,3,0.164,7,0.116,9,0.189,13,1.208,17,0.536,24,0.717,29,0.282,32,0.46,47,0.4,48,0.327,49,1.315,54,1.072,60,1.151,63,0.029,64,0.488,65,0.448,66,0.405,67,0.755,68,0.488,69,0.424,70,0.39,71,0.755,72,0.602,73,0.958,83,0.293,84,0.14,89,1.741,95,0.277,96,0.168,97,0.52,103,0.401,106,1.208,109,0.668,112,1.666,132,0.796,138,0.589,139,1.233,143,1.237,147,1.111,163,0.947,171,1.805,177,0.488,178,0.742,191,0.535,197,0.245,213,0.02,214,0.015,237,1.032,279,0.998,283,1.315,290,0.583,298,0.189,312,0.958,313,1.195,317,1.151,347,1.805,356,2.485,367,1.666,371,1.965,375,0.998,377,0.828,389,0.742,390,1.983,391,0.771,397,1.315,398,1.965,402,1.237,403,1.657,407,0.986,411,1.238,412,1.89,413,1.966,415,1.736,417,1.901,419,1.33,423,0.89,424,1.529,426,2.046,431,1.481,433,1.845,434,0.828,435,1.032,436,1.717,439,1.675,441,0.958,442,0.958,444,1.713,449,0.771,454,1.431,458,1.78,489,0.958,493,1.439,494,2.398,495,2.15,496,1.589,497,1.589,498,1.965,499,2.15,500,1.439,501,2.842,502,1.439,503,1.439,504,2.797,505,1.589,506,2.433,507,1.315,508,2.756,509,3.064,510,3.057,511,2.567,512,3.057,513,2.793,514,2.575,515,2.15,516,2.15,517,2.374,518,3.153,519,2.15,520,2.374,521,2.374,522,3.153,523,1.439,524,1.439,525,1.589,526,1.589,527,1.439,528,1.589,529,1.439,530,1.965,531,1.589,532,1.589,533,1.589,534,1.315,535,3.057,536,2.15,537,1.589,538,1.589,539,1.589,540,1.589,541,1.589,542,2.842,543,1.589,544,1.315,545,1.315,546,1.589,547,2.93,548,1.589,549,1.589,550,1.589,551,1.439,552,1.589,553,2.398,554,1.589,555,1.805,556,1.315,557,1.589,558,1.589,559,2.374,560,1.589,561,1.589,562,1.589,563,2.842,564,3.153,565,1.589,566,1.589,567,1.589,568,2.15,569,1.965,570,2.15,571,1.965,572,2.575,573,2.374,574,2.374,575,1.965,576,1.589,577,1.589,578,1.589,579,1.439,580,1.439,581,1.115,582,1.439,583,1.589,584,1.589,585,1.589,586,2.213,587,2.15,588,2.575,589,1.589,590,1.589,591,1.589,592,1.439,593,1.439,594,1.589,595,1.589,596,1.589,597,2.15,598,1.589,599,1.589,600,2.374,601,3.374,602,2.15,603,1.439,604,1.589,605,2.856,606,2.842,607,1.439,608,1.208,609,2.856,610,2.374,611,2.374,612,1.589,613,1.589,614,1.589,615,1.315,616,1.439]],["title/components/IssueCardComponent.html",[0,0.128,195,0.678]],["body/components/IssueCardComponent.html",[0,0.25,1,0.662,2,0.218,3,0.218,4,0.89,5,0.89,6,0.89,7,0.264,9,0.346,19,3.721,21,0.89,22,1.841,23,1.841,25,1.226,27,1.226,29,0.396,32,1.233,37,1.067,47,0.346,48,0.687,49,2.415,62,0.612,63,0.029,64,0.687,65,0.506,66,0.301,67,0.73,68,0.687,69,0.891,70,0.927,71,0.687,72,0.526,83,0.301,84,0.186,89,1.89,90,0.956,95,0.186,96,0.197,97,0.285,103,0.608,126,2.643,132,0.706,138,0.57,139,1.617,176,0.769,177,0.6,178,1.22,179,1.226,180,1.407,181,0.89,184,0.89,185,0.662,186,0.89,187,0.435,188,0.89,189,0.662,190,0.89,191,0.477,192,1.226,193,0.662,194,0.89,195,1.125,196,0.89,197,0.218,198,0.89,199,0.662,200,0.89,201,1.044,202,0.89,203,0.662,204,0.89,205,0.565,206,0.89,207,0.662,208,0.828,209,0.89,210,0.435,211,0.662,212,0.89,213,0.018,214,0.018,215,2.978,256,4.554,293,3.721,298,0.251,299,1.415,302,1.226,325,4.022,326,1.186,375,0.89,389,0.912,391,1.415,402,0.966,411,1.214,412,2.344,413,1.52,415,0.828,425,2.013,439,1.226,440,3.124,441,1.759,458,1.831,463,2.415,494,2.219,504,2.048,524,3.26,527,2.643,544,2.415,555,2.219,572,2.643,586,2.048,587,2.643,588,3.26,625,1.61,657,3.261,692,4.815,693,4.022,694,2.366,695,3.261,821,3.372,822,2.7,823,5.718,824,4.42,825,4.42,826,5.718,827,5.911,828,5.451,829,4.42,830,3.207,831,3.207,832,3.207,833,4.42,834,4.42,835,3.207,836,4.42,837,3.721,838,5.058,839,3.721,840,3.207,841,4.42,842,2.7,843,3.207,844,3.207,845,3.207,846,3.207,847,3.207,848,5.451,849,4.59,850,4.42,851,3.207,852,3.207,853,3.207,854,3.207,855,3.207,856,3.207,857,3.207,858,3.207,859,3.207,860,3.207,861,3.207,862,3.721,863,3.721,864,3.261]],["title/components/IssueContainerComponent.html",[0,0.128,197,0.223]],["body/components/IssueContainerComponent.html",[0,0.222,1,0.533,2,0.175,3,0.175,4,0.716,5,0.716,6,0.716,7,0.125,9,0.412,21,0.716,22,1.788,23,1.788,25,1.05,27,1.05,29,0.351,32,1.113,34,1.266,37,1.027,44,1.212,47,0.387,48,0.35,54,1.129,61,1.302,62,0.944,63,0.029,64,0.792,65,0.387,66,0.405,67,0.467,68,0.671,69,0.871,70,0.945,71,0.514,72,0.506,78,1.473,83,0.336,84,0.15,90,0.769,93,0.954,95,0.15,96,0.239,97,0.49,98,1.027,99,0.887,103,0.422,132,0.766,138,0.601,147,1.275,151,1.409,158,2.264,161,1.904,163,0.801,176,0.619,177,0.514,178,1.135,179,1.05,180,1.275,181,0.716,184,0.716,185,0.533,186,0.716,187,0.35,188,0.716,189,0.533,190,0.716,191,0.384,192,1.05,193,0.533,194,0.716,195,0.533,196,0.716,197,0.336,198,0.716,199,0.533,200,0.716,201,0.533,202,0.716,203,0.533,204,0.716,205,0.455,206,0.716,207,0.533,208,0.666,209,0.716,210,0.35,211,0.533,212,0.716,213,0.016,214,0.016,270,4.39,294,2.499,298,0.202,302,1.05,310,1.659,313,1.05,325,2.794,356,1.754,364,3.474,370,1.4,375,1.244,389,1.135,391,1.212,395,1.703,397,2.068,398,2.068,402,0.856,411,1.225,412,1.4,413,1.302,415,1.561,419,1.4,423,1.4,424,1.582,425,1.785,426,1.543,431,1.7,433,2.155,435,1.107,436,1.212,444,1.027,458,1.212,494,1.901,502,2.264,506,1.027,507,1.409,509,2.874,510,2.955,511,2.987,512,3.558,513,3.106,516,2.682,545,1.409,581,2.802,586,1.754,592,2.264,593,2.264,602,1.543,605,2.264,607,1.543,608,1.295,609,1.543,615,1.409,682,3.188,693,3.646,694,1.904,695,2.794,813,3.188,821,3.25,842,3.776,864,2.794,865,2.172,866,3.786,867,3.786,868,4.941,869,3.786,870,4.941,871,4.941,872,3.786,873,3.786,874,3.786,875,2.58,876,3.786,877,5.262,878,2.58,879,5.262,880,2.58,881,4.941,882,2.58,883,3.786,884,3.786,885,3.786,886,3.786,887,2.58,888,3.786,889,3.786,890,3.786,891,3.786,892,2.58,893,4.941,894,2.58,895,2.58,896,2.58,897,2.58,898,2.58,899,2.58,900,2.58,901,2.58,902,2.58,903,4.485,904,2.58,905,2.58,906,2.58,907,2.58,908,2.58,909,2.58,910,5.95,911,3.786,912,2.58,913,2.58,914,2.58,915,2.58,916,2.58,917,3.188,918,3.188,919,4.941,920,4.941,921,3.188,922,3.188]],["title/components/IssueDetailsComponent.html",[0,0.128,199,0.678]],["body/components/IssueDetailsComponent.html",[0,0.241,1,0.836,2,0.275,3,0.275,4,1.123,5,1.123,6,1.123,7,0.196,9,0.404,21,1.123,22,1.889,23,1.889,25,1.432,27,1.432,29,0.445,32,1.277,37,0.909,47,0.404,48,0.55,62,0.773,63,0.029,64,0.771,65,0.404,66,0.351,67,0.637,68,0.771,69,1.001,70,0.921,71,0.839,72,0.562,83,0.351,84,0.235,89,1.538,90,1.207,95,0.235,96,0.158,97,0.36,103,0.575,138,0.603,163,0.837,176,0.971,177,0.701,178,1.065,179,1.432,180,1.544,181,1.123,184,1.123,185,0.836,186,1.123,187,0.55,188,1.123,189,0.836,190,1.123,191,0.602,192,1.432,193,0.836,194,1.123,195,0.836,196,1.123,197,0.351,198,1.123,199,1.234,200,1.123,201,0.836,202,1.123,203,0.836,204,1.123,205,0.714,206,1.123,207,0.836,208,1.045,209,1.123,210,0.55,211,0.836,212,1.123,213,0.021,214,0.021,258,4.191,298,0.317,299,1.652,326,1.497,356,2.391,389,1.065,402,0.985,411,1.149,529,3.086,625,2.033,821,3.103,923,3.409,924,5.16,925,5.16,926,4.049,927,4.049,928,4.049,929,4.345,930,5.16]],["title/interfaces/IssueItem.html",[89,0.979,407,0.678]],["body/interfaces/IssueItem.html",[2,0.167,3,0.167,7,0.119,9,0.193,13,1.234,17,0.548,24,0.733,29,0.286,32,0.469,47,0.404,48,0.496,49,1.343,54,1.089,60,1.17,63,0.029,64,0.496,65,0.423,66,0.249,67,0.71,68,0.496,69,0.433,70,0.399,71,0.76,72,0.604,73,0.978,83,0.297,84,0.143,89,1.751,95,0.28,96,0.17,97,0.523,103,0.407,106,1.234,109,0.682,112,1.693,132,0.798,138,0.59,139,1.331,143,1.257,147,1.125,163,0.932,171,1.834,177,0.334,178,0.754,191,0.543,197,0.167,213,0.018,214,0.015,237,1.054,279,1.5,283,1.343,290,0.592,298,0.193,312,0.978,313,1.21,317,1.17,347,1.834,356,1.693,367,1.693,371,1.343,375,1.014,377,0.846,389,0.507,390,1.612,391,0.787,397,1.343,398,1.996,402,1.25,403,1.439,407,0.996,411,0.971,412,1.908,413,1.978,415,1.736,417,1.921,419,1.785,423,0.909,424,1.17,426,2.057,431,1.5,433,1.775,434,1.257,436,1.841,439,1.764,441,1.454,442,1.454,444,1.454,449,0.787,454,1.454,458,2.006,489,0.978,493,1.47,494,2.189,495,2.185,496,1.623,497,1.623,498,1.996,499,2.185,500,1.47,501,2.878,502,1.47,503,1.47,504,2.925,505,1.623,506,2.053,507,1.343,508,2.237,509,3.034,510,2.887,511,2.423,512,2.887,513,2.637,514,2.608,515,1.47,516,1.47,517,1.623,518,1.623,519,1.47,520,1.623,521,1.623,522,1.623,523,2.185,524,2.185,525,3.186,526,3.186,527,2.185,528,1.623,529,2.185,530,1.996,531,1.623,532,1.623,533,1.623,534,1.343,535,3.085,536,2.185,537,1.623,538,1.623,539,1.623,540,1.623,541,1.623,542,2.878,543,1.623,544,1.343,545,1.343,546,1.623,547,2.953,548,1.623,549,1.623,550,1.623,551,1.47,552,1.623,553,2.423,554,1.623,555,1.834,556,1.343,557,1.623,558,1.623,559,2.412,560,1.623,561,1.623,562,1.623,563,2.878,564,3.186,565,1.623,566,1.623,567,1.623,568,2.185,569,1.996,570,2.185,571,1.996,572,2.608,573,2.412,574,2.412,575,1.996,576,1.623,577,1.623,578,1.623,579,1.47,580,1.47,581,1.139,582,1.47,583,1.623,584,1.623,585,1.623,586,2.237,587,2.185,588,2.608,589,1.623,590,1.623,591,1.623,592,1.47,593,1.47,594,1.623,595,1.623,596,1.623,597,2.185,598,1.623,599,1.623,600,2.412,601,3.405,602,2.185,603,1.47,604,1.623,605,2.887,606,2.878,607,1.47,608,1.234,609,2.887,610,2.412,611,2.412,612,1.623,613,1.623,614,1.623,615,1.343,616,1.47]],["title/components/IssueListComponent.html",[0,0.128,201,0.678]],["body/components/IssueListComponent.html",[0,0.239,1,0.812,2,0.268,3,0.268,4,1.091,5,1.091,6,1.091,7,0.19,9,0.397,21,1.091,22,1.883,23,1.883,25,1.405,27,1.405,29,0.439,32,1.272,37,0.893,47,0.463,48,0.534,60,1.894,61,1.743,62,0.751,63,0.028,64,0.831,65,0.397,66,0.345,68,0.761,69,0.987,70,0.908,71,0.831,72,0.598,83,0.345,84,0.228,89,1.173,90,1.173,95,0.228,96,0.153,97,0.35,103,0.565,107,4.265,138,0.596,143,1.743,158,3.029,163,0.821,176,0.944,177,0.688,178,1.046,179,1.405,180,1.527,181,1.091,184,1.091,185,0.812,186,1.091,187,0.534,188,1.091,189,0.812,190,1.091,191,0.585,192,1.405,193,0.812,194,1.091,195,0.812,196,1.091,197,0.268,198,1.091,199,0.812,200,1.091,201,1.221,202,1.091,203,0.812,204,1.091,205,0.693,206,1.091,207,0.812,208,1.015,209,1.091,210,0.534,211,0.812,212,1.091,213,0.021,214,0.021,254,4.134,298,0.308,299,1.622,317,1.622,326,1.455,402,0.751,411,1.128,434,1.743,436,1.622,458,1.622,513,2.767,530,2.149,625,1.975,821,3.061,921,4.265,922,4.265,931,3.312,932,5.066,933,5.066,934,3.934,935,3.934,936,5.066,937,5.066,938,5.066,939,5.066]],["title/components/IssueNavComponent.html",[0,0.128,203,0.678]],["body/components/IssueNavComponent.html",[0,0.203,1,0.521,2,0.172,3,0.172,4,1.033,5,0.7,6,0.7,7,0.122,9,0.383,16,2.458,17,1.089,18,1.281,21,0.7,22,1.782,23,1.782,25,1.033,27,1.033,29,0.347,31,1.855,32,1.179,33,1.997,34,1.389,37,1.06,44,0.808,45,1.192,47,0.442,48,0.601,52,2.458,54,0.752,59,1.597,61,1.523,62,0.845,63,0.029,64,0.708,65,0.427,66,0.333,67,0.73,68,0.847,69,0.962,70,0.939,71,0.829,72,0.587,73,1.762,74,2.923,75,2.647,76,2.647,77,1.523,78,1.32,83,0.394,84,0.216,88,0.752,89,1.819,90,0.752,91,1.004,93,0.933,95,0.146,96,0.098,97,0.527,99,0.868,103,0.415,112,1.169,132,0.788,138,0.59,139,0.961,147,1.408,163,0.976,168,1.509,176,0.605,177,0.506,178,0.769,179,1.033,180,1.553,181,0.7,184,0.7,185,0.521,186,0.7,187,0.343,188,0.7,189,0.521,190,0.7,191,0.375,192,1.033,193,0.521,194,0.7,195,0.521,196,0.7,197,0.172,198,0.7,199,0.521,200,0.7,201,0.521,202,0.7,203,1.009,204,0.7,205,0.445,206,0.7,207,0.521,208,0.651,209,0.7,210,0.343,211,0.521,212,0.7,213,0.015,214,0.015,238,3.084,241,3.084,260,4.502,298,0.198,299,1.855,302,1.033,310,1.637,323,0.7,326,0.933,352,2.035,356,1.725,359,3.607,361,3.607,362,3.607,364,2.458,367,1.725,373,2.849,374,4.275,375,1.356,377,1.794,378,4.026,380,1.861,381,2.748,382,3.607,389,1.009,402,0.845,411,0.829,419,1.808,433,1.993,489,1.004,511,2.739,523,2.227,530,1.378,551,2.227,553,1.87,556,2.035,581,1.725,625,1.266,818,1.861,821,3.334,862,3.136,863,3.136,864,2.748,929,2.124,940,2.124,941,3.724,942,3.724,943,3.724,944,4.888,945,3.724,946,3.724,947,3.724,948,2.523,949,2.523,950,5.214,951,5.214,952,3.724,953,3.724,954,2.523,955,2.523,956,3.724,957,2.523,958,2.523,959,2.523,960,2.523,961,2.523,962,2.523,963,2.124,964,2.124,965,3.727,966,3.727,967,2.523,968,3.136,969,2.523,970,2.523,971,2.523,972,3.724,973,2.523,974,2.523,975,2.523,976,4.888,977,3.724,978,3.724,979,3.724,980,3.724,981,3.724,982,4.116,983,3.724,984,3.724,985,3.724,986,3.724,987,2.523,988,2.124,989,2.523,990,2.523,991,2.523,992,3.724,993,2.523,994,2.523,995,2.523,996,2.523,997,2.523,998,2.523,999,2.523,1000,2.523,1001,3.724,1002,3.724,1003,3.136]],["title/injectables/KatanaService.html",[33,1.052,290,0.533]],["body/injectables/KatanaService.html",[2,0.163,3,0.163,7,0.116,9,0.281,17,0.799,18,1.234,24,0.715,29,0.337,31,1.828,32,1.09,33,1.149,34,1.271,35,3.414,37,1.006,42,3.021,44,1.635,45,1.149,47,0.499,54,1.069,59,2.382,60,1.527,61,1.234,62,0.975,63,0.029,64,0.693,65,0.435,66,0.416,67,0.589,68,0.807,69,0.84,70,0.582,71,0.727,72,0.581,73,1.428,74,2.145,76,2.145,77,2.205,78,1.069,79,2.647,81,1.204,83,0.378,84,0.139,85,3.519,88,0.715,89,0.715,90,0.715,92,2.02,93,0.887,95,0.139,96,0.094,97,0.52,98,0.955,99,1.641,103,0.4,106,1.204,109,1.649,112,1.112,113,4.807,121,1.96,122,3.519,123,4.509,126,2.852,128,3.021,132,0.782,138,0.537,143,1.234,147,0.619,151,2.927,159,1.662,161,1.77,162,2.647,163,0.964,168,3.204,180,1.109,213,0.015,214,0.015,234,2.02,276,3.021,290,0.697,297,2.647,298,0.188,302,0.995,310,2.198,317,0.768,323,0.995,324,3.171,338,4.015,339,4.298,347,1.204,367,1.662,369,3.519,370,0.887,373,2.605,375,0.666,377,1.234,389,0.741,403,1.597,415,1.474,421,1.801,433,1.756,434,1.641,436,1.149,439,1.323,442,1.428,445,2.394,448,1.801,449,0.768,458,1.828,469,1.311,508,1.112,509,1.991,511,1.204,514,2.145,515,2.145,545,1.96,547,2.605,556,1.96,568,2.57,575,1.96,581,1.112,628,3.021,660,2.02,671,2.647,721,2.647,722,3.021,818,2.647,837,4.51,839,4.298,982,2.02,988,4.51,1004,2.02,1005,4.769,1006,3.588,1007,3.588,1008,4.769,1009,3.588,1010,2.399,1011,4.769,1012,3.588,1013,4.297,1014,3.588,1015,3.588,1016,2.399,1017,3.588,1018,2.399,1019,3.588,1020,2.399,1021,3.021,1022,2.399,1023,3.588,1024,2.399,1025,4.769,1026,3.588,1027,4.769,1028,3.618,1029,2.399,1030,4.297,1031,2.399,1032,2.399,1033,2.399,1034,2.399,1035,4.769,1036,3.588,1037,2.399,1038,3.588,1039,2.399,1040,4.769,1041,4.769,1042,4.769,1043,2.399,1044,3.588,1045,3.588,1046,5.357,1047,2.399,1048,3.588,1049,3.588,1050,4.297,1051,2.399,1052,2.399,1053,5.553,1054,3.588,1055,3.588,1056,3.588,1057,3.021,1058,3.588,1059,3.588,1060,3.588,1061,3.588,1062,3.588,1063,4.769,1064,3.588,1065,2.399,1066,3.588,1067,3.588,1068,3.021,1069,2.399,1070,2.399,1071,2.399,1072,2.399,1073,2.399,1074,2.399,1075,2.399,1076,2.399,1077,2.399,1078,3.588,1079,2.399,1080,2.399,1081,2.399]],["title/classes/OptionModel.html",[96,0.128,506,1.307]],["body/classes/OptionModel.html",[2,0.287,3,0.287,7,0.204,9,0.415,24,1.257,29,0.475,37,1.02,39,2.453,44,1.35,45,1.695,53,1.958,62,0.805,63,0.029,64,0.573,65,0.33,66,0.464,67,0.653,68,0.719,83,0.36,84,0.245,95,0.307,96,0.237,97,0.375,103,0.59,132,0.653,197,0.36,205,0.933,213,0.022,214,0.022,237,1.809,290,0.858,294,2.784,298,0.33,302,1.469,310,2.312,323,1.17,352,3.486,370,1.958,402,1.271,424,2.043,449,1.35,450,1.954,506,2.303,508,2.897,1082,3.112,1083,4.458,1084,4.458,1085,4.458,1086,4.458,1087,5.11,1088,4.458,1089,5.294,1090,4.217,1091,3.906,1092,4.458,1093,4.872,1094,3.551,1095,2.784,1096,3.551,1097,3.551,1098,3.551,1099,3.551,1100,3.551,1101,4.458,1102,3.551,1103,3.551]],["title/injectables/OptionsService.html",[290,0.533,1095,2.168]],["body/injectables/OptionsService.html",[2,0.308,3,0.308,7,0.219,9,0.354,24,1.348,29,0.433,39,2.096,45,1.448,53,2.3,63,0.029,66,0.447,67,0.558,68,0.614,83,0.376,84,0.263,95,0.321,96,0.243,97,0.403,132,0.558,197,0.308,205,0.797,213,0.023,214,0.023,237,1.94,290,0.968,294,2.986,310,2.3,352,3.263,370,1.673,402,1.218,424,1.912,449,1.448,450,2.562,506,2.376,508,2.767,1082,3.337,1083,3.808,1084,3.808,1085,3.808,1086,3.808,1087,3.808,1088,3.808,1091,3.337,1092,3.808,1093,5.028,1094,4.655,1095,3.65,1096,3.808,1097,3.808,1098,3.808,1099,3.808,1100,3.808,1101,4.655,1102,3.808,1103,3.808]],["title/components/OptionsViewComponent.html",[0,0.128,205,0.579]],["body/components/OptionsViewComponent.html",[0,0.225,1,0.557,2,0.184,3,0.184,4,0.749,5,0.749,6,0.749,7,0.131,9,0.396,13,1.965,16,2.584,17,1.125,18,1.347,21,0.749,22,1.8,23,1.8,25,1.086,27,1.086,29,0.361,31,1.927,32,1.149,33,2.039,34,1.407,37,1.091,44,0.865,45,1.253,47,0.463,48,0.625,53,1.448,61,1.844,62,0.516,63,0.029,64,0.625,65,0.452,66,0.453,67,0.754,68,0.802,69,0.944,70,0.869,71,0.759,72,0.567,73,1.832,74,2.753,75,2.753,76,2.753,77,1.584,78,1.372,83,0.402,84,0.157,88,0.805,90,0.805,91,1.075,93,0.999,95,0.157,96,0.105,97,0.497,99,1.347,103,0.437,126,3.343,132,0.712,138,0.477,139,1.303,143,0.929,159,1.814,163,0.635,176,0.648,177,0.532,178,0.808,179,1.086,180,1.383,181,0.749,184,0.749,185,0.557,186,0.749,187,0.367,188,0.749,189,0.557,190,0.749,191,0.402,192,1.086,193,0.557,194,0.749,195,0.557,196,0.749,197,0.184,198,0.749,199,0.557,200,0.749,201,0.557,202,0.749,203,0.557,204,0.749,205,0.89,206,0.749,207,0.557,208,0.697,209,0.749,210,0.367,211,0.557,212,0.749,213,0.016,214,0.016,237,1.158,238,3.15,241,3.15,273,4.618,279,1.551,298,0.212,299,1.716,302,1.086,310,1.703,313,1.277,323,0.749,326,0.999,330,1.993,359,3.726,361,3.726,362,3.726,364,2.584,373,2.928,374,4.618,375,1.551,377,1.983,378,4.124,380,1.993,381,2.888,382,3.726,385,3.296,389,0.808,395,1.783,402,0.879,411,0.872,421,1.965,422,2.339,424,1.79,429,2.759,431,1.347,503,2.341,506,2.432,507,1.475,508,2.832,509,1.814,555,1.965,586,1.814,661,1.993,719,3.296,721,1.993,733,4.251,805,3.296,917,3.296,918,3.296,965,3.877,966,3.877,1003,3.296,1057,2.274,1104,5.27,1105,1.993,1106,3.914,1107,3.296,1108,3.296,1109,5.049,1110,5.049,1111,3.914,1112,2.701,1113,2.701,1114,3.914,1115,2.701,1116,3.914,1117,3.914,1118,3.914,1119,3.914,1120,3.914,1121,2.701,1122,2.701,1123,2.701,1124,2.701,1125,2.701,1126,2.701,1127,2.701,1128,2.701,1129,2.701,1130,2.701,1131,2.701,1132,2.701,1133,2.701,1134,2.701,1135,2.701,1136,2.701,1137,2.701,1138,2.701,1139,2.701,1140,2.701,1141,2.701,1142,2.701,1143,2.701,1144,2.701,1145,2.701,1146,3.914,1147,3.914,1148,3.914]],["title/components/StatBadgeComponent.html",[0,0.128,207,0.678]],["body/components/StatBadgeComponent.html",[0,0.238,1,0.801,2,0.264,3,0.264,4,1.077,5,1.077,6,1.077,7,0.188,9,0.304,21,1.077,22,1.881,23,1.881,25,1.394,27,1.394,29,0.478,37,1.074,44,1.608,47,0.393,48,0.527,63,0.029,64,0.682,65,0.461,66,0.264,72,0.496,83,0.264,84,0.225,95,0.225,96,0.151,138,0.543,176,0.931,177,0.682,178,1.037,179,1.394,180,1.519,181,1.077,184,1.077,185,0.801,186,1.077,187,0.527,188,1.077,189,0.801,190,1.077,191,0.577,192,1.394,193,0.801,194,1.077,195,0.801,196,1.077,197,0.264,198,1.077,199,0.801,200,1.077,201,0.801,202,1.077,203,0.801,204,1.077,205,0.684,206,1.077,207,1.215,208,1.64,209,1.077,210,0.527,211,0.801,212,1.077,213,0.021,214,0.021,274,4.608,298,0.304,323,1.394,389,1.037,411,1.435,413,2.148,415,1.612,425,2.216,491,2.744,494,2.522,504,2.984,597,3.004,615,2.744,1149,5.258,1150,3.269,1151,6.245,1152,5.023,1153,5.023,1154,5.023,1155,6.097,1156,6.356,1157,6.356,1158,5.568,1159,5.023,1160,3.883,1161,3.883,1162,3.883,1163,3.883,1164,3.883,1165,3.883,1166,3.883]],["title/injectables/ToastService.html",[35,1.964,290,0.533]],["body/injectables/ToastService.html",[2,0.28,3,0.28,7,0.199,9,0.448,17,1.412,20,4.389,24,1.226,29,0.486,35,3.117,37,1.008,52,3.441,62,0.995,63,0.029,64,0.708,66,0.355,68,0.708,73,2.074,77,1.415,79,4.854,80,5.339,83,0.355,84,0.239,85,3.036,95,0.239,96,0.16,97,0.464,101,4.817,122,3.036,123,3.036,132,0.742,213,0.021,214,0.021,238,2.248,241,2.248,290,0.928,298,0.322,302,1.669,347,3.303,373,2.248,375,1.446,411,1.451,415,1.062,426,2.181,445,3.272,449,1.317,534,3.464,603,2.46,608,2.065,654,5.226,1028,4.389,1068,4.389,1167,3.464,1168,5.212,1169,5.212,1170,4.114,1171,5.212,1172,4.114,1173,5.212,1174,4.114,1175,5.212,1176,5.212,1177,4.114,1178,4.114,1179,4.114,1180,4.114,1181,4.114,1182,5.212,1183,5.212,1184,5.212,1185,5.212,1186,4.114,1187,4.114]],["title/interfaces/Tool.html",[47,0.257,407,0.678]],["body/interfaces/Tool.html",[2,0.181,3,0.181,7,0.129,9,0.484,12,1.945,17,1.39,18,0.916,24,0.793,29,0.208,31,1.606,33,0.852,34,0.593,39,2.116,45,0.852,47,0.532,48,0.361,53,1.432,54,1.155,59,1.142,60,0.852,63,0.029,65,0.512,66,0.45,67,0.803,69,0.683,70,0.432,71,0.681,72,0.237,77,1.571,78,1.816,83,0.311,84,0.154,88,0.793,91,1.059,95,0.309,96,0.104,97,0.237,98,1.059,103,0.432,109,1.075,131,2.116,132,0.478,138,0.406,139,1.482,147,1.375,159,1.795,163,0.813,177,0.526,187,0.62,197,0.341,210,0.526,213,0.016,214,0.016,279,1.821,281,1.336,290,0.628,298,0.208,312,1.541,313,1.391,317,1.24,323,1.075,370,2.057,389,0.549,390,1.971,391,0.852,402,1.096,403,1.155,406,2.116,407,1.258,408,1.454,409,1.592,410,1.592,411,1.39,412,2.308,413,2.273,414,3.732,415,1.754,416,1.592,417,1.817,418,2.675,419,1.689,420,2.999,421,1.945,422,2.778,423,1.855,424,1.606,425,1.541,426,2.023,427,2.316,428,2.316,429,2.74,430,2.316,431,1.833,432,2.999,433,1.571,434,0.916,435,2.572,436,1.781,437,2.316,438,2.316,439,1.075,440,2.116,441,1.541,442,1.541,443,1.592,444,1.059,445,2.292,446,2.316,447,2.999,448,1.336,449,0.852,450,1.233,451,1.454,452,1.592,453,1.592,454,1.059,455,1.592,456,1.592,457,1.592,458,0.852,459,1.592,460,1.592,461,2.316,462,1.592,463,1.454,464,1.592,465,1.592,466,1.592,467,1.592,468,1.592,469,1.454,470,1.592,471,1.592,472,1.592,473,1.592,474,1.592,475,3.187,476,1.592,477,2.731,478,1.592,479,3.187,480,1.592,481,2.731,482,2.316,483,1.592,484,1.592,485,2.316,486,1.592,487,2.316,488,1.592,489,1.541,490,2.316,491,2.116,492,2.316]],["title/components/ToolSelectionComponent.html",[0,0.128,210,0.446]],["body/components/ToolSelectionComponent.html",[0,0.241,1,0.832,2,0.274,3,0.274,4,1.119,5,1.119,6,1.119,7,0.195,9,0.403,21,1.119,22,1.888,23,1.888,25,1.428,27,1.428,29,0.444,32,1.239,34,1.489,37,0.907,47,0.526,48,0.77,62,0.77,63,0.028,64,0.77,65,0.403,66,0.35,68,0.838,69,1.087,70,1,71,0.857,72,0.549,78,1.69,83,0.386,84,0.234,90,1.202,93,1.491,95,0.234,96,0.157,97,0.458,99,1.387,103,0.574,138,0.549,176,0.967,177,0.699,178,1.062,179,1.428,180,1.541,181,1.119,184,1.119,185,0.832,186,1.119,187,0.548,188,1.119,189,0.832,190,1.119,191,0.6,192,1.428,193,0.832,194,1.119,195,0.832,196,1.119,197,0.274,198,1.119,199,0.832,200,1.119,201,0.832,202,1.119,203,0.832,204,1.119,205,0.711,206,1.119,207,0.832,208,1.041,209,1.119,210,0.811,211,0.832,212,1.119,213,0.021,214,0.021,272,4.182,298,0.316,299,1.648,326,1.491,395,2.662,448,2.584,658,2.975,663,4.333,664,4.333,696,3.395,1188,4.182,1189,4.032,1190,5.146,1191,5.146]],["title/injectables/ToolService.html",[34,0.731,290,0.533]],["body/injectables/ToolService.html",[2,0.165,3,0.165,7,0.117,9,0.449,12,1.815,17,1.437,18,1.244,24,0.723,29,0.339,30,1.789,31,1.784,33,0.776,34,0.805,37,1.091,39,2.492,44,1.642,45,1.158,47,0.532,48,0.491,53,1.773,54,1.429,59,1.551,60,1.158,62,0.826,63,0.029,64,0.587,65,0.503,66,0.446,67,0.777,69,0.845,70,0.586,71,0.778,72,0.322,77,1.488,78,1.845,83,0.294,84,0.141,88,0.723,91,0.965,95,0.298,96,0.095,97,0.216,98,0.965,103,0.403,109,1.33,131,1.976,132,0.592,138,0.322,139,1.388,147,1.478,159,1.675,163,0.929,177,0.651,187,0.491,197,0.246,210,0.329,213,0.015,214,0.015,279,1.826,281,1.217,290,0.701,298,0.19,312,0.965,313,1.589,317,1.722,323,1.546,370,1.773,375,1.003,389,0.746,390,1.773,391,0.776,399,2.041,402,1.064,403,1.078,406,1.976,407,1.182,408,1.325,409,1.45,410,1.45,411,1.327,412,2.346,413,2.288,414,3.794,415,1.699,416,1.45,417,1.439,418,2.407,419,1.337,420,2.586,421,2.171,422,2.004,423,1.773,424,1.535,425,1.439,426,1.97,427,2.162,428,2.162,429,2.619,430,2.162,431,1.97,432,2.867,433,1.244,434,0.834,435,1.855,436,1.158,437,1.45,438,1.45,439,0.673,440,1.325,441,0.965,442,0.965,443,1.45,444,0.965,445,2.171,446,1.45,447,1.45,448,1.815,449,0.776,450,1.675,451,1.976,452,2.162,453,2.162,454,1.439,455,2.162,456,2.162,457,2.162,458,1.158,459,2.162,460,2.162,461,2.867,462,2.162,463,1.976,464,2.162,465,2.162,466,2.867,467,2.162,468,2.867,469,2.619,470,2.867,471,2.867,472,2.162,473,2.867,474,2.162,475,3.067,476,1.45,477,2.586,478,2.162,479,3.067,480,1.45,481,2.586,482,2.162,483,1.45,484,1.45,485,2.162,486,1.45,487,2.162,488,1.45,489,1.439,490,2.162,491,1.976,492,2.162,787,2.041,1192,2.425,1193,2.425,1194,2.425,1195,2.425,1196,2.425,1197,2.425,1198,2.425,1199,2.425,1200,2.425,1201,2.425,1202,2.425,1203,2.425,1204,2.425,1205,2.425,1206,2.425,1207,2.425]],["title/components/ToolViewComponent.html",[0,0.128,211,0.678]],["body/components/ToolViewComponent.html",[0,0.234,1,0.766,2,0.252,3,0.252,4,1.03,5,1.03,6,1.03,7,0.18,9,0.382,21,1.03,22,1.872,23,1.872,25,1.353,27,1.353,29,0.427,32,1.261,34,1.479,37,1.02,47,0.525,48,0.816,62,0.709,63,0.029,64,0.74,65,0.427,66,0.332,68,0.838,69,1.087,70,1,71,0.854,72,0.574,78,1.624,83,0.371,84,0.215,89,1.106,90,1.106,93,1.372,95,0.215,96,0.145,97,0.434,103,0.544,112,1.72,132,0.761,138,0.56,143,1.678,163,1.02,176,0.89,177,0.662,178,1.007,179,1.353,180,1.493,181,1.03,184,1.03,185,0.766,186,1.03,187,0.504,188,1.03,189,0.766,190,1.03,191,0.552,192,1.353,193,0.766,194,1.03,195,0.766,196,1.03,197,0.252,198,1.03,199,0.766,200,1.03,201,0.766,202,1.03,203,0.766,204,1.03,205,0.654,206,1.03,207,0.766,208,0.958,209,1.03,210,0.504,211,1.194,212,1.03,213,0.02,214,0.02,264,4.434,298,0.291,299,1.924,302,1.353,326,1.372,389,1.007,434,1.678,535,2.917,553,2.449,571,2.664,579,2.219,586,2.26,623,4.871,625,1.863,968,3.125,1105,2.738,1107,4.106,1108,4.106,1188,4.434,1208,3.711,1209,3.711,1210,3.711,1211,3.711,1212,3.711,1213,3.711,1214,4.877,1215,4.877]],["title/coverage.html",[1216,3.783]],["body/coverage.html",[0,0.265,1,0.862,7,0.202,8,3.516,32,0.797,33,1.337,34,0.93,35,2.497,36,2.097,47,0.327,63,0.029,65,0.327,72,0.372,89,1.245,96,0.163,138,0.372,185,0.862,187,0.567,189,0.862,191,0.621,193,0.862,195,0.862,197,0.284,199,0.862,201,0.862,203,0.862,205,0.736,207,0.862,210,0.567,211,0.862,213,0.022,214,0.022,249,3.081,252,3.081,254,3.081,256,3.081,258,3.081,260,3.081,264,3.081,266,3.081,268,3.081,270,3.081,272,3.081,273,3.081,274,3.081,279,1.159,290,1.032,291,3.516,310,1.544,351,3.516,388,3.516,407,1.334,408,3.406,418,2.097,422,1.935,435,1.791,493,3.617,506,1.662,617,3.803,618,3.516,658,3.883,679,3.516,793,3.516,821,3.406,822,3.516,865,3.516,923,3.516,931,3.516,940,3.516,1004,3.516,1082,3.883,1095,2.757,1104,3.516,1105,3.883,1149,3.516,1150,3.516,1167,3.516,1188,3.883,1216,3.516,1217,4.176,1218,4.176,1219,6.948,1220,4.176,1221,6.048,1222,3.516,1223,3.081,1224,5.262,1225,5.761,1226,6.048,1227,4.176,1228,5.262,1229,4.176,1230,5.262,1231,5.761,1232,5.761,1233,4.176,1234,4.176,1235,5.262,1236,4.176]],["title/dependencies.html",[217,2.61,1237,2.738]],["body/dependencies.html",[63,0.029,75,2.817,81,2.845,84,0.273,88,1.404,174,3.966,213,0.023,214,0.023,217,3.109,227,4.771,228,4.181,232,3.966,237,2.02,238,3.096,239,3.966,241,3.096,242,4.181,244,3.475,439,1.307,451,2.573,807,3.966,963,3.966,964,4.771,1021,3.966,1238,4.71,1239,6.73,1240,4.71,1241,4.71,1242,4.71,1243,4.71,1244,4.71,1245,4.71,1246,4.71,1247,4.71,1248,4.71,1249,4.71,1250,4.71,1251,4.71,1252,4.71,1253,4.71,1254,4.71,1255,4.71,1256,4.71,1257,4.71,1258,4.71,1259,4.71,1260,4.71,1261,5.667,1262,4.71,1263,5.667,1264,4.71,1265,4.71,1266,4.71,1267,4.71,1268,4.71,1269,4.71,1270,4.71,1271,4.71,1272,4.71,1273,4.71,1274,4.71,1275,4.71,1276,4.71,1277,4.71]],["title/index.html",[154,2.305,298,0.214,569,1.496]],["body/index.html",[7,0.238,12,2.47,47,0.456,56,2.942,61,1.692,63,0.024,67,0.764,68,0.668,70,0.798,77,1.692,126,2.942,137,3.63,158,3.703,168,2.942,213,0.025,214,0.024,297,3.63,352,3.496,407,1.016,439,1.365,534,2.688,575,2.688,616,2.942,849,4.142,1091,3.63,1278,5.816,1279,4.92,1280,4.92,1281,4.92,1282,4.92,1283,4.92,1284,6.192,1285,4.92,1286,4.92,1287,5.816,1288,6.192,1289,5.816,1290,5.816,1291,4.92,1292,4.92,1293,4.92,1294,4.92,1295,4.92,1296,4.92,1297,4.92,1298,4.92,1299,4.92,1300,5.816,1301,4.92,1302,4.92,1303,4.92,1304,4.92,1305,4.92,1306,4.92,1307,4.92,1308,4.92,1309,4.92,1310,4.92]],["title/modules.html",[215,2.455]],["body/modules.html",[63,0.025,213,0.025,214,0.025,215,2.938,216,3.55,228,3.969,1311,5.378,1312,5.378,1313,5.378]],["title/overview.html",[1314,3.783]],["body/overview.html",[0,0.178,1,1.36,36,3.014,41,2.5,55,3.377,63,0.028,68,0.621,95,0.266,96,0.178,121,2.5,143,1.574,176,1.098,185,1.239,187,0.815,189,1.239,191,0.893,193,1.239,195,1.239,197,0.408,199,1.239,201,1.239,203,1.239,205,1.058,207,1.239,210,0.815,211,1.239,213,0.023,214,0.023,215,3.042,216,4.621,217,3.021,218,3.853,219,3.853,220,3.853,221,3.853,222,3.853,223,3.853,224,4.689,290,0.742,407,0.945,646,4.109,1314,3.853,1315,4.576,1316,4.576,1317,4.576]],["title/routes.html",[41,2.455]],["body/routes.html",[41,2.959,63,0.025,213,0.025,214,0.025]],["title/miscellaneous/variables.html",[1223,2.917,1318,2.305]],["body/miscellaneous/variables.html",[44,1.647,61,2.169,63,0.028,65,0.403,67,0.635,81,2.996,82,4.33,213,0.024,214,0.024,249,4.653,298,0.403,323,1.427,403,1.779,1222,4.33,1223,3.794,1318,4.33,1319,5.142,1320,5.142,1321,5.142,1322,5.142,1323,5.142,1324,5.142,1325,5.142,1326,5.142,1327,5.142,1328,5.142,1329,5.142,1330,5.142,1331,5.142,1332,5.142]]],"invertedIndex":[["",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["0.100.2",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1315,"title":{},"body":{"overview.html":{}}}],["15.1.10",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1186,"title":{},"body":{"injectables/ToastService.html":{}}}],["2",{"_index":608,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{}}}],["2.4.1",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":816,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":603,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{}}}],["3.2.0",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":605,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["4.0.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":616,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"index.html":{}}}],["5.0.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1187,"title":{},"body":{"injectables/ToastService.html":{}}}],["6",{"_index":1316,"title":{},"body":{"overview.html":{}}}],["6.0.7",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1317,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":799,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_selectedcategori",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":538,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["_selectedtool",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["a.download",{"_index":1000,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":999,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":517,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["acc",{"_index":553,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":981,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1214,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":602,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["access",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["accessor",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["account.if",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["act",{"_index":619,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["activatedrout",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_compon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add",{"_index":555,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["add/remov",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":562,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["afauth",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["afterviewinit",{"_index":823,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["alphabet",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["angular",{"_index":1290,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":807,"title":{},"body":{"components/CourseSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1119,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{}}}],["apikey",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["app.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1303,"title":{},"body":{"index.html":{}}}],["appli",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["application/json",{"_index":1035,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":631,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["approut",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":511,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1138,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1148,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":848,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["async",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":502,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["attach_fil",{"_index":856,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["auth",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1058,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().getredirectresult",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth/authguard.servic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["auth/firebase.auth",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["authdomain",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":386,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["b",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"index.html":{}}}],["background",{"_index":612,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["badg",{"_index":1152,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["badge.component.css",{"_index":1153,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1154,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1150,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1161,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1160,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1162,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1159,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["bar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["base",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["basic",{"_index":1014,"title":{},"body":{"injectables/KatanaService.html":{}}}],["be",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["befor",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["belong",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["best",{"_index":1310,"title":{},"body":{"index.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["blank",{"_index":573,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blob",{"_index":995,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":996,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":813,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":601,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blueprint",{"_index":495,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["bodi",{"_index":1021,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["both",{"_index":1086,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["bottom",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["box",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["breadcrumbscompon",{"_index":185,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brows",{"_index":1313,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":913,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"index.html":{}}}],["buildhtml(messag",{"_index":1175,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":622,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1278,"title":{},"body":{"index.html":{}}}],["button",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{}}}],["c.id",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["call_missed_outgo",{"_index":593,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["came",{"_index":890,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["canactiv",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1003,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{},"index.html":{}}}],["card",{"_index":588,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["card'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":824,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":825,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":822,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:16",{"_index":830,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:20",{"_index":831,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:25",{"_index":829,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:31",{"_index":840,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:38",{"_index":835,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:60",{"_index":832,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":808,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch((",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["catch(console.error",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["categor",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["categori",{"_index":279,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["categories'},{'nam",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescompon",{"_index":187,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1141,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1137,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1140,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["chalk",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["charact",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["check",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{}}}],["check_circl",{"_index":591,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["check_circle_outlin",{"_index":592,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["cheerio",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["chip",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["chip.component.css",{"_index":620,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":621,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":618,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:19",{"_index":626,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:26",{"_index":636,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:32",{"_index":635,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:40",{"_index":627,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:56",{"_index":633,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/CourseChipComponent.html":{},"coverage.html":{}}}],["choic",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["choice.text",{"_index":919,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["chosen",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["circl",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":96,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1178,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["client",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud_download",{"_index":1001,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["color",{"_index":597,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["command",{"_index":1292,"title":{},"body":{"index.html":{}}}],["compat",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":837,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component'",{"_index":961,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":952,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1304,"title":{},"body":{"index.html":{}}}],["console.error(",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(`${course.course_cod",{"_index":1062,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(err",{"_index":1042,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["const",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":625,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1010,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["constructor(opt",{"_index":1088,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["constructor(priv",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":922,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["container'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["container.component.css",{"_index":866,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":867,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":865,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:107",{"_index":880,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:18",{"_index":875,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:23",{"_index":874,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:38",{"_index":882,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:57",{"_index":892,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:74",{"_index":878,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:93",{"_index":887,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":514,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["continu",{"_index":1147,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["control",{"_index":905,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":907,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":909,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["core",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":535,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["course'",{"_index":505,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course.account",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1053,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":547,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":969,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":974,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1076,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":967,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1213,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1071,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":496,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_id",{"_index":525,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_nam",{"_index":497,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursechipcompon",{"_index":189,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":561,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseid",{"_index":559,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursenam",{"_index":560,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseoverlay",{"_index":796,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1070,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1050,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1065,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":191,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":540,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":863,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":936,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":937,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["courseset",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["coursesidebarcompon",{"_index":193,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":537,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course}",{"_index":536,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coverag",{"_index":1216,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["credenti",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":951,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":962,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":989,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":972,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":993,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["current",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["d3",{"_index":963,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":607,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["data",{"_index":839,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["databas",{"_index":1302,"title":{},"body":{"index.html":{}}}],["databaseurl",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delet",{"_index":568,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["delete_outlin",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["depend",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1284,"title":{},"body":{"index.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["desir",{"_index":574,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["desiredstatu",{"_index":879,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["details'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":924,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":925,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":923,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":926,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":927,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["determin",{"_index":586,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["develop",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{}}}],["direct",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["discov",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["discoveri",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1006,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1015,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":422,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["discoveroption}",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discuss",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["dismiss",{"_index":1176,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["dist",{"_index":1308,"title":{},"body":{"index.html":{}}}],["do",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["document",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["document.documentelement.style.setproperti",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":994,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1131,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1185,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":810,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["dogooglelogin",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":950,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":944,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["dsv",{"_index":964,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dynam",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/ToastService.html":{}}}],["e.messag",{"_index":1179,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1181,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1182,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["effect",{"_index":912,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":877,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["enabl",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["end",{"_index":1288,"title":{},"body":{"index.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1040,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["error('socket",{"_index":1067,"title":{},"body":{"injectables/KatanaService.html":{}}}],["etc",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["event",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["ex",{"_index":841,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["exist",{"_index":1052,"title":{},"body":{"injectables/KatanaService.html":{}}}],["explor",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["express",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":513,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{}}}],["failed'].includes(this.issue.statu",{"_index":914,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fall",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["feedback",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":992,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["filter",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fire",{"_index":883,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["firebas",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["fit",{"_index":630,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["fixabl",{"_index":1069,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1074,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1081,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissu",{"_index":1007,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1017,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["fixopt",{"_index":435,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["fixoption}",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["flag",{"_index":1300,"title":{},"body":{"index.html":{}}}],["flatissuedetail",{"_index":976,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["folder",{"_index":849,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["form",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["format",{"_index":628,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{}}}],["formcontrol",{"_index":1093,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["formcontrol}",{"_index":1085,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["formgroup",{"_index":508,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup(group",{"_index":1103,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["formsmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":1282,"title":{},"body":{"index.html":{}}}],["front",{"_index":1287,"title":{},"body":{"index.html":{}}}],["full",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["fullbuild",{"_index":1295,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["gather",{"_index":1117,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["gavel",{"_index":857,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["get",{"_index":569,"title":{"index.html":{}},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbackgroundcolorclass",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":613,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbuttonclass",{"_index":869,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":876,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":576,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getcourses(bodi",{"_index":1019,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":623,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":632,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":945,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":953,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1201,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1204,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":589,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettextcolorclass",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":599,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettoollist",{"_index":1008,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":583,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettypeicon",{"_index":827,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["github:byuitechops/logg",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":570,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["go",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["goe",{"_index":1180,"title":{},"body":{"injectables/ToastService.html":{}}}],["googl",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{}}}],["green",{"_index":604,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["grey",{"_index":606,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["group",{"_index":1098,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["group[option.key",{"_index":1101,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["handl",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{}}}],["header",{"_index":988,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1036,"title":{},"body":{"injectables/KatanaService.html":{}}}],["help_outlin",{"_index":858,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1083,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["here",{"_index":503,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["home/tool",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["htmlelement",{"_index":809,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1139,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["http",{"_index":1013,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1011,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1030,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":966,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["icon",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["id",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["identifi",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["ignor",{"_index":1096,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["implement",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["import",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["index",{"_index":298,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":598,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inject",{"_index":290,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["input('issu",{"_index":894,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":844,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":845,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('sid",{"_index":1166,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1164,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1163,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('titlecolor",{"_index":1165,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":885,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["insert_drive_fil",{"_index":854,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instanceof",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instructor",{"_index":498,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["instructor'",{"_index":629,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1281,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":407,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["intial",{"_index":884,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isad",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":870,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issu",{"_index":138,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issue'",{"_index":516,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["issue.formgroup",{"_index":1078,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1079,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":982,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.questionmodel",{"_index":1080,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":581,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.titl",{"_index":864,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":195,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":197,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":928,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":868,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":199,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":89,"title":{"interfaces/IssueItem.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issueitem'",{"_index":833,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":984,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":551,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":968,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":580,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1077,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem.issues.includes(issu",{"_index":970,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":579,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":983,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":985,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.titl",{"_index":862,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1072,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":530,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuelistcompon",{"_index":201,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":203,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":582,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issue}",{"_index":528,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issue}'",{"_index":896,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["item",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["item'",{"_index":881,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":526,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["item_typ",{"_index":834,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["j",{"_index":975,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["json.parse(event.data",{"_index":1061,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1054,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":565,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["katana.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["key.includes('katana_cours",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":888,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["languag",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["last",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["launch",{"_index":1293,"title":{},"body":{"index.html":{}}}],["learn",{"_index":1279,"title":{},"body":{"index.html":{}}}],["left",{"_index":572,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["legend",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["lighten",{"_index":609,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["link",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["list').subscribe((toollist",{"_index":1032,"title":{},"body":{"injectables/KatanaService.html":{}}}],["list'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":932,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":933,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":931,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":934,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":935,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["load",{"_index":387,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["local",{"_index":557,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["localhost:8000",{"_index":1296,"title":{},"body":{"index.html":{}}}],["locat",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["log",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["logger",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["loguserstatu",{"_index":1009,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1023,"title":{},"body":{"injectables/KatanaService.html":{}}}],["look",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["magic",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":533,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["mainten",{"_index":1286,"title":{},"body":{"index.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["mass",{"_index":1285,"title":{},"body":{"index.html":{}}}],["master",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["materialize]{@link",{"_index":965,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["mcicon",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["mdicon",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["messag",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{}}}],["mint",{"_index":614,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["miscellan",{"_index":1318,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1109,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["modifi",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":215,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"modules.html":{},"overview.html":{}}}],["moduleitem",{"_index":527,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["more",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["more_vert",{"_index":1002,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["multiselect",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["mute",{"_index":1301,"title":{},"body":{"index.html":{}}}],["n",{"_index":986,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["name1",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":941,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":942,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":943,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":940,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:25",{"_index":947,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":958,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:35",{"_index":960,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:36",{"_index":959,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:43",{"_index":955,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:50",{"_index":948,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:59",{"_index":954,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:72",{"_index":957,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:82",{"_index":949,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["navigationend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["new",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["newstatu",{"_index":893,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":815,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1306,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":828,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":871,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["nodej",{"_index":1291,"title":{},"body":{"index.html":{}}}],["none",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1168,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1294,"title":{},"body":{"index.html":{}}}],["null",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["number",{"_index":504,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["numer",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":977,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":552,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1134,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":904,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["observ",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["octet/stream",{"_index":997,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":805,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["onc",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":872,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":886,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":842,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlyself",{"_index":908,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onsubmit",{"_index":1110,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["open/clos",{"_index":1114,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":624,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["option.descript",{"_index":918,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1100,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["option.titl",{"_index":917,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":889,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":506,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1128,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":900,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.categories.push(category.id",{"_index":1142,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options.servic",{"_index":507,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1135,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsservic",{"_index":1095,"title":{"injectables/OptionsService.html":{}},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"coverage.html":{}}}],["optionsviewcompon",{"_index":205,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":518,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["order",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"overview.html":{}}}],["output",{"_index":843,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["outsid",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["overlay",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":811,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":812,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1314,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1237,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pair",{"_index":978,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":979,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":980,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":594,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["param",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["parser",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["pathmatch",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1151,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pleas",{"_index":921,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["point",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pointless",{"_index":1094,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["popul",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1298,"title":{},"body":{"index.html":{}}}],["posit",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["pre",{"_index":1051,"title":{},"body":{"injectables/KatanaService.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"index.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["process",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["processingmessag",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["prod",{"_index":1307,"title":{},"body":{"index.html":{}}}],["product",{"_index":1305,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["prop",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["properti",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["purpos",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["put",{"_index":1092,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["queri",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":851,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":855,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1075,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quiz",{"_index":524,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["quizquest",{"_index":850,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quizz",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["rc.11",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1084,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["reactiveformsmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":610,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["redirect",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["redirectto",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":544,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["reject",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["relat",{"_index":1106,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["reload",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["remove_circl",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":797,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":567,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["render",{"_index":836,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["report",{"_index":991,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repres",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["request",{"_index":1143,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["requir",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":1034,"title":{},"body":{"injectables/KatanaService.html":{}}}],["resolve(data",{"_index":1039,"title":{},"body":{"injectables/KatanaService.html":{}}}],["restor",{"_index":521,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["result",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["return",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["revers",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["right",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{}}}],["rxj",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["same",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["save",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["screen",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["search",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["search_term",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["selectedcategori",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcours",{"_index":541,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedcourse(cours",{"_index":543,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteddiscoveropt",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":539,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedtool",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["selection.component.css",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:120",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1189,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:16",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:22",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:24",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:27",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:30",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:84",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["selection/tool",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":946,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":956,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["sent",{"_index":1177,"title":{},"body":{"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":939,"title":{},"body":{"components/IssueListComponent.html":{}}}],["server",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["server/server.j",{"_index":1299,"title":{},"body":{"index.html":{}}}],["serverdomain",{"_index":1005,"title":{},"body":{"injectables/KatanaService.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcategori",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":546,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["sessionstorage.selectedtool",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":564,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["set",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["setissuestatu",{"_index":873,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":891,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":798,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1206,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1184,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":990,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["shown",{"_index":587,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["side",{"_index":1155,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["sidebar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.component.css",{"_index":794,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":795,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":793,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:16",{"_index":800,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:25",{"_index":806,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":801,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:56",{"_index":804,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:63",{"_index":803,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sign",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["signinwithredirect(provid",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["singl",{"_index":494,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["skip",{"_index":512,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["socket",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1060,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":1049,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":1066,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1059,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sort",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":673,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["speak",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":515,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["specifi",{"_index":575,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["split",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/authguard.service.t",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/auth/authguard.service.ts:21",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:26",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:32",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:33",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:60",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:72",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:92",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/firebase.auth.t",{"_index":1222,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.t",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:22",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:31",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:37",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:44",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:53",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/categories/categories.component.t",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/categories/categories.component.ts:14",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:21",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:29",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/cours",{"_index":617,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":493,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"coverage.html":{}}}],["src/app/course.service.ts:101",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:108",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:110",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:124",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:143",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:156",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:174",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:186",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:203",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:219",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:80",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:85",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:90",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:97",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/issu",{"_index":821,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1004,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:157",{"_index":1018,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:20",{"_index":1012,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:39",{"_index":1029,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:44",{"_index":1022,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:56",{"_index":1020,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:74",{"_index":1024,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:92",{"_index":1016,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/opt",{"_index":1104,"title":{},"body":{"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["src/app/options.service.t",{"_index":1082,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/app/options.service.ts:29",{"_index":1089,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/options.service.ts:42",{"_index":1090,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/stat",{"_index":1149,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["src/app/toast.service.t",{"_index":1167,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1170,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1174,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:52",{"_index":1172,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":1188,"title":{},"body":{"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:101",{"_index":1195,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:134",{"_index":1196,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:138",{"_index":1197,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:142",{"_index":1200,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:147",{"_index":1199,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:152",{"_index":1193,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:156",{"_index":1194,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:160",{"_index":1198,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:162",{"_index":1202,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:165",{"_index":1203,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:170",{"_index":1205,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:173",{"_index":1207,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:176",{"_index":1192,"title":{},"body":{"injectables/ToolService.html":{}}}],["start",{"_index":154,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["stat",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":207,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1156,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":520,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statement",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1157,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":509,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["statuscolor",{"_index":600,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statuscolors[statu",{"_index":611,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicon",{"_index":590,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicons[statu",{"_index":596,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["still",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":558,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["storagebucket",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":519,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["string",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["style",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":500,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["subaccount",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1120,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1038,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["such",{"_index":523,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["support",{"_index":1311,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["svg",{"_index":1312,"title":{},"body":{"modules.html":{}}}],["syllabu",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["system",{"_index":1280,"title":{},"body":{"index.html":{}}}],["tab",{"_index":634,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["tabl",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["tag_fac",{"_index":938,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1091,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"index.html":{}}}],["taken",{"_index":1116,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["team",{"_index":1283,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tempvalu",{"_index":522,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["term",{"_index":499,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["text",{"_index":426,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["then((cours",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":350,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["thing",{"_index":532,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcategori",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":542,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitem",{"_index":549,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":550,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedtool",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.afauth.auth",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.closemod",{"_index":971,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":638,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":584,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.courseservice.addcourse(cours",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":973,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":819,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1132,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1212,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":814,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1063,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":820,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":818,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1064,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedissueitem",{"_index":929,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":930,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":563,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.coursesobj[key",{"_index":554,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.dogooglelogin",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.formgroup",{"_index":1129,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1136,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":585,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.http.get('/tool",{"_index":1031,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/cours",{"_index":1037,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/us",{"_index":1043,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":898,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":901,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":906,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":916,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":899,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":902,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":910,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":903,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":915,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":897,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1144,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.katanaservice.gettoollist",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.katanaservice.loguserstatus(this.userdetails.email",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.lastsortedbi",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":381,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1133,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1097,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["this.optionmodel",{"_index":1127,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1130,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1099,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["this.removecourse(cours",{"_index":566,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.router.navig",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1145,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":383,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":577,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":578,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedissueitem",{"_index":548,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.sockets.push(socket",{"_index":1048,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toast('y",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1041,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1046,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1045,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1057,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1056,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1033,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":847,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":852,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["three",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["through",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["time",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["titl",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["titlecolor",{"_index":1158,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1183,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1171,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1169,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1173,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":802,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1087,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["tool'",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tool.icon",{"_index":1190,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tool.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1191,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1055,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolcategori",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolid",{"_index":1044,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolselectioncompon",{"_index":210,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1215,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":384,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1146,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":920,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":385,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toolviewopen",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":838,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["toolview",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":211,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":571,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["true",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeicon",{"_index":826,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":861,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["types/d3",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":853,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["undefin",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":501,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["unexpectedli",{"_index":1068,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["untouch",{"_index":510,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["up",{"_index":1118,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["updat",{"_index":545,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["uri",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["user'",{"_index":556,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["userdetail",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1025,"title":{},"body":{"injectables/KatanaService.html":{}}}],["valid",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["validators.requir",{"_index":1102,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["variabl",{"_index":1223,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":531,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{}}}],["verifi",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["via",{"_index":534,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["view'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":1107,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1108,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1105,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1208,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1210,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1211,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:24",{"_index":1125,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1209,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:28",{"_index":1124,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:32",{"_index":1122,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:38",{"_index":1111,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:47",{"_index":1126,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1123,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:59",{"_index":1121,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:66",{"_index":1112,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:74",{"_index":1113,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:83",{"_index":1115,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":859,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":860,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('issuedetail",{"_index":895,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":846,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["void",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["warn",{"_index":595,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["wave",{"_index":911,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1028,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/discov",{"_index":1047,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/fix",{"_index":1073,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whether",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["whichev",{"_index":1297,"title":{},"body":{"index.html":{}}}],["white",{"_index":615,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1026,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":817,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1027,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":637,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":998,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["winter",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":529,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{}}}],["without",{"_index":987,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["work",{"_index":1309,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["written",{"_index":1289,"title":{},"body":{"index.html":{}}}],["ws",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to \nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService, IssueItem } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './auth/authguard.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to \n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     * \n     * This will also retrieve the list of tools from the Katana service when it is\n     * created. \n     * \n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Retrieve the tool list on start\n        this.katanaService.getToolList()\n            .catch((e) => {\n                this.toastService.toast('You are in development mode. Courses were not retrieved.');\n                console.error(e);\n            });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport 'materialize-css';\nimport { MaterializeModule } from 'angular2-materialize';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './auth/firebase.auth';\nimport { AuthGuardService } from './auth/authguard.service';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools',\n        component: ToolSelectionComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CourseSidebarComponent,\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolViewComponent,\n        CourseSelectionComponent,\n        CourseChipComponent,\n        IssueContainerComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        StatBadgeComponent,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpModule,\n        HttpClientModule,\n        MaterializeModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authguard.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:92\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:32\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:33\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:21\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:26\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\nimport { KatanaService } from '../katana.service';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router,\n        private katanaService: KatanaService) {\n        this.user = afAuth.authState;\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n                this.katanaService.logUserStatus(this.userDetails.email, 'Logged In');\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.katanaService.logUserStatus(this.userDetails.email, 'Logged Out');\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        if (this.userDetails !== null && this.userDetails.email.includes('@byui.edu')) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            let provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                })\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from '../auth/authguard.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button.\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, so styling can be applied\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:21\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, so styling can be applied\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the \nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-chip/course-chip.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:26\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { ToolService } from '../tool.service';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-selection/course-selection.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:20\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:33\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:41\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:30\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:22\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:27\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:24\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:16\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:18\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../katana.service';\nimport { Course, CourseService } from '../course.service';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:110\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:219\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:156\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:186\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:174\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:85\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:80\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:90\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:97\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:108\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-sidebar/course-sidebar.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL location of the user in Katana.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { ToolService } from '../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param _location The current URL location of the user in Katana.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-card/issue-card.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:31\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService, IssueItem } from '../course.service';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-container/issue-container.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is intialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:23\n                            \n                        \n\n                \n                    \n                        The element containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Issue, CourseService } from '../course.service';\nimport { OptionModel } from '../options.service';\nimport { ToolService } from '../tool.service';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The element containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) {\n    }\n\n    /**\n     * Fired when the component is intialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                \n            \n        \n\n\n    \n\n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                            {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:18\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:36\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:35\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:92\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:20\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:39\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService, IssueItem, Course } from './course.service';\nimport { ToolService, Tool } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private toastService: ToastService) { }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise((resolve, reject) => {\n            this.http.get('/tool-list').subscribe((toolList: any): any => {\n                this.toolService.toolList = toolList;\n                resolve();\n            }, reject);\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n            this.http.post('/course-retrieval', body, { headers: headers }).subscribe(\n                (data) => {\n                    resolve(data);\n                },\n                (err) => {\n                    this.toastService.toastError(err);\n                    console.error(err);\n                });\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     */\n    logUserStatus(userEmail: string, message: string) {\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            null,\n            (err) => {\n                this.toastService.toastError(err);\n                console.error(err);\n            });\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/discover`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/fix`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    // Save the option values for each issue, but remove the formGroup and questionModel\n                    course.issueItems.forEach(issueItem => {\n                        issueItem.issues.forEach(issue => {\n                            if (issue.formGroup) {\n                                issue.optionValues = issue.formGroup.value;\n                                delete issue.formGroup;\n                                delete issue.questionModel;\n                            }\n                        });\n                    });\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options.service.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/options.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options.service.ts:29\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n/**\n * This service will be replaced with just the OptionModel class. The\n * service is pointless.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class OptionsService {\n    /**\n     * @ignore\n     */\n    constructor() { }\n}\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options.service.ts\n        \n\n            \n                Description\n            \n            \n                This service will be replaced with just the OptionModel class. The\nservice is pointless.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n/**\n * This service will be replaced with just the OptionModel class. The\n * service is pointless.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class OptionsService {\n    /**\n     * @ignore\n     */\n    constructor() { }\n}\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:32\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:38\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:47\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OptionModel } from '../options.service';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-selection/tool-selection.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:176\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:152\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:156\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:101\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:134\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:138\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:160\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:147\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:142\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:162\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:165\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:170\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:173\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { ToolService } from '../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/auth/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/auth/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/options.service.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/options.service.ts\n            \n            \n                injectable\n            \n            \n                OptionsService\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.2.0\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. \nThe Front-End is written in Angular 5. The Back-End is written in NodeJS.\nDevelopment\nFor development, use this command to build the angular front-end and launch the server:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/server.js).\nFlags\n\n\n\nFlag\nUse\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nProduction\n To deploy the application, build it using ng build --prod, then take the resulting files from the dist folder and deploy them however works best for you.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: \"AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc\",\n        authDomain: \"katana-24a36.firebaseapp.com\",\n        databaseURL: \"https://katana-24a36.firebaseio.com\",\n        projectId: \"katana-24a36\",\n        storageBucket: \"katana-24a36.appspot.com\"\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
