var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.475,1,1.115]],["body/components/AppComponent.html",[0,0.762,1,1.566,2,0.379,3,0.379,4,0.967,5,1.016,6,1.016,7,0.29,8,2.586,9,0.55,10,4.369,11,3.347,12,1.911,13,3.043,14,4.369,15,3.753,16,2.021,17,0.939,18,3.063,19,3.347,20,3.347,21,1.016,22,2.463,23,2.345,24,2.599,25,1.475,26,4.369,27,1.475,28,5.992,29,1.234,30,2.306,31,3.581,32,2.23,33,3.237,34,2.596,35,4.234,36,3.836,37,3.44,38,0.722,39,3.011,40,3.134,41,4.369,42,3.347,43,2.427,44,4.417,45,2.008,46,1.833,47,3.753,48,0.627,49,1.053,50,2.771,51,3.753,52,4.369,53,2.599,54,2.89,55,2.599,56,3.06,57,2.276,58,4.369,59,3.753,60,2.427,61,2.599,62,1.492,63,0.722,64,0.019,65,0.73,66,0.427,67,0.62,68,0.692,69,1.413,70,1.727,71,2.106,72,1.663,73,1.113,74,2.11,75,2.427,76,1.55,77,2.427,78,0.95,79,1.048,80,3.347,81,3.753,82,1.155,83,2.276,84,2.021,85,2.521,86,0.781,87,0.591,88,3.134,89,5.143,90,1.317,91,1.183,92,1.791,93,2.586,94,1.392,95,2.097,96,2.306,97,0.334,98,0.312,99,1.574,100,1.568,101,2.589,102,1.01,103,2.306,104,3.011,105,3.011,106,3.011,107,3.753,108,4.369,109,0.533,110,3.011,111,3.011,112,3.043,113,3.753,114,4.369,115,2.771,116,4.369,117,3.011,118,1.791,119,2.586,120,4.846,121,4.369,122,5.992,123,3.011,124,4.369,125,3.011,126,2.586,127,1.317,128,2.306,129,2.306,130,3.011,131,3.011,132,1.911,133,3.011,134,2.586,135,3.011,136,3.011,137,2.586,138,0.533,139,3.011,140,3.011,141,3.011,142,1.317,143,2.306,144,1.049,145,0.379,146,3.939,147,2.097,148,3.011,149,1.475,150,3.011,151,3.011,152,3.011,153,3.011,154,2.586,155,3.011,156,2.276,157,3.011,158,3.011,159,1.791,160,2.306,161,0.622,162,3.011,163,3.011,164,1.183,165,3.011,166,3.011,167,2.939,168,2.599,169,2.599,170,1.499,171,3.347,172,4.369,173,2.276,174,2.276,175,0.796,176,0.903,177,1.404,178,1.475,179,1.813,180,1.016,181,3.011,182,3.011,183,1.016,184,0.836,185,1.016,186,0.533,187,1.016,188,0.836,189,0.533,190,1.016,191,0.796,192,1.475,193,0.836,194,1.016,195,0.796,196,0.562,197,1.016,198,0.836,199,1.016,200,0.533,201,1.016,202,0.836,203,1.016,204,0.836,205,1.016,206,0.836,207,1.016,208,0.758,209,1.016,210,0.836,211,0.967,212,1.016,213,0.562,214,0.796,215,1.016,216,0.011,217,0.011]],["title/modules/AppModule.html",[218,1.579,219,2.798]],["body/modules/AppModule.html",[0,0.796,1,2.054,2,0.524,3,0.524,7,0.401,37,3.766,42,4.188,48,0.489,56,2.476,62,1.101,64,0.019,69,1.262,73,0.662,82,1.101,86,0.904,87,0.818,90,1.82,95,2.899,97,0.676,98,0.431,127,1.82,164,1.636,175,1.101,186,0.968,195,1.446,208,1.377,214,1.446,216,0.014,217,0.014,218,2.399,219,5.228,220,2.168,221,3.914,222,3.914,223,3.575,224,3.575,225,3.575,226,3.575,227,3.575,228,4.431,229,4.431,230,4.431,231,3.505,232,4.162,233,5.467,234,3.575,235,3.188,236,3.808,237,2.899,238,5.467,239,3.575,240,5.467,241,3.575,242,1.925,243,3.575,244,3.188,245,4.162,246,3.188,247,5.467,248,4.162,249,5.467,250,3.575,251,2.899,252,4.162,253,2.668,254,4.162,255,3.081,256,3.575,257,5.467,258,3.505,259,4.162,260,4.162,261,2.899,262,4.188,263,3.188,264,2.899,265,3.808,266,3.575,267,5.467,268,3.196,269,1.337,270,5.467,271,5.467,272,3.808,273,5.244,274,4.162,275,4.162,276,4.162,277,4.162,278,4.162]],["title/injectables/AuthGuardService.html",[37,2.092,279,1.499]],["body/injectables/AuthGuardService.html",[2,0.437,3,0.437,7,0.335,9,0.609,17,1.148,18,3.101,29,0.833,31,4.023,37,2.519,38,1.67,42,3.704,43,1.929,45,1.116,46,1.936,53,2.877,57,2.519,60,2.686,62,1.733,63,0.833,64,0.019,65,0.493,66,0.898,67,0.493,68,0.701,69,1.15,78,1.051,82,1.591,86,0.775,87,0.682,88,1.929,90,1.519,97,0.385,98,0.359,99,1.218,101,2.714,109,0.856,112,4.192,127,2.115,138,1.249,145,0.877,161,1.244,164,1.365,167,3.57,168,3.58,169,4.195,170,1.754,196,0.648,216,0.012,217,0.012,244,2.66,246,4.262,250,2.983,273,5.627,279,2.077,280,2.983,281,4.407,282,3.704,283,3.807,284,5.627,285,5.627,286,2.37,287,0.552,288,2.487,289,6.552,290,6.018,291,1.48,292,6.018,293,6.018,294,6.018,295,3.473,296,6.552,297,3.473,298,5.565,299,4.262,300,2.105,301,3.473,302,2.115,303,1.716,304,3.473,305,3.858,306,4.836,307,1.554,308,3.473,309,3.369,310,4.836,311,3.369,312,3.473,313,3.473,314,3.473,315,6.018,316,3.473,317,0.833,318,3.473,319,4.154,320,2.686,321,4.154,322,2.226,323,2.983,324,1.232,325,3.473,326,1.702,327,3.473,328,3.473,329,3.473,330,3.473,331,3.876,332,3.473,333,3.473,334,6.018,335,3.473,336,3.473,337,3.473,338,3.473,339,2.983,340,2.66,341,3.473,342,3.473,343,3.473,344,3.473,345,3.473,346,3.473,347,3.473,348,3.473,349,3.473,350,3.473,351,3.473]],["title/components/BreadcrumbsComponent.html",[0,0.475,184,1.115]],["body/components/BreadcrumbsComponent.html",[0,0.77,1,1.047,2,0.475,3,0.475,4,1.212,5,1.273,6,1.273,7,0.364,9,0.732,15,4.396,17,0.937,18,3.512,21,1.273,22,2.532,23,2.41,25,1.728,27,1.728,29,1.394,30,2.888,31,3.937,34,2.883,37,3.641,38,1.394,48,0.583,49,0.704,50,2.687,57,2.666,63,1.228,64,0.019,65,0.884,66,0.726,67,0.825,68,0.775,72,1.613,73,0.814,84,2.283,85,2.848,86,0.737,87,0.741,90,1.649,94,1.744,95,2.626,97,0.418,98,0.39,99,1.57,100,1.964,101,1.562,109,0.906,115,2.687,127,2.725,138,1.154,144,1.094,145,0.785,147,3.565,161,1.347,174,2.666,175,0.997,176,1.058,177,1.645,178,1.728,179,2.002,180,1.273,183,1.273,184,1.73,185,1.273,186,0.668,187,1.273,188,1.047,189,0.668,190,1.273,191,0.997,192,1.728,193,1.047,194,1.273,195,0.997,196,0.704,197,1.273,198,1.047,199,1.273,200,0.668,201,1.273,202,1.047,203,1.273,204,1.047,205,1.273,206,1.047,207,1.273,208,0.95,209,1.273,210,1.047,211,1.212,212,1.273,213,0.704,214,0.997,215,1.273,216,0.013,217,0.013,255,2.238,268,2.367,272,3.565,281,4.538,287,0.599,288,2.283,291,1.566,299,3.92,300,1.645,303,2.062,305,3.995,320,2.094,352,3.461,353,3.239,354,3.707,355,6.231,356,5.118,357,4.396,358,1.91,359,5.118,360,6.515,361,5.118,362,3.771,363,3.045,364,5.118,365,3.771,366,2.238,367,5.118,368,3.281,369,1.566,370,2.367,371,3.771,372,3.771,373,4.396,374,5.118]],["title/components/CategoriesComponent.html",[0,0.475,186,0.711]],["body/components/CategoriesComponent.html",[0,0.776,1,1.069,2,0.485,3,0.485,4,1.237,5,1.3,6,1.3,7,0.371,9,0.739,11,3.975,21,1.3,22,2.538,23,2.416,25,1.752,27,1.752,29,1.409,31,2.883,32,2.372,34,2.874,38,1.409,48,0.629,49,0.718,50,2.715,54,2.4,57,2.703,63,1.245,64,0.019,65,0.892,66,0.737,67,0.833,68,0.749,72,1.877,73,0.999,79,1.657,84,2.308,85,2.878,86,0.694,87,0.756,91,1.513,94,1.78,97,0.426,98,0.398,99,1.479,101,1.595,102,1.235,109,0.919,115,2.906,138,1.162,144,1.101,145,0.654,175,1.018,176,1.073,177,1.668,178,1.752,179,2.019,180,1.3,183,1.3,184,1.069,185,1.3,186,1.113,187,1.3,188,1.069,189,0.682,190,1.3,191,1.018,192,1.752,193,1.069,194,1.3,195,1.018,196,0.718,197,1.3,198,1.069,199,1.3,200,0.682,201,1.3,202,1.069,203,1.3,204,1.069,205,1.3,206,1.069,207,1.3,208,0.97,209,1.3,210,1.069,211,1.237,212,1.3,213,0.718,214,1.018,215,1.3,216,0.013,217,0.013,269,2.416,281,3.615,287,0.612,288,2.04,291,1.588,303,1.366,326,1.887,352,3.49,369,2.008,370,2.4,375,3.306,376,1.513,377,2.579,378,1.937,379,5.19,380,6.561,381,5.19,382,2.681,383,3.85,384,2.544,385,3.975,386,3.975,387,4.458,388,3.85,389,3.85,390,1.668,391,1.018,392,3.85,393,4.458,394,4.458,395,4.458]],["title/interfaces/Category.html",[269,1.291,396,0.749]],["body/interfaces/Category.html",[2,0.352,3,0.352,7,0.27,9,0.793,12,1.81,17,0.874,46,0.855,48,0.65,49,0.522,64,0.019,65,0.397,66,0.999,67,1.013,68,0.8,73,1.118,76,0.992,78,0.608,79,1.46,86,0.489,97,0.717,98,0.289,102,0.549,109,0.733,138,0.495,142,1.223,144,1.17,145,0.815,161,1.019,170,1.206,176,1.258,186,0.873,189,0.733,196,0.772,200,0.873,213,0.522,216,0.012,217,0.01,255,1.81,268,1.293,269,2.308,287,0.444,302,1.81,303,2.063,307,1.33,317,0.993,324,1.469,358,1.545,366,1.81,369,1.779,370,1.293,376,0.815,377,2.393,378,1.545,390,2.321,391,1.538,396,1.323,397,1.37,398,2.156,399,1.627,400,1.717,401,2.17,402,2.696,403,2.689,404,2.129,405,2.156,406,3.171,407,2.543,408,2.815,409,2.382,410,1.099,411,2.285,412,2.669,413,1.223,414,1.81,415,2.041,416,1.779,417,2.662,418,1.545,419,2.542,420,2.028,421,2.028,422,2.519,423,2.028,424,1.933,425,2.382,426,1.749,427,1.545,428,2.041,429,1.839,430,1.81,431,2.155,432,1.456,433,1.37,434,1.469,435,1.223,436,1.223,437,2.16,438,1.044,439,1.37,440,1.456,441,1.456,442,2.354,443,1.223,444,1.914,445,1.914,446,1.456,447,2.415,448,1.099,449,1.223,450,1.37,451,1.627,452,1.587,453,1.158,454,1.044,455,1.293,456,1.158,457,1.81,458,1.223,459,1.158,460,1.293,461,1.37,462,1.456,463,1.099,464,1.37,465,1.456,466,1.456,467,2.296,468,1.099,469,1.37,470,1.456,471,1.583,472,1.456,473,1.456,474,1.293,475,1.456,476,1.293,477,1.37,478,1.456,479,1.456,480,2.156,481,1.37,482,1.456,483,1.37,484,2.028,485,1.223,486,1.37,487,1.158,488,2.028,489,2.028,490,1.37,491,1.044]],["title/components/CodeEditorComponent.html",[0,0.475,188,1.115]],["body/components/CodeEditorComponent.html",[0,0.713,1,0.681,2,0.573,3,0.309,4,0.788,5,0.828,6,0.828,7,0.236,9,0.472,16,2.105,17,0.564,21,0.828,22,2.39,23,2.275,25,1.266,27,1.266,29,1.446,38,1.609,40,3.218,43,2.082,45,1.205,48,0.519,49,0.849,57,1.277,63,0.588,64,0.019,65,0.646,66,0.856,67,0.78,68,0.565,69,0.941,72,1.415,73,0.596,74,1.537,86,0.443,87,0.482,97,0.272,98,0.388,99,0.618,102,1.399,109,0.903,115,1.734,138,0.903,144,1.163,146,1.878,147,2.612,156,1.953,159,1.459,161,1.285,164,2.004,175,0.648,176,1.344,177,1.638,178,1.266,179,1.765,180,0.828,183,0.828,184,0.681,185,0.828,186,0.434,187,0.828,188,1.415,189,1.289,190,0.828,191,0.648,192,1.266,193,0.681,194,0.828,195,0.648,196,0.458,197,0.828,198,0.681,199,0.828,200,0.434,201,0.828,202,0.681,203,0.828,204,0.681,205,0.828,206,0.681,207,0.828,208,0.618,209,0.828,210,0.681,211,0.788,212,0.828,213,0.458,214,0.648,215,0.828,216,0.009,217,0.011,282,2.872,287,0.39,291,1.773,300,1.463,317,0.899,319,2.106,320,1.362,322,2.404,369,1.393,391,1.204,396,0.458,400,0.945,404,1.608,414,1.64,416,1.147,418,2.25,424,1.809,429,2.759,430,3.261,434,1.331,435,2.533,436,1.64,442,1.266,453,1.016,454,0.915,459,1.553,460,1.734,463,2.004,467,1.331,492,3.14,493,5.832,494,5.2,495,2.106,496,2.404,497,5.099,498,3.91,499,3.75,500,3.75,501,5.099,502,5.793,503,5.099,504,5.099,505,5.099,506,4.976,507,3.75,508,5.793,509,3.75,510,3.22,511,3.22,512,5.793,513,4.035,514,5.585,515,4.553,516,5.099,517,3.75,518,5.494,519,2.452,520,2.452,521,2.919,522,2.404,523,3.22,524,2.452,525,2.452,526,2.872,527,3.75,528,3.75,529,3.75,530,3.75,531,1.699,532,2.452,533,2.612,534,2.404,535,1.553,536,5.832,537,5.099,538,3.487,539,3.75,540,2.452,541,5.099,542,2.404,543,2.872,544,3.75,545,3.75,546,2.872,547,2.954,548,2.612,549,3.75,550,3.75,551,3.22,552,3.75,553,2.872,554,3.22,555,3.75,556,2.452,557,2.872,558,2.452,559,2.655,560,3.905,561,3.269,562,1.572,563,2.404,564,2.452,565,3.75,566,3.75,567,2.452,568,3.22,569,3.75,570,2.452,571,2.452,572,2.106,573,2.452,574,3.75,575,2.452,576,2.452,577,2.452,578,1.878,579,1.878,580,2.452,581,2.452,582,2.452,583,2.452,584,1.878,585,2.452,586,2.452,587,2.452,588,2.452,589,2.452,590,3.75,591,2.452,592,2.452,593,2.452,594,2.452,595,1.708,596,2.452,597,2.452,598,2.452,599,2.452,600,1.708,601,2.106,602,2.452,603,2.452,604,2.452,605,3.75,606,3.75,607,3.75,608,2.452,609,2.452,610,2.452,611,2.452,612,2.452,613,2.452,614,2.452,615,2.452,616,3.22,617,2.452,618,2.452,619,2.872,620,3.75,621,3.22,622,2.452,623,2.452,624,2.106,625,2.452,626,3.75,627,2.452,628,2.452,629,2.452,630,2.452,631,2.452,632,4.553,633,3.75,634,3.75,635,3.75]],["title/interfaces/Course.html",[73,0.638,396,0.749]],["body/interfaces/Course.html",[2,0.327,3,0.327,7,0.251,9,0.775,12,1.715,17,0.848,46,0.796,48,0.643,49,0.485,64,0.019,65,0.557,66,1.037,67,1.047,68,0.782,73,1.176,76,0.923,78,0.565,79,1.422,86,0.464,97,0.701,98,0.269,102,0.77,109,0.694,138,0.694,142,1.137,144,1.154,145,0.775,161,1.165,170,1.727,176,1.225,186,0.694,189,0.836,196,1.106,200,0.836,213,0.485,216,0.012,217,0.01,255,1.137,268,1.203,269,2.155,287,0.413,302,2.064,303,2.299,307,1.904,317,0.941,324,1.391,358,1.464,366,2.592,369,1.608,370,1.203,376,0.758,377,2.329,378,0.971,390,2.296,391,1.491,396,1.295,397,1.275,398,1.355,399,1.022,400,1.663,401,1.464,402,2.591,403,1.813,404,2.134,405,1.355,406,3.087,407,2.298,408,2.741,409,2.298,410,1.022,411,2.216,412,2.575,413,1.137,414,1.715,415,1.955,416,1.725,417,2.592,418,1.464,419,2.488,420,1.922,421,1.922,422,2.43,423,1.922,424,2.103,425,2.298,426,1.675,427,1.464,428,1.955,429,1.762,430,1.715,431,2.064,432,1.355,433,1.275,434,1.391,435,1.137,436,1.137,437,2.343,438,0.971,439,1.275,440,1.355,441,1.355,442,2.425,443,1.137,444,1.813,445,1.813,446,1.355,447,2.313,448,1.022,449,1.137,450,1.275,451,1.855,452,1.924,453,1.077,454,0.971,455,1.203,456,1.077,457,1.715,458,1.137,459,1.077,460,1.203,461,1.275,462,1.355,463,1.022,464,1.275,465,1.355,466,1.355,467,2.247,468,1.022,469,1.275,470,1.355,471,1.812,472,1.355,473,1.355,474,1.203,475,1.355,476,1.203,477,1.922,478,2.737,479,2.737,480,3.087,481,1.922,482,2.042,483,1.922,484,2.905,485,1.137,486,1.922,487,1.624,488,2.905,489,2.905,490,1.922,491,1.464]],["title/components/CourseSelectionComponent.html",[0,0.475,191,1.062]],["body/components/CourseSelectionComponent.html",[0,0.622,1,0.619,2,0.281,3,0.281,4,0.716,5,0.753,6,0.753,7,0.413,9,0.61,13,2.427,17,0.524,21,0.753,22,2.352,23,2.239,25,1.176,27,1.176,29,1.029,32,2.316,33,2.953,38,1.631,45,1.119,48,0.312,49,0.416,54,1.031,60,2.381,62,1.134,63,1.397,64,0.019,65,0.827,66,0.879,67,0.688,68,0.247,69,1.204,70,1.312,71,1.963,72,1.846,73,1.204,74,1.176,75,2.921,76,1.522,77,1.935,78,0.757,84,1.369,86,0.573,87,0.438,91,0.876,92,1.326,97,0.247,98,0.231,99,1.695,100,1.161,101,2.816,102,0.684,109,0.617,115,2.578,138,1.204,143,1.708,144,0.883,149,2.577,156,2.233,160,3.284,161,0.886,164,1.685,170,1.697,175,0.59,176,1.002,177,2.107,178,1.176,179,1.558,180,0.753,183,0.753,184,0.619,185,0.753,186,0.395,187,0.753,188,0.619,189,0.759,190,0.753,191,1.282,192,1.176,193,0.619,194,0.753,195,0.59,196,0.416,197,0.753,198,0.619,199,0.753,200,0.395,201,0.753,202,0.619,203,0.753,204,0.619,205,0.753,206,0.619,207,0.753,208,0.562,209,0.753,210,0.619,211,0.716,212,0.753,213,0.416,214,0.59,215,0.753,216,0.016,217,0.013,253,4.313,269,0.716,287,0.354,288,1.685,291,1.066,300,1.119,303,1.236,307,1.119,317,1.163,331,1.553,354,1.326,368,4.138,384,1.707,391,1.54,396,0.416,400,1.08,404,1.46,416,1.066,418,2.448,419,1.685,424,1.72,437,1.522,442,1.882,459,1.443,471,0.716,481,1.707,483,1.707,484,2.376,486,2.376,488,3.332,489,3.214,513,5.048,531,0.832,534,1.429,547,3.105,548,2.427,561,4.398,562,3.371,563,3.574,584,1.708,619,1.708,624,2.992,636,4.686,637,5.153,638,1.708,639,2.668,640,3.484,641,2.992,642,2.992,643,6.335,644,4.847,645,5.259,646,4.847,647,5.259,648,4.288,649,3.713,650,3.484,651,3.484,652,1.915,653,3.484,654,2.23,655,2.427,656,3.484,657,3.484,658,2.987,659,4.847,660,2.23,661,3.663,662,2.668,663,4.163,664,3.484,665,2.23,666,6.026,667,3.484,668,2.992,669,2.992,670,1.915,671,6.026,672,2.23,673,2.23,674,2.23,675,2.23,676,2.23,677,2.23,678,2.23,679,2.23,680,2.23,681,2.23,682,2.23,683,2.23,684,2.668,685,2.23,686,2.23,687,1.553,688,1.708,689,2.23,690,4.288,691,2.23,692,1.915,693,1.915,694,4.847,695,3.484,696,2.23,697,2.23,698,1.326,699,4.288,700,1.553,701,2.23,702,2.23,703,2.23,704,2.23,705,2.23,706,2.23,707,1.708,708,1.915,709,3.484,710,2.23,711,4.288,712,2.23,713,2.23,714,1.915,715,2.23,716,1.708,717,1.915,718,1.429,719,2.23,720,2.23,721,1.708,722,4.288,723,2.23,724,2.23,725,3.484,726,3.484,727,2.23,728,2.23,729,2.23,730,3.484,731,2.23,732,3.484,733,2.23,734,1.915,735,2.23,736,2.23,737,3.284,738,2.23,739,1.611,740,3.484,741,3.484,742,3.484,743,3.484,744,3.484,745,3.484,746,4.847,747,3.484,748,3.484,749,3.484,750,2.992,751,3.484,752,3.484,753,3.484,754,3.484,755,2.668]],["title/injectables/CourseService.html",[32,1.356,279,1.499]],["body/injectables/CourseService.html",[0,0.45,2,0.315,3,0.315,7,0.241,9,0.735,13,2.649,17,0.572,24,1.486,29,1.329,32,1.284,38,1.681,43,2.113,45,1.48,50,1.759,55,3.063,61,3.063,63,1.5,64,0.019,65,0.909,66,0.786,67,0.956,68,0.724,69,1.064,70,1.164,71,1.42,72,1.929,73,1.208,74,1.284,85,1.864,86,0.45,87,0.491,97,0.277,98,0.573,99,1.614,102,0.747,109,0.674,112,1.74,115,1.759,118,2.263,138,1.308,144,1.216,149,1.864,161,1.351,164,2.023,177,1.654,189,0.442,191,1.362,216,0.009,217,0.009,272,1.74,279,1.719,287,0.397,291,1.164,300,1.222,309,2.649,317,1.105,320,2.558,323,3.267,324,2.672,378,1.42,384,1.864,385,2.913,386,3.943,390,1.95,391,1.362,396,0.466,400,0.958,401,2.439,404,1.945,416,0.764,419,2.611,424,1.35,426,1.966,434,2.219,437,1.35,451,1.495,452,1.904,453,1.908,454,1.719,455,2.13,456,1.908,471,2.164,485,1.093,487,2.133,521,3.301,522,1.602,531,2.068,534,2.438,546,1.914,547,1.225,600,3.586,649,1.914,655,3.586,687,1.74,707,3.943,737,4.243,756,2.146,757,3.804,758,3.267,759,3.804,760,2.913,761,4.551,762,5.148,763,5.148,764,5.148,765,5.148,766,5.148,767,3.804,768,3.804,769,3.804,770,3.804,771,3.804,772,3.804,773,3.804,774,2.499,775,3.804,776,2.499,777,3.804,778,3.804,779,3.804,780,2.499,781,3.804,782,3.943,783,4.065,784,3.804,785,2.499,786,3.943,787,4.065,788,5.148,789,5.148,790,3.943,791,3.804,792,2.499,793,4.422,794,3.804,795,2.499,796,3.267,797,3.804,798,2.499,799,3.804,800,2.499,801,2.499,802,2.499,803,2.913,804,2.499,805,2.499,806,2.499,807,2.146,808,3.804,809,2.499,810,2.499,811,2.499,812,2.499,813,2.499,814,3.804,815,1.602,816,4.606,817,2.499,818,2.499,819,2.499,820,2.499,821,2.499,822,2.146,823,2.499,824,3.586,825,2.499,826,3.267,827,2.499,828,2.499,829,4.606,830,5.148,831,2.499,832,2.499,833,2.499,834,2.499,835,2.146,836,2.146,837,1.486,838,2.146,839,2.499,840,2.499,841,2.499,842,2.499,843,2.146,844,2.146,845,2.499,846,2.499,847,2.499,848,3.804,849,4.758,850,3.267,851,2.146,852,2.499,853,4.606,854,2.146,855,4.422,856,2.913,857,3.804,858,2.146,859,1.914,860,2.499]],["title/components/CourseTabsComponent.html",[0,0.475,193,1.115]],["body/components/CourseTabsComponent.html",[0,0.711,1,0.842,2,0.382,3,0.382,4,0.975,5,1.024,6,1.024,7,0.292,9,0.713,17,0.66,21,1.024,22,2.466,23,2.347,25,1.483,27,1.483,29,1.239,32,2.182,33,1.486,34,2.601,36,3.845,38,1.55,45,0.975,48,0.507,49,0.566,63,1.239,64,0.019,65,0.853,66,0.624,67,0.804,68,0.487,69,1.295,70,1.732,72,1.219,73,1.189,74,1.911,78,0.955,79,1.054,86,0.741,87,0.596,91,1.192,92,1.804,94,1.402,96,2.323,97,0.336,98,0.314,99,1.628,100,1.58,101,1.82,102,1.112,103,4.799,109,0.778,118,1.804,126,3.773,138,1.242,144,1.177,147,3.06,149,2.775,156,1.58,175,0.802,176,0.908,177,1.411,178,1.483,179,1.819,180,1.024,183,1.024,184,0.842,185,1.024,186,0.537,187,1.024,188,0.842,189,0.537,190,1.024,191,0.802,192,1.483,193,1.572,194,1.024,195,0.802,196,0.566,197,1.024,198,0.842,199,1.024,200,0.537,201,1.024,202,0.842,203,1.024,204,0.842,205,1.024,206,0.842,207,1.024,208,0.764,209,1.024,210,0.842,211,0.975,212,1.024,213,0.566,214,0.802,215,1.024,216,0.011,217,0.016,242,1.402,253,4.634,287,0.482,291,1.344,300,2.013,317,0.728,320,2.868,324,2.431,357,5.883,363,2.613,384,3.4,404,1.434,429,2.471,435,1.921,437,1.559,438,2.114,442,2.115,445,2.031,448,1.726,452,0.884,453,1.82,471,2.167,526,3.365,531,2.243,534,3.63,636,4.61,639,3.365,750,3.773,755,3.365,761,3.06,786,3.365,824,2.112,826,4.436,836,2.605,837,1.804,838,2.605,861,2.605,862,3.773,863,4.393,864,4.393,865,4.337,866,4.337,867,5.662,868,3.773,869,4.393,870,4.337,871,1.804,872,4.393,873,3.033,874,4.143,875,5.069,876,3.033,877,4.393,878,3.033,879,4.393,880,3.033,881,3.033,882,2.323,883,1.58,884,4.393,885,3.365,886,3.033,887,3.033,888,2.605,889,2.112,890,2.605,891,4.393,892,4.393,893,6.266,894,3.365,895,3.773,896,3.773,897,4.393,898,4.393,899,2.605,900,4.337,901,4.393,902,2.605]],["title/modules/CourseTabsModule.html",[218,1.579,228,2.575]],["body/modules/CourseTabsModule.html",[2,0.652,3,0.652,7,0.499,56,3.081,64,0.019,69,1.071,73,0.998,86,0.875,87,1.018,90,2.265,97,0.778,98,0.536,127,2.265,175,1.37,191,1.933,193,2.116,216,0.016,217,0.016,218,2.467,220,2.698,221,4.33,222,3.32,228,4.818,231,4.024,236,4.372,237,4.372,242,2.395,253,4.024,636,3.608,637,3.967,883,2.698,903,4.449,904,4.449,905,4.449,906,5.18,907,4.808,908,3.608,909,4.808,910,4.449,911,5.18]],["title/interfaces/DiscoverOption.html",[396,0.749,415,1.664]],["body/interfaces/DiscoverOption.html",[2,0.339,3,0.339,7,0.26,9,0.852,12,2.109,17,0.903,46,0.825,48,0.643,49,0.503,64,0.019,65,0.383,66,1.048,67,1.051,68,0.796,73,1.111,76,0.957,78,0.586,79,1.535,86,0.476,97,0.709,98,0.279,102,0.53,109,0.713,138,0.477,142,1.179,144,1.162,145,0.806,161,0.997,170,1.174,176,1.242,186,0.713,189,0.713,196,0.752,200,0.854,213,0.503,216,0.012,217,0.01,255,1.179,268,1.247,269,2.173,287,0.428,302,1.762,303,2.209,307,1.294,317,1.157,324,1.429,358,1.504,366,1.762,369,1.637,370,1.247,376,0.786,377,2.361,378,1.006,390,2.308,391,1.646,396,1.315,397,1.321,398,1.404,399,1.059,400,1.725,401,1.504,402,2.682,403,1.863,404,2.129,405,1.404,406,2.982,407,2.504,408,2.648,409,2.34,410,1.059,411,2.25,412,2.806,413,1.762,414,2.109,415,2.216,416,2.002,417,2.799,418,1.8,419,2.692,420,2.363,421,2.363,422,2.96,423,2.806,424,2.032,425,2.799,426,1.711,427,1.504,428,1.998,429,1.8,430,1.762,431,2.109,432,1.404,433,1.321,434,1.429,435,1.179,436,1.179,437,2.132,438,1.006,439,1.321,440,1.404,441,1.404,442,2.337,443,1.179,444,1.863,445,1.863,446,1.404,447,2.363,448,1.059,449,1.179,450,1.321,451,1.583,452,1.559,453,1.117,454,1.006,455,1.247,456,1.117,457,1.762,458,1.179,459,1.117,460,1.247,461,1.321,462,1.404,463,1.059,464,1.321,465,1.404,466,1.404,467,2.271,468,1.059,469,1.321,470,1.404,471,1.55,472,1.404,473,1.404,474,1.247,475,1.404,476,1.247,477,1.321,478,1.404,479,1.404,480,2.098,481,1.321,482,1.404,483,1.321,484,1.974,485,1.179,486,1.321,487,1.117,488,1.974,489,1.974,490,1.321,491,1.006]],["title/interfaces/EditorTab.html",[396,0.749,431,1.756]],["body/interfaces/EditorTab.html",[2,0.354,3,0.354,7,0.271,9,0.795,12,1.817,17,0.917,46,0.86,48,0.644,49,0.524,64,0.019,65,0.399,66,0.999,67,1.014,68,0.796,73,1.119,76,0.997,78,0.611,79,1.463,86,0.491,97,0.718,98,0.291,102,0.552,109,0.736,138,0.498,142,1.229,144,1.182,145,0.795,161,1.022,170,1.211,176,1.339,186,0.736,189,0.875,196,0.775,200,0.875,213,0.524,216,0.012,217,0.01,255,1.229,268,1.3,269,2.193,287,0.447,302,1.817,303,2.239,307,1.335,317,0.997,324,1.474,358,1.551,366,1.817,369,1.671,370,1.3,376,0.819,377,2.48,378,1.049,390,2.322,391,1.541,396,1.324,397,1.378,398,1.464,399,1.105,400,1.695,401,1.551,402,2.698,403,1.922,404,2.126,405,1.464,406,3.035,407,2.388,408,2.695,409,2.388,410,1.105,411,2.29,412,2.676,413,1.229,414,1.817,415,2.048,416,1.866,417,2.668,418,1.551,419,2.546,420,2.036,421,2.036,422,2.525,423,2.036,424,1.938,425,2.388,426,1.754,427,1.551,428,2.048,429,2.175,430,2.162,431,2.388,432,2.164,433,2.676,434,1.754,435,1.817,436,2.388,437,2.165,438,1.049,439,1.378,440,1.464,441,1.464,442,2.356,443,1.229,444,1.922,445,1.922,446,1.464,447,2.423,448,1.105,449,1.229,450,1.378,451,1.633,452,1.591,453,1.164,454,1.049,455,1.3,456,1.164,457,1.817,458,1.229,459,1.164,460,1.3,461,1.378,462,1.464,463,1.105,464,1.378,465,1.464,466,1.464,467,2.299,468,1.105,469,1.378,470,1.464,471,1.588,472,1.464,473,1.464,474,1.3,475,1.464,476,1.3,477,1.378,478,1.464,479,1.464,480,2.164,481,1.378,482,1.464,483,1.378,484,2.036,485,1.229,486,1.378,487,1.164,488,2.036,489,2.036,490,1.378,491,1.049]],["title/components/ErrorPageComponent.html",[0,0.475,195,1.062]],["body/components/ErrorPageComponent.html",[0,0.795,1,1.149,2,0.521,3,0.521,4,1.33,5,1.397,6,1.397,7,0.399,9,0.686,16,2.519,17,0.819,21,1.397,22,2.557,23,2.434,25,1.839,27,1.839,29,1.461,33,3.448,38,0.993,48,0.488,49,0.772,50,2.816,53,3.241,62,1.711,63,0.993,64,0.019,65,0.864,66,0.587,67,0.773,68,0.674,70,1.667,73,0.866,78,1.184,79,1.307,84,2.393,85,2.984,86,0.644,87,0.813,92,2.462,97,0.459,98,0.428,99,1.043,100,2.156,144,1.128,145,0.815,173,2.837,175,1.095,176,1.126,177,1.75,178,1.839,179,2.079,180,1.397,183,1.397,184,1.149,185,1.397,186,0.733,187,1.397,188,1.149,189,0.733,190,1.397,191,1.095,192,1.839,193,1.149,194,1.397,195,1.711,196,1.426,197,1.397,198,1.149,199,1.397,200,0.733,201,1.397,202,1.149,203,1.397,204,1.149,205,1.397,206,1.149,207,1.397,208,1.043,209,1.397,210,1.149,211,1.33,212,1.397,213,0.772,214,1.095,215,1.397,216,0.013,217,0.013,265,4.506,324,1.933,352,3.025,400,1.738,652,3.555,912,3.555,913,3.492,914,3.794,915,4.678,916,5.447,917,6.722,918,4.139,919,3.794,920,4.678,921,6.469,922,5.447,923,4.139,924,5.447,925,5.447,926,3.492,927,4.172,928,4.139]],["title/interfaces/FixOption.html",[396,0.749,428,1.664]],["body/interfaces/FixOption.html",[2,0.339,3,0.339,7,0.26,9,0.852,12,2.109,17,0.903,46,0.825,48,0.643,49,0.503,64,0.019,65,0.383,66,1.048,67,1.045,68,0.796,73,1.111,76,0.957,78,0.586,79,1.535,86,0.476,97,0.709,98,0.279,102,0.53,109,0.713,138,0.477,142,1.179,144,1.173,145,0.784,161,0.997,170,1.174,176,1.242,186,0.713,189,0.713,196,0.752,200,0.854,213,0.503,216,0.012,217,0.01,255,1.179,268,1.247,269,2.173,287,0.428,302,1.762,303,2.209,307,1.294,317,1.157,324,1.429,358,1.504,366,1.762,369,1.752,370,1.247,376,0.786,377,2.361,378,1.006,390,2.308,391,1.646,396,1.315,397,1.321,398,1.404,399,1.059,400,1.725,401,1.504,402,2.682,403,1.863,404,2.129,405,1.404,406,2.982,407,2.504,408,2.648,409,2.34,410,1.059,411,2.25,412,2.806,413,1.179,414,2.109,415,1.998,416,2.002,417,2.799,418,1.8,419,2.692,420,2.363,421,2.363,422,2.96,423,2.806,424,2.032,425,2.799,426,1.898,427,1.8,428,2.216,429,1.8,430,1.762,431,2.109,432,1.404,433,1.321,434,1.429,435,1.179,436,1.179,437,2.132,438,1.006,439,1.321,440,1.404,441,1.404,442,2.337,443,1.179,444,1.863,445,1.863,446,1.404,447,2.363,448,1.059,449,1.179,450,1.321,451,1.583,452,1.559,453,1.117,454,1.006,455,1.247,456,1.117,457,1.762,458,1.179,459,1.117,460,1.247,461,1.321,462,1.404,463,1.059,464,1.321,465,1.404,466,1.404,467,2.271,468,1.059,469,1.321,470,1.404,471,1.55,472,1.404,473,1.404,474,1.247,475,1.404,476,1.247,477,1.321,478,1.404,479,1.404,480,2.098,481,1.321,482,1.404,483,1.321,484,1.974,485,1.179,486,1.321,487,1.117,488,1.974,489,1.974,490,1.321,491,1.006]],["title/modules/HomePageModule.html",[218,1.579,229,2.575]],["body/modules/HomePageModule.html",[2,0.602,3,0.602,7,0.461,48,0.428,56,2.846,64,0.019,67,0.679,69,0.989,86,0.888,87,0.94,90,2.092,97,0.756,98,0.495,127,2.092,175,1.265,184,2.095,186,1.269,195,1.995,196,0.893,208,1.806,213,1.338,216,0.015,217,0.015,218,2.349,220,2.491,221,4.179,222,3.066,229,4.902,231,3.831,236,4.163,237,4.163,242,2.212,256,4.108,262,3.664,264,3.332,265,3.332,266,4.108,352,2.657,410,1.88,883,2.491,907,4.578,908,3.332,909,4.578,910,4.108,929,4.108,930,4.108,931,4.108,932,4.108,933,4.783,934,4.783,935,3.664,936,5.599,937,5.599]],["title/interfaces/Issue.html",[144,0.674,396,0.749]],["body/interfaces/Issue.html",[2,0.333,3,0.333,7,0.255,9,0.779,12,1.737,17,0.854,46,0.809,48,0.641,49,0.494,64,0.019,65,0.376,66,1.027,67,1.043,68,0.802,73,1.107,76,0.939,78,0.575,79,1.431,86,0.47,97,0.705,98,0.274,102,0.52,109,0.703,138,0.468,142,1.157,144,1.215,145,0.801,161,1.095,170,1.157,176,1.392,186,0.703,189,0.703,196,0.741,200,0.938,213,0.494,216,0.013,217,0.01,255,1.157,268,1.223,269,2.164,287,0.42,302,1.737,303,2.016,307,1.276,317,0.953,324,2.117,358,2.227,366,1.737,369,1.622,370,1.837,376,1.157,377,2.558,378,0.988,390,2.325,391,1.754,396,1.299,397,1.297,398,1.378,399,1.04,400,1.754,401,1.483,402,2.674,403,1.837,404,2.122,405,1.378,406,3.107,407,2.318,408,2.627,409,2.9,410,1.04,411,2.681,412,2.598,413,1.157,414,1.737,415,1.975,416,1.738,417,2.783,418,1.483,419,2.501,420,1.946,421,1.946,422,2.451,423,1.946,424,1.881,425,2.318,426,1.881,427,1.483,428,2.196,429,1.78,430,1.737,431,2.085,432,1.378,433,1.297,434,1.409,435,1.157,436,1.157,437,2.117,438,0.988,439,1.297,440,1.378,441,1.378,442,2.328,443,1.157,444,1.837,445,1.837,446,1.378,447,2.598,448,1.04,449,1.157,450,1.297,451,1.874,452,1.655,453,1.645,454,1.483,455,1.837,456,1.645,457,2.085,458,1.737,459,1.645,460,1.837,461,1.946,462,2.76,463,1.561,464,1.946,465,2.069,466,2.76,467,2.258,468,1.04,469,1.297,470,1.378,471,1.532,472,1.378,473,1.378,474,1.223,475,1.378,476,1.223,477,1.297,478,1.378,479,1.378,480,2.069,481,1.297,482,1.378,483,1.297,484,1.946,485,1.157,486,1.297,487,1.096,488,1.946,489,1.946,490,1.297,491,0.988]],["title/components/IssueCardComponent.html",[0,0.475,198,1.115]],["body/components/IssueCardComponent.html",[0,0.835,1,0.917,2,0.416,3,0.416,4,1.062,5,1.116,6,1.116,7,0.568,9,0.588,19,3.578,21,1.116,22,2.493,23,2.373,25,1.577,27,1.577,29,1.3,32,2.406,38,1.59,48,0.418,49,1.011,50,2.16,63,0.793,64,0.019,65,0.769,66,1.012,67,0.663,68,0.714,69,1.12,70,1.658,71,2.319,72,1.504,73,0.987,86,0.641,87,0.649,91,1.299,97,0.366,98,0.561,99,0.832,109,1.043,132,2.043,138,1.1,144,1.185,145,0.867,175,0.874,176,0.965,177,2.072,178,1.577,179,1.892,180,1.116,183,1.116,184,0.917,185,1.116,186,0.585,187,1.116,188,0.917,189,0.585,190,1.116,191,0.874,192,1.577,193,0.917,194,1.116,195,0.874,196,0.617,197,1.116,198,1.635,199,1.116,200,0.585,201,1.116,202,0.917,203,1.116,204,1.504,205,1.116,206,0.917,207,1.116,208,0.832,209,1.116,210,0.917,211,1.062,212,1.116,213,0.617,214,0.874,215,1.116,216,0.012,217,0.012,218,2.314,282,3.578,287,0.525,288,1.836,291,1.429,322,3.775,326,1.62,376,1.361,378,1.744,390,1.741,396,0.617,400,1.483,401,2.605,402,1.744,404,0.917,418,2.022,434,1.657,442,1.577,443,2.717,444,2.16,451,1.836,452,2.034,467,2.204,469,2.886,471,1.501,474,2.16,492,3.131,521,2.994,531,1.233,542,2.994,547,2.289,561,3.775,562,2.118,563,2.994,669,5.335,755,3.578,783,4.101,787,3.253,793,4.012,871,1.966,938,4.028,939,5.186,940,2.838,941,6.212,942,4.671,943,4.671,944,6.212,945,6.448,946,5.888,947,4.671,948,3.305,949,3.305,950,3.305,951,4.671,952,4.671,953,3.305,954,4.671,955,3.578,956,5.418,957,3.253,958,3.305,959,4.012,960,3.305,961,3.305,962,3.305,963,3.305,964,5.057,965,5.057,966,4.012,967,3.305,968,3.305,969,3.305,970,3.305,971,3.305,972,3.305,973,3.305,974,3.305,975,3.305,976,3.305,977,3.305,978,4.012,979,4.012,980,3.578]],["title/components/IssueContainerComponent.html",[0,0.475,200,0.711]],["body/components/IssueContainerComponent.html",[0,0.694,1,0.632,2,0.287,3,0.287,4,1.397,5,0.769,6,0.769,7,0.22,9,0.669,21,0.769,22,2.361,23,2.275,25,1.196,27,1.196,29,1.043,32,2.049,34,2.307,38,1.581,45,1.138,48,0.503,49,0.425,50,2.01,55,2.108,62,0.937,63,1.176,64,0.019,65,0.862,66,0.798,67,0.885,68,0.719,69,1.162,70,1.5,71,2.266,72,0.983,73,0.894,79,1.176,84,1.708,85,2.13,86,0.628,87,0.448,91,0.895,94,1.053,97,0.252,98,0.682,99,1.417,100,1.186,101,0.944,102,0.963,109,0.627,138,1.246,144,1.268,149,1.116,156,1.186,159,1.355,161,1.014,164,0.895,175,0.602,176,1.014,177,1.95,178,1.196,179,1.576,180,0.769,183,0.769,184,0.632,185,0.769,186,0.403,187,0.769,188,0.632,189,0.941,190,0.769,191,0.602,192,1.196,193,0.632,194,0.769,195,0.602,196,0.425,197,0.769,198,0.632,199,0.769,200,0.868,201,0.769,202,0.632,203,0.769,204,0.632,205,0.769,206,0.632,207,0.769,208,0.574,209,0.769,210,0.632,211,0.732,212,0.769,213,0.425,214,0.602,215,0.769,216,0.009,217,0.009,283,1.967,287,0.894,291,1.084,300,1.397,303,1.543,322,2.271,324,2.339,354,2.917,358,1.322,363,3.16,368,2.271,369,1.5,376,1.639,378,1.322,382,1.587,385,2.713,386,2.713,390,1.707,391,1.15,396,0.425,400,1.605,401,1.322,402,1.623,404,1.769,408,1.638,411,0.895,416,1.084,417,2.144,418,1.623,419,1.708,424,1.74,426,2.371,428,0.944,429,1.83,430,2.654,434,1.74,436,0.996,437,1.257,447,1.116,451,1.392,453,2.031,454,2.327,455,2.883,456,2.432,460,2.01,467,1.257,471,1.138,490,1.736,492,3.09,498,3.734,506,4.212,522,1.46,531,1.623,533,2.467,538,2.713,547,2.403,559,1.845,560,2.713,561,3.763,562,2.271,563,2.787,572,1.956,600,2.467,616,5.355,661,3.415,687,1.587,739,1.638,783,2.467,837,3.791,843,3.043,844,3.043,850,1.956,854,1.956,855,1.956,859,1.745,926,2.271,927,2.713,938,3.975,980,2.713,981,5.117,982,1.956,983,3.543,984,5.312,985,4.904,986,4.904,987,4.904,988,3.543,989,4.904,990,3.543,991,3.543,992,4.904,993,3.543,994,5.624,995,2.278,996,2.278,997,2.278,998,3.543,999,2.108,1000,3.543,1001,3.543,1002,5.312,1003,2.278,1004,5.312,1005,2.278,1006,2.278,1007,3.543,1008,2.278,1009,3.543,1010,3.543,1011,3.543,1012,3.543,1013,2.278,1014,4.904,1015,2.278,1016,3.543,1017,3.043,1018,2.713,1019,3.543,1020,3.043,1021,3.543,1022,2.278,1023,2.278,1024,2.278,1025,2.278,1026,2.278,1027,2.278,1028,2.278,1029,2.278,1030,2.278,1031,2.278,1032,2.278,1033,4.347,1034,2.278,1035,1.745,1036,2.278,1037,2.278,1038,2.278,1039,2.278,1040,2.278,1041,2.278,1042,2.278,1043,2.278,1044,2.278,1045,2.278,1046,3.543,1047,2.278,1048,2.278,1049,2.278,1050,2.278,1051,2.278,1052,2.278,1053,3.043,1054,3.043,1055,4.904,1056,3.543,1057,4.904]],["title/components/IssueDetailsComponent.html",[0,0.475,202,1.115]],["body/components/IssueDetailsComponent.html",[0,0.797,1,1.158,2,0.525,3,0.525,4,1.34,5,1.408,6,1.408,7,0.402,9,0.689,21,1.408,22,2.559,23,2.436,25,1.848,27,1.848,29,1.466,32,2.499,38,1.313,48,0.49,49,0.778,50,3.001,63,1.001,64,0.019,65,0.868,66,0.777,67,0.777,68,0.766,69,1.263,70,1.87,71,2.281,72,1.871,73,1.071,84,2.55,85,3.18,86,0.647,87,0.82,91,1.64,97,0.462,98,0.432,99,1.051,109,0.97,144,1.276,161,1.132,175,1.103,176,1.132,177,1.759,178,1.848,179,2.085,180,1.408,183,1.408,184,1.158,185,1.408,186,0.739,187,1.408,188,1.158,189,0.739,190,1.408,191,1.103,192,1.848,193,1.158,194,1.408,195,1.103,196,0.778,197,1.408,198,1.158,199,1.408,200,0.97,201,1.408,202,1.801,203,1.408,204,1.158,205,1.408,206,1.158,207,1.408,208,1.051,209,1.408,210,1.158,211,1.34,212,1.408,213,0.778,214,1.103,215,1.408,216,0.014,217,0.014,287,0.663,288,2.152,326,2.045,358,2.044,376,1.596,390,1.759,400,1.379,452,1.596,476,2.532,492,2.826,871,2.482,938,3.636,1058,4.681,1059,3.583,1060,5.475,1061,6.916,1062,4.172,1063,4.172,1064,4.172,1065,4.703,1066,5.475]],["title/interfaces/IssueItem.html",[396,0.749,452,1.171]],["body/interfaces/IssueItem.html",[2,0.341,3,0.341,7,0.261,9,0.785,12,1.768,17,0.863,46,0.829,48,0.644,49,0.755,64,0.019,65,0.385,66,1.02,67,1.008,68,0.787,73,1.121,76,1.435,78,0.589,79,1.444,86,0.478,97,0.71,98,0.28,102,0.532,109,0.716,138,0.48,142,1.185,144,1.213,145,0.825,161,1,170,1.178,176,1.244,186,0.716,189,0.716,196,0.755,200,0.857,213,0.506,216,0.012,217,0.01,255,1.185,268,1.87,269,2.266,287,0.431,302,1.768,303,2.036,307,1.299,317,0.97,324,1.435,358,1.509,366,1.768,369,1.641,370,1.253,376,0.79,377,2.365,378,1.011,390,2.352,391,1.518,396,1.305,397,1.328,398,1.411,399,1.065,400,1.68,401,1.509,402,2.684,403,1.87,404,2.127,405,1.411,406,3.135,407,2.346,408,2.884,409,2.346,410,1.065,411,2.255,412,2.629,413,1.185,414,1.768,415,2.004,416,1.756,417,2.632,418,1.509,419,2.519,420,1.982,421,1.982,422,2.48,423,1.982,424,1.903,425,2.346,426,1.717,427,1.806,428,2.004,429,1.806,430,1.768,431,2.115,432,1.411,433,1.328,434,1.435,435,1.185,436,1.185,437,2.275,438,1.011,439,1.328,440,1.411,441,1.411,442,2.439,443,1.185,444,2.237,445,2.237,446,1.411,447,2.371,448,1.065,449,1.185,450,1.328,451,1.589,452,1.672,453,1.123,454,1.011,455,1.253,456,1.123,457,2.115,458,1.185,459,1.123,460,1.253,461,1.328,462,1.411,463,1.065,464,1.328,465,1.411,466,1.411,467,2.52,468,1.589,469,1.982,470,2.793,471,2.004,472,2.793,473,2.793,474,1.87,475,1.411,476,1.87,477,1.328,478,1.411,479,1.411,480,2.106,481,1.328,482,1.411,483,1.328,484,1.982,485,1.185,486,1.328,487,1.123,488,1.982,489,1.982,490,1.328,491,1.011]],["title/components/IssueListComponent.html",[0,0.475,204,1.115]],["body/components/IssueListComponent.html",[0,0.738,1,0.929,2,0.421,3,0.421,4,1.075,5,1.13,6,1.13,7,0.323,9,0.593,16,2.179,17,0.89,20,3.61,21,1.13,22,2.497,23,2.377,25,1.591,27,1.591,29,1.309,32,2.411,38,1.553,45,1.075,48,0.53,49,0.624,57,2.454,61,4.362,62,1.246,63,0.803,64,0.019,65,0.886,66,0.84,67,0.669,68,0.522,69,1.29,70,1.669,71,2.036,72,1.733,73,1.144,86,0.645,87,0.657,91,1.315,97,0.371,98,0.346,99,0.843,109,0.834,113,4.048,132,2.061,138,0.834,144,1.224,149,2.673,161,1.224,171,3.61,175,0.885,176,0.974,177,1.903,178,1.591,179,1.903,180,1.13,183,1.13,184,0.929,185,1.13,186,0.593,187,1.13,188,0.929,189,0.593,190,1.13,191,0.885,192,1.591,193,0.929,194,1.13,195,0.885,196,0.624,197,1.13,198,0.929,199,1.13,200,0.593,201,1.13,202,0.929,203,1.13,204,1.644,205,1.13,206,0.929,207,1.13,208,0.843,209,1.13,210,0.929,211,1.075,212,1.13,213,0.624,214,0.885,215,1.13,216,0.012,217,0.012,287,0.532,288,1.852,291,1.442,307,1.514,317,0.803,326,1.64,378,1.759,390,2.081,396,0.624,400,1.187,427,1.759,437,1.672,449,2.061,452,2.012,456,1.952,467,1.672,471,2.138,485,2.589,492,3.076,531,1.249,534,4.579,547,2.31,553,3.61,561,3.796,562,2.145,563,3.021,718,3.021,739,2.179,803,4.535,871,1.991,926,3.021,927,3.61,938,3.958,1067,5.095,1068,2.874,1069,4.713,1070,4.713,1071,6.475,1072,5.921,1073,5.086,1074,5.921,1075,4.713,1076,3.347,1077,4.713,1078,3.347,1079,4.048,1080,4.713,1081,4.713,1082,4.048,1083,4.713,1084,4.713,1085,4.713,1086,3.61,1087,4.713,1088,4.048,1089,4.713,1090,3.347,1091,5.921,1092,3.347,1093,3.347,1094,3.347,1095,5.455,1096,4.713,1097,4.713,1098,3.347,1099,3.347,1100,3.347,1101,4.713,1102,4.713,1103,4.713,1104,4.713]],["title/components/IssueNavComponent.html",[0,0.475,206,1.115]],["body/components/IssueNavComponent.html",[0,0.667,1,0.724,2,0.328,3,0.328,4,0.837,5,0.88,6,0.88,7,0.251,9,0.662,16,1.816,17,0.59,21,0.88,22,2.413,23,2.297,25,1.326,27,1.326,29,1.134,32,2.295,33,3.37,34,2.703,38,1.585,45,0.837,48,0.551,49,0.882,53,2.336,60,2.181,62,1.25,63,1.134,64,0.019,65,0.801,66,0.842,67,0.747,68,0.657,69,1.421,70,1.815,71,2.365,72,1.863,73,1.158,74,1.595,75,2.922,76,1.677,77,2.625,78,1.027,79,1.134,86,0.728,87,0.772,91,1.024,92,1.551,94,1.205,97,0.289,98,0.27,99,1.596,102,1.165,109,0.695,118,1.551,138,1.25,144,1.235,145,0.495,161,1.365,167,1.357,175,0.689,176,0.812,177,1.262,178,1.326,179,2.123,180,0.88,183,0.88,184,0.724,185,0.88,186,0.461,187,0.88,188,0.724,189,0.461,190,0.88,191,0.689,192,1.326,193,0.724,194,0.88,195,0.689,196,0.486,197,0.88,198,0.724,199,0.88,200,0.461,201,0.88,202,0.724,203,0.88,204,0.724,205,0.88,206,1.46,207,0.88,208,0.657,209,0.88,210,0.724,211,0.837,212,0.88,213,0.486,214,0.689,215,0.88,216,0.01,217,0.01,242,2.847,287,0.414,288,2.49,291,1.202,300,1.518,309,2.735,317,0.625,320,3.294,326,1.277,354,2.336,358,1.466,363,2.336,366,1.717,376,1.533,384,2.766,390,1.518,400,0.989,408,2.433,426,2.248,438,1.964,452,1.955,454,2.214,468,1.543,485,1.14,492,3.103,531,1.964,822,3.373,824,2.735,837,2.336,865,4.029,866,4.029,870,4.029,871,1.551,874,3.618,875,4.853,882,1.996,883,3.206,885,3.008,890,2.238,938,3.992,978,3.373,979,3.373,980,3.008,1065,2.238,1073,3.373,1105,5.139,1106,2.238,1107,3.927,1108,3.927,1109,3.927,1110,5.26,1111,3.927,1112,3.927,1113,2.606,1114,2.606,1115,4.847,1116,5.644,1117,3.927,1118,3.927,1119,2.606,1120,2.606,1121,3.927,1122,2.606,1123,2.606,1124,2.606,1125,2.606,1126,2.606,1127,2.238,1128,2.238,1129,4.059,1130,4.059,1131,3.373,1132,2.238,1133,2.606,1134,2.606,1135,2.606,1136,3.927,1137,2.606,1138,2.606,1139,2.606,1140,5.26,1141,3.927,1142,3.927,1143,3.927,1144,3.927,1145,3.927,1146,4.518,1147,3.927,1148,3.927,1149,3.927,1150,3.927,1151,1.815,1152,2.238,1153,2.606,1154,1.448,1155,2.606,1156,3.373,1157,2.606,1158,2.606,1159,2.606,1160,2.606,1161,2.606,1162,2.606,1163,2.606,1164,2.606,1165,3.927,1166,3.927,1167,3.373]],["title/injectables/KatanaService.html",[33,1.968,279,1.499]],["body/injectables/KatanaService.html",[2,0.278,3,0.278,7,0.213,9,0.435,17,0.872,18,1.695,24,1.314,29,1.022,31,3.336,32,2.028,33,1.695,34,2.361,35,3.851,37,3.022,38,1.481,43,1.226,45,1.682,46,1.058,48,0.618,54,1.599,55,2.057,57,1.15,60,3.223,61,3.114,62,0.914,63,1.256,64,0.019,65,0.743,66,0.743,67,0.929,68,0.534,69,1.306,70,1.475,71,1.291,72,1.541,73,1.126,74,1.167,75,1.92,77,1.92,78,1.547,79,0.829,80,2.648,82,0.584,83,2.511,84,0.868,85,2.089,86,0.73,87,0.434,88,2.678,90,0.966,91,0.868,93,1.897,94,1.021,95,1.538,97,0.245,98,0.229,99,1.556,100,1.15,101,2.169,102,0.837,109,0.612,115,2.921,118,1.314,119,5.159,128,4.253,129,5.142,132,2.109,134,2.97,138,1.261,142,0.966,144,1.081,149,1.695,156,2.892,159,1.314,160,2.648,161,1.306,164,2.427,196,1.238,216,0.009,217,0.009,241,1.897,279,1.591,283,1.226,286,2.363,287,0.351,288,1.359,291,1.058,300,1.984,307,0.71,317,0.829,321,3.66,331,1.538,339,1.897,340,4.253,366,1.864,368,3.091,369,1.058,376,1.008,384,2.363,391,1.468,404,0.96,409,0.966,413,1.512,414,1.512,426,1.858,427,1.8,437,1.227,442,1.628,448,1.675,454,0.824,457,0.966,458,1.512,463,1.359,464,1.695,467,2.132,491,1.591,513,2.408,522,2.217,531,0.824,535,1.432,584,2.648,649,2.648,698,1.314,700,3.359,714,1.897,737,3.693,790,2.648,815,1.416,837,1.314,874,3.091,888,4.984,889,2.408,913,1.416,915,1.897,955,4.253,957,4.301,1086,1.691,1132,2.97,1146,1.897,1152,3.66,1168,1.897,1169,4.822,1170,3.458,1171,3.458,1172,3.458,1173,4.822,1174,2.208,1175,4.822,1176,3.458,1177,4.262,1178,2.97,1179,3.458,1180,2.208,1181,3.458,1182,2.208,1183,3.356,1184,3.458,1185,2.208,1186,3.458,1187,2.208,1188,2.97,1189,2.208,1190,3.458,1191,4.822,1192,2.208,1193,2.97,1194,3.66,1195,2.208,1196,3.458,1197,1.226,1198,4.496,1199,3.66,1200,2.208,1201,2.208,1202,2.208,1203,3.66,1204,4.822,1205,4.822,1206,2.208,1207,4.822,1208,3.458,1209,2.208,1210,2.208,1211,2.648,1212,2.208,1213,5.552,1214,5.552,1215,3.458,1216,2.208,1217,3.458,1218,2.208,1219,2.208,1220,2.208,1221,2.208,1222,2.208,1223,3.458,1224,2.208,1225,3.458,1226,5.552,1227,4.822,1228,2.97,1229,2.97,1230,2.97,1231,2.208,1232,3.458,1233,2.208,1234,2.408,1235,2.208,1236,1.897,1237,2.208,1238,1.691,1239,1.691,1240,2.208,1241,2.208,1242,1.897,1243,1.897,1244,3.458,1245,3.458,1246,3.458,1247,3.458,1248,4.262,1249,2.208,1250,1.691,1251,3.458,1252,2.97,1253,3.458,1254,2.97,1255,3.458,1256,3.458,1257,3.458,1258,3.458,1259,4.822,1260,3.458,1261,2.208,1262,3.458,1263,3.458,1264,2.97,1265,2.208,1266,2.208,1267,2.208,1268,2.208,1269,2.208,1270,2.208,1271,2.208,1272,2.208,1273,2.208,1274,1.897,1275,3.458,1276,2.208,1277,2.208,1278,2.208,1279,2.208,1280,2.208,1281,2.208,1282,2.208]],["title/classes/OptionModel.html",[98,0.416,411,1.579]],["body/classes/OptionModel.html",[2,0.594,3,0.594,7,0.455,9,0.746,29,1.554,38,1.554,40,3.29,45,1.515,46,1.813,63,1.131,64,0.019,65,0.669,66,0.669,67,1.084,68,0.656,69,1.224,86,0.558,97,0.522,98,0.613,99,1.188,109,1.049,138,1.049,164,1.853,200,1.049,208,1.492,216,0.015,217,0.015,283,2.619,287,0.75,291,1.813,300,2.249,317,1.131,354,4.25,369,1.813,390,2.394,409,3.061,410,1.853,411,2.328,417,3.124,1283,4.05,1284,5.924,1285,5.924,1286,5.924,1287,5.088,1288,6.794,1289,5.924,1290,5.924,1291,4.716,1292,5.924,1293,5.924,1294,6.477,1295,4.716,1296,4.716,1297,4.716,1298,4.716,1299,5.924,1300,4.716,1301,4.716]],["title/components/OptionsViewComponent.html",[0,0.475,208,1.012]],["body/components/OptionsViewComponent.html",[0,0.74,1,0.759,2,0.344,3,0.344,4,0.879,5,0.924,6,0.924,7,0.264,9,0.679,13,2.837,16,1.883,17,0.81,18,1.996,21,0.924,22,2.43,23,2.313,25,1.375,27,1.375,29,1.167,31,3.648,32,2.218,33,3.434,34,2.729,38,1.628,45,0.879,46,1.246,48,0.575,49,0.908,54,1.883,62,1.524,63,0.656,64,0.019,65,0.691,66,0.888,67,1.047,68,0.741,69,1.329,70,1.763,71,2.151,72,1.677,73,1.104,74,1.642,75,2.702,76,1.726,77,2.702,78,1.057,79,1.167,86,0.777,87,0.537,90,1.196,91,1.075,92,1.628,94,1.265,97,0.303,98,0.422,99,1.521,101,1.687,109,0.721,132,2.641,138,1.108,144,0.967,145,0.679,149,1.341,161,0.842,164,1.601,175,0.724,176,0.842,177,1.309,178,1.375,179,1.732,180,0.924,183,0.924,184,0.759,185,0.924,186,0.484,187,0.924,188,0.759,189,0.484,190,0.924,191,0.724,192,1.375,193,0.759,194,0.924,195,0.724,196,0.51,197,0.924,198,0.759,199,0.924,200,0.484,201,0.924,202,0.759,203,0.924,204,0.759,205,0.924,206,0.759,207,0.924,208,1.358,209,0.924,210,0.759,211,0.879,212,0.924,213,0.51,214,0.724,215,0.924,216,0.01,217,0.01,242,2.893,263,5.262,264,4.785,269,1.941,287,0.435,288,2.264,291,1.246,300,1.563,303,1.726,311,1.906,317,0.656,320,3.355,324,1.445,326,1.341,331,1.906,352,3.815,363,2.423,373,3.498,376,1.187,382,1.906,384,3.066,390,1.563,396,0.51,400,1.026,409,2.924,410,1.075,411,2.628,413,1.781,414,1.781,415,2.233,417,2.641,422,2.492,424,1.445,434,1.445,438,2.012,491,1.52,521,2.611,531,2.255,535,1.687,543,3.119,639,2.095,698,2.423,700,1.906,716,4.128,865,4.128,866,4.128,870,4.128,874,3.694,875,5.262,882,2.095,883,3.258,885,3.119,1053,3.498,1054,3.498,1129,4.178,1130,4.178,1167,3.498,1254,2.35,1302,2.095,1303,3.498,1304,3.498,1305,5.389,1306,5.389,1307,4.073,1308,2.736,1309,2.736,1310,4.073,1311,2.736,1312,3.119,1313,3.498,1314,4.073,1315,4.073,1316,2.736,1317,2.736,1318,2.736,1319,2.736,1320,2.736,1321,2.736,1322,2.736,1323,2.736,1324,2.736,1325,2.736,1326,2.736,1327,2.736,1328,2.736,1329,2.736,1330,2.736,1331,2.736,1332,2.736,1333,2.736,1334,2.736,1335,2.736,1336,2.736,1337,2.736,1338,2.736,1339,2.736,1340,4.073,1341,2.837,1342,3.498,1343,4.073]],["title/injectables/SettingsService.html",[36,2.39,279,1.499]],["body/injectables/SettingsService.html",[2,0.432,3,0.432,7,0.463,9,0.432,17,0.721,24,2.043,29,1.512,36,2.855,38,1.327,45,1.103,54,2.219,59,4.121,62,0.908,63,0.824,64,0.019,65,0.487,66,0.681,67,0.487,68,0.532,86,0.406,87,0.675,97,0.38,98,0.355,102,1.283,103,5.389,109,0.85,115,1.588,120,2.949,138,1.06,145,0.432,156,2.881,169,2.043,216,0.012,217,0.012,279,2.065,287,0.546,291,1.832,317,0.824,377,1.35,391,1.269,416,1.051,443,1.502,468,1.886,526,3.675,531,1.282,721,2.63,739,1.588,815,2.201,856,3.675,858,5.872,894,3.675,895,6.043,896,6.373,1183,3.076,1344,2.949,1345,5.989,1346,3.434,1347,4.799,1348,3.434,1349,4.799,1350,7.036,1351,4.799,1352,6.836,1353,4.799,1354,5.989,1355,5.989,1356,6.836,1357,7.036,1358,6.836,1359,6.528,1360,4.799,1361,4.799,1362,4.799,1363,4.799,1364,4.799,1365,4.121,1366,4.799,1367,3.434,1368,6.701,1369,3.434,1370,3.434,1371,3.434,1372,3.434,1373,3.434,1374,3.434,1375,3.434,1376,2.63,1377,3.434,1378,3.434,1379,2.949,1380,3.434,1381,3.434,1382,3.434,1383,3.434,1384,3.434,1385,3.434,1386,3.434,1387,3.434,1388,3.434,1389,3.434,1390,3.434,1391,3.434,1392,3.434,1393,3.434,1394,3.434,1395,3.434,1396,3.434,1397,3.434,1398,3.434,1399,3.434,1400,3.434,1401,4.799,1402,4.799,1403,3.434,1404,3.434,1405,3.434,1406,3.434,1407,3.434,1408,3.434,1409,3.434,1410,3.434,1411,3.434,1412,3.434,1413,3.434,1414,3.434,1415,3.434,1416,3.434,1417,3.434,1418,3.434,1419,4.799,1420,3.434,1421,3.434,1422,3.434,1423,3.434,1424,3.434,1425,3.434,1426,3.434,1427,3.434,1428,3.434,1429,3.434,1430,3.434,1431,3.434,1432,3.434,1433,3.434,1434,3.434,1435,3.434,1436,3.434,1437,3.434,1438,3.434,1439,3.434,1440,3.434,1441,3.434,1442,3.434,1443,3.434,1444,4.799,1445,3.434,1446,3.434,1447,3.434,1448,3.434,1449,3.434,1450,3.434,1451,3.434,1452,3.434,1453,3.434,1454,3.434,1455,3.434,1456,3.434,1457,3.434,1458,3.434,1459,3.434,1460,3.434,1461,3.434,1462,3.434,1463,3.434,1464,3.434,1465,2.63,1466,3.434,1467,3.434,1468,3.434,1469,3.434,1470,3.434,1471,3.434,1472,4.799,1473,3.434,1474,3.434,1475,3.434,1476,3.434,1477,3.434,1478,3.434,1479,3.434,1480,3.434,1481,2.949,1482,3.434,1483,3.434,1484,3.434,1485,3.434,1486,3.434,1487,3.434,1488,3.434,1489,3.434,1490,3.434,1491,3.434,1492,3.434,1493,4.799,1494,3.434,1495,3.434,1496,3.434,1497,2.63,1498,3.434,1499,3.434,1500,3.434,1501,3.434,1502,3.434,1503,3.434,1504,3.434,1505,3.434,1506,3.434,1507,3.434,1508,3.434,1509,3.434,1510,5.531,1511,3.434]],["title/components/StatBadgeComponent.html",[0,0.475,210,1.115]],["body/components/StatBadgeComponent.html",[0,0.792,1,1.135,2,0.515,3,0.515,4,1.314,5,1.38,6,1.38,7,0.394,9,0.515,21,1.38,22,2.554,23,2.431,25,1.824,27,1.824,29,1.606,38,1.606,45,1.736,48,0.484,49,0.763,64,0.019,65,0.767,66,0.914,67,0.58,73,0.859,86,0.483,87,0.803,97,0.453,98,0.423,144,1.124,175,1.081,176,1.117,177,1.736,178,1.824,179,2.069,180,1.38,183,1.38,184,1.135,185,1.38,186,0.724,187,1.38,188,1.135,189,0.724,190,1.38,191,1.081,192,1.824,193,1.135,194,1.38,195,1.081,196,0.763,197,1.38,198,1.135,199,1.38,200,0.724,201,1.38,202,1.135,203,1.38,204,1.135,205,1.38,206,1.135,207,1.38,208,1.03,209,1.38,210,1.787,211,2.254,212,1.38,213,0.763,214,1.081,215,1.38,216,0.013,217,0.013,287,0.65,317,1.296,376,1.575,400,1.794,402,2.567,404,1.909,418,2.259,451,2.124,471,2.288,492,3.18,782,4.138,859,4.138,914,4.663,1512,5.907,1513,5.268,1514,3.512,1515,6.877,1516,5.403,1517,5.403,1518,5.403,1519,7.014,1520,7.014,1521,6.052,1522,5.403,1523,4.138,1524,4.089,1525,4.089,1526,4.089,1527,4.089,1528,4.089,1529,4.089,1530,4.089]],["title/injectables/ToastService.html",[35,2.575,279,1.499]],["body/injectables/ToastService.html",[2,0.548,3,0.548,7,0.42,9,0.786,17,1.052,20,4.312,24,2.59,29,1.639,35,3.609,38,1.497,53,3.349,63,1.351,64,0.019,65,0.799,67,0.799,69,1.164,74,1.901,78,0.946,80,5.585,81,6.01,86,0.666,87,0.855,88,2.418,97,0.482,98,0.451,99,1.418,107,5.359,128,3.335,129,3.335,138,1.168,196,1.361,216,0.014,217,0.014,242,2.013,279,2.329,287,0.692,291,2.018,391,1.151,400,1.818,404,1.209,419,2.75,448,2.89,531,2.102,687,3.033,760,5.359,815,2.791,851,3.74,874,2.791,883,2.268,889,4.758,894,3.335,1194,4.835,1238,3.335,1264,4.835,1531,3.74,1532,5.63,1533,5.63,1534,4.354,1535,5.63,1536,4.354,1537,5.63,1538,4.354,1539,5.63,1540,4.354,1541,4.354,1542,6.239,1543,5.63,1544,4.354,1545,4.354,1546,4.354,1547,5.63,1548,5.63,1549,5.63,1550,5.63,1551,4.354,1552,4.354]],["title/interfaces/Tool.html",[48,0.36,396,0.749]],["body/interfaces/Tool.html",[2,0.326,3,0.326,7,0.25,9,0.844,12,1.71,17,0.924,46,1.197,48,0.66,49,0.484,64,0.019,65,0.368,66,1.037,67,1.041,68,0.803,73,1.103,76,0.92,78,0.85,79,1.517,86,0.462,97,0.701,98,0.268,102,0.509,109,0.692,138,0.459,142,1.71,144,1.174,145,0.815,161,0.973,170,1.14,176,1.27,186,0.834,189,0.692,196,0.73,200,0.997,213,0.73,216,0.012,217,0.01,255,1.133,268,1.198,269,2.265,287,0.412,302,2.06,303,1.998,307,1.257,317,0.938,324,1.388,358,1.46,366,1.71,369,1.811,370,1.198,376,0.755,377,2.486,378,0.967,390,2.295,391,1.489,396,1.306,397,1.27,398,1.35,399,1.019,400,1.73,401,2.101,402,2.666,403,2.603,404,2.133,405,1.35,406,3.083,407,2.462,408,2.737,409,2.294,410,1.019,411,2.213,412,2.901,413,1.133,414,1.71,415,2.682,416,1.723,417,2.588,418,1.46,419,2.486,420,1.917,421,1.917,422,2.426,423,1.917,424,1.861,425,2.294,426,1.861,427,1.46,428,2.682,429,1.958,430,2.06,431,2.766,432,1.35,433,1.27,434,1.671,435,1.133,436,1.133,437,2.341,438,1.46,439,2.571,440,2.037,441,2.037,442,2.342,443,1.71,444,2.178,445,2.178,446,1.35,447,2.308,448,1.537,449,1.71,450,2.571,451,1.537,452,1.529,453,1.074,454,0.967,455,1.198,456,1.074,457,1.71,458,1.133,459,1.074,460,1.198,461,1.27,462,1.35,463,1.019,464,1.27,465,1.35,466,1.35,467,2.244,468,1.019,469,1.27,470,1.35,471,1.513,472,1.35,473,1.35,474,1.198,475,1.35,476,1.198,477,1.27,478,1.35,479,1.35,480,2.037,481,1.27,482,1.35,483,1.27,484,1.917,485,1.133,486,1.27,487,1.074,488,1.917,489,1.917,490,1.27,491,0.967]],["title/modules/ToolPageModule.html",[218,1.579,230,2.575]],["body/modules/ToolPageModule.html",[2,0.579,3,0.579,7,0.443,48,0.412,56,2.736,64,0.019,69,0.95,86,0.895,87,0.903,90,2.011,97,0.709,98,0.476,127,2.011,144,1.166,175,1.216,188,1.97,189,0.814,198,1.97,200,1.257,202,1.97,204,1.97,206,1.97,210,1.97,211,1.478,214,1.877,216,0.014,217,0.014,218,2.291,220,2.395,221,4.104,222,2.948,230,4.925,231,3.738,236,4.061,237,4.061,242,2.126,258,2.948,261,3.203,262,3.522,410,1.807,492,2.126,494,3.522,883,2.395,907,4.466,908,3.203,909,4.466,932,3.949,936,5.499,937,5.499,939,3.522,981,3.522,1058,3.522,1067,3.522,1105,3.522,1513,3.522,1553,3.949,1554,3.949,1555,4.598,1556,4.598,1557,4.598,1558,4.598,1559,4.598,1560,4.598,1561,4.598]],["title/components/ToolSelectionComponent.html",[0,0.475,213,0.749]],["body/components/ToolSelectionComponent.html",[0,0.797,1,1.161,2,0.527,3,0.527,4,1.344,5,1.411,6,1.411,7,0.403,9,0.69,21,1.411,22,2.56,23,2.436,25,1.851,27,1.851,29,1.468,32,2.415,34,2.91,38,1.315,48,0.675,49,1.142,50,2.83,63,1.003,64,0.019,65,0.868,66,0.778,67,0.778,68,0.678,69,1.394,70,2.063,71,2.517,72,1.921,73,1.032,79,1.468,84,2.405,85,2.999,86,0.724,87,0.821,91,1.643,94,1.934,97,0.463,98,0.433,99,1.381,101,1.732,109,0.971,144,1.132,175,1.106,176,1.133,177,1.762,178,1.851,179,2.087,180,1.411,183,1.411,184,1.161,185,1.411,186,0.74,187,1.411,188,1.161,189,0.74,190,1.411,191,1.106,192,1.851,193,1.161,194,1.411,195,1.106,196,0.78,197,1.411,198,1.161,199,1.411,200,0.74,201,1.411,202,1.161,203,1.411,204,1.161,205,1.411,206,1.161,207,1.411,208,1.053,209,1.411,210,1.161,211,1.344,212,1.411,213,1.212,214,1.106,215,1.411,216,0.014,217,0.014,258,3.923,287,0.665,288,2.155,326,2.049,352,3.398,382,2.912,394,4.71,395,4.71,638,3.203,641,4.71,642,5.792,670,3.591,935,4.687,1183,3.515,1562,4.181]],["title/injectables/ToolService.html",[34,1.579,279,1.499]],["body/injectables/ToolService.html",[2,0.426,3,0.426,7,0.327,9,0.598,17,1.104,18,2.329,24,2.015,29,1.317,30,2.594,31,3.707,34,1.868,38,1.73,45,2.014,46,1.454,48,0.681,49,0.887,54,2.753,60,2.639,61,2.827,63,1.317,64,0.019,65,0.779,66,0.923,67,0.947,68,0.659,70,1.821,71,1.774,72,1.891,78,1.033,79,1.634,86,0.649,87,0.665,90,1.481,97,0.375,98,0.351,99,0.853,100,1.764,102,1.277,109,0.841,115,2.753,137,4.082,138,1.054,145,0.598,161,1.408,164,1.331,176,1.23,189,0.841,216,0.012,217,0.012,269,2.36,279,2.049,287,0.538,307,2.088,317,1.504,376,1.385,377,1.868,387,2.909,393,4.082,396,0.632,400,1.197,401,2.222,402,2.222,403,2.753,404,1.319,413,2.078,424,2.306,448,1.868,467,1.686,531,1.774,542,3.046,546,3.64,688,3.64,807,2.909,815,2.171,1183,3.046,1211,4.559,1523,3.64,1563,2.909,1564,5.952,1565,5.952,1566,5.952,1567,5.952,1568,5.952,1569,3.386,1570,3.386,1571,3.386,1572,4.082,1573,3.386,1574,4.082,1575,4.752,1576,4.082,1577,3.386,1578,4.752,1579,4.752,1580,3.386,1581,4.752,1582,3.386,1583,4.752,1584,3.386,1585,3.386,1586,4.082,1587,4.752,1588,3.386,1589,3.386,1590,3.386,1591,4.752,1592,3.386,1593,3.386,1594,3.386,1595,3.386,1596,6.269,1597,3.386,1598,5.49,1599,6.269,1600,3.386,1601,5.49,1602,4.752,1603,3.386,1604,3.386,1605,4.752,1606,3.386,1607,4.752,1608,3.386,1609,4.752,1610,4.752]],["title/components/ToolViewComponent.html",[0,0.475,214,1.062]],["body/components/ToolViewComponent.html",[0,0.823,1,1.025,2,0.465,3,0.465,4,1.186,5,1.246,6,1.246,7,0.356,9,0.635,17,0.864,21,1.246,22,2.526,23,2.404,25,1.703,27,1.703,29,1.379,32,2.452,34,2.874,36,4.351,38,1.551,48,0.662,49,1.207,63,0.886,64,0.019,65,0.816,66,0.877,67,0.716,69,1.459,70,2.043,71,2.492,72,1.897,73,1.106,79,1.379,86,0.73,87,0.725,91,1.451,94,1.707,96,2.827,97,0.409,98,0.382,99,1.448,102,1.129,109,0.893,118,2.196,138,1.182,144,1.147,149,2.472,161,1.413,175,0.976,176,1.043,177,1.621,178,1.703,179,1.985,180,1.246,183,1.246,184,1.025,185,1.246,186,0.654,187,1.246,188,1.025,189,0.654,190,1.246,191,0.976,192,1.703,193,1.025,194,1.246,195,0.976,196,0.689,197,1.246,198,1.025,199,1.246,200,0.654,201,1.246,202,1.025,203,1.246,204,1.025,205,1.246,206,1.025,207,1.246,208,0.93,209,1.246,210,1.025,211,1.186,212,1.246,213,0.689,214,1.633,215,1.246,216,0.012,217,0.012,258,4.28,261,4.65,286,2.816,287,0.587,288,2.734,291,1.544,326,1.809,376,1.47,427,1.883,434,1.79,452,1.076,492,3.087,761,3.514,786,3.864,824,3.514,835,3.171,868,5.305,871,2.196,899,3.171,902,3.171,1131,3.171,1302,2.827,1303,4.333,1304,4.333,1611,3.692,1612,3.692,1613,3.692,1614,3.692,1615,3.692,1616,3.692,1617,3.692,1618,5.045,1619,5.045,1620,5.045]],["title/coverage.html",[1621,4.586]],["body/coverage.html",[0,0.895,1,1.204,7,0.418,8,3.726,32,1.465,33,2.126,34,1.705,35,2.781,36,2.581,37,2.26,48,0.388,64,0.019,66,0.616,73,0.69,98,0.449,144,0.728,184,1.204,186,0.768,188,1.204,191,1.147,193,1.204,195,1.147,198,1.204,200,0.768,202,1.204,204,1.204,206,1.204,208,1.093,210,1.204,213,0.81,214,1.147,216,0.014,217,0.014,251,3.022,253,3.993,258,3.601,261,3.022,263,3.323,264,3.022,265,3.912,269,1.394,279,2.609,280,3.726,300,1.394,352,3.79,353,3.726,375,3.726,396,1.345,397,3.534,407,1.897,411,1.705,415,1.797,428,1.797,431,1.897,452,1.264,492,3.334,493,3.726,494,3.323,495,3.726,636,3.912,637,3.323,638,4.302,658,3.022,756,3.726,861,3.726,912,3.726,935,3.323,938,4.059,939,3.323,940,3.726,981,3.323,982,3.726,1058,3.323,1059,3.726,1067,3.323,1068,3.726,1105,3.323,1106,3.726,1168,3.726,1283,3.726,1302,4.302,1344,3.726,1512,3.726,1513,3.323,1514,3.726,1531,3.726,1563,3.726,1621,3.726,1622,2.41,1623,4.339,1624,7.761,1625,5.617,1626,6.588,1627,7.115,1628,5.617,1629,6.823,1630,3.726,1631,3.022,1632,4.339,1633,5.617,1634,5.617,1635,6.229,1636,4.339,1637,4.339,1638,5.617,1639,4.339]],["title/dependencies.html",[220,2.495,1640,2.943]],["body/dependencies.html",[64,0.019,76,1.78,82,1.628,87,0.986,90,2.194,173,2.613,216,0.015,217,0.015,220,2.613,234,5.288,235,4.715,239,4.309,242,2.847,243,4.309,244,4.715,246,3.843,391,1.327,410,1.972,442,1.694,803,3.843,883,3.617,908,3.495,1018,3.843,1079,5.288,1127,4.309,1128,5.288,1188,4.309,1574,4.309,1641,5.017,1642,7.476,1643,5.017,1644,5.017,1645,5.017,1646,5.017,1647,5.017,1648,5.017,1649,5.017,1650,5.017,1651,5.017,1652,5.017,1653,5.017,1654,5.017,1655,5.017,1656,4.309,1657,5.017,1658,5.017,1659,2.985,1660,5.017,1661,5.017,1662,5.017,1663,4.309,1664,5.017,1665,5.017,1666,5.017,1667,5.017,1668,5.017,1669,5.017,1670,5.288,1671,5.017,1672,6.156,1673,5.017,1674,5.017,1675,5.017,1676,5.017,1677,5.017,1678,5.017,1679,5.017,1680,5.017,1681,5.017,1682,5.017,1683,5.017,1684,5.017,1685,5.017,1686,5.017,1687,5.017,1688,5.017]],["title/index.html",[287,0.545,707,2.624,1234,2.387]],["body/index.html",[7,0.476,46,1.511,48,0.592,49,0.921,62,1.749,64,0.016,68,0.733,69,1.02,71,1.843,78,1.437,82,1.749,102,1.357,132,2.892,170,1.439,174,2.571,216,0.015,217,0.015,251,3.439,272,3.439,286,2.42,307,1.586,354,4.108,396,0.921,416,1.511,442,2.058,457,2.159,491,1.843,535,2.861,559,2.571,739,3.193,760,3.781,790,3.781,913,3.165,965,4.24,999,3.626,1018,5.065,1154,3.672,1234,3.439,1239,3.781,1379,4.24,1465,3.781,1622,3.835,1631,3.439,1670,4.24,1689,4.24,1690,3.781,1691,5.931,1692,4.24,1693,4.937,1694,6.095,1695,4.937,1696,4.24,1697,5.065,1698,4.937,1699,4.937,1700,4.937,1701,4.937,1702,4.937,1703,4.937,1704,4.937,1705,4.245,1706,5.235,1707,6.905,1708,4.24,1709,4.937,1710,4.24,1711,4.937,1712,4.937,1713,6.612,1714,4.937,1715,4.937,1716,4.937,1717,3.165,1718,4.937,1719,4.24,1720,4.669,1721,4.937,1722,4.937,1723,4.24,1724,2.058,1725,4.937,1726,4.937,1727,4.937,1728,4.937,1729,4.937,1730,4.937,1731,4.937,1732,4.937,1733,4.937,1734,4.669,1735,3.165,1736,4.937]],["title/modules.html",[218,2.099]],["body/modules.html",[64,0.016,216,0.017,217,0.017,218,2.304,219,4.084,228,3.759,229,3.759,230,3.759,235,5.598,1737,7.309,1738,7.309,1739,7.309]],["title/overview.html",[1740,2.966]],["body/overview.html",[0,0.553,1,2.009,37,3.359,56,2.781,64,0.019,69,0.966,97,0.518,98,0.484,127,2.044,175,1.236,184,2.009,186,1.142,188,1.791,191,1.706,193,2.009,195,1.914,198,1.791,200,1.142,202,1.791,204,1.791,206,1.791,208,1.625,210,1.791,213,1.204,214,1.706,216,0.015,217,0.015,218,2.315,219,5.262,220,2.434,221,2.996,222,2.996,223,4.014,224,4.014,225,4.014,226,4.014,227,4.014,228,4.693,229,4.877,230,4.923,231,3.776,279,1.745,396,0.872,600,3.256,734,4.014,903,4.014,904,4.014,905,4.014,929,4.014,930,4.014,931,4.014,1553,4.014,1554,4.014,1740,2.596,1741,4.674,1742,4.674,1743,4.674]],["title/miscellaneous/variables.html",[1631,3.337,1744,2.943]],["body/miscellaneous/variables.html",[45,1.832,62,1.86,64,0.018,66,0.809,68,0.631,82,1.757,83,2.969,216,0.016,217,0.016,251,4.898,287,0.906,317,1.367,391,1.757,913,3.654,1630,4.896,1631,3.97,1744,4.896,1745,5.7,1746,5.7,1747,5.7,1748,5.7,1749,5.7,1750,5.7,1751,5.7,1752,5.7,1753,5.7,1754,5.7,1755,5.7,1756,5.7,1757,5.7]],["title/additional-documentation/setup.html",[145,0.431,1154,1.903,1724,1.157]],["body/additional-documentation/setup.html",[17,0.866,40,3.2,48,0.599,53,3.428,62,1.524,64,0.016,82,1.868,102,1.132,170,1.679,174,3.001,216,0.017,217,0.017,300,1.852,307,2.27,369,1.763,468,2.265,496,3.694,535,2.387,557,4.413,999,3.978,1154,3.2,1497,4.413,1622,3.714,1758,4.949,1759,5.762,1760,4.949,1761,4.013,1762,4.949]],["title/additional-documentation/setup/setting-up-firebase.html",[82,0.7,102,0.52,145,0.334,535,1.097,1724,0.894]],["body/additional-documentation/setup/setting-up-firebase.html",[7,0.538,11,4.747,12,1.877,16,2.58,17,0.839,18,2.104,19,3.288,40,3.777,44,3.687,46,2.171,48,0.384,50,1.985,54,3.034,62,1.843,64,0.014,65,0.792,68,0.772,72,1.822,74,2.296,75,2.384,78,1.347,82,1.985,83,3.417,84,1.687,86,0.508,88,2.384,101,2.718,102,1.414,132,1.877,142,1.877,161,1.356,167,2.906,168,2.554,169,3.319,170,2.097,173,3.228,216,0.014,217,0.015,220,2.236,281,2.99,286,2.104,300,2.108,302,1.877,311,2.99,363,2.554,369,1.314,377,2.436,399,1.687,401,1.603,407,1.877,416,2.171,429,1.603,438,1.603,449,1.877,461,2.104,463,1.687,491,1.603,496,3.576,510,3.687,533,2.99,535,2.888,548,2.99,559,3.63,568,3.687,663,3.687,684,4.273,708,3.687,716,4.273,721,3.288,739,1.985,758,3.687,787,2.99,919,3.886,955,3.288,1082,3.687,1115,4.792,1151,2.99,1197,3.777,1199,3.687,1238,3.288,1656,3.687,1690,3.288,1697,4.273,1705,2.99,1706,3.687,1708,3.687,1710,3.687,1717,2.752,1720,3.288,1724,1.449,1740,2.384,1763,5.579,1764,5.579,1765,4.317,1766,4.293,1767,4.293,1768,4.293,1769,4.293,1770,4.293,1771,4.293,1772,3.288,1773,4.747,1774,5.579,1775,4.293,1776,4.293,1777,4.293,1778,4.293,1779,4.293,1780,3.687,1781,4.293,1782,3.687,1783,4.293,1784,3.687,1785,4.293,1786,4.293,1787,3.687,1788,4.293,1789,4.293,1790,5.579,1791,3.288,1792,3.687,1793,3.288,1794,3.687,1795,4.293,1796,4.293,1797,4.293,1798,4.293,1799,4.293,1800,4.293,1801,4.293,1802,4.293,1803,2.99,1804,3.687,1805,5.579,1806,4.293]],["title/additional-documentation/setup/node-tools.html",[48,0.267,145,0.376,999,1.777,1724,1.009]],["body/additional-documentation/setup/node-tools.html",[4,1.235,7,0.467,9,0.875,12,0.826,16,1.412,17,0.882,18,0.926,40,1.696,43,2.88,45,0.607,46,1.176,47,4.453,48,0.661,49,0.353,60,1.049,61,1.817,62,0.5,64,0.019,65,0.688,66,0.951,67,1.05,68,0.574,69,1.002,70,0.578,72,1.439,73,0.611,74,2.331,75,3.031,76,1.567,79,1.059,99,1.582,102,1.184,109,0.782,112,1.316,115,2.241,127,0.826,132,1.681,138,0.858,144,1.179,145,0.739,156,3.769,159,1.124,161,1.002,164,0.743,174,1.591,176,1.339,179,1.419,189,0.541,216,0.008,217,0.008,218,0.743,242,0.874,255,0.826,269,1.419,286,1.497,299,2.339,300,2.052,302,0.826,303,1.364,305,1.211,307,1.235,317,0.733,324,1.567,340,2.339,358,2.448,368,4.427,369,1.886,376,1.12,378,0.705,384,0.926,391,1.914,399,1.2,400,1.631,401,1.809,402,2.542,403,1.412,404,1.929,407,1.336,412,1.884,415,1.829,416,1.795,418,2.12,419,2.606,420,2.375,421,2.375,422,2.042,423,1.497,425,2.695,426,2.492,427,2.417,428,2.148,429,1.435,430,1.681,431,1.931,433,0.926,434,1.936,435,1.336,436,0.826,437,1.567,439,1.497,442,2.281,443,1.931,444,1.412,445,0.874,448,0.743,449,1.336,450,0.926,451,1.735,452,1.933,454,1.809,456,1.265,457,1.336,458,1.931,459,1.592,467,2.479,468,1.2,471,0.607,474,0.874,476,2.524,477,0.926,487,1.592,491,1.14,511,2.623,513,3.075,514,1.623,521,1.958,522,3.324,523,1.623,535,1.265,538,1.447,542,1.211,554,1.623,578,1.447,601,2.623,619,4.18,658,2.127,661,2.127,662,4.18,668,5.633,688,2.339,692,1.623,693,1.623,698,1.124,717,4.163,718,1.958,782,3.712,783,3.801,796,1.623,837,3.38,849,1.623,856,2.339,889,2.127,900,1.447,913,1.211,914,1.316,920,3.302,926,1.211,959,1.623,964,3.792,966,2.623,999,3.585,1020,1.623,1086,1.447,1151,2.127,1154,1.049,1156,2.623,1178,1.623,1193,3.792,1198,3.792,1203,2.623,1211,2.339,1228,2.623,1229,2.623,1230,2.623,1234,1.316,1236,1.623,1242,2.623,1243,2.623,1250,1.447,1252,1.623,1274,3.792,1287,1.623,1313,1.623,1341,2.127,1365,1.623,1376,3.382,1481,1.623,1497,1.447,1572,1.623,1622,1.049,1659,2.627,1663,1.623,1705,3.075,1717,2.464,1719,1.623,1720,2.339,1740,1.049,1762,1.623,1780,1.623,1784,1.623,1803,1.316,1804,3.792,1807,7.193,1808,1.889,1809,3.054,1810,1.889,1811,1.889,1812,3.054,1813,4.687,1814,1.889,1815,1.889,1816,1.889,1817,1.889,1818,3.054,1819,1.889,1820,4.847,1821,1.889,1822,1.889,1823,3.054,1824,1.889,1825,1.889,1826,3.054,1827,1.889,1828,1.889,1829,1.889,1830,3.844,1831,3.054,1832,3.054,1833,1.889,1834,3.054,1835,1.889,1836,1.889,1837,1.889,1838,1.889,1839,1.889,1840,3.054,1841,1.889,1842,1.889,1843,1.889,1844,3.054,1845,4.847,1846,1.889,1847,1.889,1848,3.054,1849,4.847,1850,3.054,1851,1.889,1852,1.889,1853,3.844,1854,3.054,1855,3.844,1856,3.054,1857,1.889,1858,1.889,1859,1.889,1860,1.889,1861,3.054,1862,3.054,1863,1.889,1864,3.054,1865,3.054,1866,6.948,1867,1.889,1868,3.054,1869,1.889,1870,1.889,1871,1.889,1872,1.889,1873,1.889,1874,4.847,1875,1.889,1876,1.889,1877,3.054,1878,1.889,1879,1.889,1880,1.889,1881,3.054,1882,1.447,1883,1.889,1884,1.889,1885,1.623,1886,1.889,1887,1.889,1888,1.889,1889,1.889,1890,1.889,1891,1.889,1892,1.889,1893,1.889,1894,1.889,1895,1.889,1896,1.889,1897,1.889,1898,1.889,1899,1.889]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[82,0.7,145,0.334,170,0.772,174,1.379,1724,0.894]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,0.975,18,2.682,62,1.715,64,0.016,72,2.055,74,1.847,79,1.313,82,1.977,83,3.601,102,1.075,145,0.689,167,2.85,170,2.157,173,3.378,174,3.801,216,0.016,217,0.016,283,3.603,286,2.682,300,1.758,429,2.581,487,2.267,535,2.267,548,3.811,559,2.85,595,3.811,621,4.699,739,2.53,787,3.811,914,3.811,1523,4.191,1772,4.191,1773,5.296,1885,4.699,1900,4.699,1901,6.487,1902,5.472,1903,4.699]],["title/additional-documentation/server-architecture.html",[78,0.649,145,0.376,1724,1.009,1734,2.288]],["body/additional-documentation/server-architecture.html",[64,0.016,78,1.473,216,0.017,217,0.017,1576,5.068,1622,3.765,1734,5.192,1740,3.277,1761,4.721,1782,5.068,1882,4.519,1904,5.901,1905,5.901,1906,4.519,1907,5.068,1908,4.11]],["title/additional-documentation/server-architecture/server-endpoints.html",[78,0.649,145,0.376,1724,1.009,1908,2.081]],["body/additional-documentation/server-architecture/server-endpoints.html",[64,0.017,78,1.487,216,0.017,217,0.017,369,1.835,399,2.357,1761,4.177,1908,4.765]],["title/additional-documentation/server-architecture/discover-&-fix-workflow.html",[64,0.006,145,0.299,426,0.844,427,0.888,1724,0.803,1909,2.043]],["body/additional-documentation/server-architecture/discover-&-fix-workflow.html",[48,0.61,64,0.017,68,0.659,216,0.017,217,0.017,426,2.111,427,2.22,999,4.051,1717,3.813,1909,5.849,1910,5.948]],["title/additional-documentation/server-architecture/data-flow-diagram.html",[145,0.334,957,1.845,1724,0.894,1906,2.029,1911,2.275]],["body/additional-documentation/server-architecture/data-flow-diagram.html",[64,0.017,216,0.017,217,0.017]],["title/additional-documentation/server-architecture/high-level-overview.html",[145,0.334,1724,0.894,1740,1.471,1882,2.029,1907,2.275]],["body/additional-documentation/server-architecture/high-level-overview.html",[64,0.017,216,0.017,217,0.017]],["title/additional-documentation/firebase.html",[82,0.906,145,0.431,1724,1.157]],["body/additional-documentation/firebase.html",[64,0.016,74,1.954,82,1.959,83,3.015,102,1.317,216,0.017,217,0.017,358,2.161,496,4.298,535,2.778,547,2.837,559,3.015,1197,3.215,1586,4.972,1622,3.724,1659,3.444,1705,4.032,1735,3.711,1761,4.032,1765,4.032,1912,5.789,1913,5.789,1914,5.789,1915,5.789]],["title/additional-documentation/firebase/firebase-authentication.html",[82,0.79,83,1.556,145,0.376,1724,1.009]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.812,17,1.036,40,2.731,48,0.44,54,2.274,55,2.925,57,2.561,62,1.909,64,0.015,68,0.785,79,1.18,82,1.824,83,3.759,84,1.932,143,5.056,145,0.831,146,3.766,167,3.438,168,4.102,169,4.461,170,2.207,171,3.766,173,2.561,174,2.561,216,0.015,217,0.015,283,3.377,284,4.223,285,5.669,286,3.379,300,1.954,305,3.898,307,2.216,384,2.41,416,1.505,496,3.152,535,2.734,553,3.766,578,3.766,579,3.766,595,3.425,655,3.425,662,3.766,698,2.925,739,2.274,1017,4.223,1151,3.425,1250,3.766,1312,3.766,1342,5.222,1696,4.223,1740,2.731,1773,3.766,1803,3.425,1813,5.222,1900,5.222,1906,3.766,1911,4.223,1916,4.917,1917,4.917,1918,4.917,1919,4.917,1920,4.917,1921,4.917,1922,4.917,1923,4.917,1924,4.917,1925,4.917,1926,6.08,1927,4.223,1928,4.917,1929,4.917,1930,6.08,1931,4.223,1932,4.917,1933,4.917,1934,4.917]],["title/additional-documentation/firebase/database-structure.html",[145,0.376,1197,1.659,1724,1.009,1735,1.915]],["body/additional-documentation/firebase/database-structure.html",[9,0.622,17,1.038,43,2.742,48,0.546,62,1.911,64,0.015,68,0.733,70,2.023,78,1.325,82,1.612,84,1.94,88,2.742,127,2.665,132,2.665,161,1.493,167,3.814,168,3.934,170,1.439,216,0.015,217,0.015,311,3.439,377,1.94,391,1.306,396,0.921,399,1.94,402,1.843,425,2.159,438,2.468,452,1.439,459,2.525,463,2.878,491,1.843,542,3.165,543,3.781,547,2.42,551,4.24,557,3.781,559,3.444,579,3.781,658,4.245,684,3.781,700,3.439,718,3.907,739,2.283,862,4.24,919,5.033,1035,3.781,1088,4.24,1154,2.742,1183,3.907,1197,4.067,1312,3.781,1376,3.781,1465,3.781,1622,3.385,1659,2.937,1692,4.24,1735,4.239,1760,5.679,1765,4.606,1787,5.235,1791,3.781,1793,3.781,1794,4.24,1803,3.439,1903,4.24,1908,3.439,1927,4.24,1935,4.937,1936,4.937,1937,4.937,1938,6.095,1939,4.937,1940,4.937,1941,4.937,1942,4.937,1943,4.937,1944,4.937]],["title/additional-documentation/firebase/firebase-wrapper.html",[82,0.79,145,0.376,1659,1.777,1724,1.009]],["body/additional-documentation/firebase/firebase-wrapper.html",[9,0.731,17,0.873,23,1.468,46,1.398,48,0.409,49,0.853,51,3.925,62,1.536,63,1.393,64,0.016,68,0.821,69,0.945,70,1.953,74,2.46,76,2.061,77,2.538,79,1.393,82,1.688,84,2.282,97,0.506,101,1.893,127,1.998,132,1.998,138,1.13,154,3.925,159,3.996,164,2.282,167,3.861,173,2.38,189,0.809,216,0.014,217,0.016,269,1.468,286,2.24,288,1.796,291,1.777,309,3.183,322,2.93,391,1.776,399,1.796,404,1.612,425,1.998,438,2.168,458,2.54,463,1.796,468,1.796,471,1.468,487,1.893,531,2.588,547,3.128,560,3.5,655,3.183,698,2.719,718,2.93,739,2.113,761,4.446,900,3.5,919,4.446,926,2.93,957,5.076,1154,2.538,1197,3.936,1341,3.183,1640,3.925,1659,4.125,1689,3.925,1690,3.5,1691,4.988,1717,2.93,1723,4.988,1735,3.723,1758,3.925,1765,4.936,1772,3.5,1791,3.5,1792,5.483,1793,4.448,1931,3.925,1945,4.57,1946,4.57,1947,4.57,1948,4.57,1949,4.57,1950,4.57,1951,4.57,1952,4.57,1953,6.383,1954,4.57,1955,4.57,1956,4.57,1957,4.57,1958,4.57,1959,4.57,1960,4.57,1961,4.57,1962,4.57,1963,4.57,1964,4.57,1965,6.383,1966,5.807,1967,5.807,1968,4.57,1969,4.57,1970,4.57,1971,4.57,1972,4.57,1973,4.57]],["title/additional-documentation/firebase/firebase-functions.html",[74,1.009,82,0.79,145,0.376,1724,1.009]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.696,16,2.557,17,0.981,54,2.557,55,3.289,62,1.462,64,0.016,68,0.613,69,1.143,74,2.505,77,3.071,82,1.936,88,3.625,132,2.418,161,1.349,168,3.883,169,3.289,170,2.091,173,2.88,216,0.016,217,0.016,283,3.071,305,3.544,416,1.692,424,1.962,533,3.851,535,2.291,536,4.749,559,3.399,595,4.546,661,3.851,1035,4.235,1197,3.071,1239,4.235,1341,3.851,1697,4.999,1974,5.529,1975,5.529,1976,5.529,1977,5.529,1978,5.529,1979,5.529,1980,5.529]]],"invertedIndex":[["",{"_index":64,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["12/12",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1551,"title":{},"body":{"injectables/ToastService.html":{}}}],["16",{"_index":1741,"title":{},"body":{"overview.html":{}}}],["183a54",{"_index":1354,"title":{},"body":{"injectables/SettingsService.html":{}}}],["1c2023",{"_index":1360,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["24a36",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["252a2e",{"_index":1361,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2879b5",{"_index":1353,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b63",{"_index":1355,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b9f",{"_index":1362,"title":{},"body":{"injectables/SettingsService.html":{}}}],["3",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3.3.1",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["330px",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["5.0.0",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1552,"title":{},"body":{"injectables/ToastService.html":{}}}],["6",{"_index":1742,"title":{},"body":{"overview.html":{}}}],["6.0.7",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["65727d",{"_index":1357,"title":{},"body":{"injectables/SettingsService.html":{}}}],["7/7",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1743,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":887,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["_log(collectiontitl",{"_index":1972,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["_selectedcategori",{"_index":1564,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1565,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1164,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1163,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].tolowercas",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ac",{"_index":497,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1618,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["accessor",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":170,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":1770,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["action",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["activ",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual",{"_index":1771,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["actual_compon",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1724,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["adjust",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["admin",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ag",{"_index":1380,"title":{},"body":{"injectables/SettingsService.html":{}}}],["again",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["airat",{"_index":1373,"title":{},"body":{"injectables/SettingsService.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":862,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["alt",{"_index":1807,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1881,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1884,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alter",{"_index":1816,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1919,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1916,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["amount",{"_index":1085,"title":{},"body":{"components/IssueListComponent.html":{}}}],["angular",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":908,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":883,"title":{},"body":{"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1314,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1851,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["apikey",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["app.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1820,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":219,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1857,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["approut",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1734,"title":{"additional-documentation/server-architecture.html":{}},"body":{"index.html":{},"additional-documentation/server-architecture.html":{}}}],["arr.length",{"_index":1503,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arr[randi",{"_index":1504,"title":{},"body":{"injectables/SettingsService.html":{}}}],["array",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_forward",{"_index":1343,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["ashen",{"_index":1358,"title":{},"body":{"injectables/SettingsService.html":{}}}],["assign",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":351,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.json",{"_index":1779,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["authdomain",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":83,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":37,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1900,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["await",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["awar",{"_index":1785,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["b",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].tolowercas",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["backend",{"_index":1799,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["background",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["backward",{"_index":1482,"title":{},"body":{"injectables/SettingsService.html":{}}}],["badg",{"_index":1516,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge\">{{getissuecount(cours",{"_index":892,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["badge'},{'nam",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1560,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1517,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1518,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1514,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1525,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1524,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1526,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1522,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1513,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["banana",{"_index":1438,"title":{},"body":{"injectables/SettingsService.html":{}}}],["bar",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{}}}],["base",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["beautifi",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1716,"title":{},"body":{"index.html":{}}}],["befor",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["behavior",{"_index":1814,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["behind",{"_index":1846,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1813,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1762,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["bit",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["blaster",{"_index":1431,"title":{},"body":{"injectables/SettingsService.html":{}}}],["blob",{"_index":1159,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1160,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["blue",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1287,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["brand",{"_index":1767,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["breadcrumb",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":184,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1700,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1539,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildprocessingmessag",{"_index":1505,"title":{},"body":{"injectables/SettingsService.html":{}}}],["buildrouterlink",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1691,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["burnin",{"_index":1398,"title":{},"body":{"injectables/SettingsService.html":{}}}],["button",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["byui",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["byui.edu",{"_index":1800,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["c.id",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["c3ffe3",{"_index":1356,"title":{},"body":{"injectables/SettingsService.html":{}}}],["calcul",{"_index":1375,"title":{},"body":{"injectables/SettingsService.html":{}}}],["call",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1167,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["candid",{"_index":1389,"title":{},"body":{"injectables/SettingsService.html":{}}}],["canva",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1715,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1849,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1853,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1879,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1864,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1828,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1556,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":939,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":398,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":269,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["categories'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":186,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1086,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["chalk",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["charcoal",{"_index":895,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["charm",{"_index":1393,"title":{},"body":{"injectables/SettingsService.html":{}}}],["check",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["checklocalstorage(key",{"_index":1509,"title":{},"body":{"injectables/SettingsService.html":{}}}],["cheerio",{"_index":1663,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1868,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["chemist",{"_index":1435,"title":{},"body":{"injectables/SettingsService.html":{}}}],["chip",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["choic",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["choos",{"_index":1831,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["choreographi",{"_index":1413,"title":{},"body":{"injectables/SettingsService.html":{}}}],["chosen",{"_index":1583,"title":{},"body":{"injectables/ToolService.html":{}}}],["chrome",{"_index":1387,"title":{},"body":{"injectables/SettingsService.html":{}}}],["circl",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":98,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"issu",{"_index":891,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["classic",{"_index":894,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{}}}],["clear",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{}}}],["click",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["clickabl",{"_index":1841,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":913,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1709,"title":{},"body":{"index.html":{}}}],["close",{"_index":874,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":866,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1936,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1165,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodul",{"_index":903,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_declar",{"_index":904,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_export",{"_index":905,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":929,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1553,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1554,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cobalt",{"_index":1352,"title":{},"body":{"injectables/SettingsService.html":{}}}],["code",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["codeeditor",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["codeeditorcompon",{"_index":188,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1920,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1973,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["color",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1725,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":907,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["compodoc",{"_index":1904,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comprehens",{"_index":1491,"title":{},"body":{"injectables/SettingsService.html":{}}}],["comput",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["conceiv",{"_index":1489,"title":{},"body":{"injectables/SettingsService.html":{}}}],["condit",{"_index":1855,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["configur",{"_index":1776,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["conflict",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1772,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["console.error(",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(searchphras",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["console.log(typeof",{"_index":1540,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":871,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1289,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1559,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":983,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":982,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:112",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:126",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:136",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:17",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:23",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:26",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:41",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:61",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:76",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":981,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["contempl",{"_index":1383,"title":{},"body":{"injectables/SettingsService.html":{}}}],["content",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1342,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1719,"title":{},"body":{"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["cours",{"_index":73,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{}}}],["course.course_nam",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":888,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{}}}],["course.id",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":890,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1617,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1896,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursecod",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["coursenam",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":867,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["courseresult",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":191,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1101,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1102,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesobj",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursetabscompon",{"_index":193,"title":{"components/CourseTabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursetabsmodul",{"_index":228,"title":{"modules/CourseTabsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules.html":{},"overview.html":{}}}],["course}",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["cover",{"_index":1761,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1621,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1932,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1157,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1835,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1840,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dancer",{"_index":1409,"title":{},"body":{"injectables/SettingsService.html":{}}}],["daniel\\'d",{"_index":1485,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dank",{"_index":1474,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dark",{"_index":1349,"title":{},"body":{"injectables/SettingsService.html":{}}}],["darken",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":957,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["data.st",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1197,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1905,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["datatyp",{"_index":1938,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1953,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["de",{"_index":1391,"title":{},"body":{"injectables/SettingsService.html":{}}}],["decid",{"_index":1818,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":220,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["deploy",{"_index":1697,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["describ",{"_index":1717,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1822,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["desk",{"_index":1408,"title":{},"body":{"injectables/SettingsService.html":{}}}],["detail",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1557,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1060,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1061,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1059,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1062,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1063,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1058,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["diagnos",{"_index":1370,"title":{},"body":{"injectables/SettingsService.html":{}}}],["diagram",{"_index":1906,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["differ",{"_index":1826,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["direct",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1720,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":427,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["discover(canvasitem",{"_index":1850,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1819,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":415,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1543,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":400,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1721,"title":{},"body":{"index.html":{}}}],["div",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["divid",{"_index":1808,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["do",{"_index":1578,"title":{},"body":{"injectables/ToolService.html":{}}}],["doctor",{"_index":1434,"title":{},"body":{"injectables/SettingsService.html":{}}}],["document",{"_index":1622,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["document.getelementbyid(\"download",{"_index":1158,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1550,"title":{},"body":{"injectables/ToastService.html":{}}}],["doesn't",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["downloadissu",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["duck",{"_index":1402,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dure",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1574,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":889,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1544,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1546,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1547,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}}}],["earlier",{"_index":1893,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1946,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["easier",{"_index":1939,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["eceff1",{"_index":1359,"title":{},"body":{"injectables/SettingsService.html":{}}}],["edit",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1561,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":499,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":500,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":495,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:110",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:140",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":494,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":431,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["electr",{"_index":1453,"title":{},"body":{"injectables/SettingsService.html":{}}}],["element",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["elv",{"_index":1423,"title":{},"body":{"injectables/SettingsService.html":{}}}],["email",{"_index":1961,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["emit",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{}}}],["empti",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1872,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":174,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["encapsul",{"_index":1371,"title":{},"body":{"injectables/SettingsService.html":{}}}],["end",{"_index":1727,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1908,"title":{"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["englishconnect",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["enter",{"_index":1887,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["entifi",{"_index":1484,"title":{},"body":{"injectables/SettingsService.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["environ",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":195,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["essenti",{"_index":1082,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["etc",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["even",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["evict",{"_index":1390,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ex",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exactli",{"_index":1796,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exampl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exclud",{"_index":1801,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exist",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["explain",{"_index":1812,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["export",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["expos",{"_index":1956,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["express",{"_index":1670,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extern",{"_index":1966,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["facebook",{"_index":1786,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["fail",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1888,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["featur",{"_index":1764,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["feedback",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{}}}],["feel",{"_index":1609,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1784,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1836,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1892,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":82,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase'",{"_index":1763,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["firebase.auth",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["firebase_wrapper.j",{"_index":1948,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firebasewrapp",{"_index":1951,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firebasewrapper.initializefirebas",{"_index":1954,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firefox",{"_index":1386,"title":{},"body":{"injectables/SettingsService.html":{}}}],["firestor",{"_index":1765,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firestore'",{"_index":1955,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["first",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fishi",{"_index":1426,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fix",{"_index":426,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix(canvasitem",{"_index":1862,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1910,"title":{},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1829,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1861,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1883,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":428,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1967,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["flatissuedetail",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flex",{"_index":1443,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flip",{"_index":1374,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flow",{"_index":1911,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["fluffi",{"_index":1469,"title":{},"body":{"injectables/SettingsService.html":{}}}],["folder",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1705,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["for/fix",{"_index":1817,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["form",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1294,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1286,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1301,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1481,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1804,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["framework",{"_index":1695,"title":{},"body":{"index.html":{}}}],["freaki",{"_index":1460,"title":{},"body":{"injectables/SettingsService.html":{}}}],["freestyl",{"_index":1457,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fresh",{"_index":1472,"title":{},"body":{"injectables/SettingsService.html":{}}}],["frog",{"_index":1412,"title":{},"body":{"injectables/SettingsService.html":{}}}],["front",{"_index":1726,"title":{},"body":{"index.html":{}}}],["full",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{},"index.html":{}}}],["fullbuild",{"_index":1729,"title":{},"body":{"index.html":{}}}],["function",{"_index":74,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1976,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1923,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1313,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":707,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":868,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(cours",{"_index":877,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["getissueitem",{"_index":1073,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getrandom(arr",{"_index":1501,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getselectedcategori",{"_index":1588,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1592,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1708,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["github",{"_index":1689,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["given",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["gmail",{"_index":1928,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["goe",{"_index":1545,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["gradiat",{"_index":1458,"title":{},"body":{"injectables/SettingsService.html":{}}}],["greater",{"_index":1789,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["green",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1296,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1299,"title":{},"body":{"classes/OptionModel.html":{}}}],["guid",{"_index":1766,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["hacker",{"_index":1437,"title":{},"body":{"injectables/SettingsService.html":{}}}],["handl",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hate",{"_index":1363,"title":{},"body":{"injectables/SettingsService.html":{}}}],["have",{"_index":1795,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["header",{"_index":1152,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1284,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1837,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1882,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{}}}],["highlight",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hippo",{"_index":1441,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hobbit",{"_index":1421,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":229,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["horcrux",{"_index":1392,"title":{},"body":{"injectables/SettingsService.html":{}}}],["host",{"_index":1937,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlinputel",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["icon",{"_index":401,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1703,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1860,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["identifi",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idtoken",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1863,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["ignor",{"_index":1368,"title":{},"body":{"injectables/SettingsService.html":{}}}],["imag",{"_index":1866,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1878,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1871,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1875,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1870,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1869,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1876,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["import",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["in...you",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["incomprehens",{"_index":1490,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inconceiv",{"_index":1488,"title":{},"body":{"injectables/SettingsService.html":{}}}],["increment",{"_index":1971,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["incrementcounts(categori",{"_index":1970,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["index",{"_index":287,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["infinit",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initi",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initializefirebas",{"_index":1963,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["inject",{"_index":279,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('highlight",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('index",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('sid",{"_index":1530,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1528,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1527,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1529,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1707,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instance'",{"_index":1768,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instanceof",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1925,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["instruct",{"_index":1790,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instructor",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructur",{"_index":1694,"title":{},"body":{"index.html":{}}}],["integr",{"_index":496,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":396,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["interfer",{"_index":1798,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["intern",{"_index":1965,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["internet",{"_index":1384,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inumer",{"_index":1480,"title":{},"body":{"injectables/SettingsService.html":{}}}],["invert_color",{"_index":893,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["iron",{"_index":1806,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["isad",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":144,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1877,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":198,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecard}",{"_index":1077,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuecontainercompon",{"_index":200,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1064,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":202,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":452,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1856,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1071,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":204,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1072,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":206,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issue}",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["italian",{"_index":1462,"title":{},"body":{"injectables/SettingsService.html":{}}}],["item",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1572,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["janki",{"_index":1475,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jedi",{"_index":1417,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jetpack",{"_index":1432,"title":{},"body":{"injectables/SettingsService.html":{}}}],["js",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1941,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1542,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1915,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1782,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{}}}],["katana/server/node_tool",{"_index":1890,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1894,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1902,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["kick",{"_index":1377,"title":{},"body":{"injectables/SettingsService.html":{}}}],["laser",{"_index":1396,"title":{},"body":{"injectables/SettingsService.html":{}}}],["last",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1575,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1728,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1848,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"dependencies.html":{}}}],["learn",{"_index":1692,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["leav",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["left",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["less",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["letter",{"_index":1824,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1907,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/server-architecture.html":{}}}],["levit",{"_index":1394,"title":{},"body":{"injectables/SettingsService.html":{}}}],["liger",{"_index":1440,"title":{},"body":{"injectables/SettingsService.html":{}}}],["light",{"_index":1350,"title":{},"body":{"injectables/SettingsService.html":{}}}],["lighten",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["lightsab",{"_index":1430,"title":{},"body":{"injectables/SettingsService.html":{}}}],["limegreen",{"_index":1364,"title":{},"body":{"injectables/SettingsService.html":{}}}],["link",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1736,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1555,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1069,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1070,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1068,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":1075,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:25",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:37",{"_index":1078,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":1076,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1067,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["littl",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{}}}],["load",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueListComponent.html":{}}}],["loc",{"_index":1603,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1605,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1607,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1730,"title":{},"body":{"index.html":{}}}],["localstorage.katanathem",{"_index":1498,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage['katanathem",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage[key",{"_index":1510,"title":{},"body":{"injectables/SettingsService.html":{}}}],["locat",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["log",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["logic",{"_index":1845,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["long",{"_index":1969,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["look",{"_index":1586,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1926,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1944,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["magenta",{"_index":1366,"title":{},"body":{"injectables/SettingsService.html":{}}}],["magic",{"_index":1579,"title":{},"body":{"injectables/ToolService.html":{}}}],["maiar",{"_index":1420,"title":{},"body":{"injectables/SettingsService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":759,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1704,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1699,"title":{},"body":{"index.html":{}}}],["major",{"_index":1844,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["manual",{"_index":1934,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1698,"title":{},"body":{"index.html":{}}}],["massiv",{"_index":1084,"title":{},"body":{"components/IssueListComponent.html":{}}}],["master",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":882,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":909,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["math.floor(math.random",{"_index":1502,"title":{},"body":{"injectables/SettingsService.html":{}}}],["matter",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1097,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["medit",{"_index":1395,"title":{},"body":{"injectables/SettingsService.html":{}}}],["meet",{"_index":1854,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1901,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["middlewar",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1858,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{}}}],["mirror",{"_index":1483,"title":{},"body":{"injectables/SettingsService.html":{}}}],["miscellan",{"_index":1744,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1874,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mix",{"_index":1445,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modal",{"_index":875,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":865,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1305,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":218,"title":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1880,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moist",{"_index":1452,"title":{},"body":{"injectables/SettingsService.html":{}}}],["more",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["more_vert",{"_index":1166,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1780,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["n",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["nav",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1558,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navi",{"_index":896,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["near",{"_index":1081,"title":{},"body":{"components/IssueListComponent.html":{}}}],["need",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["needl",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1886,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1839,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1759,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newthem",{"_index":1351,"title":{},"body":{"injectables/SettingsService.html":{}}}],["next",{"_index":1656,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ng",{"_index":1718,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["ninja",{"_index":1405,"title":{},"body":{"injectables/SettingsService.html":{}}}],["node",{"_index":999,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["node.j",{"_index":1775,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["node_tool_template.j",{"_index":1891,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1711,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1898,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1897,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1899,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1929,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":1964,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["normal",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["normi",{"_index":1492,"title":{},"body":{"injectables/SettingsService.html":{}}}],["nosql",{"_index":1787,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":900,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["noth",{"_index":1947,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["notif",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1532,"title":{},"body":{"injectables/ToastService.html":{}}}],["now",{"_index":1783,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["npm",{"_index":1713,"title":{},"body":{"index.html":{}}}],["null",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["numer",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.themes[newtheme]).foreach(key",{"_index":1499,"title":{},"body":{"injectables/SettingsService.html":{}}}],["object:const",{"_index":1895,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1758,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["octet/stream",{"_index":1161,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":498,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1074,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1306,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["op",{"_index":1496,"title":{},"body":{"injectables/SettingsService.html":{}}}],["open",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1310,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":869,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["opencourse(courseid",{"_index":879,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["openmod",{"_index":870,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["oper",{"_index":1388,"title":{},"body":{"injectables/SettingsService.html":{}}}],["opportun",{"_index":1922,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1298,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":411,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1873,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":208,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["other",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1832,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["output",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{}}}],["outsid",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overview",{"_index":1740,"title":{"overview.html":{},"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1980,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1640,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["page",{"_index":145,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":916,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":912,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:15",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:25",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:33",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:23",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:31",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":493,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":938,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1512,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1143,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["palpat",{"_index":1450,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pancak",{"_index":1447,"title":{},"body":{"injectables/SettingsService.html":{}}}],["panorama_fish_ey",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["parser",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["peopl",{"_index":1410,"title":{},"body":{"injectables/SettingsService.html":{}}}],["persist",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1962,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["phrase",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1515,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["pink",{"_index":1468,"title":{},"body":{"injectables/SettingsService.html":{}}}],["place",{"_index":1610,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["point",{"_index":1576,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/server-architecture.html":{}}}],["poor",{"_index":1083,"title":{},"body":{"components/IssueListComponent.html":{}}}],["popul",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1732,"title":{},"body":{"index.html":{}}}],["posit",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1859,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1497,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prank",{"_index":1403,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pre",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pro",{"_index":1399,"title":{},"body":{"injectables/SettingsService.html":{}}}],["process",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingadject",{"_index":1449,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingmessag",{"_index":1566,"title":{},"body":{"injectables/ToolService.html":{}}}],["processingnoun",{"_index":1404,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingverb",{"_index":1369,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processor",{"_index":1406,"title":{},"body":{"injectables/SettingsService.html":{}}}],["prod",{"_index":1379,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{}}}],["produc",{"_index":1376,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1465,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["programm",{"_index":1436,"title":{},"body":{"injectables/SettingsService.html":{}}}],["project",{"_index":1773,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1950,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["properti",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["provid",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pull",{"_index":1815,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["purifi",{"_index":1397,"title":{},"body":{"injectables/SettingsService.html":{}}}],["purpos",{"_index":399,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["put",{"_index":1293,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1931,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["quiz",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["rabbit",{"_index":1439,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radiat",{"_index":1459,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radic",{"_index":1476,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ran",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["randi",{"_index":1493,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ranger",{"_index":1422,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rate",{"_index":1400,"title":{},"body":{"injectables/SettingsService.html":{}}}],["raven",{"_index":1478,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rc.2",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["rc.8.1",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1080,"title":{},"body":{"components/IssueListComponent.html":{}}}],["reactiv",{"_index":1285,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":915,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{}}}],["recommend",{"_index":1690,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["red",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["referenc",{"_index":1852,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1978,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1912,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.highlight",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1865,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["releas",{"_index":901,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["reload",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removecours",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["renam",{"_index":1778,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["render",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1710,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["repres",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('./firebase_wrapper.j",{"_index":1952,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('cheerio",{"_index":1867,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resid",{"_index":1809,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["resolv",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["respect",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["rest",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["revers",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1977,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1523,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1903,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["rubber",{"_index":1401,"title":{},"body":{"injectables/SettingsService.html":{}}}],["run",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["salti",{"_index":1495,"title":{},"body":{"injectables/SettingsService.html":{}}}],["same",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sandbox",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sassi",{"_index":1464,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sauci",{"_index":1463,"title":{},"body":{"injectables/SettingsService.html":{}}}],["save",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["saxophon",{"_index":1429,"title":{},"body":{"injectables/SettingsService.html":{}}}],["scatter_plot",{"_index":897,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["screen",{"_index":1581,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1079,"title":{},"body":{"components/IssueListComponent.html":{},"dependencies.html":{}}}],["scrub",{"_index":1494,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sdk",{"_index":1774,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["sea",{"_index":1446,"title":{},"body":{"injectables/SettingsService.html":{}}}],["search",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section",{"_index":1830,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1821,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1587,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1597,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1567,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1591,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1600,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":910,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{}}}],["selection.component.css",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:127",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1562,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":673,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:91",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sentiment_very_dissatisfi",{"_index":1104,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1949,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["server",{"_index":78,"title":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server.j",{"_index":1722,"title":{},"body":{"index.html":{}}}],["server.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["server/node_tool",{"_index":1810,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["server/settings.json",{"_index":1733,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1791,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["serverdomain",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1958,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["servic",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1598,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1601,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":102,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setlocalstorage(key",{"_index":1511,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setselectedcategori",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcourse(cours",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["setselectedtool(tool",{"_index":1594,"title":{},"body":{"injectables/ToolService.html":{}}}],["setthem",{"_index":1345,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settheme(newthem",{"_index":1347,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settimeout",{"_index":1549,"title":{},"body":{"injectables/ToastService.html":{}}}],["settings.servic",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settings/opt",{"_index":1811,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["settingsservic",{"_index":36,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["settingsservice.buildprocessingmessag",{"_index":1619,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage('goofmessag",{"_index":899,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage(\\'goofmessag",{"_index":902,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.settheme(localstorage['katanathem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":1154,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["sever",{"_index":1921,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["shadowi",{"_index":1454,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sharp",{"_index":1479,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shazam",{"_index":1442,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shock",{"_index":1486,"title":{},"body":{"injectables/SettingsService.html":{}}}],["short",{"_index":1842,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":914,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1942,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1760,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["similiar",{"_index":1788,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["simpl",{"_index":1803,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1847,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sith",{"_index":1418,"title":{},"body":{"injectables/SettingsService.html":{}}}],["size",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["sketch",{"_index":1372,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketcher",{"_index":1415,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketchi",{"_index":1455,"title":{},"body":{"injectables/SettingsService.html":{}}}],["skip",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["slap",{"_index":1378,"title":{},"body":{"injectables/SettingsService.html":{}}}],["small",{"_index":1945,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["snippet",{"_index":1777,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["snowmen",{"_index":1448,"title":{},"body":{"injectables/SettingsService.html":{}}}],["socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1935,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["specifi",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1456,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spring",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["spudtast",{"_index":1473,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spunki",{"_index":1470,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/.../firebase.auth.t",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1283,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1290,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1291,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/cours",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":756,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:116",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:128",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:145",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:161",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:37",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:39",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:43",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:51",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:53",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:67",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:85",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:98",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":397,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/server.service.t",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/server.service.ts:119",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:203",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:22",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:27",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:297",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:60",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:65",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:90",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/settings.service.t",{"_index":1344,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/settings.service.ts:156",{"_index":1367,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:189",{"_index":1346,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:197",{"_index":1348,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/toast.service.t",{"_index":1531,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1534,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1538,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1536,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":492,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1563,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1573,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1577,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1580,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1585,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1584,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1570,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1571,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1582,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1589,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1590,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1593,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1595,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1569,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1918,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1927,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1234,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1968,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stat",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":210,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1519,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":1792,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stattitl",{"_index":1520,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1706,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["still",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["stop",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["storag",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["straightforward",{"_index":1889,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["structur",{"_index":1735,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stutter",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["style",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1315,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["submodul",{"_index":1805,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["subscrib",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1930,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["suit",{"_index":1924,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["superstiti",{"_index":1461,"title":{},"body":{"injectables/SettingsService.html":{}}}],["support",{"_index":1737,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sushi",{"_index":1425,"title":{},"body":{"injectables/SettingsService.html":{}}}],["suspici",{"_index":1943,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1738,"title":{},"body":{"modules.html":{}}}],["swordfish",{"_index":1414,"title":{},"body":{"injectables/SettingsService.html":{}}}],["system",{"_index":1693,"title":{},"body":{"index.html":{}}}],["tab",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["tabs'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tabs.compon",{"_index":911,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs.component.css",{"_index":863,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.html",{"_index":864,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.t",{"_index":861,"title":{},"body":{"components/CourseTabsComponent.html":{},"coverage.html":{}}}],["tabs.component.ts:19",{"_index":872,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":876,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":881,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:47",{"_index":873,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:55",{"_index":880,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:65",{"_index":878,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.module.t",{"_index":906,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs/cours",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["tab}",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1103,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1292,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1312,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tape",{"_index":1444,"title":{},"body":{"injectables/SettingsService.html":{}}}],["team",{"_index":1696,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1913,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1714,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1917,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1712,"title":{},"body":{"index.html":{}}}],["text",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1823,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["that'",{"_index":1781,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["that\\'",{"_index":1477,"title":{},"body":{"injectables/SettingsService.html":{}}}],["the_tool_nam",{"_index":1827,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["theme",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["then((cours",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":350,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":758,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["think",{"_index":1382,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this._selectedcategori",{"_index":1596,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1599,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1608,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1094,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1616,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":884,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcours",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1100,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1065,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1066,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.getsession().getvalu",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('maxlin",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('minlin",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.getrandom(this.processingadject",{"_index":1507,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingnoun",{"_index":1508,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingverb",{"_index":1506,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettoollist",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.highlight",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.http.get(`/api/tool",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html['updatedhtml",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1095,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1099,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1098,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1096,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":885,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1295,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1297,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1282,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.themes[newtheme][key",{"_index":1500,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.toastservice.toasterror(err",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1606,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1940,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1833,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["tickl",{"_index":1467,"title":{},"body":{"injectables/SettingsService.html":{}}}],["time",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1521,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1548,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1535,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1533,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1537,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["togroup",{"_index":1288,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1979,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tomb",{"_index":1407,"title":{},"body":{"injectables/SettingsService.html":{}}}],["tool",{"_index":48,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tool'",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool.icon",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1602,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1793,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolcategori",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1959,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolpagemodul",{"_index":230,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":213,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1620,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":214,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1568,"title":{},"body":{"injectables/ToolService.html":{}}}],["toothpast",{"_index":1471,"title":{},"body":{"injectables/SettingsService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["total",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["trim",{"_index":1381,"title":{},"body":{"injectables/SettingsService.html":{}}}],["true",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["turn",{"_index":898,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["two",{"_index":1843,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1541,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1723,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["unbeliev",{"_index":1487,"title":{},"body":{"injectables/SettingsService.html":{}}}],["undefin",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["underscor",{"_index":1825,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["undul",{"_index":1451,"title":{},"body":{"injectables/SettingsService.html":{}}}],["unexpectedli",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["unicorn",{"_index":1427,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uniqu",{"_index":1834,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["univers",{"_index":1702,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1933,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":535,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["urukai",{"_index":1424,"title":{},"body":{"injectables/SettingsService.html":{}}}],["us",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["user_log",{"_index":1794,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1960,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["valid",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1300,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["var",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1631,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":757,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{}}}],["veri",{"_index":1802,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifi",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifynewus",{"_index":1975,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["vermillion",{"_index":1466,"title":{},"body":{"injectables/SettingsService.html":{}}}],["via",{"_index":760,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["view'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1303,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1304,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1302,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:14",{"_index":1611,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:22",{"_index":1613,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:23",{"_index":1615,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:24",{"_index":1614,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:29",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:30",{"_index":1612,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:33",{"_index":1317,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1307,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1318,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1316,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1308,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1309,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1311,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('codeeditor",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('editor",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["virtual",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["visibl",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wait",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1885,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatchamacallit",{"_index":1416,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whatev",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1731,"title":{},"body":{"index.html":{}}}],["white",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whiteboard",{"_index":1433,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whitespac",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1604,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.port",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":886,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1162,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["wizard",{"_index":1419,"title":{},"body":{"injectables/SettingsService.html":{}}}],["won't",{"_index":1797,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["word",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1909,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1659,"title":{"additional-documentation/firebase/firebase-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wrapper'",{"_index":1957,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["written",{"_index":1974,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["wyvern",{"_index":1411,"title":{},"body":{"injectables/SettingsService.html":{}}}],["xylophon",{"_index":1428,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yahoo",{"_index":1385,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yellow",{"_index":1365,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1838,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["you'll",{"_index":1769,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["you'r",{"_index":1914,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1701,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, settingsService: SettingsService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nBeing used in app.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './server.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\nimport { SettingsService } from './settings.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Being used in app.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private settingsService: SettingsService,\n        private authGuardService: AuthGuardService) {\n\n        // Set the theme\n        if (localStorage['katanaTheme']) {\n            settingsService.setTheme(localStorage['katanaTheme'])\n        }\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                // document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    // document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    // document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CourseTabsModule\n                            \n                            \n                                    HomePageModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { CourseTabsModule } from './course-tabs/course-tabs.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        CourseTabsModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        Builds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Builds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:25\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\n\n/**\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n */\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /**\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /**\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     */\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Being used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Being used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlight\n                            \n                            \n                                issue\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor)\ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue the code editor is displaying code for.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:44\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:39\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can\ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:56\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is\ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\nimport { Issue } from '../../interfaces';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /**\n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor)\n     * can also be passed in.\n     */\n    @Input('highlight') highlight: string;\n\n    /**\n     * The issue the code editor is displaying code for.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * Element reference to the editor div itself so we can\n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is\n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        const EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        const searchBox = window['ace'].require('ace/searchbox');\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            const code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption('minLines', 10);\n        this.editor.setOption('maxLines', 30);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        this.editor.on('change', () => {\n            if (this.issue.status === 'approved') {\n                this.issue.status = 'untouched';\n            }\n            this.issue.html['updatedHtml'] = this.editor.getSession().getValue();\n        });\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.highlight) {\n            // Converts the provided search phrase to a RegExp\n            const reg = new RegExp(this.highlight, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption('maxLines', this.viewExpanded ? 30 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../server.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter and make everything lowercase\n            const searchPhrase = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n            console.log(searchPhrase);\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchPhrase: searchPhrase,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you\n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchPhrase === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        } else {\n            /* If the string in the search box is less than three characters\n            then stop searching and set the returned course results to an empty array\n            instead of leaving the last results in the table */\n            this.searching = false;\n            this.courseResults = [];\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                const name1 = a[param].toLowerCase();\n                const name2 = b[param].toLowerCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n            \n            Development\n            Online\n              Sandbox\n              Pathway -->\n            EnglishConnect\n            All\n          \n        \n        Term\n          \n            \n            Fall\n            Winter\n            Spring -->\n            Master Courses\n            Default Term\n            All\n          \n        \n        Blueprint\n          \n            \n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search Term\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                                  Development            Online              Sandbox              Pathway -->            EnglishConnect            All                          Term                                  Fall            Winter            Spring -->            Master Courses            Default Term            All                          Blueprint                                  True            False            All                          Search By                      Instructor            Course                                    Search Term                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:161\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:37\n                            \n                        \n\n                \n                    \n                        Emits when a the selected course has changed. Used by lazy-loading components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:39\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen = false;\n\n    /**\n     * Emits when a the selected course has changed. Used by lazy-loading components.\n     */\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseTabsComponent.html":{"url":"components/CourseTabsComponent.html","title":"component - CourseTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-tabs/course-tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The Course Tabs bar, along with the action buttons (settings, feedback, etc.). \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-tabs\n            \n\n            \n                styleUrls\n                course-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                courseOverlay\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for courses selected by the user.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for tools available on the server.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Toggles the course overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(course: , status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe course to count issues in\n\n\n                                                        \n                                                \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse(courseId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The Canvas ID of the course\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                        Used to open and close the modal for feedback.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { SettingsService } from '../../settings.service';\nimport { KatanaService } from '../../server.service';\n\n/** The Course Tabs bar, along with the action buttons (settings, feedback, etc.). */\n@Component({\n    selector: 'app-course-tabs',\n    templateUrl: './course-tabs.component.html',\n    styleUrls: ['./course-tabs.component.css']\n})\nexport class CourseTabsComponent {\n\n    /**\n     * Used to open and close the modal for feedback.\n     */\n    modalActions = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and functionality for courses selected by the user.\n     * @param toolService Provides information and functionality for tools available on the server.\n     */\n    constructor(private courseService: CourseService,\n        private toolService: ToolService,\n        private settingsService: SettingsService) { }\n\n    /**\n     * Toggles the course overlay open and closed.\n     */\n    courseOverlay() {\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n    }\n\n    /**\n     * Opens the feedback modal.\n     */\n    openModal() {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the feedback modal.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {number} courseId The Canvas ID of the course\n     */\n    openCourse(courseId: number): void {\n        window.open('https://byui.instructure.com/courses/' + courseId, '_blank');\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {Course} course - The course to count issues in\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(course, status): number | string {\n        if (!course.issueItems) return 0;\n        if (course.error) return 'E';\n        return course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n\n            \n                {{course.course_code}}\n                 0\" class=\"issue-badge\">{{getIssueCount(course, 'untouched')}}\n            \n\n            \n                \n                    open_in_new\n                \n                \n                    clear\n                \n            \n        \n        \n\n        \n        \n\n            \n            \n                edit\n            \n\n            \n            \n                feedback\n            \n\n            \n            \n                settings\n                \n                \n                    \n                        \n                            invert_colors\n                            Classic Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Charcoal Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Navy Theme\n                        \n                    \n                    \n                    \n                        \n                            scatter_plot\n                            Turn Loading Messages {{settingsService.checkLocalStorage('goofMessages') ? 'Off' : 'On'}}\n                        \n                    \n                    \n                        \n                            notes\n                            Release Notes\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n            Loading...\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{course.course_code}}                 0\" class=\"issue-badge\">{{getIssueCount(course, \\'untouched\\')}}                                                            open_in_new                                                    clear                                                                                                    edit                                                    feedback                                                    settings                                                                                                        invert_colors                            Classic Theme                                                                                                                    invert_colors                            Charcoal Theme                                                                                                                    invert_colors                            Navy Theme                                                                                                                                        scatter_plot                            Turn Loading Messages {{settingsService.checkLocalStorage(\\'goofMessages\\') ? \\'Off\\' : \\'On\\'}}                                                                                                                    notes                            Release Notes                                                                                                                        Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseTabsModule.html":{"url":"modules/CourseTabsModule.html","title":"module - CourseTabsModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseTabsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/course-tabs/course-tabs.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseTabsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseTabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseTabsComponent } from './course-tabs/course-tabs.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseTabsComponent\n    ],\n    declarations: [\n        CourseSelectionComponent,\n        CourseTabsComponent\n    ]\n})\nexport class CourseTabsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n    \n        Description\n    \n    \n        An error page to display various client-side errors, and errors received from the server. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Being used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../server.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n/** An error page to display various client-side errors, and errors received from the server. */\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Being used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeEditor\n                            \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display. \n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is initialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codeEditor:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        A reference to the code editor element for the respective issue. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /** The issue attached to the display. */\n    @Input('issue') issue: Issue;\n\n    /** The index of the item's issues array the issue is at. */\n    @Input('index') index: number;\n\n    /** Element reference to the card containing details about the issue. */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /** A reference to the code editor element for the respective issue. */\n    @ViewChild('codeEditor') codeEditor: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is initialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                const control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            };\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2';\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Provides IssueItems to load into the list as {@link IssueCard}s, based on the\nnumber allowed (issueItemCount).\n\n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\nload more IssueItems into the list. This is, essentially, lazy loading. It helps prevent\npoor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                        The number of IssueItems currently loaded in the list. Used for lazy loading. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:16\n                            \n                        \n\n                \n                    \n                        Element reference to the issue list. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    /** Element reference to the issue list. */\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    /** The number of {@link IssueItem}s currently loaded in the list. Used for lazy loading. */\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    /** \n     * Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\n     * load more {@link IssueItem}s into the list. This is, essentially, lazy loading. It helps prevent\n     * poor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n     */\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    /** \n     * Provides {@link IssueItem}s to load into the list as {@link IssueCard}s, based on the\n     * number allowed (issueItemCount).\n     */\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../server.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/server.service.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:297\n                            \n                        \n\n\n                \n                    \n                            Handles errors for this service. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Retrieves a list of courses from Canvas.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:27\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:22\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:60\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\nimport { resolve } from 'url';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /**\n     * Retrieves a list of courses from Canvas.\n     */\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        const data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /** Handles errors for this service. */\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../server.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        const options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        const categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    \n        Click here to Add Courses\n    \n    arrow_forward\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!                Click here to Add Courses        arrow_forward'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles user settings, such as the theme.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.service.ts:189\n                            \n                        \n\n                \n                    \n                            Constructor \n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(newTheme: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/settings.service.ts:197\n                            \n                        \n\n\n                \n                    \n                            Toggles the theme between dark and light.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTheme\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.service.ts:156\n                            \n                        \n\n                \n                    \n                        The themes that can be set. Set by using the setTheme() method on this service.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Handles user settings, such as the theme.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    /** @ignore */\n    processingVerbs = [\n        'Diagnosing',\n        'Encapsulating',\n        'Sketching',\n        'Airating',\n        'Flipping',\n        'Calculating',\n        'Producing',\n        'Kicking',\n        'Slapping',\n        'Prodding',\n        'Aging',\n        'Trimming',\n        'Typing',\n        'Thinking',\n        'Contemplating',\n        'Ordering',\n        'Internetting',\n        'Googling',\n        'Yahooing',\n        'Firefoxing',\n        'Chroming',\n        'Operating',\n        'Candidating',\n        'Evicting',\n        'De-Horcruxing',\n        'Charming',\n        'Levitating',\n        'Meditating with',\n        'Lasering',\n        'Purifying',\n        'Burninating',\n        'Pro-rating',\n        'Rubber ducking',\n        'Pranking'\n    ];\n\n    /** @ignore */\n    processingNouns = [\n        'ninjas',\n        'processors',\n        'tombs',\n        'desks',\n        'files',\n        'dancers',\n        'people',\n        'wyverns',\n        'frogs',\n        'developers',\n        'pages',\n        'discussions',\n        'choreography',\n        'swordfish',\n        'sketchers',\n        'whatchamacallits',\n        'jedi',\n        'sith',\n        'wizards',\n        'maiar',\n        'hobbits',\n        'rangers',\n        'elves',\n        'urukai',\n        'rubber ducks',\n        'sushi',\n        'fishies',\n        'unicorns',\n        'xylophones',\n        'saxophones',\n        'lightsabers',\n        'blasters',\n        'jetpacks',\n        'whiteboards',\n        'doctors',\n        'chemists',\n        'programmers',\n        'hackers',\n        'bananas',\n        'rabbits',\n        'ligers',\n        'hippos',\n        'shazams',\n        'flex tape',\n        'mix tapes',\n        'sea pancakes',\n        'snowmen',\n        'katanas'\n    ];\n\n    /** @ignore */\n    processingAdjectives = [\n        'palpatating',\n        'undulating',\n        'moist',\n        'electrical',\n        'shadowy',\n        'sketchy',\n        'spinning',\n        'freestyling',\n        'gradiating',\n        'radiating',\n        'freaky',\n        'superstitious',\n        'italian',\n        'saucy',\n        'sassy',\n        'productive',\n        'general',\n        'vermillion',\n        'tickle-me-pink',\n        'fluffy',\n        'spunky',\n        'toothpaste-fresh',\n        'spudtastic',\n        'dank',\n        'janky',\n        'radical',\n        'wizard',\n        'that\\'s-so-raven',\n        'sharp',\n        'inumerable',\n        'fresh',\n        'forward',\n        'backward',\n        'mirrored',\n        'entifiable',\n        'Daniel\\'d',\n        'shocked',\n        'unbelievable',\n        'inconceivable',\n        'conceivable',\n        'incomprehensible',\n        'comprehensible',\n        'normie',\n        'randy',\n        'scrub',\n        'salty',\n        'OP',\n        'practical',\n    ];\n\n    /** \n     * The themes that can be set. Set by using the `setTheme()` method on this service.\n     */\n    themes = {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    }\n\n    /** Constructor */\n    constructor() { }\n\n    /**\n     * Toggles the theme between dark and light.\n     */\n    setTheme(newTheme) {\n        localStorage.katanaTheme = newTheme;\n        Object.keys(this.themes[newTheme]).forEach(key => {\n            document.documentElement.style.setProperty(`--${key}`, this.themes[newTheme][key]);\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    getRandom(arr) {\n        let randy = Math.floor(Math.random() * arr.length);\n        return arr[randy];\n    }\n\n    /**\n     * @ignore\n     */\n    buildProcessingMessage() {\n        return `${this.getRandom(this.processingVerbs)} ${this.getRandom(this.processingAdjectives)} ${this.getRandom(this.processingNouns)}...`;\n    }\n\n    /**\n     * @ignore\n     */\n    checkLocalStorage(key) {\n        return localStorage[key] === 'true';\n    }\n\n    /**\n     * @ignore\n     */\n    setLocalStorage(key) {\n        localStorage[key] = localStorage[key] === 'true' ? 'false' : 'true';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                settingsService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides this component with access to user settings.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:22\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settingsService:     SettingsService\n\n                    \n                \n                    \n                        \n                            Type :     SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Provides this component with access to user settings.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { SettingsService } from '../../settings.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param settingsService Provides this component with access to user settings.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public settingsService: SettingsService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{settingsService.checkLocalStorage('goofMessages') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{settingsService.checkLocalStorage(\\'goofMessages\\') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-tabs/course-tabs.component.ts\n            \n            \n                component\n            \n            \n                CourseTabsComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/server.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/settings.service.ts\n            \n            \n                injectable\n            \n            \n                SettingsService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular-lazy-for : ^1.1.5\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-infinite-scroll : ^0.3.5\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-virtual-scroll : ^0.3.4\n        \n            angularfire2 : ^5.0.0-rc.8.1-next\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.3.1\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nIf you are on Github, it is recommended you view the full documentation HERE.\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not built by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the Katana repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nRun server.js with Node however you would like (typically with npm start)\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nDocumentation\nAdditional Setup\nSet up a Node Tool\nSet up Firebase\nEnabling Accounts on Firebase\nClient Architecture (Angular)\nAngular Structure Documentation \nServer Architecture (Express)\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseTabsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting Up Firebase\nKatana uses three of Firebase's features: Authentication, Database (firestore), and Functions. This will guide you through settings up all three on a brand new instance. If you already have an instance set up, but need to set up your instance's Firebase service account key, you'll just need to generate a new private key.\nFirebase Authentication\nIn order for the server to be able to authenticate each request that is sent to it (i.e. to run a tool), it needs to have access to a \"Service Account.\" This is essentially a developer key, but for firebase. It just allows an application to act as an admin on Firebase without an actual account.\nGenerate Private Key\nTo create the key for the service account:\n\nGo to the Firebase Console and navigate to the Katana project\nClick the \"Settings\" icon next to the \"Project Overview\" button at the top left\nSelect \"Project Settings\"\nSelect the \"Service accounts\" tab\nMake sure \"Firebase Admin SDK\" is selected, and that \"Node.js\" is selected as the Admin SDK configuration snippet\nClick \"Generate new private key\" at the bottom (this will download a file)\nRename the downloaded file to auth.json and move it into the server directory in your instance of Katana\nThat's it! Katana's server will now be able to integrate with your instance of Firebase\n\nIntegrating Firebase by creating a private key, as described above, will complete the needed steps for setting up authentication, but there are a few things to be aware of. Currently:\n\nKatana depends entirely on Google accounts. Users cannot create new accounts, use Facebook, or other means to log in.\n\nFirebase Database\nKatana uses Firestore. It is a NoSQL database, similiar to Firebase Database, but with greater functionality. It is currently used just to store logs.\nFollow Firebase's Instructions to set up your instance of Firestore. After that, you will need to create these collections:\n\nserver_logs\nstatistics\ntool_logs\nuser_logs\n\nThese are identified by name by Katana, so having these names match exactly is important. Additional collections can be added as needed - they won't interfere.\nFirebase Functions\nFirebase Functions is a feature that allows you to deploy event listeners that fire on certain database actions. It is entirely backend. Currently, its only purpose is to verify that the user is using a Google BYUI account (\"@byui.edu\"). This can be adjusted for any instance, or entirely excluded. \nDeploying Firebase Functions is very simple. The instructions can be found here.\nYou may need to create a git repository or a submodule. I would recommend a submodule (which is currently not being used, ironically).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid accounts added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture.html":{"url":"additional-documentation/server-architecture.html","title":"additional-page - Server Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Architecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/server-endpoints.html":{"url":"additional-documentation/server-architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/server-architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/data-flow-diagram.html":{"url":"additional-documentation/server-architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/high-level-overview.html":{"url":"additional-documentation/server-architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-wrapper.html":{"url":"additional-documentation/firebase/firebase-wrapper.html","title":"additional-page - Firebase Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Wrapper\nThe Firebase Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firebase_wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firebaseWrapper = require('./firebase_wrapper.js');\nconst db = firebaseWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nThese public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\nincrementCounts(category, statistic, count)\ncategory {string} statistic {string} count {number}\nvoid\nUsed to increment counts saved under statistics in Firestore.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
