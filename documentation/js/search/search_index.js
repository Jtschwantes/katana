var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.496,1,1.138]],["body/components/AppComponent.html",[0,0.792,1,1.587,2,0.39,3,0.39,4,0.973,5,1.021,6,1.021,7,0.302,8,2.576,9,0.568,10,4.361,11,3.345,12,1.919,13,3.044,14,4.361,15,3.749,16,2.028,17,0.967,18,3.084,19,3.345,20,3.345,21,1.021,22,2.496,23,2.377,24,2.603,25,1.486,26,4.361,27,1.486,28,5.999,29,1.252,30,2.299,31,3.602,32,2.256,33,3.261,34,2.622,35,4.256,36,3.857,37,3.464,38,0.73,39,2.997,40,3.148,41,4.361,42,3.345,43,2.432,44,4.419,45,2.032,46,1.856,47,3.749,48,0.66,49,1.131,50,2.79,51,3.749,52,4.361,53,2.603,54,2.911,55,2.603,56,3.069,57,2.282,58,4.361,59,3.749,60,2.432,61,2.603,62,1.513,63,0.73,64,0.019,65,0.751,66,0.438,67,0.637,68,0.721,69,1.444,70,1.746,71,2.125,72,1.687,73,1.145,74,2.134,75,2.432,76,1.561,77,2.432,78,0.964,79,1.062,80,3.345,81,3.749,82,1.169,83,2.282,84,2.036,85,2.532,86,0.811,87,0.601,88,3.148,89,5.141,90,1.319,91,1.187,92,1.789,93,2.576,94,1.394,95,2.092,96,2.299,97,0.345,98,0.323,99,1.6,100,1.568,101,2.611,102,1.03,103,2.299,104,2.997,105,2.997,106,2.997,107,3.749,108,4.361,109,0.543,110,2.997,111,2.997,112,3.044,113,3.749,114,4.361,115,2.79,116,4.361,117,2.997,118,1.789,119,2.576,120,4.853,121,4.361,122,5.999,123,2.997,124,4.361,125,2.997,126,2.576,127,1.319,128,2.299,129,2.299,130,2.997,131,2.997,132,1.919,133,2.997,134,2.576,135,2.997,136,2.997,137,2.576,138,0.543,139,2.997,140,2.997,141,2.997,142,1.319,143,2.299,144,1.076,145,0.367,146,3.943,147,2.092,148,2.997,149,1.476,150,2.997,151,2.997,152,2.997,153,2.997,154,2.576,155,2.997,156,2.282,157,2.997,158,2.997,159,1.789,160,2.299,161,0.631,162,2.997,163,2.997,164,1.187,165,2.997,166,2.997,167,2.954,168,2.603,169,2.603,170,1.59,171,3.345,172,4.361,173,2.282,174,2.432,175,0.803,176,0.918,177,1.416,178,1.486,179,1.833,180,1.021,181,2.997,182,2.997,183,1.021,184,0.843,185,1.021,186,0.543,187,1.021,188,0.843,189,0.543,190,1.021,191,0.803,192,1.486,193,0.843,194,1.021,195,0.803,196,0.571,197,1.021,198,0.843,199,1.021,200,0.543,201,1.021,202,0.843,203,1.021,204,0.843,205,1.021,206,0.843,207,1.021,208,0.766,209,1.021,210,0.843,211,0.973,212,1.021,213,0.571,214,0.803,215,1.021,216,0.011,217,0.011]],["title/modules/AppModule.html",[218,1.603,219,2.826]],["body/modules/AppModule.html",[0,0.828,1,2.089,2,0.541,3,0.541,7,0.419,37,3.797,42,4.198,48,0.514,56,2.482,62,1.115,64,0.019,69,1.288,73,0.678,82,1.115,86,0.941,87,0.833,90,1.83,95,2.902,97,0.704,98,0.449,127,1.83,164,1.647,175,1.115,186,0.991,195,1.467,208,1.399,214,1.467,216,0.013,217,0.013,218,2.422,219,5.261,220,2.175,221,3.932,222,3.932,223,3.574,224,3.574,225,3.574,226,3.574,227,3.574,228,4.457,229,4.457,230,4.457,231,3.518,232,4.158,233,5.473,234,3.574,235,3.19,236,3.82,237,2.902,238,5.473,239,3.574,240,5.473,241,3.574,242,1.934,243,3.574,244,3.19,245,4.158,246,3.19,247,5.473,248,4.158,249,5.473,250,3.574,251,2.482,252,4.158,253,2.673,254,4.158,255,3.111,256,3.574,257,5.473,258,3.518,259,4.158,260,4.158,261,2.902,262,4.198,263,3.19,264,2.902,265,3.82,266,3.574,267,5.473,268,3.225,269,1.35,270,5.473,271,5.473,272,4.198,273,5.258,274,4.158,275,4.158,276,4.158,277,4.158,278,4.158]],["title/injectables/AuthGuardService.html",[37,2.118,279,1.524]],["body/injectables/AuthGuardService.html",[2,0.451,3,0.451,7,0.349,9,0.629,17,1.184,18,3.123,29,0.843,31,4.053,37,2.528,38,1.701,42,3.707,43,1.93,45,1.124,46,1.961,53,2.885,57,2.528,60,2.695,62,1.76,63,0.843,64,0.019,65,0.506,66,0.926,67,0.506,68,0.73,69,1.172,78,1.069,82,1.615,86,0.805,87,0.694,88,1.93,90,1.523,97,0.399,98,0.373,99,1.235,101,2.739,109,0.875,112,4.207,127,2.127,138,1.281,145,0.856,161,1.269,164,1.371,167,3.597,168,3.597,169,4.223,170,1.864,196,0.66,216,0.012,217,0.012,244,2.656,246,4.271,250,2.976,273,5.645,279,2.095,280,2.976,281,4.425,282,3.707,283,3.833,284,5.645,285,5.645,286,2.381,287,0.564,288,2.51,289,6.567,290,6.027,291,1.495,292,6.027,293,6.027,294,6.027,295,3.462,296,6.567,297,3.462,298,5.568,299,4.271,300,2.132,301,3.462,302,2.127,303,1.73,304,3.462,305,3.874,306,4.833,307,1.569,308,3.462,309,3.374,310,4.833,311,3.374,312,3.462,313,3.462,314,3.462,315,6.027,316,3.462,317,0.843,318,3.462,319,4.155,320,2.695,321,4.155,322,2.225,323,2.976,324,1.239,325,3.462,326,1.705,327,3.462,328,3.462,329,3.462,330,3.462,331,3.887,332,3.462,333,3.462,334,6.027,335,3.462,336,3.462,337,3.462,338,3.462,339,2.976,340,2.656,341,3.462,342,3.462,343,3.462,344,3.462,345,3.462,346,3.462,347,3.462,348,3.462,349,3.462,350,3.462,351,3.462]],["title/components/BreadcrumbsComponent.html",[0,0.496,184,1.138]],["body/components/BreadcrumbsComponent.html",[0,0.8,1,1.058,2,0.49,3,0.49,4,1.221,5,1.282,6,1.282,7,0.379,9,0.757,15,4.4,17,0.964,18,3.543,21,1.282,22,2.567,23,2.445,25,1.744,27,1.744,29,1.417,30,2.886,31,3.965,34,2.916,37,3.67,38,1.417,48,0.614,49,0.754,50,2.705,57,2.678,63,1.247,64,0.019,65,0.912,66,0.748,67,0.85,68,0.807,72,1.635,73,0.835,84,2.304,85,2.866,86,0.765,87,0.754,90,1.656,94,1.75,95,2.626,97,0.433,98,0.406,99,1.596,100,1.968,101,1.57,109,0.927,115,2.705,127,2.748,138,1.183,144,1.123,145,0.765,147,3.573,161,1.375,174,2.854,175,1.009,176,1.078,177,1.662,178,1.744,179,2.027,180,1.282,183,1.282,184,1.755,185,1.282,186,0.681,187,1.282,188,1.058,189,0.681,190,1.282,191,1.009,192,1.744,193,1.058,194,1.282,195,1.009,196,0.717,197,1.282,198,1.058,199,1.282,200,0.681,201,1.282,202,1.058,203,1.282,204,1.058,205,1.282,206,1.058,207,1.282,208,0.962,209,1.282,210,1.058,211,1.221,212,1.282,213,0.717,214,1.009,215,1.282,216,0.012,217,0.012,255,2.252,268,2.381,272,3.926,281,4.558,287,0.613,288,2.304,291,1.583,299,3.926,300,1.662,303,2.083,305,4.014,320,2.098,352,3.481,353,3.234,354,3.727,355,6.244,356,5.119,357,4.4,358,1.926,359,5.119,360,6.531,361,5.119,362,3.763,363,3.055,364,5.119,365,3.763,366,2.252,367,5.119,368,3.29,369,1.583,370,2.381,371,3.763,372,3.763,373,4.4,374,5.119]],["title/components/CategoriesComponent.html",[0,0.496,186,0.733]],["body/components/CategoriesComponent.html",[0,0.806,1,1.08,2,0.5,3,0.5,4,1.247,5,1.309,6,1.309,7,0.387,9,0.765,11,3.982,21,1.309,22,2.573,23,2.45,25,1.769,27,1.769,29,1.432,31,2.895,32,2.402,34,2.907,38,1.432,48,0.662,49,0.77,50,2.735,54,2.414,57,2.716,63,1.265,64,0.019,65,0.92,66,0.759,67,0.859,68,0.78,72,1.906,73,1.027,79,1.688,84,2.328,85,2.896,86,0.721,87,0.77,91,1.521,94,1.787,97,0.442,98,0.414,99,1.503,101,1.603,102,1.262,109,0.94,115,2.929,138,1.191,144,1.131,145,0.636,175,1.03,176,1.093,177,1.685,178,1.769,179,2.044,180,1.309,183,1.309,184,1.08,185,1.309,186,1.14,187,1.309,188,1.08,189,0.696,190,1.309,191,1.03,192,1.769,193,1.08,194,1.309,195,1.03,196,0.732,197,1.309,198,1.08,199,1.309,200,0.696,201,1.309,202,1.08,203,1.309,204,1.08,205,1.309,206,1.08,207,1.309,208,0.982,209,1.309,210,1.08,211,1.247,212,1.309,213,0.732,214,1.03,215,1.309,216,0.013,217,0.013,269,2.45,281,3.624,287,0.626,288,2.056,291,1.606,303,1.375,326,1.893,352,3.511,369,2.035,370,2.414,375,3.303,376,1.531,377,2.605,378,1.954,379,5.192,380,6.578,381,5.192,382,2.682,383,3.842,384,2.557,385,3.982,386,3.982,387,4.463,388,3.842,389,3.842,390,1.685,391,1.03,392,3.842,393,4.463,394,4.463,395,4.463]],["title/interfaces/Category.html",[269,1.314,396,0.772]],["body/interfaces/Category.html",[2,0.362,3,0.362,7,0.28,9,0.822,12,1.817,17,0.899,46,0.861,48,0.684,49,0.557,64,0.019,65,0.406,66,1.031,67,1.047,68,0.834,73,1.151,76,0.996,78,0.615,79,1.485,86,0.506,97,0.746,98,0.3,102,0.557,109,0.748,138,0.504,142,1.224,144,1.202,145,0.794,161,1.037,170,1.277,176,1.284,186,0.891,189,0.748,196,0.787,200,0.891,213,0.53,216,0.012,217,0.01,255,1.817,268,1.294,269,2.34,287,0.454,302,1.817,303,2.083,307,1.34,317,1.006,324,1.478,358,1.554,366,1.817,369,1.8,370,1.294,376,0.82,377,2.414,378,1.554,390,2.353,391,1.56,396,1.355,397,1.37,398,2.16,399,1.635,400,1.747,401,2.19,402,2.727,403,2.706,404,2.165,405,2.16,406,3.189,407,2.561,408,2.835,409,2.397,410,1.102,411,2.304,412,2.683,413,1.224,414,1.817,415,2.054,416,1.8,417,2.683,418,1.554,419,2.567,420,2.034,421,2.034,422,2.533,423,2.034,424,1.95,425,2.397,426,1.762,427,1.554,428,2.054,429,1.853,430,1.817,431,2.166,432,1.455,433,1.37,434,1.478,435,1.224,436,1.224,437,2.182,438,1.047,439,1.37,440,1.455,441,1.455,442,2.383,443,1.224,444,1.92,445,1.92,446,1.455,447,2.425,448,1.102,449,1.224,450,1.37,451,1.635,452,1.606,453,1.16,454,1.047,455,1.294,456,1.16,457,1.817,458,1.224,459,1.16,460,1.294,461,1.37,462,1.455,463,1.102,464,1.37,465,1.455,466,1.455,467,2.321,468,1.102,469,1.37,470,1.455,471,1.598,472,1.455,473,1.455,474,1.294,475,1.455,476,1.294,477,1.37,478,1.455,479,1.455,480,2.16,481,1.37,482,1.455,483,1.37,484,2.034,485,1.224,486,1.37,487,1.16,488,2.034,489,2.034,490,1.37,491,1.102]],["title/components/CodeEditorComponent.html",[0,0.496,188,1.138]],["body/components/CodeEditorComponent.html",[0,0.739,1,0.685,2,0.592,3,0.317,4,0.791,5,0.831,6,0.831,7,0.246,9,0.486,16,2.113,17,0.577,21,0.831,22,2.42,23,2.305,25,1.273,27,1.273,29,1.47,38,1.638,40,3.232,43,2.083,45,1.213,48,0.545,49,0.91,57,1.275,63,0.594,64,0.019,65,0.664,66,0.882,67,0.803,68,0.586,69,0.957,72,1.432,73,0.609,74,1.549,86,0.458,87,0.488,97,0.281,98,0.403,99,0.623,102,1.431,109,0.922,115,1.738,138,0.922,144,1.194,146,1.87,147,2.608,156,1.955,159,1.455,161,1.311,164,2.017,175,0.653,176,1.372,177,1.654,178,1.273,179,1.783,180,0.831,183,0.831,184,0.685,185,0.831,186,0.441,187,0.831,188,1.432,189,1.323,190,0.831,191,0.653,192,1.273,193,0.685,194,0.831,195,0.653,196,0.464,197,0.831,198,0.685,199,0.831,200,0.441,201,0.831,202,0.685,203,0.831,204,0.685,205,0.831,206,0.685,207,0.831,208,0.623,209,0.831,210,0.685,211,0.791,212,0.831,213,0.464,214,0.653,215,0.831,216,0.009,217,0.011,282,2.866,287,0.397,291,1.793,300,1.475,317,0.91,319,2.095,320,1.359,322,2.402,369,1.406,391,1.218,396,0.464,400,0.955,404,1.63,414,1.644,416,1.156,418,2.271,424,1.824,429,2.792,430,3.294,434,1.338,435,2.551,436,1.644,442,1.273,453,1.017,454,0.917,459,1.559,460,1.738,463,2.017,467,1.338,492,3.166,493,5.851,494,5.221,495,2.095,496,2.402,497,5.094,498,3.906,499,3.737,500,3.737,501,5.094,502,5.797,503,5.094,504,5.094,505,5.094,506,4.983,507,3.737,508,5.797,509,3.737,510,3.212,511,3.212,512,5.797,513,4.046,514,5.6,515,4.544,516,5.094,517,3.737,518,5.494,519,2.437,520,2.437,521,2.921,522,2.402,523,3.212,524,2.437,525,2.437,526,2.866,527,3.737,528,3.737,529,3.737,530,3.737,531,1.71,532,2.437,533,2.608,534,2.402,535,1.559,536,5.851,537,5.094,538,3.486,539,3.737,540,2.437,541,5.094,542,2.402,543,2.866,544,3.737,545,3.737,546,2.866,547,2.972,548,2.608,549,3.737,550,3.737,551,3.212,552,3.737,553,2.866,554,3.212,555,3.737,556,2.437,557,2.866,558,2.437,559,2.665,560,3.908,561,3.275,562,1.567,563,2.402,564,2.437,565,3.737,566,3.737,567,2.437,568,3.212,569,3.737,570,2.437,571,2.437,572,2.095,573,2.437,574,3.737,575,2.437,576,2.437,577,2.437,578,1.87,579,1.87,580,2.437,581,2.437,582,2.437,583,2.437,584,1.87,585,2.437,586,2.437,587,2.437,588,2.437,589,2.437,590,3.737,591,2.437,592,2.437,593,2.437,594,2.437,595,1.701,596,2.437,597,2.437,598,2.437,599,2.437,600,1.701,601,2.095,602,2.437,603,2.437,604,2.437,605,3.737,606,3.737,607,3.737,608,2.437,609,2.437,610,2.437,611,2.437,612,2.437,613,2.437,614,2.437,615,2.437,616,3.212,617,2.437,618,2.437,619,2.866,620,3.737,621,3.212,622,2.437,623,2.437,624,2.095,625,2.437,626,3.737,627,2.437,628,2.437,629,2.437,630,2.437,631,2.437,632,4.544,633,3.737,634,3.737,635,3.737]],["title/interfaces/Course.html",[73,0.66,396,0.772]],["body/interfaces/Course.html",[2,0.337,3,0.337,7,0.261,9,0.802,12,1.72,17,0.871,46,0.8,48,0.677,49,0.518,64,0.019,65,0.571,66,1.072,67,1.082,68,0.815,73,1.211,76,0.926,78,0.572,79,1.445,86,0.479,97,0.73,98,0.279,102,0.783,109,0.708,138,0.708,142,1.138,144,1.185,145,0.755,161,1.188,170,1.835,176,1.249,186,0.708,189,0.853,196,1.13,200,0.853,213,0.493,216,0.011,217,0.009,255,1.138,268,1.203,269,2.182,287,0.422,302,2.074,303,2.324,307,1.926,317,0.952,324,1.399,358,1.471,366,2.61,369,1.625,370,1.203,376,0.763,377,2.349,378,0.973,390,2.327,391,1.512,396,1.326,397,1.274,398,1.353,399,1.024,400,1.691,401,1.471,402,2.62,403,1.818,404,2.17,405,1.353,406,3.103,407,2.311,408,2.759,409,2.311,410,1.024,411,2.233,412,2.587,413,1.138,414,1.72,415,1.966,416,1.745,417,2.61,418,1.471,419,2.511,420,1.926,421,1.926,422,2.443,423,1.926,424,2.124,425,2.311,426,1.687,427,1.471,428,1.966,429,1.773,430,1.72,431,2.074,432,1.353,433,1.274,434,1.399,435,1.138,436,1.138,437,2.369,438,0.973,439,1.274,440,1.353,441,1.353,442,2.457,443,1.138,444,1.818,445,1.818,446,1.353,447,2.321,448,1.024,449,1.138,450,1.274,451,1.866,452,1.951,453,1.079,454,0.973,455,1.203,456,1.079,457,1.72,458,1.138,459,1.079,460,1.203,461,1.274,462,1.353,463,1.024,464,1.274,465,1.353,466,1.353,467,2.27,468,1.024,469,1.274,470,1.353,471,1.831,472,1.353,473,1.353,474,1.203,475,1.353,476,1.203,477,1.926,478,2.748,479,2.748,480,3.103,481,1.926,482,2.045,483,1.926,484,2.922,485,1.138,486,1.926,487,1.631,488,2.922,489,2.922,490,1.926,491,1.548]],["title/components/CourseSelectionComponent.html",[0,0.496,191,1.085]],["body/components/CourseSelectionComponent.html",[0,0.644,1,0.623,2,0.288,3,0.288,4,0.719,5,0.755,6,0.755,7,0.431,9,0.63,13,2.422,17,0.536,21,0.755,22,2.382,23,2.269,25,1.182,27,1.182,29,1.042,32,2.344,33,2.971,38,1.66,45,1.126,48,0.326,49,0.444,54,1.03,60,2.385,62,1.146,63,1.419,64,0.019,65,0.851,66,0.906,67,0.707,68,0.255,69,1.227,70,1.323,71,1.978,72,1.873,73,1.24,74,1.182,75,2.93,76,1.531,77,1.934,78,0.767,84,1.374,86,0.593,87,0.444,91,0.877,92,1.322,97,0.255,98,0.239,99,1.723,100,1.159,101,2.843,102,0.695,109,0.628,115,2.593,138,1.234,143,1.699,144,0.903,149,2.589,156,2.237,160,3.281,161,0.901,164,1.694,170,1.803,175,0.594,176,1.019,177,2.133,178,1.182,179,1.571,180,0.755,183,0.755,184,0.623,185,0.755,186,0.401,187,0.755,188,0.623,189,0.774,190,0.755,191,1.297,192,1.182,193,0.623,194,0.755,195,0.594,196,0.422,197,0.755,198,0.623,199,0.755,200,0.401,201,0.755,202,0.623,203,0.755,204,0.623,205,0.755,206,0.623,207,0.755,208,0.566,209,0.755,210,0.623,211,0.719,212,0.755,213,0.422,214,0.594,215,0.755,216,0.016,217,0.013,253,4.335,269,0.719,287,0.361,288,1.694,291,1.073,300,1.126,303,1.242,307,1.126,317,1.179,331,1.546,354,1.322,368,4.157,384,1.709,391,1.562,396,0.422,400,1.093,404,1.478,416,1.073,418,2.473,419,1.694,424,1.733,437,1.531,442,1.9,459,1.447,471,0.719,481,1.709,483,1.709,484,2.384,486,2.384,488,3.357,489,3.237,513,5.076,531,0.833,534,1.424,547,3.125,548,2.422,561,4.422,562,3.378,563,3.583,584,1.699,619,1.699,624,2.982,636,4.707,637,5.173,638,1.699,639,2.661,640,3.469,641,2.982,642,2.982,643,6.345,644,4.84,645,5.256,646,4.84,647,5.256,648,4.277,649,3.713,650,3.469,651,3.469,652,1.904,653,3.469,654,2.215,655,2.422,656,3.469,657,3.469,658,2.985,659,4.84,660,2.215,661,3.668,662,2.661,663,4.161,664,3.469,665,2.215,666,6.032,667,3.469,668,2.982,669,2.982,670,1.904,671,6.032,672,2.215,673,2.215,674,2.215,675,2.215,676,2.215,677,2.215,678,2.215,679,2.215,680,2.215,681,2.215,682,2.215,683,2.215,684,2.661,685,2.215,686,2.215,687,1.546,688,1.699,689,2.215,690,4.277,691,2.215,692,1.904,693,1.904,694,4.84,695,3.469,696,2.215,697,2.215,698,1.322,699,4.277,700,1.546,701,2.215,702,2.215,703,2.215,704,2.215,705,2.215,706,2.215,707,1.699,708,1.904,709,3.469,710,2.215,711,4.277,712,2.215,713,2.215,714,1.904,715,2.215,716,1.699,717,1.904,718,1.424,719,2.215,720,2.215,721,1.699,722,4.277,723,2.215,724,2.215,725,3.469,726,3.469,727,2.215,728,2.215,729,2.215,730,3.469,731,2.215,732,3.469,733,2.215,734,1.904,735,2.215,736,2.215,737,3.281,738,2.215,739,1.447,740,3.469,741,3.469,742,3.469,743,3.469,744,3.469,745,3.469,746,4.84,747,3.469,748,3.469,749,3.469,750,2.982,751,3.469,752,3.469,753,3.469,754,3.469,755,2.661]],["title/injectables/CourseService.html",[32,1.38,279,1.524]],["body/injectables/CourseService.html",[0,0.465,2,0.323,3,0.323,7,0.25,9,0.76,13,2.646,17,0.586,24,1.483,29,1.35,32,1.292,38,1.712,43,2.114,45,1.492,50,1.763,55,3.071,61,3.071,63,1.526,64,0.019,65,0.938,66,0.81,67,0.987,68,0.754,69,1.083,70,1.173,71,1.427,72,1.96,73,1.245,74,1.292,85,1.867,86,0.465,87,0.498,97,0.286,98,0.598,99,1.64,102,0.76,109,0.686,112,1.734,115,1.763,118,2.263,138,1.343,144,1.25,149,1.867,161,1.379,164,2.037,177,1.67,189,0.45,191,1.379,216,0.009,217,0.009,272,1.905,279,1.73,287,0.405,291,1.173,300,1.231,309,2.646,317,1.12,320,2.563,323,3.259,324,2.707,378,1.427,384,1.867,385,2.908,386,3.946,390,1.972,391,1.379,396,0.473,400,0.969,401,2.464,404,1.975,416,0.768,419,2.636,424,1.357,426,1.983,434,2.242,437,1.357,451,1.501,452,1.931,453,1.918,454,1.73,455,2.138,456,1.918,471,2.192,485,1.093,487,2.146,521,3.307,522,1.597,531,2.085,534,2.437,546,1.905,547,1.223,600,3.591,649,1.905,655,3.591,687,1.734,707,3.946,737,4.25,756,2.135,757,3.791,758,3.259,759,3.791,760,2.908,761,4.57,762,5.145,763,5.145,764,5.145,765,5.145,766,5.145,767,3.791,768,3.791,769,3.791,770,3.791,771,3.791,772,3.791,773,3.791,774,2.484,775,3.791,776,2.484,777,3.791,778,3.791,779,3.791,780,2.484,781,3.791,782,3.946,783,4.076,784,3.791,785,2.484,786,3.946,787,4.076,788,5.145,789,5.145,790,3.946,791,3.791,792,2.484,793,4.422,794,3.791,795,2.484,796,3.259,797,3.791,798,2.484,799,3.791,800,2.484,801,2.484,802,2.484,803,2.908,804,2.484,805,2.484,806,2.484,807,2.135,808,3.791,809,2.484,810,2.484,811,2.484,812,2.484,813,2.484,814,3.791,815,1.597,816,4.598,817,2.484,818,2.484,819,2.484,820,2.484,821,2.484,822,2.135,823,2.484,824,3.591,825,2.484,826,3.259,827,2.484,828,2.484,829,4.598,830,5.145,831,2.484,832,2.484,833,2.484,834,2.484,835,2.135,836,2.135,837,1.483,838,2.135,839,2.484,840,2.484,841,2.484,842,2.484,843,2.135,844,2.135,845,2.484,846,2.484,847,2.484,848,3.791,849,4.763,850,3.259,851,2.135,852,2.484,853,4.598,854,2.135,855,4.422,856,2.908,857,3.791,858,2.135,859,1.905,860,2.484]],["title/components/CourseTabsComponent.html",[0,0.496,193,1.138]],["body/components/CourseTabsComponent.html",[0,0.737,1,0.849,2,0.393,3,0.393,4,0.98,5,1.029,6,1.029,7,0.304,9,0.737,17,0.677,21,1.029,22,2.498,23,2.38,25,1.494,27,1.494,29,1.258,32,2.207,33,1.487,34,2.627,36,3.866,38,1.577,45,0.98,48,0.532,49,0.605,63,1.258,64,0.019,65,0.879,66,0.641,67,0.828,68,0.505,69,1.322,70,1.753,72,1.233,73,1.224,74,1.931,78,0.97,79,1.068,86,0.769,87,0.605,91,1.196,92,1.802,94,1.404,96,2.316,97,0.348,98,0.326,99,1.655,100,1.58,101,1.829,102,1.135,103,4.815,109,0.794,118,1.802,126,3.769,138,1.274,144,1.209,147,3.061,149,2.791,156,1.58,175,0.809,176,0.923,177,1.423,178,1.494,179,1.839,180,1.029,183,1.029,184,0.849,185,1.029,186,0.547,187,1.029,188,0.849,189,0.547,190,1.029,191,0.809,192,1.494,193,1.593,194,1.029,195,0.809,196,0.575,197,1.029,198,0.849,199,1.029,200,0.547,201,1.029,202,0.849,203,1.029,204,0.849,205,1.029,206,0.849,207,1.029,208,0.772,209,1.029,210,0.849,211,0.98,212,1.029,213,0.575,214,0.809,215,1.029,216,0.011,217,0.015,242,1.404,253,4.663,287,0.492,291,1.356,300,2.038,317,0.736,320,2.879,324,2.459,357,5.905,363,2.617,384,3.428,404,1.451,429,2.497,435,1.93,437,1.57,438,2.132,442,2.139,445,2.039,448,1.736,452,0.89,453,1.829,471,2.195,526,3.363,531,2.264,534,3.642,636,4.631,639,3.363,750,3.769,755,3.363,761,3.061,786,3.363,824,2.108,826,4.438,836,2.596,837,1.802,838,2.596,861,2.596,862,3.769,863,4.385,864,4.385,865,4.346,866,4.346,867,5.665,868,3.769,869,4.385,870,4.346,871,1.802,872,4.385,873,3.02,874,4.163,875,5.089,876,3.02,877,4.385,878,3.02,879,4.385,880,3.02,881,3.02,882,2.316,883,1.58,884,4.385,885,3.363,886,3.02,887,3.02,888,2.596,889,2.108,890,2.596,891,4.385,892,4.385,893,6.276,894,3.363,895,3.769,896,3.769,897,4.385,898,4.385,899,2.596,900,4.346,901,4.385,902,2.596]],["title/modules/CourseTabsModule.html",[218,1.603,228,2.603]],["body/modules/CourseTabsModule.html",[2,0.676,3,0.676,7,0.523,56,3.098,64,0.019,69,1.093,73,1.027,86,0.91,87,1.04,90,2.284,97,0.811,98,0.56,127,2.284,175,1.391,191,1.967,193,2.153,216,0.015,217,0.015,218,2.493,220,2.715,221,4.357,222,3.336,228,4.852,231,4.048,236,4.395,237,4.395,242,2.414,253,4.048,636,3.623,637,3.981,883,2.715,903,4.461,904,4.461,905,4.461,906,5.19,907,4.83,908,3.623,909,4.83,910,4.461,911,5.19]],["title/interfaces/DiscoverOption.html",[396,0.772,415,1.689]],["body/interfaces/DiscoverOption.html",[2,0.349,3,0.349,7,0.27,9,0.883,12,2.12,17,0.929,46,0.83,48,0.677,49,0.537,64,0.019,65,0.392,66,1.083,67,1.086,68,0.83,73,1.143,76,0.96,78,0.593,79,1.562,86,0.492,97,0.738,98,0.289,102,0.537,109,0.727,138,0.486,142,1.18,144,1.194,145,0.786,161,1.014,170,1.243,176,1.266,186,0.727,189,0.727,196,0.765,200,0.872,213,0.511,216,0.012,217,0.01,255,1.18,268,1.247,269,2.201,287,0.437,302,1.768,303,2.232,307,1.304,317,1.173,324,1.438,358,1.512,366,1.768,369,1.655,370,1.247,376,0.791,377,2.381,378,1.009,390,2.34,391,1.671,396,1.347,397,1.321,398,1.403,399,1.062,400,1.755,401,1.512,402,2.713,403,1.868,404,2.166,405,1.403,406,2.997,407,2.521,408,2.664,409,2.354,410,1.062,411,2.268,412,2.822,413,1.768,414,2.12,415,2.231,416,2.028,417,2.822,418,1.813,419,2.719,420,2.373,421,2.373,422,2.982,423,2.822,424,2.051,425,2.822,426,1.724,427,1.512,428,2.009,429,1.813,430,1.768,431,2.12,432,1.403,433,1.321,434,1.438,435,1.18,436,1.18,437,2.153,438,1.009,439,1.321,440,1.403,441,1.403,442,2.366,443,1.18,444,1.868,445,1.868,446,1.403,447,2.373,448,1.062,449,1.18,450,1.321,451,1.591,452,1.577,453,1.119,454,1.009,455,1.247,456,1.119,457,1.768,458,1.18,459,1.119,460,1.247,461,1.321,462,1.403,463,1.062,464,1.321,465,1.403,466,1.403,467,2.295,468,1.062,469,1.321,470,1.403,471,1.564,472,1.403,473,1.403,474,1.247,475,1.403,476,1.247,477,1.321,478,1.403,479,1.403,480,2.101,481,1.321,482,1.403,483,1.321,484,1.979,485,1.18,486,1.321,487,1.119,488,1.979,489,1.979,490,1.321,491,1.062]],["title/interfaces/EditorTab.html",[396,0.772,431,1.782]],["body/interfaces/EditorTab.html",[2,0.364,3,0.364,7,0.282,9,0.823,12,1.824,17,0.943,46,0.865,48,0.678,49,0.56,64,0.019,65,0.409,66,1.032,67,1.047,68,0.83,73,1.152,76,1.001,78,0.618,79,1.488,86,0.508,97,0.747,98,0.302,102,0.56,109,0.751,138,0.506,142,1.231,144,1.214,145,0.775,161,1.04,170,1.282,176,1.367,186,0.751,189,0.894,196,0.79,200,0.894,213,0.533,216,0.012,217,0.01,255,1.231,268,1.301,269,2.222,287,0.456,302,1.824,303,2.263,307,1.346,317,1.01,324,1.484,358,1.56,366,1.824,369,1.689,370,1.301,376,0.825,377,2.503,378,1.053,390,2.354,391,1.563,396,1.357,397,1.378,398,1.463,399,1.107,400,1.724,401,1.56,402,2.729,403,1.928,404,2.162,405,1.463,406,3.051,407,2.403,408,2.712,409,2.403,410,1.107,411,2.309,412,2.69,413,1.231,414,1.824,415,2.06,416,1.889,417,2.688,418,1.56,419,2.571,420,2.042,421,2.042,422,2.54,423,2.042,424,1.955,425,2.403,426,1.768,427,1.56,428,2.06,429,2.195,430,2.173,431,2.403,432,2.168,433,2.69,434,1.768,435,1.824,436,2.403,437,2.187,438,1.053,439,1.378,440,1.463,441,1.463,442,2.386,443,1.231,444,1.928,445,1.928,446,1.463,447,2.433,448,1.107,449,1.231,450,1.378,451,1.641,452,1.61,453,1.167,454,1.053,455,1.301,456,1.167,457,1.824,458,1.231,459,1.167,460,1.301,461,1.378,462,1.463,463,1.107,464,1.378,465,1.463,466,1.463,467,2.324,468,1.107,469,1.378,470,1.463,471,1.603,472,1.463,473,1.463,474,1.301,475,1.463,476,1.301,477,1.378,478,1.463,479,1.463,480,2.168,481,1.378,482,1.463,483,1.378,484,2.042,485,1.231,486,1.378,487,1.167,488,2.042,489,2.042,490,1.378,491,1.107]],["title/components/ErrorPageComponent.html",[0,0.496,195,1.085]],["body/components/ErrorPageComponent.html",[0,0.826,1,1.162,2,0.538,3,0.538,4,1.342,5,1.409,6,1.409,7,0.417,9,0.71,16,2.536,17,0.842,21,1.409,22,2.593,23,2.47,25,1.858,27,1.858,29,1.486,33,3.477,38,1.007,48,0.512,49,0.828,50,2.837,53,3.254,62,1.738,63,1.007,64,0.019,65,0.891,66,0.604,67,0.797,68,0.702,70,1.687,73,0.889,78,1.206,79,1.328,84,2.416,85,3.005,86,0.668,87,0.828,92,2.468,97,0.476,98,0.446,99,1.057,100,2.163,144,1.159,145,0.795,173,2.852,175,1.108,176,1.148,177,1.77,178,1.858,179,2.105,180,1.409,183,1.409,184,1.162,185,1.409,186,0.749,187,1.409,188,1.162,189,0.749,190,1.409,191,1.108,192,1.858,193,1.162,194,1.409,195,1.738,196,1.463,197,1.409,198,1.162,199,1.409,200,0.749,201,1.409,202,1.162,203,1.409,204,1.162,205,1.409,206,1.162,207,1.409,208,1.057,209,1.409,210,1.162,211,1.342,212,1.409,213,0.788,214,1.108,215,1.409,216,0.013,217,0.013,265,4.527,324,1.952,352,3.04,400,1.769,652,3.554,912,3.554,913,3.505,914,3.806,915,4.687,916,5.452,917,6.741,918,4.135,919,3.806,920,4.687,921,6.486,922,5.452,923,4.135,924,5.452,925,5.452,926,3.505,927,4.182,928,4.135]],["title/interfaces/FixOption.html",[396,0.772,428,1.689]],["body/interfaces/FixOption.html",[2,0.349,3,0.349,7,0.27,9,0.883,12,2.12,17,0.929,46,0.83,48,0.677,49,0.537,64,0.019,65,0.392,66,1.083,67,1.08,68,0.83,73,1.143,76,0.96,78,0.593,79,1.562,86,0.492,97,0.738,98,0.289,102,0.537,109,0.727,138,0.486,142,1.18,144,1.205,145,0.764,161,1.014,170,1.243,176,1.266,186,0.727,189,0.727,196,0.765,200,0.872,213,0.511,216,0.012,217,0.01,255,1.18,268,1.247,269,2.201,287,0.437,302,1.768,303,2.232,307,1.304,317,1.173,324,1.438,358,1.512,366,1.768,369,1.772,370,1.247,376,0.791,377,2.381,378,1.009,390,2.34,391,1.671,396,1.347,397,1.321,398,1.403,399,1.062,400,1.755,401,1.512,402,2.713,403,1.868,404,2.166,405,1.403,406,2.997,407,2.521,408,2.664,409,2.354,410,1.062,411,2.268,412,2.822,413,1.18,414,2.12,415,2.009,416,2.028,417,2.822,418,1.813,419,2.719,420,2.373,421,2.373,422,2.982,423,2.822,424,2.051,425,2.822,426,1.915,427,1.813,428,2.231,429,1.813,430,1.768,431,2.12,432,1.403,433,1.321,434,1.438,435,1.18,436,1.18,437,2.153,438,1.009,439,1.321,440,1.403,441,1.403,442,2.366,443,1.18,444,1.868,445,1.868,446,1.403,447,2.373,448,1.062,449,1.18,450,1.321,451,1.591,452,1.577,453,1.119,454,1.009,455,1.247,456,1.119,457,1.768,458,1.18,459,1.119,460,1.247,461,1.321,462,1.403,463,1.062,464,1.321,465,1.403,466,1.403,467,2.295,468,1.062,469,1.321,470,1.403,471,1.564,472,1.403,473,1.403,474,1.247,475,1.403,476,1.247,477,1.321,478,1.403,479,1.403,480,2.101,481,1.321,482,1.403,483,1.321,484,1.979,485,1.18,486,1.321,487,1.119,488,1.979,489,1.979,490,1.321,491,1.062]],["title/modules/HomePageModule.html",[218,1.603,229,2.603]],["body/modules/HomePageModule.html",[2,0.623,3,0.623,7,0.483,48,0.45,56,2.858,64,0.019,67,0.7,69,1.008,86,0.924,87,0.959,90,2.107,97,0.789,98,0.516,127,2.107,175,1.283,184,2.131,186,1.303,195,2.031,196,0.912,208,1.839,213,1.371,216,0.015,217,0.015,218,2.372,220,2.504,221,4.203,222,3.077,229,4.937,231,3.851,236,4.182,237,4.182,242,2.226,256,4.115,262,3.672,264,3.342,265,3.342,266,4.115,352,2.669,410,1.896,883,2.504,907,4.595,908,3.342,909,4.595,910,4.115,929,4.115,930,4.115,931,4.115,932,4.115,933,4.787,934,4.787,935,3.672,936,5.621,937,5.621]],["title/interfaces/Issue.html",[144,0.696,396,0.772]],["body/interfaces/Issue.html",[2,0.343,3,0.343,7,0.265,9,0.807,12,1.743,17,0.878,46,0.814,48,0.675,49,0.527,64,0.019,65,0.384,66,1.061,67,1.078,68,0.836,73,1.139,76,0.942,78,0.582,79,1.454,86,0.485,97,0.734,98,0.284,102,0.527,109,0.717,138,0.476,142,1.158,144,1.248,145,0.781,161,1.116,170,1.225,176,1.421,186,0.717,189,0.717,196,0.755,200,0.959,213,0.501,216,0.013,217,0.01,255,1.158,268,1.224,269,2.191,287,0.429,302,1.743,303,2.034,307,1.286,317,0.965,324,2.138,358,2.247,366,1.743,369,1.639,370,1.842,376,1.168,377,2.583,378,0.99,390,2.357,391,1.781,396,1.331,397,1.296,398,1.376,399,1.042,400,1.785,401,1.49,402,2.705,403,1.842,404,2.158,405,1.376,406,3.124,407,2.332,408,2.643,409,2.924,410,1.042,411,2.708,412,2.61,413,1.158,414,1.743,415,1.986,416,1.758,417,2.806,418,1.49,419,2.525,420,1.951,421,1.951,422,2.464,423,1.951,424,1.897,425,2.332,426,1.897,427,1.49,428,2.21,429,1.792,430,1.743,431,2.096,432,1.376,433,1.296,434,1.418,435,1.158,436,1.158,437,2.138,438,0.99,439,1.296,440,1.376,441,1.376,442,2.357,443,1.158,444,1.842,445,1.842,446,1.376,447,2.61,448,1.042,449,1.158,450,1.296,451,1.886,452,1.676,453,1.652,454,1.49,455,1.842,456,1.652,457,2.096,458,1.743,459,1.652,460,1.842,461,1.951,462,2.772,463,1.568,464,1.951,465,2.072,466,2.772,467,2.282,468,1.042,469,1.296,470,1.376,471,1.546,472,1.376,473,1.376,474,1.224,475,1.376,476,1.224,477,1.296,478,1.376,479,1.376,480,2.072,481,1.296,482,1.376,483,1.296,484,1.951,485,1.158,486,1.296,487,1.097,488,1.951,489,1.951,490,1.296,491,1.042]],["title/components/IssueCardComponent.html",[0,0.496,198,1.138]],["body/components/IssueCardComponent.html",[0,0.868,1,0.926,2,0.429,3,0.429,4,1.069,5,1.122,6,1.122,7,0.594,9,0.607,19,3.579,21,1.122,22,2.527,23,2.407,25,1.59,27,1.59,29,1.32,32,2.437,38,1.619,48,0.438,49,1.086,50,2.17,63,0.802,64,0.019,65,0.792,66,1.045,67,0.682,68,0.744,69,1.141,70,1.676,71,2.342,72,1.523,73,1.015,86,0.664,87,0.66,91,1.304,97,0.379,98,0.585,99,0.841,109,1.067,132,2.053,138,1.127,144,1.217,145,0.846,175,0.883,176,0.982,177,2.098,178,1.59,179,1.914,180,1.122,183,1.122,184,0.926,185,1.122,186,0.596,187,1.122,188,0.926,189,0.596,190,1.122,191,0.883,192,1.59,193,0.926,194,1.122,195,0.883,196,0.627,197,1.122,198,1.657,199,1.122,200,0.596,201,1.122,202,0.926,203,1.122,204,1.523,205,1.122,206,0.926,207,1.122,208,0.841,209,1.122,210,0.926,211,1.069,212,1.122,213,0.627,214,0.883,215,1.122,216,0.011,217,0.011,218,2.334,282,3.579,287,0.537,288,1.848,291,1.443,322,3.789,326,1.622,376,1.376,378,1.756,390,1.759,396,0.627,400,1.506,401,2.635,402,1.756,404,0.926,418,2.039,434,1.67,442,1.59,443,2.738,444,2.17,451,1.848,452,2.065,467,2.228,469,2.904,471,1.515,474,2.17,492,3.157,521,2.999,531,1.239,542,2.999,547,2.298,561,3.789,562,2.117,563,2.999,669,5.349,755,3.579,783,4.115,787,3.257,793,4.011,871,1.966,938,4.052,939,5.208,940,2.831,941,6.223,942,4.666,943,4.666,944,6.223,945,6.462,946,5.895,947,4.666,948,3.293,949,3.293,950,3.293,951,4.666,952,4.666,953,3.293,954,4.666,955,3.579,956,5.419,957,3.257,958,3.293,959,4.011,960,3.293,961,3.293,962,3.293,963,3.293,964,5.067,965,5.067,966,4.011,967,3.293,968,3.293,969,3.293,970,3.293,971,3.293,972,3.293,973,3.293,974,3.293,975,3.293,976,3.293,977,3.293,978,4.011,979,4.011,980,3.579]],["title/components/IssueContainerComponent.html",[0,0.496,200,0.733]],["body/components/IssueContainerComponent.html",[0,0.72,1,0.636,2,0.295,3,0.295,4,1.408,5,0.771,6,0.771,7,0.228,9,0.691,21,0.771,22,2.39,23,2.305,25,1.202,27,1.202,29,1.056,32,2.071,34,2.326,38,1.609,45,1.145,48,0.528,49,0.453,50,2.017,55,2.106,62,0.946,63,1.193,64,0.019,65,0.888,66,0.822,67,0.912,68,0.749,69,1.184,70,1.515,71,2.287,72,0.992,73,0.917,79,1.193,84,1.717,85,2.136,86,0.651,87,0.453,91,0.896,94,1.052,97,0.26,98,0.713,99,1.437,100,1.184,101,0.944,102,0.981,109,0.639,138,1.278,144,1.304,149,1.115,156,1.184,159,1.351,161,1.031,164,0.896,175,0.607,176,1.031,177,1.973,178,1.202,179,1.59,180,0.771,183,0.771,184,0.636,185,0.771,186,0.41,187,0.771,188,0.636,189,0.961,190,0.771,191,0.607,192,1.202,193,0.636,194,0.771,195,0.607,196,0.431,197,0.771,198,0.636,199,0.771,200,0.887,201,0.771,202,0.636,203,0.771,204,0.636,205,0.771,206,0.636,207,0.771,208,0.578,209,0.771,210,0.636,211,0.735,212,0.771,213,0.431,214,0.607,215,0.771,216,0.009,217,0.009,283,1.967,287,0.917,291,1.091,300,1.408,303,1.552,322,2.268,324,2.365,354,2.923,358,1.328,363,3.169,368,2.268,369,1.515,376,1.659,378,1.328,382,1.58,385,2.706,386,2.706,390,1.724,391,1.162,396,0.431,400,1.631,401,1.328,402,1.632,404,1.795,408,1.641,411,0.896,416,1.091,417,2.155,418,1.632,419,1.717,424,1.753,426,2.397,428,0.944,429,1.843,430,2.674,434,1.753,436,0.996,437,1.263,447,1.115,451,1.397,453,2.043,454,2.349,455,2.903,456,2.45,460,2.017,467,1.263,471,1.145,490,1.738,492,3.114,498,3.727,506,4.21,522,1.455,531,1.632,533,2.463,538,2.706,547,2.412,559,1.846,560,2.706,561,3.776,562,2.268,563,2.788,572,1.945,600,2.463,616,5.367,661,3.418,687,1.58,739,1.472,783,2.463,837,3.81,843,3.033,844,3.033,850,1.945,854,1.945,855,1.945,859,1.736,926,2.268,927,2.706,938,3.997,980,2.706,981,5.136,982,1.945,983,3.528,984,5.309,985,4.897,986,4.897,987,4.897,988,3.528,989,4.897,990,3.528,991,3.528,992,4.897,993,3.528,994,5.625,995,2.263,996,2.263,997,2.263,998,3.528,999,2.106,1000,3.528,1001,3.528,1002,5.309,1003,2.263,1004,5.309,1005,2.263,1006,2.263,1007,3.528,1008,2.263,1009,3.528,1010,3.528,1011,3.528,1012,3.528,1013,2.263,1014,4.897,1015,2.263,1016,3.528,1017,3.033,1018,2.706,1019,3.528,1020,3.033,1021,3.528,1022,2.263,1023,2.263,1024,2.263,1025,2.263,1026,2.263,1027,2.263,1028,2.263,1029,2.263,1030,2.263,1031,2.263,1032,2.263,1033,4.336,1034,2.263,1035,1.736,1036,2.263,1037,2.263,1038,2.263,1039,2.263,1040,2.263,1041,2.263,1042,2.263,1043,2.263,1044,2.263,1045,2.263,1046,3.528,1047,2.263,1048,2.263,1049,2.263,1050,2.263,1051,2.263,1052,2.263,1053,3.033,1054,3.033,1055,4.897,1056,3.528,1057,4.897]],["title/components/IssueDetailsComponent.html",[0,0.496,202,1.138]],["body/components/IssueDetailsComponent.html",[0,0.828,1,1.172,2,0.543,3,0.543,4,1.353,5,1.42,6,1.42,7,0.42,9,0.713,21,1.42,22,2.595,23,2.472,25,1.868,27,1.868,29,1.492,32,2.533,38,1.335,48,0.515,49,0.835,50,3.026,63,1.015,64,0.019,65,0.895,66,0.801,67,0.801,68,0.799,69,1.29,70,1.895,71,2.305,72,1.9,73,1.102,84,2.576,85,3.205,86,0.672,87,0.835,91,1.65,97,0.48,98,0.45,99,1.065,109,0.992,144,1.312,161,1.154,175,1.117,176,1.154,177,1.779,178,1.868,179,2.112,180,1.42,183,1.42,184,1.172,185,1.42,186,0.755,187,1.42,188,1.172,189,0.755,190,1.42,191,1.117,192,1.868,193,1.172,194,1.42,195,1.117,196,0.794,197,1.42,198,1.172,199,1.42,200,0.992,201,1.42,202,1.829,203,1.42,204,1.172,205,1.42,206,1.172,207,1.42,208,1.065,209,1.42,210,1.172,211,1.353,212,1.42,213,0.794,214,1.117,215,1.42,216,0.013,217,0.013,287,0.68,288,2.17,326,2.053,358,2.063,376,1.616,390,1.779,400,1.401,452,1.616,476,2.549,492,2.848,871,2.488,938,3.656,1058,4.698,1059,3.583,1060,5.481,1061,6.939,1062,4.168,1063,4.168,1064,4.168,1065,4.711,1066,5.481]],["title/interfaces/IssueItem.html",[396,0.772,452,1.194]],["body/interfaces/IssueItem.html",[2,0.351,3,0.351,7,0.272,9,0.813,12,1.775,17,0.887,46,0.834,48,0.678,49,0.808,64,0.019,65,0.394,66,1.054,67,1.041,68,0.82,73,1.153,76,1.444,78,0.596,79,1.468,86,0.494,97,0.739,98,0.291,102,0.54,109,0.73,138,0.488,142,1.186,144,1.247,145,0.805,161,1.017,170,1.247,176,1.269,186,0.73,189,0.73,196,0.768,200,0.875,213,0.514,216,0.012,217,0.01,255,1.186,268,1.875,269,2.296,287,0.439,302,1.775,303,2.055,307,1.309,317,0.982,324,1.444,358,1.518,366,1.775,369,1.659,370,1.254,376,0.795,377,2.386,378,1.014,390,2.384,391,1.539,396,1.337,397,1.328,398,1.41,399,1.067,400,1.709,401,1.518,402,2.715,403,1.875,404,2.163,405,1.41,406,3.152,407,2.36,408,2.905,409,2.36,410,1.067,411,2.273,412,2.642,413,1.186,414,1.775,415,2.015,416,1.776,417,2.651,418,1.518,419,2.543,420,1.986,421,1.986,422,2.494,423,1.986,424,1.92,425,2.36,426,1.73,427,1.818,428,2.015,429,1.818,430,1.775,431,2.126,432,1.41,433,1.328,434,1.444,435,1.186,436,1.186,437,2.299,438,1.014,439,1.328,440,1.41,441,1.41,442,2.471,443,1.186,444,2.247,445,2.247,446,1.41,447,2.38,448,1.067,449,1.186,450,1.328,451,1.597,452,1.693,453,1.124,454,1.014,455,1.254,456,1.124,457,2.126,458,1.186,459,1.124,460,1.254,461,1.328,462,1.41,463,1.067,464,1.328,465,1.41,466,1.41,467,2.551,468,1.597,469,1.986,470,2.806,471,2.028,472,2.806,473,2.806,474,1.875,475,1.41,476,1.875,477,1.328,478,1.41,479,1.41,480,2.11,481,1.328,482,1.41,483,1.328,484,1.986,485,1.186,486,1.328,487,1.124,488,1.986,489,1.986,490,1.328,491,1.067]],["title/components/IssueListComponent.html",[0,0.496,204,1.138]],["body/components/IssueListComponent.html",[0,0.766,1,0.938,2,0.434,3,0.434,4,1.083,5,1.137,6,1.137,7,0.336,9,0.613,16,2.19,17,0.916,20,3.612,21,1.137,22,2.531,23,2.41,25,1.605,27,1.605,29,1.329,32,2.442,38,1.581,45,1.083,48,0.557,49,0.668,57,2.463,61,4.393,62,1.262,63,0.812,64,0.019,65,0.914,66,0.866,67,0.688,68,0.542,69,1.317,70,1.688,71,2.054,72,1.758,73,1.178,86,0.669,87,0.668,91,1.321,97,0.384,98,0.36,99,0.852,109,0.853,113,4.047,132,2.072,138,0.853,144,1.258,149,2.688,161,1.248,171,3.612,175,0.894,176,0.991,177,1.925,178,1.605,179,1.925,180,1.137,183,1.137,184,0.938,185,1.137,186,0.604,187,1.137,188,0.938,189,0.604,190,1.137,191,0.894,192,1.605,193,0.938,194,1.137,195,0.894,196,0.636,197,1.137,198,0.938,199,1.137,200,0.604,201,1.137,202,0.938,203,1.137,204,1.667,205,1.137,206,0.938,207,1.137,208,0.852,209,1.137,210,0.938,211,1.083,212,1.137,213,0.636,214,0.894,215,1.137,216,0.011,217,0.011,287,0.544,288,1.864,291,1.456,307,1.528,317,0.812,326,1.643,378,1.772,390,2.107,396,0.636,400,1.203,427,1.772,437,1.685,449,2.072,452,2.042,456,1.964,467,1.685,471,2.165,485,2.609,492,3.102,531,1.255,534,4.607,547,2.319,553,3.612,561,3.811,562,2.144,563,3.027,718,3.027,739,1.964,803,4.548,871,1.991,926,3.027,927,3.612,938,3.981,1067,5.116,1068,2.867,1069,4.708,1070,4.708,1071,6.489,1072,5.928,1073,5.096,1074,5.928,1075,4.708,1076,3.335,1077,4.708,1078,3.335,1079,4.047,1080,4.708,1081,4.708,1082,4.047,1083,4.708,1084,4.708,1085,4.708,1086,3.612,1087,4.708,1088,4.047,1089,4.708,1090,3.335,1091,5.928,1092,3.335,1093,3.335,1094,3.335,1095,5.457,1096,4.708,1097,4.708,1098,3.335,1099,3.335,1100,3.335,1101,4.708,1102,4.708,1103,4.708,1104,4.708]],["title/components/IssueNavComponent.html",[0,0.496,206,1.138]],["body/components/IssueNavComponent.html",[0,0.692,1,0.729,2,0.337,3,0.337,4,0.841,5,0.883,6,0.883,7,0.261,9,0.684,16,1.821,17,0.605,21,0.883,22,2.444,23,2.328,25,1.334,27,1.334,29,1.149,32,2.323,33,3.396,34,2.73,38,1.613,45,0.841,48,0.579,49,0.946,53,2.337,60,2.183,62,1.265,63,1.149,64,0.019,65,0.825,66,0.867,67,0.768,68,0.683,69,1.452,70,1.837,71,2.388,72,1.891,73,1.192,74,1.608,75,2.932,76,1.689,77,2.631,78,1.043,79,1.149,86,0.755,87,0.785,91,1.026,92,1.547,94,1.205,97,0.298,98,0.28,99,1.622,102,1.19,109,0.709,118,1.547,138,1.282,144,1.27,145,0.48,161,1.394,167,1.356,175,0.695,176,0.824,177,1.271,178,1.334,179,2.149,180,0.883,183,0.883,184,0.729,185,0.883,186,0.469,187,0.883,188,0.729,189,0.469,190,0.883,191,0.695,192,1.334,193,0.729,194,0.883,195,0.695,196,0.494,197,0.883,198,0.729,199,0.883,200,0.469,201,0.883,202,0.729,203,0.883,204,0.729,205,0.883,206,1.478,207,0.883,208,0.662,209,0.883,210,0.729,211,0.841,212,0.883,213,0.494,214,0.695,215,0.883,216,0.009,217,0.009,242,2.867,287,0.423,288,2.513,291,1.211,300,1.532,309,2.733,317,0.631,320,3.31,326,1.277,354,2.337,358,1.473,363,2.337,366,1.723,376,1.551,384,2.781,390,1.532,400,1.001,408,2.445,426,2.272,438,1.979,452,1.983,454,2.234,468,1.55,485,1.14,492,3.128,531,1.979,822,3.366,824,2.733,837,2.337,865,4.033,866,4.033,870,4.033,871,1.547,874,3.629,875,4.868,882,1.988,883,3.225,885,3.003,890,2.228,938,4.015,978,3.366,979,3.366,980,3.003,1065,2.228,1073,3.366,1105,5.159,1106,2.228,1107,3.915,1108,3.915,1109,3.915,1110,5.258,1111,3.915,1112,3.915,1113,2.592,1114,2.592,1115,4.853,1116,5.645,1117,3.915,1118,3.915,1119,2.592,1120,2.592,1121,3.915,1122,2.592,1123,2.592,1124,2.592,1125,2.592,1126,2.592,1127,2.228,1128,2.228,1129,4.056,1130,4.056,1131,3.366,1132,2.228,1133,2.592,1134,2.592,1135,2.592,1136,3.915,1137,2.592,1138,2.592,1139,2.592,1140,5.258,1141,3.915,1142,3.915,1143,3.915,1144,3.915,1145,3.915,1146,4.52,1147,3.915,1148,3.915,1149,3.915,1150,3.915,1151,1.809,1152,2.228,1153,2.592,1154,1.445,1155,2.592,1156,3.366,1157,2.592,1158,2.592,1159,2.592,1160,2.592,1161,2.592,1162,2.592,1163,2.592,1164,2.592,1165,3.915,1166,3.915,1167,3.366]],["title/injectables/KatanaService.html",[33,1.994,279,1.524]],["body/injectables/KatanaService.html",[2,0.286,3,0.286,7,0.221,9,0.448,17,0.897,18,1.696,24,1.309,29,1.035,31,3.352,32,2.049,33,1.696,34,2.381,35,3.865,37,3.037,38,1.506,43,1.223,45,1.698,46,1.065,48,0.651,54,1.601,55,2.055,57,1.147,60,3.237,61,3.123,62,0.923,63,1.274,64,0.019,65,0.764,66,0.764,67,0.958,68,0.554,69,1.332,70,1.489,71,1.296,72,1.561,73,1.159,74,1.173,75,1.92,77,1.92,78,1.579,79,0.839,80,2.641,82,0.588,83,2.519,84,0.869,85,2.094,86,0.758,87,0.439,88,2.684,90,0.965,91,0.869,93,1.885,94,1.02,95,1.531,97,0.252,98,0.237,99,1.58,100,1.147,101,2.182,102,0.852,109,0.623,115,2.942,118,1.309,119,5.168,128,4.259,129,5.162,132,2.119,134,2.96,138,1.293,142,0.965,144,1.109,149,1.696,156,2.904,159,1.309,160,2.641,161,1.332,164,2.448,196,1.267,216,0.008,217,0.008,241,1.885,279,1.6,283,1.223,286,2.372,287,0.358,288,1.363,291,1.065,300,2.007,307,0.712,317,0.839,321,3.653,331,1.531,339,1.885,340,4.259,366,1.87,368,3.095,369,1.065,376,1.015,384,2.372,391,1.488,404,0.968,409,0.965,413,1.515,414,1.515,426,1.873,427,1.812,437,1.233,442,1.641,448,1.683,454,0.825,457,0.965,458,1.515,463,1.363,464,1.696,467,2.152,491,1.683,513,2.403,522,2.213,531,0.825,535,1.436,584,2.641,649,2.641,698,1.309,700,3.361,714,1.885,737,3.693,790,2.641,815,1.41,837,1.309,874,3.095,888,4.991,889,2.403,913,1.41,915,1.885,955,4.259,957,4.316,1086,1.683,1132,2.96,1146,1.885,1152,3.653,1168,1.885,1169,4.815,1170,3.443,1171,3.443,1172,3.443,1173,4.815,1174,2.193,1175,4.815,1176,3.443,1177,4.25,1178,2.96,1179,3.443,1180,2.193,1181,3.443,1182,2.193,1183,3.363,1184,3.443,1185,2.193,1186,3.443,1187,2.193,1188,2.96,1189,2.193,1190,3.443,1191,4.815,1192,2.193,1193,2.96,1194,3.653,1195,2.193,1196,3.443,1197,1.223,1198,4.497,1199,3.653,1200,2.193,1201,2.193,1202,2.193,1203,3.653,1204,4.815,1205,4.815,1206,2.193,1207,4.815,1208,3.443,1209,2.193,1210,2.193,1211,2.641,1212,2.193,1213,5.552,1214,5.552,1215,3.443,1216,2.193,1217,3.443,1218,2.193,1219,2.193,1220,2.193,1221,2.193,1222,2.193,1223,3.443,1224,2.193,1225,3.443,1226,5.552,1227,4.815,1228,2.96,1229,2.96,1230,2.96,1231,2.193,1232,3.443,1233,2.193,1234,2.403,1235,2.193,1236,1.885,1237,2.193,1238,1.683,1239,1.683,1240,2.193,1241,2.193,1242,1.885,1243,1.885,1244,3.443,1245,3.443,1246,3.443,1247,3.443,1248,4.25,1249,2.193,1250,1.683,1251,3.443,1252,2.96,1253,3.443,1254,2.96,1255,3.443,1256,3.443,1257,3.443,1258,3.443,1259,4.815,1260,3.443,1261,2.193,1262,3.443,1263,3.443,1264,2.96,1265,2.193,1266,2.193,1267,2.193,1268,2.193,1269,2.193,1270,2.193,1271,2.193,1272,2.193,1273,2.193,1274,1.885,1275,3.443,1276,2.193,1277,2.193,1278,2.193,1279,2.193,1280,2.193,1281,2.193,1282,2.193]],["title/classes/OptionModel.html",[98,0.437,411,1.603]],["body/classes/OptionModel.html",[2,0.614,3,0.614,7,0.476,9,0.773,29,1.582,38,1.582,40,3.31,45,1.532,46,1.837,63,1.149,64,0.019,65,0.69,66,0.69,67,1.121,68,0.683,69,1.25,86,0.578,97,0.543,98,0.64,99,1.206,109,1.075,138,1.075,164,1.869,200,1.075,208,1.517,216,0.014,217,0.014,283,2.631,287,0.769,291,1.837,300,2.281,317,1.149,354,4.28,369,1.837,390,2.429,409,3.091,410,1.869,411,2.351,417,3.156,1283,4.056,1284,5.937,1285,5.937,1286,5.937,1287,5.103,1288,6.817,1289,5.937,1290,5.937,1291,4.719,1292,5.937,1293,5.937,1294,6.496,1295,4.719,1296,4.719,1297,4.719,1298,4.719,1299,5.937,1300,4.719,1301,4.719]],["title/components/OptionsViewComponent.html",[0,0.496,208,1.035]],["body/components/OptionsViewComponent.html",[0,0.768,1,0.765,2,0.354,3,0.354,4,0.884,5,0.928,6,0.928,7,0.274,9,0.701,13,2.835,16,1.889,17,0.832,18,2.001,21,0.928,22,2.462,23,2.345,25,1.384,27,1.384,29,1.184,31,3.671,32,2.244,33,3.462,34,2.757,38,1.657,45,0.884,46,1.257,48,0.605,49,0.974,54,1.889,62,1.545,63,0.663,64,0.019,65,0.71,66,0.916,67,1.082,68,0.771,69,1.356,70,1.783,71,2.17,72,1.7,73,1.135,74,1.656,75,2.709,76,1.74,77,2.709,78,1.075,79,1.184,86,0.807,87,0.545,90,1.198,91,1.078,92,1.625,94,1.266,97,0.313,98,0.438,99,1.545,101,1.694,109,0.735,132,2.661,138,1.135,144,0.991,145,0.66,149,1.341,161,0.855,164,1.608,175,0.729,176,0.855,177,1.319,178,1.384,179,1.749,180,0.928,183,0.928,184,0.765,185,0.928,186,0.493,187,0.928,188,0.765,189,0.493,190,0.928,191,0.729,192,1.384,193,0.765,194,0.928,195,0.729,196,0.519,197,0.928,198,0.765,199,0.928,200,0.493,201,0.928,202,0.765,203,0.928,204,0.765,205,0.928,206,0.765,207,0.928,208,1.377,209,0.928,210,0.765,211,0.884,212,0.928,213,0.519,214,0.729,215,0.928,216,0.01,217,0.01,242,2.914,263,5.284,264,4.808,269,1.963,287,0.444,288,2.283,291,1.257,300,1.578,303,1.74,311,1.9,317,0.663,320,3.372,324,1.454,326,1.341,331,1.9,352,3.841,363,2.424,373,3.491,376,1.198,382,1.9,384,3.086,390,1.578,396,0.519,400,1.038,409,2.949,410,1.078,411,2.654,413,1.787,414,1.787,415,2.248,417,2.661,422,2.506,424,1.454,434,1.454,438,2.028,491,1.608,521,2.611,531,2.276,535,1.694,543,3.116,639,2.088,698,2.424,700,1.9,716,4.133,865,4.133,866,4.133,870,4.133,874,3.706,875,5.284,882,2.088,883,3.278,885,3.116,1053,3.491,1054,3.491,1129,4.177,1130,4.177,1167,3.491,1254,2.339,1302,2.088,1303,3.491,1304,3.491,1305,5.389,1306,5.389,1307,4.062,1308,2.722,1309,2.722,1310,4.062,1311,2.722,1312,3.116,1313,3.491,1314,4.062,1315,4.062,1316,2.722,1317,2.722,1318,2.722,1319,2.722,1320,2.722,1321,2.722,1322,2.722,1323,2.722,1324,2.722,1325,2.722,1326,2.722,1327,2.722,1328,2.722,1329,2.722,1330,2.722,1331,2.722,1332,2.722,1333,2.722,1334,2.722,1335,2.722,1336,2.722,1337,2.722,1338,2.722,1339,2.722,1340,4.062,1341,2.835,1342,3.491,1343,4.062]],["title/injectables/SettingsService.html",[36,2.417,279,1.524]],["body/injectables/SettingsService.html",[2,0.446,3,0.446,7,0.483,9,0.446,17,0.741,24,2.043,29,1.538,36,2.862,38,1.348,45,1.111,54,2.23,59,4.122,62,0.917,63,0.834,64,0.019,65,0.5,66,0.701,67,0.5,68,0.552,86,0.419,87,0.686,97,0.394,98,0.369,102,1.311,103,5.414,109,0.868,115,1.592,120,2.942,138,1.086,145,0.419,156,2.895,169,2.043,216,0.012,217,0.012,279,2.083,287,0.558,291,1.855,317,0.834,377,1.355,391,1.285,416,1.059,443,1.506,468,1.899,526,3.678,531,1.288,721,2.626,739,1.428,815,2.2,856,3.678,858,5.893,894,3.678,895,6.067,896,6.403,1183,3.082,1344,2.942,1345,5.997,1346,3.423,1347,4.795,1348,3.423,1349,4.795,1350,7.058,1351,4.795,1352,6.856,1353,4.795,1354,5.997,1355,5.997,1356,6.856,1357,7.058,1358,6.856,1359,6.544,1360,4.795,1361,4.795,1362,4.795,1363,4.795,1364,4.795,1365,4.122,1366,4.795,1367,3.423,1368,6.719,1369,3.423,1370,3.423,1371,3.423,1372,3.423,1373,3.423,1374,3.423,1375,3.423,1376,2.626,1377,3.423,1378,3.423,1379,2.942,1380,3.423,1381,3.423,1382,3.423,1383,3.423,1384,3.423,1385,3.423,1386,3.423,1387,3.423,1388,3.423,1389,3.423,1390,3.423,1391,3.423,1392,3.423,1393,3.423,1394,3.423,1395,3.423,1396,3.423,1397,3.423,1398,3.423,1399,3.423,1400,3.423,1401,4.795,1402,4.795,1403,3.423,1404,3.423,1405,3.423,1406,3.423,1407,3.423,1408,3.423,1409,3.423,1410,3.423,1411,3.423,1412,3.423,1413,3.423,1414,3.423,1415,3.423,1416,3.423,1417,3.423,1418,3.423,1419,4.795,1420,3.423,1421,3.423,1422,3.423,1423,3.423,1424,3.423,1425,3.423,1426,3.423,1427,3.423,1428,3.423,1429,3.423,1430,3.423,1431,3.423,1432,3.423,1433,3.423,1434,3.423,1435,3.423,1436,3.423,1437,3.423,1438,3.423,1439,3.423,1440,3.423,1441,3.423,1442,3.423,1443,3.423,1444,4.795,1445,3.423,1446,3.423,1447,3.423,1448,3.423,1449,3.423,1450,3.423,1451,3.423,1452,3.423,1453,3.423,1454,3.423,1455,3.423,1456,3.423,1457,3.423,1458,3.423,1459,3.423,1460,3.423,1461,3.423,1462,3.423,1463,3.423,1464,3.423,1465,2.626,1466,3.423,1467,3.423,1468,3.423,1469,3.423,1470,3.423,1471,3.423,1472,4.795,1473,3.423,1474,3.423,1475,3.423,1476,3.423,1477,3.423,1478,3.423,1479,3.423,1480,3.423,1481,2.942,1482,3.423,1483,3.423,1484,3.423,1485,3.423,1486,3.423,1487,3.423,1488,3.423,1489,3.423,1490,3.423,1491,3.423,1492,3.423,1493,4.795,1494,3.423,1495,3.423,1496,3.423,1497,2.626,1498,3.423,1499,3.423,1500,3.423,1501,3.423,1502,3.423,1503,3.423,1504,3.423,1505,3.423,1506,3.423,1507,3.423,1508,3.423,1509,3.423,1510,5.534,1511,3.423]],["title/components/StatBadgeComponent.html",[0,0.496,210,1.138]],["body/components/StatBadgeComponent.html",[0,0.823,1,1.148,2,0.532,3,0.532,4,1.326,5,1.392,6,1.392,7,0.412,9,0.532,21,1.392,22,2.589,23,2.466,25,1.843,27,1.843,29,1.635,38,1.635,45,1.756,48,0.508,49,0.818,64,0.019,65,0.79,66,0.943,67,0.597,73,0.882,86,0.5,87,0.818,97,0.47,98,0.441,144,1.154,175,1.095,176,1.139,177,1.756,178,1.843,179,2.095,180,1.392,183,1.392,184,1.148,185,1.392,186,0.739,187,1.392,188,1.148,189,0.739,190,1.392,191,1.095,192,1.843,193,1.148,194,1.392,195,1.095,196,0.778,197,1.392,198,1.148,199,1.392,200,0.739,201,1.392,202,1.148,203,1.392,204,1.148,205,1.392,206,1.148,207,1.392,208,1.044,209,1.392,210,1.814,211,2.285,212,1.392,213,0.778,214,1.095,215,1.392,216,0.013,217,0.013,287,0.666,317,1.317,376,1.595,400,1.826,402,2.596,404,1.94,418,2.282,451,2.141,471,2.32,492,3.208,782,4.148,859,4.148,914,4.686,1512,5.93,1513,5.292,1514,3.51,1515,6.899,1516,5.408,1517,5.408,1518,5.408,1519,7.038,1520,7.038,1521,6.063,1522,5.408,1523,4.148,1524,4.084,1525,4.084,1526,4.084,1527,4.084,1528,4.084,1529,4.084,1530,4.084]],["title/injectables/ToastService.html",[35,2.603,279,1.524]],["body/injectables/ToastService.html",[2,0.567,3,0.567,7,0.439,9,0.814,17,1.084,20,4.325,24,2.598,29,1.669,35,3.624,38,1.523,53,3.365,63,1.373,64,0.019,65,0.824,67,0.824,69,1.187,74,1.921,78,0.962,80,5.615,81,6.035,86,0.691,87,0.872,88,2.427,97,0.501,98,0.469,99,1.441,107,5.376,128,3.338,129,3.338,138,1.198,196,1.395,216,0.014,217,0.014,242,2.024,279,2.354,287,0.71,291,2.046,391,1.167,400,1.851,404,1.224,419,2.78,448,2.924,531,2.122,687,3.038,760,5.386,815,2.798,851,3.741,874,2.798,883,2.277,889,4.783,894,3.338,1194,4.846,1238,3.338,1264,4.846,1531,3.741,1532,5.638,1533,5.638,1534,4.352,1535,5.638,1536,4.352,1537,5.638,1538,4.352,1539,5.638,1540,4.352,1541,4.352,1542,6.254,1543,5.638,1544,4.352,1545,4.352,1546,4.352,1547,5.638,1548,5.638,1549,5.638,1550,5.638,1551,4.352,1552,4.352]],["title/interfaces/Tool.html",[48,0.38,396,0.772]],["body/interfaces/Tool.html",[2,0.335,3,0.335,7,0.26,9,0.874,12,1.716,17,0.95,46,1.206,48,0.696,49,0.516,64,0.019,65,0.377,66,1.071,67,1.075,68,0.837,73,1.134,76,0.923,78,0.862,79,1.543,86,0.478,97,0.729,98,0.278,102,0.516,109,0.706,138,0.467,142,1.716,144,1.206,145,0.795,161,0.99,170,1.206,176,1.295,186,0.851,189,0.706,196,0.743,200,1.02,213,0.743,216,0.011,217,0.009,255,1.134,268,1.198,269,2.296,287,0.42,302,2.069,303,2.016,307,1.266,317,0.95,324,1.396,358,1.467,366,1.716,369,1.833,370,1.198,376,0.76,377,2.509,378,0.97,390,2.326,391,1.509,396,1.337,397,1.269,398,1.348,399,1.02,400,1.76,401,2.119,402,2.696,403,2.619,404,2.17,405,1.348,406,3.099,407,2.478,408,2.755,409,2.307,410,1.02,411,2.23,412,2.918,413,1.134,414,1.716,415,2.705,416,1.742,417,2.607,418,1.467,419,2.509,420,1.92,421,1.92,422,2.438,423,1.92,424,1.877,425,2.307,426,1.877,427,1.467,428,2.705,429,1.973,430,2.069,431,2.788,432,1.348,433,1.269,434,1.683,435,1.134,436,1.134,437,2.367,438,1.467,439,2.583,440,2.04,441,2.04,442,2.371,443,1.716,444,2.187,445,2.187,446,1.348,447,2.316,448,1.544,449,1.716,450,2.583,451,1.544,452,1.546,453,1.075,454,0.97,455,1.198,456,1.075,457,1.716,458,1.134,459,1.075,460,1.198,461,1.269,462,1.348,463,1.02,464,1.269,465,1.348,466,1.348,467,2.268,468,1.02,469,1.269,470,1.348,471,1.527,472,1.348,473,1.348,474,1.198,475,1.348,476,1.198,477,1.269,478,1.348,479,1.348,480,2.04,481,1.269,482,1.348,483,1.269,484,1.92,485,1.134,486,1.269,487,1.075,488,1.92,489,1.92,490,1.269,491,1.02]],["title/modules/ToolPageModule.html",[218,1.603,230,2.603]],["body/modules/ToolPageModule.html",[2,0.599,3,0.599,7,0.464,48,0.432,56,2.746,64,0.019,69,0.969,86,0.931,87,0.922,90,2.024,97,0.739,98,0.496,127,2.024,144,1.198,175,1.233,188,2.003,189,0.833,198,2.003,200,1.29,202,2.003,204,2.003,206,2.003,210,2.003,211,1.493,214,1.91,216,0.014,217,0.014,218,2.313,220,2.406,221,4.127,222,2.957,230,4.961,231,3.755,236,4.077,237,4.077,242,2.139,258,2.957,261,3.211,262,3.528,410,1.821,492,2.139,494,3.528,883,2.406,907,4.481,908,3.211,909,4.481,932,3.954,936,5.518,937,5.518,939,3.528,981,3.528,1058,3.528,1067,3.528,1105,3.528,1513,3.528,1553,3.954,1554,3.954,1555,4.6,1556,4.6,1557,4.6,1558,4.6,1559,4.6,1560,4.6,1561,4.6]],["title/components/ToolSelectionComponent.html",[0,0.496,213,0.772]],["body/components/ToolSelectionComponent.html",[0,0.829,1,1.174,2,0.544,3,0.544,4,1.356,5,1.424,6,1.424,7,0.421,9,0.715,21,1.424,22,2.595,23,2.472,25,1.871,27,1.871,29,1.493,32,2.447,34,2.944,38,1.337,48,0.711,49,1.229,50,2.851,63,1.018,64,0.019,65,0.896,66,0.802,67,0.802,68,0.706,69,1.424,70,2.092,71,2.545,72,1.952,73,1.062,79,1.493,84,2.428,85,3.02,86,0.751,87,0.837,91,1.654,94,1.943,97,0.481,98,0.451,99,1.403,101,1.742,109,0.994,144,1.163,175,1.12,176,1.156,177,1.782,178,1.871,179,2.114,180,1.424,183,1.424,184,1.174,185,1.424,186,0.756,187,1.424,188,1.174,189,0.756,190,1.424,191,1.12,192,1.871,193,1.174,194,1.424,195,1.12,196,0.796,197,1.424,198,1.174,199,1.424,200,0.756,201,1.424,202,1.174,203,1.424,204,1.174,205,1.424,206,1.174,207,1.424,208,1.067,209,1.424,210,1.174,211,1.356,212,1.424,213,1.241,214,1.12,215,1.424,216,0.013,217,0.013,258,3.941,287,0.681,288,2.174,326,2.058,352,3.418,382,2.916,394,4.718,395,4.718,638,3.204,641,4.718,642,5.814,670,3.591,935,4.703,1183,3.529,1562,4.177]],["title/injectables/ToolService.html",[34,1.603,279,1.524]],["body/injectables/ToolService.html",[2,0.439,3,0.439,7,0.34,9,0.618,17,1.138,18,2.339,24,2.015,29,1.338,30,2.589,31,3.731,34,1.88,38,1.763,45,2.039,46,1.469,48,0.718,49,0.951,54,2.772,60,2.647,61,2.834,63,1.338,64,0.019,65,0.803,66,0.952,67,0.978,68,0.686,70,1.844,71,1.787,72,1.921,78,1.05,79,1.664,86,0.673,87,0.676,90,1.485,97,0.389,98,0.364,99,0.863,100,1.766,102,1.305,109,0.86,115,2.772,137,4.081,138,1.079,145,0.582,161,1.438,164,1.337,176,1.255,189,0.86,216,0.012,217,0.012,269,2.393,279,2.067,287,0.55,307,2.115,317,1.53,376,1.4,377,1.88,387,2.901,393,4.081,396,0.643,400,1.213,401,2.243,402,2.243,403,2.772,404,1.335,413,2.089,424,2.332,448,1.88,467,1.7,531,1.787,542,3.052,546,3.642,688,3.642,807,2.901,815,2.17,1183,3.052,1211,4.572,1523,3.642,1563,2.901,1564,5.96,1565,5.96,1566,5.96,1567,5.96,1568,5.96,1569,3.375,1570,3.375,1571,3.375,1572,4.081,1573,3.375,1574,4.081,1575,4.748,1576,4.081,1577,3.375,1578,4.748,1579,4.748,1580,3.375,1581,4.748,1582,3.375,1583,4.748,1584,3.375,1585,3.375,1586,4.081,1587,4.748,1588,3.375,1589,3.375,1590,3.375,1591,4.748,1592,3.375,1593,3.375,1594,3.375,1595,3.375,1596,6.281,1597,3.375,1598,5.493,1599,6.281,1600,3.375,1601,5.493,1602,4.748,1603,3.375,1604,3.375,1605,4.748,1606,3.375,1607,4.748,1608,3.375,1609,4.748,1610,4.748]],["title/components/ToolViewComponent.html",[0,0.496,214,1.085]],["body/components/ToolViewComponent.html",[0,0.855,1,1.035,2,0.479,3,0.479,4,1.196,5,1.255,6,1.255,7,0.371,9,0.657,17,0.889,21,1.255,22,2.56,23,2.439,25,1.719,27,1.719,29,1.401,32,2.484,34,2.907,36,4.381,38,1.579,48,0.697,49,1.299,63,0.897,64,0.019,65,0.841,66,0.904,67,0.737,69,1.491,70,2.071,71,2.519,72,1.927,73,1.138,79,1.401,86,0.758,87,0.738,91,1.458,94,1.713,96,2.825,97,0.424,98,0.397,99,1.47,102,1.153,109,0.913,118,2.198,138,1.212,144,1.178,149,2.485,161,1.443,175,0.987,176,1.062,177,1.637,178,1.719,179,2.009,180,1.255,183,1.255,184,1.035,185,1.255,186,0.667,187,1.255,188,1.035,189,0.667,190,1.255,191,0.987,192,1.719,193,1.035,194,1.255,195,0.987,196,0.702,197,1.255,198,1.035,199,1.255,200,0.667,201,1.255,202,1.035,203,1.255,204,1.035,205,1.255,206,1.035,207,1.255,208,0.941,209,1.255,210,1.035,211,1.196,212,1.255,213,0.702,214,1.659,215,1.255,216,0.012,217,0.012,258,4.303,261,4.672,286,2.834,287,0.6,288,2.764,291,1.56,326,1.814,376,1.487,427,1.898,434,1.806,452,1.086,492,3.113,761,3.521,786,3.869,824,3.521,835,3.166,868,5.319,871,2.198,899,3.166,902,3.166,1131,3.166,1302,2.825,1303,4.336,1304,4.336,1611,3.683,1612,3.683,1613,3.683,1614,3.683,1615,3.683,1616,3.683,1617,3.683,1618,5.044,1619,5.044,1620,5.044]],["title/coverage.html",[1621,4.622]],["body/coverage.html",[0,0.931,1,1.219,7,0.437,8,3.728,32,1.478,33,2.136,34,1.717,35,2.788,36,2.589,37,2.269,48,0.407,64,0.019,66,0.634,73,0.707,98,0.468,144,0.746,184,1.219,186,0.785,188,1.219,191,1.162,193,1.219,195,1.162,198,1.219,200,0.785,202,1.219,204,1.219,206,1.219,208,1.108,210,1.219,213,0.826,214,1.162,216,0.014,217,0.014,251,2.589,253,4.013,258,3.616,261,3.027,263,3.327,264,3.027,265,3.926,269,1.408,279,2.64,280,3.728,300,1.408,352,3.817,353,3.728,375,3.728,396,1.379,397,3.565,407,1.908,411,1.717,415,1.809,428,1.809,431,1.908,452,1.279,492,3.366,493,3.728,494,3.327,495,3.728,636,3.926,637,3.327,638,4.315,658,3.027,756,3.728,861,3.728,912,3.728,935,3.327,938,4.086,939,3.327,940,3.728,981,3.327,982,3.728,1058,3.327,1059,3.728,1067,3.327,1068,3.728,1105,3.327,1106,3.728,1168,3.728,1283,3.728,1302,4.315,1344,3.728,1512,3.728,1513,3.327,1514,3.728,1531,3.728,1563,3.728,1621,3.728,1622,2.418,1623,4.337,1624,7.797,1625,5.625,1626,6.607,1627,7.14,1628,5.625,1629,6.845,1630,3.728,1631,3.027,1632,4.337,1633,5.625,1634,5.625,1635,6.243,1636,4.337,1637,4.337,1638,5.625,1639,4.337]],["title/dependencies.html",[220,2.526,1640,2.972]],["body/dependencies.html",[64,0.019,76,1.799,82,1.655,87,1.007,90,2.211,173,2.629,216,0.015,217,0.015,220,2.629,234,5.307,235,4.736,239,4.32,242,2.871,243,4.32,244,4.736,246,3.855,391,1.347,410,1.99,442,1.713,803,3.855,883,3.646,908,3.508,1018,3.855,1079,5.307,1127,4.32,1128,5.307,1188,4.32,1574,4.32,1641,5.025,1642,7.508,1643,5.025,1644,5.025,1645,5.025,1646,5.025,1647,5.025,1648,5.025,1649,5.025,1650,5.025,1651,5.025,1652,5.025,1653,5.025,1654,5.025,1655,5.025,1656,4.32,1657,5.025,1658,5.025,1659,3,1660,5.025,1661,5.025,1662,5.025,1663,4.32,1664,5.025,1665,5.025,1666,5.025,1667,5.025,1668,5.025,1669,5.025,1670,6.174,1671,5.025,1672,6.174,1673,5.025,1674,5.025,1675,5.025,1676,5.025,1677,5.025,1678,5.025,1679,5.025,1680,5.025,1681,5.025,1682,5.025,1683,5.025,1684,5.025,1685,5.025,1686,5.025,1687,5.025,1688,5.025]],["title/index.html",[287,0.564,707,2.652,1234,2.413]],["body/index.html",[7,0.507,46,1.557,48,0.628,62,1.792,64,0.016,68,0.77,69,1.06,71,1.894,78,1.479,82,1.656,102,1.397,132,2.943,216,0.015,217,0.015,251,3.004,286,2.479,307,1.634,354,4.272,396,0.959,416,1.557,442,2.106,457,2.214,535,2.909,559,2.633,739,2.909,760,3.86,790,3.86,913,3.235,965,4.326,999,3.688,1018,4.74,1154,3.728,1234,3.512,1239,3.86,1379,4.326,1465,3.86,1622,3.445,1631,3.512,1689,5.748,1690,4.326,1691,5.032,1692,6.179,1693,5.032,1694,4.326,1695,5.129,1696,5.032,1697,5.032,1698,5.032,1699,5.032,1700,5.032,1701,5.032,1702,5.032,1703,4.313,1704,5.311,1705,6.974,1706,4.326,1707,5.032,1708,4.326,1709,5.032,1710,5.032,1711,6.687,1712,5.032,1713,5.032,1714,5.032,1715,3.235,1716,5.032,1717,4.326,1718,4.74,1719,5.032,1720,5.032,1721,4.326,1722,1.634,1723,5.032,1724,5.032,1725,5.032,1726,5.032,1727,5.032,1728,5.032,1729,5.032,1730,5.032,1731,5.032,1732,4.74,1733,6.179]],["title/modules.html",[218,2.129]],["body/modules.html",[64,0.016,216,0.016,217,0.016,218,2.331,219,4.109,228,3.784,229,3.784,230,3.784,235,5.633,1734,7.343,1735,7.343,1736,7.343]],["title/overview.html",[1737,2.813]],["body/overview.html",[0,0.573,1,2.042,37,3.384,56,2.791,64,0.019,69,0.985,97,0.538,98,0.504,127,2.058,175,1.254,184,2.042,186,1.171,188,1.819,191,1.734,193,2.042,195,1.947,198,1.819,200,1.171,202,1.819,204,1.819,206,1.819,208,1.653,210,1.819,213,1.233,214,1.734,216,0.014,217,0.014,218,2.338,219,5.296,220,2.447,221,3.006,222,3.006,223,4.02,224,4.02,225,4.02,226,4.02,227,4.02,228,4.724,229,4.911,230,4.959,231,3.795,279,1.76,396,0.891,600,3.264,734,4.02,903,4.02,904,4.02,905,4.02,929,4.02,930,4.02,931,4.02,1553,4.02,1554,4.02,1737,2.447,1738,4.677,1739,4.677,1740,4.677]],["title/miscellaneous/variables.html",[1631,3.37,1741,2.972]],["body/miscellaneous/variables.html",[45,1.857,62,1.893,64,0.018,66,0.836,68,0.658,82,1.788,83,2.993,216,0.016,217,0.016,251,4.216,287,0.933,317,1.393,391,1.788,913,3.677,1630,4.917,1631,3.993,1741,4.917,1742,5.72,1743,5.72,1744,5.72,1745,5.72,1746,5.72,1747,5.72,1748,5.72,1749,5.72,1750,5.72,1751,5.72,1752,5.72,1753,5.72,1754,5.72]],["title/additional-documentation/setup.html",[145,0.424,1154,1.928,1722,1.122]],["body/additional-documentation/setup.html",[17,0.893,40,3.225,48,0.631,53,3.453,62,1.55,64,0.016,82,1.902,102,1.159,170,1.789,174,3.225,216,0.016,217,0.016,300,1.878,307,2.303,369,1.789,468,2.29,496,3.718,535,2.413,557,4.437,999,4.008,1154,3.225,1497,4.437,1622,3.744,1755,4.972,1756,5.784,1757,4.972,1758,4.037,1759,4.972]],["title/additional-documentation/setup/setting-up-firebase.html",[82,0.717,102,0.536,145,0.328,535,1.116,1722,0.868]],["body/additional-documentation/setup/setting-up-firebase.html",[7,0.563,11,4.765,12,1.888,16,2.598,17,0.863,18,2.113,19,3.291,40,3.804,44,3.688,46,2.203,48,0.403,50,1.995,54,3.06,62,1.875,64,0.013,65,0.816,68,0.805,72,1.85,74,2.325,75,2.392,78,1.374,82,2.02,83,3.442,84,1.699,86,0.526,88,2.392,101,2.745,102,1.447,132,1.888,142,1.888,161,1.385,167,2.922,168,2.561,169,3.334,170,2.234,173,3.249,216,0.014,217,0.015,220,2.245,281,2.995,286,2.113,300,2.136,302,1.888,311,2.995,363,2.561,369,1.327,377,2.46,399,1.699,401,1.615,407,1.888,416,2.203,429,1.615,438,1.615,449,1.888,461,2.113,463,1.699,491,1.699,496,3.591,510,3.688,533,2.995,535,2.917,548,2.995,559,3.659,568,3.688,663,3.688,684,4.285,708,3.688,716,4.285,721,3.291,739,1.79,758,3.688,787,2.995,919,3.899,955,3.291,1082,3.688,1115,4.802,1151,2.995,1197,3.804,1199,3.688,1238,3.291,1656,3.688,1695,4.285,1703,2.995,1704,3.688,1706,3.688,1708,3.688,1715,2.758,1718,3.291,1722,1.393,1737,2.245,1760,5.586,1761,5.586,1762,4.335,1763,4.291,1764,4.291,1765,4.291,1766,4.291,1767,4.291,1768,4.291,1769,3.291,1770,4.765,1771,5.586,1772,4.291,1773,4.291,1774,4.291,1775,4.291,1776,4.291,1777,3.688,1778,4.291,1779,3.688,1780,4.291,1781,3.688,1782,4.291,1783,4.291,1784,3.688,1785,4.291,1786,4.291,1787,5.586,1788,3.291,1789,3.688,1790,3.291,1791,3.688,1792,4.291,1793,4.291,1794,4.291,1795,4.291,1796,4.291,1797,4.291,1798,4.291,1799,4.291,1800,2.995,1801,3.688,1802,5.586,1803,3.688,1804,4.291]],["title/additional-documentation/setup/development-environment.html",[145,0.37,251,1.8,739,1.258,1722,0.979]],["body/additional-documentation/setup/development-environment.html",[64,0.016,216,0.017,217,0.017,251,3.619,739,2.529,1737,3.172]],["title/additional-documentation/setup/node-tools.html",[48,0.283,145,0.37,999,1.8,1722,0.979]],["body/additional-documentation/setup/node-tools.html",[4,1.243,7,0.488,9,0.907,12,0.825,16,1.413,17,0.907,18,0.923,40,1.694,43,2.888,45,0.609,46,1.185,47,4.453,48,0.696,49,0.376,60,1.045,61,1.813,62,0.503,64,0.019,65,0.707,66,0.981,67,1.085,68,0.596,69,1.019,70,0.58,72,1.456,73,0.624,74,2.36,75,3.042,76,1.577,79,1.073,99,1.607,102,1.208,109,0.797,112,1.309,115,2.25,127,0.825,132,1.685,138,0.876,144,1.211,145,0.719,156,3.799,159,1.119,161,1.019,164,0.742,174,1.694,176,1.366,179,1.43,189,0.55,216,0.007,217,0.007,218,0.742,242,0.872,255,0.825,269,1.43,286,1.496,299,2.33,300,2.076,302,0.825,303,1.371,305,1.205,307,1.243,317,0.74,324,1.577,340,2.33,358,2.473,368,4.451,369,1.909,376,1.129,378,0.706,384,0.923,391,1.946,399,1.203,400,1.658,401,1.821,402,2.57,403,1.413,404,1.959,407,1.337,412,1.886,415,1.837,416,1.816,418,2.138,419,2.631,420,2.384,421,2.384,422,2.048,423,1.496,425,2.715,426,2.521,427,2.442,428,2.161,429,1.441,430,1.685,431,1.938,433,0.923,434,1.953,435,1.337,436,0.825,437,1.577,439,1.496,442,2.308,443,1.938,444,1.413,445,0.872,448,0.742,449,1.337,450,0.923,451,1.744,452,1.96,454,1.821,456,1.267,457,1.337,458,1.938,459,1.598,467,2.508,468,1.203,471,0.609,474,0.872,476,2.537,477,0.923,487,1.598,491,1.203,511,2.611,513,3.074,514,1.612,521,1.953,522,3.33,523,1.612,535,1.267,538,1.438,542,1.205,554,1.612,578,1.438,601,2.611,619,4.185,658,2.12,661,2.12,662,4.185,668,5.648,688,2.33,692,1.612,693,1.612,698,1.119,717,4.16,718,1.953,782,3.712,783,3.808,796,1.612,837,3.391,849,1.612,856,2.33,889,2.12,900,1.438,913,1.205,914,1.309,920,3.292,926,1.205,959,1.612,964,3.786,966,2.611,999,3.6,1020,1.612,1086,1.438,1151,2.12,1154,1.045,1156,2.611,1178,1.612,1193,3.786,1198,3.786,1203,2.611,1211,2.33,1228,2.611,1229,2.611,1230,2.611,1234,1.309,1236,1.612,1242,2.611,1243,2.611,1250,1.438,1252,1.612,1274,3.786,1287,1.612,1313,1.612,1341,2.12,1365,1.612,1376,3.378,1481,1.612,1497,1.438,1572,1.612,1622,1.045,1659,2.629,1663,1.612,1703,3.074,1715,2.462,1717,1.612,1718,2.33,1737,0.981,1759,1.612,1777,1.612,1781,1.612,1800,1.309,1801,3.786,1805,7.216,1806,1.875,1807,3.038,1808,1.875,1809,1.875,1810,3.038,1811,4.689,1812,1.875,1813,1.875,1814,1.875,1815,1.875,1816,3.038,1817,1.875,1818,4.839,1819,1.875,1820,1.875,1821,3.038,1822,1.875,1823,1.875,1824,3.038,1825,1.875,1826,1.875,1827,1.875,1828,3.83,1829,3.038,1830,3.038,1831,1.875,1832,3.038,1833,1.875,1834,1.875,1835,1.875,1836,1.875,1837,1.875,1838,3.038,1839,1.875,1840,1.875,1841,1.875,1842,3.038,1843,4.839,1844,1.875,1845,1.875,1846,3.038,1847,4.839,1848,3.038,1849,1.875,1850,1.875,1851,3.83,1852,3.038,1853,3.83,1854,3.038,1855,1.875,1856,1.875,1857,1.875,1858,1.875,1859,3.038,1860,3.038,1861,1.875,1862,3.038,1863,3.038,1864,6.968,1865,1.875,1866,3.038,1867,1.875,1868,1.875,1869,1.875,1870,1.875,1871,1.875,1872,4.839,1873,1.875,1874,1.875,1875,3.038,1876,1.875,1877,1.875,1878,1.875,1879,3.038,1880,1.438,1881,1.875,1882,1.875,1883,1.612,1884,1.875,1885,1.875,1886,1.875,1887,1.875,1888,1.875,1889,1.875,1890,1.875,1891,1.875,1892,1.875,1893,1.875,1894,1.875,1895,1.875,1896,1.875,1897,1.875]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[82,0.717,145,0.328,170,0.828,174,1.492,1722,0.868]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.006,18,2.703,62,1.745,64,0.015,72,2.09,74,1.87,79,1.337,82,2.013,83,3.632,102,1.1,145,0.672,167,2.871,170,2.3,173,3.406,174,4.087,216,0.016,217,0.016,283,3.63,286,2.703,300,1.781,429,2.612,487,2.289,535,2.289,548,3.83,559,2.871,595,3.83,621,4.717,739,2.289,787,3.83,914,3.83,1523,4.209,1769,4.209,1770,5.325,1883,4.717,1898,4.717,1899,6.511,1900,5.488,1901,4.717]],["title/additional-documentation/server-architecture.html",[78,0.667,145,0.37,1722,0.979,1732,2.314]],["body/additional-documentation/server-architecture.html",[64,0.016,78,1.312,216,0.017,217,0.017,1576,5.102,1622,3.8,1732,5.228,1737,3.105,1758,4.757,1779,5.102,1880,4.553,1902,5.935,1903,5.935,1904,4.553,1905,5.102,1906,4.143]],["title/additional-documentation/server-architecture/server-endpoints.html",[78,0.667,145,0.37,1722,0.979,1906,2.105]],["body/additional-documentation/server-architecture/server-endpoints.html",[64,0.016,78,1.52,216,0.017,217,0.017,369,1.863,399,2.385,1758,4.204,1906,4.798]],["title/additional-documentation/server-architecture/discover-&-fix-workflow.html",[64,0.006,145,0.295,426,0.86,427,0.905,1722,0.78,1907,2.066]],["body/additional-documentation/server-architecture/discover-&-fix-workflow.html",[48,0.643,64,0.017,68,0.688,216,0.017,217,0.017,426,2.139,427,2.248,999,4.083,1715,3.84,1907,5.88,1908,5.974]],["title/additional-documentation/server-architecture/data-flow-diagram.html",[145,0.328,957,1.867,1722,0.868,1904,2.052,1909,2.3]],["body/additional-documentation/server-architecture/data-flow-diagram.html",[64,0.016,216,0.017,217,0.017]],["title/additional-documentation/server-architecture/high-level-overview.html",[145,0.328,1722,0.868,1737,1.4,1880,2.052,1905,2.3]],["body/additional-documentation/server-architecture/high-level-overview.html",[64,0.016,216,0.017,217,0.017]],["title/additional-documentation/firebase.html",[82,0.927,145,0.424,1722,1.122]],["body/additional-documentation/firebase.html",[64,0.016,74,1.981,82,1.995,83,3.04,102,1.349,216,0.016,217,0.016,358,2.187,496,4.328,535,2.809,547,2.863,559,3.04,1197,3.24,1586,4.996,1622,3.754,1659,3.469,1703,4.057,1758,4.057,1762,4.057,1910,5.812,1911,5.812,1912,5.812,1913,5.812,1914,4.057]],["title/additional-documentation/firebase/firebase-authentication.html",[82,0.809,83,1.578,145,0.37,1722,0.979]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.835,17,1.069,40,2.745,48,0.463,54,2.29,55,2.939,57,2.576,62,1.943,64,0.015,68,0.819,79,1.199,82,1.855,83,3.791,84,1.949,143,5.08,145,0.811,146,3.777,167,3.464,168,4.131,169,4.496,170,2.353,171,3.777,173,2.576,174,2.745,216,0.015,217,0.015,283,3.399,284,4.232,285,5.692,286,3.409,300,1.979,305,3.919,307,2.247,384,2.425,416,1.523,496,3.165,535,2.762,553,3.777,578,3.777,579,3.777,595,3.436,655,3.436,662,3.777,698,2.939,739,2.054,1017,4.232,1151,3.436,1250,3.777,1312,3.777,1342,5.24,1694,4.232,1737,2.576,1770,3.777,1800,3.436,1811,5.24,1898,5.24,1904,3.777,1909,4.232,1915,4.923,1916,4.923,1917,4.923,1918,4.923,1919,4.923,1920,4.923,1921,4.923,1922,4.923,1923,4.923,1924,4.923,1925,6.096,1926,4.232,1927,4.923,1928,4.923,1929,6.096,1930,4.232,1931,4.923,1932,4.923,1933,4.923]],["title/additional-documentation/firebase/database-structure.html",[145,0.37,1197,1.682,1722,0.979,1914,2.105]],["body/additional-documentation/firebase/database-structure.html",[9,0.644,17,1.07,43,2.756,48,0.574,62,1.944,64,0.015,68,0.764,70,2.052,78,1.351,82,1.638,84,1.957,88,2.756,127,2.689,132,2.689,161,1.527,167,3.847,168,3.96,170,1.529,216,0.015,217,0.015,311,3.45,377,1.957,391,1.325,396,0.942,399,1.957,402,1.86,425,2.175,438,2.497,452,1.458,459,2.549,463,2.911,491,1.957,542,3.178,543,3.792,547,2.435,551,4.249,557,3.792,559,3.471,579,3.792,658,4.266,684,3.792,700,3.45,718,3.929,739,2.062,862,4.249,919,5.063,1035,3.792,1088,4.249,1154,2.756,1183,3.929,1197,4.1,1312,3.792,1376,3.792,1465,3.792,1622,3.408,1659,2.951,1690,4.249,1757,5.703,1762,4.631,1784,5.253,1788,3.792,1790,3.792,1791,4.249,1800,3.45,1901,4.249,1906,3.45,1914,4.631,1926,4.249,1934,4.943,1935,4.943,1936,4.943,1937,6.112,1938,4.943,1939,4.943,1940,4.943,1941,4.943,1942,4.943,1943,4.943]],["title/additional-documentation/firebase/firebase-wrapper.html",[82,0.809,145,0.37,1659,1.8,1722,0.979]],["body/additional-documentation/firebase/firebase-wrapper.html",[9,0.756,17,0.897,23,1.48,46,1.41,48,0.428,49,0.914,51,3.919,62,1.557,63,1.415,64,0.016,68,0.856,69,0.96,70,1.978,74,2.492,76,2.08,77,2.542,79,1.415,82,1.222,84,2.3,97,0.525,101,1.902,127,2.006,132,2.006,138,1.158,154,3.919,159,4.018,164,2.3,167,3.893,173,2.385,189,0.826,216,0.014,217,0.015,269,1.48,286,2.246,288,1.805,291,1.797,309,3.182,322,2.931,391,1.804,399,1.805,404,1.633,425,2.006,438,2.186,458,2.556,463,1.805,468,1.805,471,1.48,487,1.902,531,2.616,547,3.149,560,3.497,655,3.182,698,2.722,718,2.931,739,1.902,761,4.462,900,3.497,919,4.462,926,2.931,957,5.104,1154,2.542,1197,3.963,1341,3.182,1640,3.919,1659,4.15,1689,4.993,1715,2.931,1721,4.993,1755,3.919,1762,5.153,1769,3.497,1788,3.497,1789,5.496,1790,4.456,1803,3.919,1914,4.055,1930,3.919,1944,4.559,1945,4.559,1946,4.559,1947,5.809,1948,4.559,1949,4.559,1950,4.559,1951,4.559,1952,4.559,1953,6.393,1954,4.559,1955,4.559,1956,4.559,1957,4.559,1958,4.559,1959,4.559,1960,4.559,1961,4.559,1962,4.559,1963,4.559,1964,4.559,1965,6.393,1966,5.809,1967,5.809,1968,4.559,1969,4.559,1970,4.559,1971,4.559,1972,4.559,1973,4.559]],["title/additional-documentation/firebase/firebase-functions.html",[74,1.028,82,0.809,145,0.37,1722,0.979]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.722,16,2.579,17,1.012,54,2.579,55,3.31,62,1.487,64,0.016,68,0.638,69,1.168,74,2.54,77,3.092,82,1.97,88,3.653,132,2.441,161,1.379,168,3.911,169,3.31,170,2.229,173,2.901,216,0.016,217,0.016,283,3.092,305,3.565,416,1.716,424,1.985,533,3.871,535,2.313,536,4.767,559,3.427,595,4.573,661,3.871,1035,4.254,1197,3.092,1239,4.254,1341,3.871,1695,5.026,1974,5.546,1975,5.546,1976,5.546,1977,5.546,1978,5.546,1979,5.546,1980,5.546]]],"invertedIndex":[["",{"_index":64,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["12/12",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1551,"title":{},"body":{"injectables/ToastService.html":{}}}],["16",{"_index":1738,"title":{},"body":{"overview.html":{}}}],["183a54",{"_index":1354,"title":{},"body":{"injectables/SettingsService.html":{}}}],["1c2023",{"_index":1360,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["24a36",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["252a2e",{"_index":1361,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2879b5",{"_index":1353,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b63",{"_index":1355,"title":{},"body":{"injectables/SettingsService.html":{}}}],["2d4b9f",{"_index":1362,"title":{},"body":{"injectables/SettingsService.html":{}}}],["3",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3.3.1",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["330px",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["5.0.0",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1552,"title":{},"body":{"injectables/ToastService.html":{}}}],["6",{"_index":1739,"title":{},"body":{"overview.html":{}}}],["6.0.7",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["65727d",{"_index":1357,"title":{},"body":{"injectables/SettingsService.html":{}}}],["7/7",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1740,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":887,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["_log(collectiontitl",{"_index":1972,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["_selectedcategori",{"_index":1564,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1565,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1164,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1163,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].tolowercas",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ac",{"_index":497,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1618,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["accessor",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":170,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":1767,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["action",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["activ",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual",{"_index":1768,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["actual_compon",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1722,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["adjust",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["admin",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ag",{"_index":1380,"title":{},"body":{"injectables/SettingsService.html":{}}}],["again",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["airat",{"_index":1373,"title":{},"body":{"injectables/SettingsService.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":862,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["alt",{"_index":1805,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1879,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1882,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["alter",{"_index":1814,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1918,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1915,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["amount",{"_index":1085,"title":{},"body":{"components/IssueListComponent.html":{}}}],["angular",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":908,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":883,"title":{},"body":{"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1314,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1849,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["apikey",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["app.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1818,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":219,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1855,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["approut",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1732,"title":{"additional-documentation/server-architecture.html":{}},"body":{"index.html":{},"additional-documentation/server-architecture.html":{}}}],["arr.length",{"_index":1503,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arr[randi",{"_index":1504,"title":{},"body":{"injectables/SettingsService.html":{}}}],["array",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_forward",{"_index":1343,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["ashen",{"_index":1358,"title":{},"body":{"injectables/SettingsService.html":{}}}],["assign",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":351,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.json",{"_index":1776,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["authdomain",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":83,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":37,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1898,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["await",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["awar",{"_index":1782,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["b",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].tolowercas",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["backend",{"_index":1796,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["background",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["backward",{"_index":1482,"title":{},"body":{"injectables/SettingsService.html":{}}}],["badg",{"_index":1516,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge\">{{getissuecount(cours",{"_index":892,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["badge'},{'nam",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1560,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1517,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1518,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1514,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1525,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1524,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1526,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1522,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1513,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["banana",{"_index":1438,"title":{},"body":{"injectables/SettingsService.html":{}}}],["bar",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{}}}],["base",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["beautifi",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1714,"title":{},"body":{"index.html":{}}}],["befor",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["behavior",{"_index":1812,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["behind",{"_index":1844,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1811,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1759,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["bit",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["blaster",{"_index":1431,"title":{},"body":{"injectables/SettingsService.html":{}}}],["blob",{"_index":1159,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1160,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["blue",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1287,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["brand",{"_index":1764,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["breadcrumb",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":184,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1698,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1736,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1539,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildprocessingmessag",{"_index":1505,"title":{},"body":{"injectables/SettingsService.html":{}}}],["buildrouterlink",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1689,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["burnin",{"_index":1398,"title":{},"body":{"injectables/SettingsService.html":{}}}],["button",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["byui",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["byui.edu",{"_index":1797,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["c.id",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["c3ffe3",{"_index":1356,"title":{},"body":{"injectables/SettingsService.html":{}}}],["calcul",{"_index":1375,"title":{},"body":{"injectables/SettingsService.html":{}}}],["call",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1167,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["candid",{"_index":1389,"title":{},"body":{"injectables/SettingsService.html":{}}}],["canva",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1713,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1847,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1851,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1877,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1862,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1826,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1556,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":939,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":398,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":269,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["categories'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":186,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1086,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["chalk",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["charcoal",{"_index":895,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["charm",{"_index":1393,"title":{},"body":{"injectables/SettingsService.html":{}}}],["check",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["checklocalstorage(key",{"_index":1509,"title":{},"body":{"injectables/SettingsService.html":{}}}],["cheerio",{"_index":1663,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1866,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["chemist",{"_index":1435,"title":{},"body":{"injectables/SettingsService.html":{}}}],["chip",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["choic",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["choos",{"_index":1829,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["choreographi",{"_index":1413,"title":{},"body":{"injectables/SettingsService.html":{}}}],["chosen",{"_index":1583,"title":{},"body":{"injectables/ToolService.html":{}}}],["chrome",{"_index":1387,"title":{},"body":{"injectables/SettingsService.html":{}}}],["circl",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":98,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"issu",{"_index":891,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["classic",{"_index":894,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{}}}],["clear",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{}}}],["click",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["clickabl",{"_index":1839,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":913,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1707,"title":{},"body":{"index.html":{}}}],["close",{"_index":874,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":866,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1935,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1165,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodul",{"_index":903,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_declar",{"_index":904,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_coursetabsmodule_export",{"_index":905,"title":{},"body":{"modules/CourseTabsModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":929,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1553,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1554,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cobalt",{"_index":1352,"title":{},"body":{"injectables/SettingsService.html":{}}}],["code",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["codeeditor",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["codeeditorcompon",{"_index":188,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1919,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1973,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["color",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1723,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":907,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["compodoc",{"_index":1902,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comprehens",{"_index":1491,"title":{},"body":{"injectables/SettingsService.html":{}}}],["comput",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["conceiv",{"_index":1489,"title":{},"body":{"injectables/SettingsService.html":{}}}],["condit",{"_index":1853,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["configur",{"_index":1773,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["conflict",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1769,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["console.error(",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(searchphras",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["console.log(typeof",{"_index":1540,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":871,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1289,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1559,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":983,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":982,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:112",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:126",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:136",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:17",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:23",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:26",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:41",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:61",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:76",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":981,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["contempl",{"_index":1383,"title":{},"body":{"injectables/SettingsService.html":{}}}],["content",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1342,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1717,"title":{},"body":{"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["cours",{"_index":73,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{}}}],["course.course_nam",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":888,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{}}}],["course.id",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":890,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1617,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1894,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursecod",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["coursenam",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":867,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["courseresult",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":191,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1101,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1102,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesobj",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursetabscompon",{"_index":193,"title":{"components/CourseTabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursetabsmodul",{"_index":228,"title":{"modules/CourseTabsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules.html":{},"overview.html":{}}}],["course}",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["cover",{"_index":1758,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1621,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1931,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1157,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1833,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1838,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dancer",{"_index":1409,"title":{},"body":{"injectables/SettingsService.html":{}}}],["daniel\\'d",{"_index":1485,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dank",{"_index":1474,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dark",{"_index":1349,"title":{},"body":{"injectables/SettingsService.html":{}}}],["darken",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":957,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["data.st",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1197,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1903,"title":{},"body":{"additional-documentation/server-architecture.html":{}}}],["datatyp",{"_index":1937,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1953,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["de",{"_index":1391,"title":{},"body":{"injectables/SettingsService.html":{}}}],["decid",{"_index":1816,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":220,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["deploy",{"_index":1695,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["describ",{"_index":1715,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1820,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["desk",{"_index":1408,"title":{},"body":{"injectables/SettingsService.html":{}}}],["detail",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1557,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1060,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1061,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1059,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1062,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1063,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1058,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":739,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["diagnos",{"_index":1370,"title":{},"body":{"injectables/SettingsService.html":{}}}],["diagram",{"_index":1904,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["differ",{"_index":1824,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["direct",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1718,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":427,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["discover(canvasitem",{"_index":1848,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1817,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":415,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1543,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":400,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1719,"title":{},"body":{"index.html":{}}}],["div",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["divid",{"_index":1806,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["do",{"_index":1578,"title":{},"body":{"injectables/ToolService.html":{}}}],["doctor",{"_index":1434,"title":{},"body":{"injectables/SettingsService.html":{}}}],["document",{"_index":1622,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["document.getelementbyid(\"download",{"_index":1158,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1550,"title":{},"body":{"injectables/ToastService.html":{}}}],["doesn't",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["downloadissu",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["duck",{"_index":1402,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dure",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1574,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":889,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1544,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1546,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1547,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}}}],["earlier",{"_index":1891,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1945,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["easier",{"_index":1938,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["eceff1",{"_index":1359,"title":{},"body":{"injectables/SettingsService.html":{}}}],["edit",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1561,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":499,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":500,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":495,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:110",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:140",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":494,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":431,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["electr",{"_index":1453,"title":{},"body":{"injectables/SettingsService.html":{}}}],["element",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["elv",{"_index":1423,"title":{},"body":{"injectables/SettingsService.html":{}}}],["email",{"_index":1961,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["emit",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{}}}],["empti",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1870,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":174,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["encapsul",{"_index":1371,"title":{},"body":{"injectables/SettingsService.html":{}}}],["end",{"_index":1725,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1906,"title":{"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["englishconnect",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["enter",{"_index":1885,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["entifi",{"_index":1484,"title":{},"body":{"injectables/SettingsService.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["environ",{"_index":251,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/development-environment.html":{}}}],["err",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":195,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["essenti",{"_index":1082,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["etc",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["even",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["evict",{"_index":1390,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ex",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exactli",{"_index":1793,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exampl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exclud",{"_index":1798,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["exist",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["explain",{"_index":1810,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["export",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["expos",{"_index":1956,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["express",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1966,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["facebook",{"_index":1783,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["fail",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1886,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["featur",{"_index":1761,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["feedback",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseTabsComponent.html":{}}}],["feel",{"_index":1609,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1781,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1834,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1890,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":82,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase'",{"_index":1760,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["firebase.auth",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["firefox",{"_index":1386,"title":{},"body":{"injectables/SettingsService.html":{}}}],["firestor",{"_index":1762,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firestore'",{"_index":1955,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firestorewrapp",{"_index":1951,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1954,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["first",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fishi",{"_index":1426,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fix",{"_index":426,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix(canvasitem",{"_index":1860,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1908,"title":{},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1827,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1859,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1881,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":428,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1967,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["flatissuedetail",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flex",{"_index":1443,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flip",{"_index":1374,"title":{},"body":{"injectables/SettingsService.html":{}}}],["flow",{"_index":1909,"title":{"additional-documentation/server-architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["fluffi",{"_index":1469,"title":{},"body":{"injectables/SettingsService.html":{}}}],["folder",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1703,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["for/fix",{"_index":1815,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["form",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1294,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1286,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1301,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1481,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1801,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["framework",{"_index":1693,"title":{},"body":{"index.html":{}}}],["freaki",{"_index":1460,"title":{},"body":{"injectables/SettingsService.html":{}}}],["freestyl",{"_index":1457,"title":{},"body":{"injectables/SettingsService.html":{}}}],["fresh",{"_index":1472,"title":{},"body":{"injectables/SettingsService.html":{}}}],["frog",{"_index":1412,"title":{},"body":{"injectables/SettingsService.html":{}}}],["front",{"_index":1724,"title":{},"body":{"index.html":{}}}],["full",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1727,"title":{},"body":{"index.html":{}}}],["function",{"_index":74,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1976,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1922,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1313,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":707,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":868,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(cours",{"_index":877,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["getissueitem",{"_index":1073,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getrandom(arr",{"_index":1501,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getselectedcategori",{"_index":1588,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1592,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1706,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["github",{"_index":1948,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["given",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["gmail",{"_index":1927,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["goe",{"_index":1545,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["gradiat",{"_index":1458,"title":{},"body":{"injectables/SettingsService.html":{}}}],["greater",{"_index":1786,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["green",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1296,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1299,"title":{},"body":{"classes/OptionModel.html":{}}}],["guid",{"_index":1763,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["hacker",{"_index":1437,"title":{},"body":{"injectables/SettingsService.html":{}}}],["handl",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hate",{"_index":1363,"title":{},"body":{"injectables/SettingsService.html":{}}}],["have",{"_index":1792,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["header",{"_index":1152,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1284,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1835,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1880,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{}}}],["highlight",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hippo",{"_index":1441,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hobbit",{"_index":1421,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":229,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["horcrux",{"_index":1392,"title":{},"body":{"injectables/SettingsService.html":{}}}],["host",{"_index":1936,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlinputel",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["icon",{"_index":401,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1701,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1858,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["identifi",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idtoken",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1861,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["ignor",{"_index":1368,"title":{},"body":{"injectables/SettingsService.html":{}}}],["imag",{"_index":1864,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1876,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1869,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1873,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1868,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1867,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1874,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["import",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["in...you",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["incomprehens",{"_index":1490,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inconceiv",{"_index":1488,"title":{},"body":{"injectables/SettingsService.html":{}}}],["increment",{"_index":1971,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["incrementcounts(categori",{"_index":1970,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["index",{"_index":287,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["infinit",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initi",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["initializefirebas",{"_index":1963,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["inject",{"_index":279,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('highlight",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('index",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('sid",{"_index":1530,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1528,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1527,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1529,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1705,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instance'",{"_index":1765,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instanceof",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1924,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["instruct",{"_index":1787,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["instructor",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructur",{"_index":1692,"title":{},"body":{"index.html":{}}}],["integr",{"_index":496,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":396,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["interfer",{"_index":1795,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["intern",{"_index":1965,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["internet",{"_index":1384,"title":{},"body":{"injectables/SettingsService.html":{}}}],["inumer",{"_index":1480,"title":{},"body":{"injectables/SettingsService.html":{}}}],["invert_color",{"_index":893,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["iron",{"_index":1804,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["isad",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":144,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1875,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":198,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecard}",{"_index":1077,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuecontainercompon",{"_index":200,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1064,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":202,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":452,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1854,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1071,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":204,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1072,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":206,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{}}}],["issue}",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["italian",{"_index":1462,"title":{},"body":{"injectables/SettingsService.html":{}}}],["item",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1572,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["janki",{"_index":1475,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jedi",{"_index":1417,"title":{},"body":{"injectables/SettingsService.html":{}}}],["jetpack",{"_index":1432,"title":{},"body":{"injectables/SettingsService.html":{}}}],["js",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1940,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1542,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1913,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1779,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{}}}],["katana/server/node_tool",{"_index":1888,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1892,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1900,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["kick",{"_index":1377,"title":{},"body":{"injectables/SettingsService.html":{}}}],["laser",{"_index":1396,"title":{},"body":{"injectables/SettingsService.html":{}}}],["last",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1575,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1726,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1846,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"dependencies.html":{}}}],["learn",{"_index":1690,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["leav",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["left",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["less",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["letter",{"_index":1822,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1905,"title":{"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"additional-documentation/server-architecture.html":{}}}],["levit",{"_index":1394,"title":{},"body":{"injectables/SettingsService.html":{}}}],["liger",{"_index":1440,"title":{},"body":{"injectables/SettingsService.html":{}}}],["light",{"_index":1350,"title":{},"body":{"injectables/SettingsService.html":{}}}],["lighten",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["lightsab",{"_index":1430,"title":{},"body":{"injectables/SettingsService.html":{}}}],["limegreen",{"_index":1364,"title":{},"body":{"injectables/SettingsService.html":{}}}],["link",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1733,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1555,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1069,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1070,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1068,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":1075,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:25",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:37",{"_index":1078,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":1076,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1067,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["littl",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{}}}],["load",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueListComponent.html":{}}}],["loc",{"_index":1603,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1605,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1607,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1728,"title":{},"body":{"index.html":{}}}],["localstorage.katanathem",{"_index":1498,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage['katanathem",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage[key",{"_index":1510,"title":{},"body":{"injectables/SettingsService.html":{}}}],["locat",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["log",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["logic",{"_index":1843,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["long",{"_index":1969,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["look",{"_index":1586,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1925,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1943,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["magenta",{"_index":1366,"title":{},"body":{"injectables/SettingsService.html":{}}}],["magic",{"_index":1579,"title":{},"body":{"injectables/ToolService.html":{}}}],["maiar",{"_index":1420,"title":{},"body":{"injectables/SettingsService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":759,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1702,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1697,"title":{},"body":{"index.html":{}}}],["major",{"_index":1842,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["manual",{"_index":1933,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1696,"title":{},"body":{"index.html":{}}}],["massiv",{"_index":1084,"title":{},"body":{"components/IssueListComponent.html":{}}}],["master",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":882,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":909,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["math.floor(math.random",{"_index":1502,"title":{},"body":{"injectables/SettingsService.html":{}}}],["matter",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1097,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["medit",{"_index":1395,"title":{},"body":{"injectables/SettingsService.html":{}}}],["meet",{"_index":1852,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1899,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["middlewar",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1856,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{}}}],["mirror",{"_index":1483,"title":{},"body":{"injectables/SettingsService.html":{}}}],["miscellan",{"_index":1741,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1872,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["mix",{"_index":1445,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modal",{"_index":875,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":865,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1305,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":218,"title":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1878,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moist",{"_index":1452,"title":{},"body":{"injectables/SettingsService.html":{}}}],["more",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["more_vert",{"_index":1166,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1777,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["n",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["nav",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1558,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navi",{"_index":896,"title":{},"body":{"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["near",{"_index":1081,"title":{},"body":{"components/IssueListComponent.html":{}}}],["need",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["needl",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1884,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1837,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1756,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newthem",{"_index":1351,"title":{},"body":{"injectables/SettingsService.html":{}}}],["next",{"_index":1656,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["ng",{"_index":1716,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["ninja",{"_index":1405,"title":{},"body":{"injectables/SettingsService.html":{}}}],["node",{"_index":999,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["node.j",{"_index":1772,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["node_tool_template.j",{"_index":1889,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1709,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1896,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1895,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1897,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1928,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":1964,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["normal",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["normi",{"_index":1492,"title":{},"body":{"injectables/SettingsService.html":{}}}],["nosql",{"_index":1784,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":900,"title":{},"body":{"components/CourseTabsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["noth",{"_index":1946,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["notif",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1532,"title":{},"body":{"injectables/ToastService.html":{}}}],["now",{"_index":1780,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["npm",{"_index":1711,"title":{},"body":{"index.html":{}}}],["null",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["numer",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.themes[newtheme]).foreach(key",{"_index":1499,"title":{},"body":{"injectables/SettingsService.html":{}}}],["object:const",{"_index":1893,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1755,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["octet/stream",{"_index":1161,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":498,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1074,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1306,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["op",{"_index":1496,"title":{},"body":{"injectables/SettingsService.html":{}}}],["open",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1310,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":869,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["opencourse(courseid",{"_index":879,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["openmod",{"_index":870,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["oper",{"_index":1388,"title":{},"body":{"injectables/SettingsService.html":{}}}],["opportun",{"_index":1921,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1298,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":411,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1871,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":208,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["other",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1830,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["output",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{}}}],["outsid",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overview",{"_index":1737,"title":{"overview.html":{},"additional-documentation/server-architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1980,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1640,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["page",{"_index":145,"title":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":916,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":912,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:15",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:25",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:33",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:23",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:31",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":493,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":938,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1512,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1143,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["palpat",{"_index":1450,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pancak",{"_index":1447,"title":{},"body":{"injectables/SettingsService.html":{}}}],["panorama_fish_ey",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["parser",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["peopl",{"_index":1410,"title":{},"body":{"injectables/SettingsService.html":{}}}],["persist",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1962,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["phrase",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1515,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["pink",{"_index":1468,"title":{},"body":{"injectables/SettingsService.html":{}}}],["place",{"_index":1610,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["point",{"_index":1576,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/server-architecture.html":{}}}],["poor",{"_index":1083,"title":{},"body":{"components/IssueListComponent.html":{}}}],["popul",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1730,"title":{},"body":{"index.html":{}}}],["posit",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1857,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1497,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prank",{"_index":1403,"title":{},"body":{"injectables/SettingsService.html":{}}}],["pre",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pro",{"_index":1399,"title":{},"body":{"injectables/SettingsService.html":{}}}],["process",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingadject",{"_index":1449,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingmessag",{"_index":1566,"title":{},"body":{"injectables/ToolService.html":{}}}],["processingnoun",{"_index":1404,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processingverb",{"_index":1369,"title":{},"body":{"injectables/SettingsService.html":{}}}],["processor",{"_index":1406,"title":{},"body":{"injectables/SettingsService.html":{}}}],["prod",{"_index":1379,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{}}}],["produc",{"_index":1376,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1465,"title":{},"body":{"injectables/SettingsService.html":{},"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["programm",{"_index":1436,"title":{},"body":{"injectables/SettingsService.html":{}}}],["project",{"_index":1770,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1950,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["properti",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["provid",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["pull",{"_index":1813,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["purifi",{"_index":1397,"title":{},"body":{"injectables/SettingsService.html":{}}}],["purpos",{"_index":399,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["put",{"_index":1293,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1930,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["quiz",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["rabbit",{"_index":1439,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radiat",{"_index":1459,"title":{},"body":{"injectables/SettingsService.html":{}}}],["radic",{"_index":1476,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ran",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["randi",{"_index":1493,"title":{},"body":{"injectables/SettingsService.html":{}}}],["ranger",{"_index":1422,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rate",{"_index":1400,"title":{},"body":{"injectables/SettingsService.html":{}}}],["raven",{"_index":1478,"title":{},"body":{"injectables/SettingsService.html":{}}}],["rc.2",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["rc.8.1",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1080,"title":{},"body":{"components/IssueListComponent.html":{}}}],["reactiv",{"_index":1285,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":915,"title":{},"body":{"components/ErrorPageComponent.html":{},"injectables/KatanaService.html":{}}}],["recommend",{"_index":1803,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["red",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["referenc",{"_index":1850,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1978,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1910,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.highlight",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1863,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["releas",{"_index":901,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["reload",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removecours",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["renam",{"_index":1775,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["render",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1708,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["repres",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('./firestor",{"_index":1952,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["require('cheerio",{"_index":1865,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resid",{"_index":1807,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["resolv",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["respect",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["rest",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/server-architecture/data-flow-diagram.html":{},"additional-documentation/server-architecture/high-level-overview.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["revers",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1977,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1523,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1901,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["rubber",{"_index":1401,"title":{},"body":{"injectables/SettingsService.html":{}}}],["run",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["salti",{"_index":1495,"title":{},"body":{"injectables/SettingsService.html":{}}}],["same",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sandbox",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sassi",{"_index":1464,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sauci",{"_index":1463,"title":{},"body":{"injectables/SettingsService.html":{}}}],["save",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["saxophon",{"_index":1429,"title":{},"body":{"injectables/SettingsService.html":{}}}],["scatter_plot",{"_index":897,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["screen",{"_index":1581,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1079,"title":{},"body":{"components/IssueListComponent.html":{},"dependencies.html":{}}}],["scrub",{"_index":1494,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sdk",{"_index":1771,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["sea",{"_index":1446,"title":{},"body":{"injectables/SettingsService.html":{}}}],["search",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section",{"_index":1828,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1819,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1587,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1597,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1567,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1591,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1600,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":910,"title":{},"body":{"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{}}}],["selection.component.css",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:127",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1562,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":673,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:91",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sentiment_very_dissatisfi",{"_index":1104,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1949,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["server",{"_index":78,"title":{"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/server-architecture.html":{},"additional-documentation/server-architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server.j",{"_index":1720,"title":{},"body":{"index.html":{}}}],["server.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["server/node_tool",{"_index":1808,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["server/settings.json",{"_index":1731,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1788,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["serverdomain",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1958,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["servic",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1598,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1601,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":102,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setlocalstorage(key",{"_index":1511,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setselectedcategori",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcourse(cours",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["setselectedtool(tool",{"_index":1594,"title":{},"body":{"injectables/ToolService.html":{}}}],["setthem",{"_index":1345,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settheme(newthem",{"_index":1347,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settimeout",{"_index":1549,"title":{},"body":{"injectables/ToastService.html":{}}}],["settings.servic",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settings/opt",{"_index":1809,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["settingsservic",{"_index":36,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["settingsservice.buildprocessingmessag",{"_index":1619,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage('goofmessag",{"_index":899,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.checklocalstorage(\\'goofmessag",{"_index":902,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["settingsservice.settheme(localstorage['katanathem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":1154,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["sever",{"_index":1920,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["shadowi",{"_index":1454,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sharp",{"_index":1479,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shazam",{"_index":1442,"title":{},"body":{"injectables/SettingsService.html":{}}}],["shock",{"_index":1486,"title":{},"body":{"injectables/SettingsService.html":{}}}],["short",{"_index":1840,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":914,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1941,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1757,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["similiar",{"_index":1785,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["simpl",{"_index":1800,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1845,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["sith",{"_index":1418,"title":{},"body":{"injectables/SettingsService.html":{}}}],["size",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["sketch",{"_index":1372,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketcher",{"_index":1415,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sketchi",{"_index":1455,"title":{},"body":{"injectables/SettingsService.html":{}}}],["skip",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["slap",{"_index":1378,"title":{},"body":{"injectables/SettingsService.html":{}}}],["small",{"_index":1944,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["snippet",{"_index":1774,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["snowmen",{"_index":1448,"title":{},"body":{"injectables/SettingsService.html":{}}}],["socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1934,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["specifi",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1456,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spring",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["spudtast",{"_index":1473,"title":{},"body":{"injectables/SettingsService.html":{}}}],["spunki",{"_index":1470,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/.../firebase.auth.t",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1283,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1290,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1291,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/cours",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":756,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:116",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:128",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:145",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:161",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:37",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:39",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:43",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:51",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:53",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:67",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:85",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:98",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":397,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/server.service.t",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/server.service.ts:119",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:203",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:22",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:27",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:297",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:60",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:65",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/server.service.ts:90",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/settings.service.t",{"_index":1344,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/settings.service.ts:156",{"_index":1367,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:189",{"_index":1346,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:197",{"_index":1348,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/toast.service.t",{"_index":1531,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1534,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1538,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1536,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":492,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1563,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1573,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1577,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1580,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1585,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1584,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1570,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1571,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1582,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1589,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1590,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1593,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1595,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1569,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1917,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1926,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1234,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1968,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stat",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":210,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1519,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":1789,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stattitl",{"_index":1520,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1704,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["still",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["stop",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["storag",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["straightforward",{"_index":1887,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["structur",{"_index":1914,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["stutter",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["style",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1315,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["submodul",{"_index":1802,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["subscrib",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1929,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["suit",{"_index":1923,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["superstiti",{"_index":1461,"title":{},"body":{"injectables/SettingsService.html":{}}}],["support",{"_index":1734,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["sushi",{"_index":1425,"title":{},"body":{"injectables/SettingsService.html":{}}}],["suspici",{"_index":1942,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1735,"title":{},"body":{"modules.html":{}}}],["swordfish",{"_index":1414,"title":{},"body":{"injectables/SettingsService.html":{}}}],["system",{"_index":1691,"title":{},"body":{"index.html":{}}}],["tab",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["tabs'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tabs.compon",{"_index":911,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs.component.css",{"_index":863,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.html",{"_index":864,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.t",{"_index":861,"title":{},"body":{"components/CourseTabsComponent.html":{},"coverage.html":{}}}],["tabs.component.ts:19",{"_index":872,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":876,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":881,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:47",{"_index":873,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:55",{"_index":880,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.component.ts:65",{"_index":878,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["tabs.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.module.t",{"_index":906,"title":{},"body":{"modules/CourseTabsModule.html":{}}}],["tabs/cours",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"modules/CourseTabsModule.html":{},"coverage.html":{}}}],["tab}",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1103,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1292,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1312,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tape",{"_index":1444,"title":{},"body":{"injectables/SettingsService.html":{}}}],["team",{"_index":1694,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1911,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1712,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1916,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1710,"title":{},"body":{"index.html":{}}}],["text",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1821,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["that'",{"_index":1778,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["that\\'",{"_index":1477,"title":{},"body":{"injectables/SettingsService.html":{}}}],["the_tool_nam",{"_index":1825,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["theme",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["then((cours",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":350,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":758,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["think",{"_index":1382,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this._selectedcategori",{"_index":1596,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1599,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1608,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1094,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1616,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":884,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcours",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1100,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1065,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1066,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.getsession().getvalu",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('maxlin",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('minlin",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.getrandom(this.processingadject",{"_index":1507,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingnoun",{"_index":1508,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getrandom(this.processingverb",{"_index":1506,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettoollist",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.highlight",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.http.get(`/api/tool",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html['updatedhtml",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1095,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1099,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1098,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1096,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":885,"title":{},"body":{"components/CourseTabsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1295,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1297,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1282,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.themes[newtheme][key",{"_index":1500,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.toastservice.toasterror(err",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1606,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1939,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1831,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["tickl",{"_index":1467,"title":{},"body":{"injectables/SettingsService.html":{}}}],["time",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1521,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1548,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1535,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1533,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1537,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseTabsComponent.html":{},"injectables/SettingsService.html":{}}}],["togroup",{"_index":1288,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1979,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tomb",{"_index":1407,"title":{},"body":{"injectables/SettingsService.html":{}}}],["tool",{"_index":48,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tool'",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool.icon",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1602,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1790,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolcategori",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1959,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["toolpagemodul",{"_index":230,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":213,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1620,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":214,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1568,"title":{},"body":{"injectables/ToolService.html":{}}}],["toothpast",{"_index":1471,"title":{},"body":{"injectables/SettingsService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["total",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["trim",{"_index":1381,"title":{},"body":{"injectables/SettingsService.html":{}}}],["true",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["turn",{"_index":898,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["two",{"_index":1841,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1541,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1721,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["unbeliev",{"_index":1487,"title":{},"body":{"injectables/SettingsService.html":{}}}],["undefin",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["underscor",{"_index":1823,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["undul",{"_index":1451,"title":{},"body":{"injectables/SettingsService.html":{}}}],["unexpectedli",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["unicorn",{"_index":1427,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uniqu",{"_index":1832,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["univers",{"_index":1700,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1932,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":535,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["urukai",{"_index":1424,"title":{},"body":{"injectables/SettingsService.html":{}}}],["us",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["user_log",{"_index":1791,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1960,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["valid",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1300,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/node-tools.html":{}}}],["var",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1631,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":757,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{}}}],["veri",{"_index":1799,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifi",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{}}}],["verifynewus",{"_index":1975,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["vermillion",{"_index":1466,"title":{},"body":{"injectables/SettingsService.html":{}}}],["via",{"_index":760,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["view'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseTabsComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1303,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1304,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1302,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:14",{"_index":1611,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:22",{"_index":1613,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:23",{"_index":1615,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:24",{"_index":1614,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:29",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:30",{"_index":1612,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:33",{"_index":1317,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1307,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1318,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1316,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1308,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1309,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1311,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('codeeditor",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('editor",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["virtual",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["visibl",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseTabsComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/SettingsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wait",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1883,"title":{},"body":{"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatchamacallit",{"_index":1416,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whatev",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1729,"title":{},"body":{"index.html":{}}}],["white",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whiteboard",{"_index":1433,"title":{},"body":{"injectables/SettingsService.html":{}}}],["whitespac",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1604,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.port",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":886,"title":{},"body":{"components/CourseTabsComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1162,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["wizard",{"_index":1419,"title":{},"body":{"injectables/SettingsService.html":{}}}],["won't",{"_index":1794,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["word",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1907,"title":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/server-architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1659,"title":{"additional-documentation/firebase/firebase-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wrapper'",{"_index":1957,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["wrapper.j",{"_index":1947,"title":{},"body":{"additional-documentation/firebase/firebase-wrapper.html":{}}}],["written",{"_index":1974,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["wyvern",{"_index":1411,"title":{},"body":{"injectables/SettingsService.html":{}}}],["xylophon",{"_index":1428,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yahoo",{"_index":1385,"title":{},"body":{"injectables/SettingsService.html":{}}}],["yellow",{"_index":1365,"title":{},"body":{"injectables/SettingsService.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1836,"title":{},"body":{"additional-documentation/setup/node-tools.html":{}}}],["you'll",{"_index":1766,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{}}}],["you'r",{"_index":1912,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1699,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CourseTabsModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, settingsService: SettingsService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nBeing used in app.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './server.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\nimport { SettingsService } from './settings.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Being used in app.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private settingsService: SettingsService,\n        private authGuardService: AuthGuardService) {\n\n        // Set the theme\n        if (localStorage['katanaTheme']) {\n            settingsService.setTheme(localStorage['katanaTheme'])\n        }\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                // document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    // document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    // document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CourseTabsModule\n                            \n                            \n                                    HomePageModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { CourseTabsModule } from './course-tabs/course-tabs.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        CourseTabsModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        Builds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Builds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:25\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\n\n/**\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n */\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /**\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /**\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     */\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Being used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Being used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlight\n                            \n                            \n                                issue\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor)\ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue the code editor is displaying code for.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:65\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:44\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:39\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can\ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:56\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is\ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\nimport { Issue } from '../../interfaces';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /**\n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor)\n     * can also be passed in.\n     */\n    @Input('highlight') highlight: string;\n\n    /**\n     * The issue the code editor is displaying code for.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * Element reference to the editor div itself so we can\n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is\n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        const EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        const searchBox = window['ace'].require('ace/searchbox');\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            const code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption('minLines', 10);\n        this.editor.setOption('maxLines', 30);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        this.editor.on('change', () => {\n            if (this.issue.status === 'approved') {\n                this.issue.status = 'untouched';\n            }\n            this.issue.html['updatedHtml'] = this.editor.getSession().getValue();\n        });\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.highlight) {\n            // Converts the provided search phrase to a RegExp\n            const reg = new RegExp(this.highlight, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption('maxLines', this.viewExpanded ? 30 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../server.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter and make everything lowercase\n            const searchPhrase = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n            console.log(searchPhrase);\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchPhrase: searchPhrase,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you\n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchPhrase === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        } else {\n            /* If the string in the search box is less than three characters\n            then stop searching and set the returned course results to an empty array\n            instead of leaving the last results in the table */\n            this.searching = false;\n            this.courseResults = [];\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                const name1 = a[param].toLowerCase();\n                const name2 = b[param].toLowerCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n            \n            Development\n            Online\n              Sandbox\n              Pathway -->\n            EnglishConnect\n            All\n          \n        \n        Term\n          \n            \n            Fall\n            Winter\n            Spring -->\n            Master Courses\n            Default Term\n            All\n          \n        \n        Blueprint\n          \n            \n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search Term\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                                  Development            Online              Sandbox              Pathway -->            EnglishConnect            All                          Term                                  Fall            Winter            Spring -->            Master Courses            Default Term            All                          Blueprint                                  True            False            All                          Search By                      Instructor            Course                                    Search Term                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:161\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:37\n                            \n                        \n\n                \n                    \n                        Emits when a the selected course has changed. Used by lazy-loading components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:39\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen = false;\n\n    /**\n     * Emits when a the selected course has changed. Used by lazy-loading components.\n     */\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseTabsComponent.html":{"url":"components/CourseTabsComponent.html","title":"component - CourseTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-tabs/course-tabs/course-tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The Course Tabs bar, along with the action buttons (settings, feedback, etc.). \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-tabs\n            \n\n            \n                styleUrls\n                course-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                courseOverlay\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for courses selected by the user.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and functionality for tools available on the server.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Toggles the course overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(course: , status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe course to count issues in\n\n\n                                                        \n                                                \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse(courseId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The Canvas ID of the course\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the feedback modal.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-tabs/course-tabs/course-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                        Used to open and close the modal for feedback.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { SettingsService } from '../../settings.service';\nimport { KatanaService } from '../../server.service';\n\n/** The Course Tabs bar, along with the action buttons (settings, feedback, etc.). */\n@Component({\n    selector: 'app-course-tabs',\n    templateUrl: './course-tabs.component.html',\n    styleUrls: ['./course-tabs.component.css']\n})\nexport class CourseTabsComponent {\n\n    /**\n     * Used to open and close the modal for feedback.\n     */\n    modalActions = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and functionality for courses selected by the user.\n     * @param toolService Provides information and functionality for tools available on the server.\n     */\n    constructor(private courseService: CourseService,\n        private toolService: ToolService,\n        private settingsService: SettingsService) { }\n\n    /**\n     * Toggles the course overlay open and closed.\n     */\n    courseOverlay() {\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n    }\n\n    /**\n     * Opens the feedback modal.\n     */\n    openModal() {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the feedback modal.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {number} courseId The Canvas ID of the course\n     */\n    openCourse(courseId: number): void {\n        window.open('https://byui.instructure.com/courses/' + courseId, '_blank');\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {Course} course - The course to count issues in\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(course, status): number | string {\n        if (!course.issueItems) return 0;\n        if (course.error) return 'E';\n        return course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n\n            \n                {{course.course_code}}\n                 0\" class=\"issue-badge\">{{getIssueCount(course, 'untouched')}}\n            \n\n            \n                \n                    open_in_new\n                \n                \n                    clear\n                \n            \n        \n        \n\n        \n        \n\n            \n            \n                edit\n            \n\n            \n            \n                feedback\n            \n\n            \n            \n                settings\n                \n                \n                    \n                        \n                            invert_colors\n                            Classic Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Charcoal Theme\n                        \n                    \n                    \n                        \n                            invert_colors\n                            Navy Theme\n                        \n                    \n                    \n                    \n                        \n                            scatter_plot\n                            Turn Loading Messages {{settingsService.checkLocalStorage('goofMessages') ? 'Off' : 'On'}}\n                        \n                    \n                    \n                        \n                            notes\n                            Release Notes\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n            Loading...\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{course.course_code}}                 0\" class=\"issue-badge\">{{getIssueCount(course, \\'untouched\\')}}                                                            open_in_new                                                    clear                                                                                                    edit                                                    feedback                                                    settings                                                                                                        invert_colors                            Classic Theme                                                                                                                    invert_colors                            Charcoal Theme                                                                                                                    invert_colors                            Navy Theme                                                                                                                                        scatter_plot                            Turn Loading Messages {{settingsService.checkLocalStorage(\\'goofMessages\\') ? \\'Off\\' : \\'On\\'}}                                                                                                                    notes                            Release Notes                                                                                                                        Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseTabsModule.html":{"url":"modules/CourseTabsModule.html","title":"module - CourseTabsModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseTabsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/course-tabs/course-tabs.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseTabsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseTabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseTabsComponent } from './course-tabs/course-tabs.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseTabsComponent\n    ],\n    declarations: [\n        CourseSelectionComponent,\n        CourseTabsComponent\n    ]\n})\nexport class CourseTabsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n    \n        Description\n    \n    \n        An error page to display various client-side errors, and errors received from the server. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Being used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../server.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n/** An error page to display various client-side errors, and errors received from the server. */\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Being used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeEditor\n                            \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display. \n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is initialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codeEditor:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        A reference to the code editor element for the respective issue. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /** The issue attached to the display. */\n    @Input('issue') issue: Issue;\n\n    /** The index of the item's issues array the issue is at. */\n    @Input('index') index: number;\n\n    /** Element reference to the card containing details about the issue. */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /** A reference to the code editor element for the respective issue. */\n    @ViewChild('codeEditor') codeEditor: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is initialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                const control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            };\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2';\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Provides IssueItems to load into the list as {@link IssueCard}s, based on the\nnumber allowed (issueItemCount).\n\n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\nload more IssueItems into the list. This is, essentially, lazy loading. It helps prevent\npoor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:19\n                            \n                        \n\n                \n                    \n                        The number of IssueItems currently loaded in the list. Used for lazy loading. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:16\n                            \n                        \n\n                \n                    \n                        Element reference to the issue list. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    /** Element reference to the issue list. */\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    /** The number of {@link IssueItem}s currently loaded in the list. Used for lazy loading. */\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    /** \n     * Runs as the user scrolls down the list. If the user reaches near the bottom of the list, it will\n     * load more {@link IssueItem}s into the list. This is, essentially, lazy loading. It helps prevent\n     * poor load times with massive amounts of IssueItems, but does cause a little bit of stuttering.\n     */\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    /** \n     * Provides {@link IssueItem}s to load into the list as {@link IssueCard}s, based on the\n     * number allowed (issueItemCount).\n     */\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../server.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/server.service.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:297\n                            \n                        \n\n\n                \n                    \n                            Handles errors for this service. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Retrieves a list of courses from Canvas.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:27\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:22\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server.service.ts:60\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\nimport { resolve } from 'url';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /**\n     * Retrieves a list of courses from Canvas.\n     */\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        const data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /** Handles errors for this service. */\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../server.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: 'modal', params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        const options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        const categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    \n        Click here to Add Courses\n    \n    arrow_forward\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!                Click here to Add Courses        arrow_forward'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles user settings, such as the theme.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.service.ts:189\n                            \n                        \n\n                \n                    \n                            Constructor \n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(newTheme: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/settings.service.ts:197\n                            \n                        \n\n\n                \n                    \n                            Toggles the theme between dark and light.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTheme\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.service.ts:156\n                            \n                        \n\n                \n                    \n                        The themes that can be set. Set by using the setTheme() method on this service.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Handles user settings, such as the theme.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    /** @ignore */\n    processingVerbs = [\n        'Diagnosing',\n        'Encapsulating',\n        'Sketching',\n        'Airating',\n        'Flipping',\n        'Calculating',\n        'Producing',\n        'Kicking',\n        'Slapping',\n        'Prodding',\n        'Aging',\n        'Trimming',\n        'Typing',\n        'Thinking',\n        'Contemplating',\n        'Ordering',\n        'Internetting',\n        'Googling',\n        'Yahooing',\n        'Firefoxing',\n        'Chroming',\n        'Operating',\n        'Candidating',\n        'Evicting',\n        'De-Horcruxing',\n        'Charming',\n        'Levitating',\n        'Meditating with',\n        'Lasering',\n        'Purifying',\n        'Burninating',\n        'Pro-rating',\n        'Rubber ducking',\n        'Pranking'\n    ];\n\n    /** @ignore */\n    processingNouns = [\n        'ninjas',\n        'processors',\n        'tombs',\n        'desks',\n        'files',\n        'dancers',\n        'people',\n        'wyverns',\n        'frogs',\n        'developers',\n        'pages',\n        'discussions',\n        'choreography',\n        'swordfish',\n        'sketchers',\n        'whatchamacallits',\n        'jedi',\n        'sith',\n        'wizards',\n        'maiar',\n        'hobbits',\n        'rangers',\n        'elves',\n        'urukai',\n        'rubber ducks',\n        'sushi',\n        'fishies',\n        'unicorns',\n        'xylophones',\n        'saxophones',\n        'lightsabers',\n        'blasters',\n        'jetpacks',\n        'whiteboards',\n        'doctors',\n        'chemists',\n        'programmers',\n        'hackers',\n        'bananas',\n        'rabbits',\n        'ligers',\n        'hippos',\n        'shazams',\n        'flex tape',\n        'mix tapes',\n        'sea pancakes',\n        'snowmen',\n        'katanas'\n    ];\n\n    /** @ignore */\n    processingAdjectives = [\n        'palpatating',\n        'undulating',\n        'moist',\n        'electrical',\n        'shadowy',\n        'sketchy',\n        'spinning',\n        'freestyling',\n        'gradiating',\n        'radiating',\n        'freaky',\n        'superstitious',\n        'italian',\n        'saucy',\n        'sassy',\n        'productive',\n        'general',\n        'vermillion',\n        'tickle-me-pink',\n        'fluffy',\n        'spunky',\n        'toothpaste-fresh',\n        'spudtastic',\n        'dank',\n        'janky',\n        'radical',\n        'wizard',\n        'that\\'s-so-raven',\n        'sharp',\n        'inumerable',\n        'fresh',\n        'forward',\n        'backward',\n        'mirrored',\n        'entifiable',\n        'Daniel\\'d',\n        'shocked',\n        'unbelievable',\n        'inconceivable',\n        'conceivable',\n        'incomprehensible',\n        'comprehensible',\n        'normie',\n        'randy',\n        'scrub',\n        'salty',\n        'OP',\n        'practical',\n    ];\n\n    /** \n     * The themes that can be set. Set by using the `setTheme()` method on this service.\n     */\n    themes = {\n        classic: {\n            'cobalt': '#2879B5',\n            'navy': '#183A54',\n            'navy-light': '#2D4B63',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        charcoal: {\n            'cobalt': '#65727D',\n            'navy': '#1C2023',\n            'navy-light': '#252A2E',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        navy: {\n            'cobalt': '#183A54',\n            'navy': '#2D4B63',\n            'navy-light': '#2D4B9f',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': '#eceff1',\n        },\n        hate: {\n            'cobalt': 'limegreen',\n            'navy': 'yellow',\n            'navy-light': 'magenta',\n            'mint': '#c3ffe3',\n            'charcoal': '#65727D',\n            'ashen': 'red',\n        }\n    }\n\n    /** Constructor */\n    constructor() { }\n\n    /**\n     * Toggles the theme between dark and light.\n     */\n    setTheme(newTheme) {\n        localStorage.katanaTheme = newTheme;\n        Object.keys(this.themes[newTheme]).forEach(key => {\n            document.documentElement.style.setProperty(`--${key}`, this.themes[newTheme][key]);\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    getRandom(arr) {\n        let randy = Math.floor(Math.random() * arr.length);\n        return arr[randy];\n    }\n\n    /**\n     * @ignore\n     */\n    buildProcessingMessage() {\n        return `${this.getRandom(this.processingVerbs)} ${this.getRandom(this.processingAdjectives)} ${this.getRandom(this.processingNouns)}...`;\n    }\n\n    /**\n     * @ignore\n     */\n    checkLocalStorage(key) {\n        return localStorage[key] === 'true';\n    }\n\n    /**\n     * @ignore\n     */\n    setLocalStorage(key) {\n        localStorage[key] = localStorage[key] === 'true' ? 'false' : 'true';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The API path to the item in Canvas */\n    item_path: string;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                settingsService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides this component with access to user settings.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:22\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settingsService:     SettingsService\n\n                    \n                \n                    \n                        \n                            Type :     SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Provides this component with access to user settings.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { SettingsService } from '../../settings.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param settingsService Provides this component with access to user settings.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public settingsService: SettingsService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{settingsService.checkLocalStorage('goofMessages') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{settingsService.checkLocalStorage(\\'goofMessages\\') ? settingsService.buildProcessingMessage() : toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseTabsComponent', 'selector': 'app-course-tabs'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/course-tabs/course-tabs/course-tabs.component.ts\n            \n            \n                component\n            \n            \n                CourseTabsComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/server.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/settings.service.ts\n            \n            \n                injectable\n            \n            \n                SettingsService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular-lazy-for : ^1.1.5\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-infinite-scroll : ^0.3.5\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-virtual-scroll : ^0.3.4\n        \n            angularfire2 : ^5.0.0-rc.8.1-next\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.3.1\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the Katana repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nRun server.js with Node however you would like (typically with npm start)\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nDocumentation\nSetup\nSet up a Node Tool\nSet up Firebase\nClient Architecture (Angular)\n\nLinkName \nServer Architecture\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseTabsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CourseTabsModule\n\n\n\ncluster_CourseTabsModule_declarations\n\n\n\ncluster_CourseTabsModule_exports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCourseTabsModule\n\nCourseTabsModule\n\nAppModule -->\n\nCourseTabsModule->AppModule\n\n\n\n\n\nCourseTabsComponent \n\nCourseTabsComponent \n\nCourseTabsComponent  -->\n\nCourseTabsModule->CourseTabsComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nCourseTabsModule -->\n\nCourseSelectionComponent->CourseTabsModule\n\n\n\n\n\nCourseTabsComponent\n\nCourseTabsComponent\n\nCourseTabsModule -->\n\nCourseTabsComponent->CourseTabsModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting Up Firebase\nKatana uses three of Firebase's features: Authentication, Database (firestore), and Functions. This will guide you through settings up all three on a brand new instance. If you already have an instance set up, but need to set up your instance's Firebase service account key, you'll just need to generate a new private key.\nFirebase Authentication\nIn order for the server to be able to authenticate each request that is sent to it (i.e. to run a tool), it needs to have access to a \"Service Account.\" This is essentially a developer key, but for firebase. It just allows an application to act as an admin on Firebase without an actual account.\nGenerate Private Key\nTo create the key for the service account:\n\nGo to the Firebase Console and navigate to the Katana project\nClick the \"Settings\" icon next to the \"Project Overview\" button at the top left\nSelect \"Project Settings\"\nSelect the \"Service accounts\" tab\nMake sure \"Firebase Admin SDK\" is selected, and that \"Node.js\" is selected as the Admin SDK configuration snippet\nClick \"Generate new private key\" at the bottom (this will download a file)\nRename the downloaded file to auth.json and move it into the server directory in your instance of Katana\nThat's it! Katana's server will now be able to integrate with your instance of Firebase\n\nIntegrating Firebase by creating a private key, as described above, will complete the needed steps for setting up authentication, but there are a few things to be aware of. Currently:\n\nKatana depends entirely on Google accounts. Users cannot create new accounts, use Facebook, or other means to log in.\n\nFirebase Database\nKatana uses Firestore. It is a NoSQL database, similiar to Firebase Database, but with greater functionality. It is currently used just to store logs.\nFollow Firebase's Instructions to set up your instance of Firestore. After that, you will need to create these collections:\n\nserver_logs\nstatistics\ntool_logs\nuser_logs\n\nThese are identified by name by Katana, so having these names match exactly is important. Additional collections can be added as needed - they won't interfere.\nFirebase Functions\nFirebase Functions is a feature that allows you to deploy event listeners that fire on certain database actions. It is entirely backend. Currently, its only purpose is to verify that the user is using a Google BYUI account (\"@byui.edu\"). This can be adjusted for any instance, or entirely excluded. \nDeploying Firebase Functions is very simple. The instructions can be found here.\nYou may need to create a git repository or a submodule. I would recommend a submodule (which is currently not being used, ironically).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDevelopment Environment\nOverview\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid accounts added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture.html":{"url":"additional-documentation/server-architecture.html","title":"additional-page - Server Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/server-endpoints.html":{"url":"additional-documentation/server-architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/server-architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/data-flow-diagram.html":{"url":"additional-documentation/server-architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-architecture/high-level-overview.html":{"url":"additional-documentation/server-architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-wrapper.html":{"url":"additional-documentation/firebase/firebase-wrapper.html","title":"additional-page - Firebase Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nThese public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\nincrementCounts(category, statistic, count)\ncategory {string} statistic {string} count {number}\nvoid\nUsed to increment counts saved under statistics in Firestore.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
