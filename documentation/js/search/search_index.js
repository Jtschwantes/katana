var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.465,1,1.083]],["body/components/AppComponent.html",[0,0.756,1,1.552,2,0.412,3,0.412,4,0.89,5,1.027,6,1.027,7,0.297,8,2.72,9,0.522,10,4.536,11,3.899,12,1.892,13,3.166,14,4.536,15,3.899,16,1.996,17,1.155,18,2.966,19,3.899,20,3.899,21,1.027,22,2.404,23,2.291,24,2.916,25,1.472,26,4.536,27,1.472,28,6.129,29,1.291,30,2.428,31,3.662,32,2.181,33,3.515,34,2.528,35,4.319,36,3.515,37,0.771,38,3.165,39,3.029,40,4.536,41,3.479,42,2.373,43,5.301,44,2.283,45,1.807,46,3.166,47,0.573,48,0.995,49,2.697,50,3.899,51,3.166,52,2.373,53,3.556,54,2.529,55,3.164,56,2.373,57,4.536,58,4.536,59,2.234,60,2.234,61,1.552,62,0.666,63,0.019,64,0.732,65,0.412,66,0.59,67,0.734,68,1.257,69,1.88,70,2.073,71,1.566,72,1.046,73,2.174,74,2.373,75,1.472,76,2.529,77,1.216,78,1.003,79,3.479,80,3.899,81,1.337,82,2.529,83,1.995,84,2.333,85,0.855,86,0.634,87,3.456,88,5.301,89,1.393,90,1.191,91,2.034,92,2.72,93,1.393,94,2.209,95,0.364,96,0.341,97,1.41,98,1.764,99,2.556,100,3.165,101,3.899,102,4.536,103,0.603,104,3.165,105,3.165,106,2.707,107,3.899,108,4.536,109,2.697,110,4.536,111,3.165,112,2.034,113,2.72,114,4.977,115,3.899,116,5.268,117,2.72,118,3.899,119,3.165,120,2.72,121,1.191,122,2.428,123,2.428,124,3.165,125,3.165,126,1.996,127,3.165,128,2.72,129,3.165,130,3.165,131,2.72,132,0.516,133,3.165,134,3.165,135,3.165,136,1.472,137,2.428,138,0.932,139,0.364,140,4.066,141,2.428,142,3.165,143,1.559,144,3.165,145,3.165,146,3.165,147,0.955,148,3.165,149,2.72,150,3.165,151,2.234,152,3.165,153,2.72,154,1.656,155,2.428,156,0.573,157,3.165,158,3.165,159,3.165,160,3.165,161,2.852,162,2.916,163,3.166,164,1.721,165,3.899,166,4.536,167,2.529,168,2.707,169,0.809,170,0.821,171,1.403,172,1.472,173,1.552,174,1.027,175,3.165,176,3.165,177,1.027,178,0.848,179,1.027,180,0.544,181,1.027,182,0.848,183,0.489,184,1.027,185,0.848,186,1.027,187,0.809,188,1.472,189,0.848,190,1.027,191,0.809,192,0.573,193,1.027,194,0.848,195,1.027,196,0.544,197,1.027,198,0.848,199,1.027,200,0.848,201,1.027,202,0.848,203,1.027,204,0.771,205,1.027,206,0.848,207,0.979,208,1.027,209,0.544,210,0.809,211,1.027,212,0.011,213,0.011]],["title/modules/AppModule.html",[214,1.446,215,2.82]],["body/modules/AppModule.html",[0,0.782,1,1.998,2,0.552,3,0.552,7,0.399,36,3.811,41,4.254,47,0.448,55,2.533,61,1.137,63,0.019,68,1.119,81,1.251,85,1.003,86,0.85,89,1.867,94,2.962,95,0.711,96,0.458,121,1.597,169,1.084,180,0.953,191,1.417,204,1.351,209,0.729,210,1.417,212,0.013,213,0.013,214,2.212,215,5.274,216,2.366,217,3.971,218,3.971,219,3.647,220,3.647,221,3.647,222,3.647,223,3.647,224,4.482,225,4.482,226,4.482,227,3.565,228,4.243,229,5.546,230,3.647,231,3.255,232,3.871,233,2.962,234,5.546,235,3.647,236,5.546,237,3.647,238,1.77,239,3.647,240,3.255,241,4.243,242,3.255,243,5.546,244,4.243,245,5.546,246,3.647,247,2.728,248,4.243,249,4.243,250,2.853,251,3.647,252,5.546,253,3.971,254,4.243,255,4.243,256,2.962,257,4.254,258,2.962,259,3.255,260,3.255,261,2.962,262,3.871,263,3.647,264,2.533,265,5.546,266,3.243,267,1.313,268,5.546,269,5.546,270,4.254,271,5.31,272,4.243,273,4.243,274,4.243,275,4.243,276,4.243]],["title/injectables/AuthGuardService.html",[36,2.113,277,1.685]],["body/injectables/AuthGuardService.html",[2,0.468,3,0.468,7,0.338,9,0.571,17,1.392,18,2.988,29,0.875,31,4.077,36,2.594,37,1.715,41,3.804,42,1.879,44,1.286,45,1.895,52,2.594,56,2.594,59,2.443,61,1.781,62,0.756,63,0.019,64,0.496,65,0.836,66,0.468,67,0.74,68,1.028,77,1.329,81,1.806,85,0.865,86,0.72,87,2.144,89,1.581,95,0.414,96,0.388,97,1.097,99,2.771,103,0.945,106,3.655,121,1.866,132,1.162,139,0.811,156,1.109,161,3.417,162,3.936,163,4.975,164,1.988,192,0.65,212,0.012,213,0.012,240,2.756,242,4.356,246,3.088,271,5.71,277,2.369,278,3.088,279,4.929,280,3.804,281,3.868,282,5.71,283,5.71,284,2.96,285,0.586,286,2.3,287,6.643,288,6.123,289,1.534,290,6.123,291,6.123,292,6.123,293,3.593,294,6.643,295,3.593,296,5.679,297,4.881,298,2.055,299,3.593,300,2.068,301,1.394,302,3.593,303,3.414,304,4.959,305,1.462,306,3.593,307,3.188,308,4.959,309,3.804,310,3.593,311,3.593,312,3.593,313,6.123,314,3.593,315,0.834,316,3.593,317,4.959,318,3.188,319,4.263,320,2.309,321,3.593,322,1.111,323,3.593,324,1.581,325,3.593,326,3.593,327,3.593,328,3.593,329,3.964,330,3.593,331,3.593,332,6.123,333,3.593,334,3.593,335,3.593,336,3.593,337,3.088,338,2.309,339,3.593,340,3.593,341,3.593,342,3.593,343,3.593,344,3.593,345,3.593,346,3.593,347,3.593,348,3.593,349,3.593]],["title/components/BreadcrumbsComponent.html",[0,0.465,178,1.083]],["body/components/BreadcrumbsComponent.html",[0,0.735,1,0.946,2,0.459,3,0.459,4,0.992,5,1.145,6,1.145,7,0.331,9,0.647,15,4.21,17,1.1,18,3.303,21,1.145,22,2.435,23,2.321,25,1.59,27,1.59,29,1.37,30,2.707,31,3.911,34,2.744,36,3.614,37,1.609,44,1.263,47,0.515,48,0.607,49,2.475,56,2.562,62,1.031,63,0.019,64,0.839,65,0.638,66,0.732,67,0.818,71,1.437,72,0.822,83,2.117,84,2.475,85,0.831,86,0.707,89,1.553,93,1.553,94,2.463,95,0.406,96,0.381,97,1.461,98,1.967,99,1.472,103,0.933,109,2.475,121,2.287,132,1.105,138,0.933,139,0.699,141,3.757,156,1.156,168,2.923,169,0.902,170,0.887,171,1.515,172,1.59,173,1.629,174,1.145,177,1.145,178,1.629,179,1.145,180,0.607,181,1.145,182,0.946,183,0.545,184,1.145,185,0.946,186,1.145,187,0.902,188,1.59,189,0.946,190,1.145,191,0.902,192,0.639,193,1.145,194,0.946,195,1.145,196,0.607,197,1.145,198,0.946,199,1.145,200,0.946,201,1.145,202,0.946,203,1.145,204,0.859,205,1.145,206,0.946,207,1.092,208,1.145,209,0.607,210,0.902,211,1.145,212,0.012,213,0.012,238,1.472,250,1.939,266,2.278,270,3.757,279,4.897,285,0.575,286,2.014,289,1.515,297,4.21,298,1.88,301,1.581,303,3.388,315,0.819,318,3.616,350,3.778,351,3.033,352,3.627,353,6.076,354,4.898,355,7.102,356,1.669,357,4.898,358,6.384,359,4.661,360,4.898,361,4.661,362,4.661,363,4.898,364,3.418,365,4.898,366,3.528,367,2.155,368,4.898,369,2.731,370,1.444,371,2.278,372,3.528,373,3.81,374,5.299,375,1.753,376,3.528,377,2.528,378,3.528,379,2.707,380,1.846,381,3.757,382,1.939,383,3.528,384,4.21,385,4.898,386,3.757]],["title/components/CategoriesComponent.html",[0,0.465,180,0.694]],["body/components/CategoriesComponent.html",[0,0.764,1,1.057,2,0.513,3,0.513,4,1.109,5,1.28,6,1.28,7,0.37,9,0.686,11,4.541,21,1.28,22,2.464,23,2.348,25,1.715,27,1.715,29,1.451,31,2.946,32,2.302,34,2.774,37,1.451,47,0.572,48,0.678,49,2.622,53,2.946,56,2.764,62,1.112,63,0.019,64,0.878,65,0.688,66,0.776,67,0.786,71,1.745,72,0.97,78,1.543,83,2.242,84,2.622,85,0.776,86,0.79,90,1.484,93,1.735,95,0.454,96,0.425,97,1.317,99,1.645,103,1.007,109,2.801,132,1.082,138,0.97,139,0.608,147,1.34,169,1.008,170,0.957,171,1.634,172,1.715,173,1.706,174,1.28,177,1.28,178,1.057,179,1.28,180,1.094,181,1.28,182,1.057,183,0.609,184,1.28,185,1.057,186,1.28,187,1.008,188,1.715,189,1.057,190,1.28,191,1.008,192,0.714,193,1.28,194,1.057,195,1.28,196,0.678,197,1.28,198,1.057,199,1.28,200,1.057,201,1.28,202,1.057,203,1.28,204,0.96,205,1.28,206,1.057,207,1.22,208,1.28,209,0.678,210,1.008,211,1.28,212,0.013,213,0.013,267,2.342,279,4.052,285,0.643,286,1.891,289,1.634,301,1.109,324,1.735,350,3.549,370,1.957,371,2.457,377,2.092,387,3.389,388,1.35,389,2.768,390,1.8,391,5.283,392,6.636,393,5.283,394,2.752,395,3.943,396,4.052,397,4.052,398,4.541,399,3.943,400,3.943,401,1.558,402,0.96,403,3.943,404,4.541,405,4.541,406,4.541]],["title/interfaces/Category.html",[267,1.25,407,0.731]],["body/interfaces/Category.html",[2,0.379,3,0.379,7,0.273,9,0.737,12,1.781,17,1.074,45,0.858,47,0.591,48,0.5,63,0.019,64,0.402,65,0.926,66,0.939,67,0.84,72,1.039,75,0.945,77,0.78,78,1.37,85,0.556,95,0.756,96,0.314,103,0.814,132,0.475,136,1.354,138,1.031,139,0.756,147,0.613,156,0.915,164,1.386,170,1.122,180,0.869,183,0.659,192,0.773,196,0.869,209,0.5,212,0.012,213,0.01,250,1.69,266,1.354,267,2.245,285,0.475,300,1.781,301,1.667,305,1.259,315,0.991,322,1.321,356,1.455,367,1.879,370,1.748,371,1.354,382,1.153,388,0.744,389,2.585,390,1.455,401,2.151,402,1.444,407,1.298,408,1.434,409,2.233,410,1.528,411,1.682,412,2.122,413,2.486,414,2.473,415,2.07,416,2.233,417,3.052,418,2.757,419,2.882,420,2.45,421,1.153,422,2.348,423,2.913,424,1.281,425,1.879,426,1.902,427,1.834,428,2.727,429,1.386,430,2.351,431,1.879,432,1.879,433,2.323,434,1.879,435,1.993,436,2.205,437,1.641,438,1.455,439,1.902,440,1.81,441,1.69,442,2.002,443,1.523,444,1.281,445,1.386,446,1.214,447,1.153,448,2.112,449,1.281,450,1.523,451,1.523,452,2.182,453,1.214,454,1.781,455,2.103,456,1.523,457,2.49,458,1.096,459,1.281,460,1.281,461,1.781,462,1.492,463,1.354,464,1.042,465,1.354,466,1.096,467,1.69,468,1.153,469,1.096,470,1.354,471,1.523,472,1.523,473,1.153,474,1.434,475,1.523,476,1.523,477,2.132,478,1.281,479,1.434,480,1.523,481,1.564,482,1.523,483,1.523,484,1.214,485,1.523,486,1.214,487,1.281,488,1.523,489,1.523,490,2.233,491,1.523,492,1.434,493,1.434,494,1.985,495,1.281,496,1.434,497,1.153,498,2.103,499,2.103,500,1.434,501,1.096]],["title/components/CodeEditorComponent.html",[0,0.465,182,1.083]],["body/components/CodeEditorComponent.html",[0,0.713,1,0.706,2,0.62,3,0.343,4,0.741,5,0.855,6,0.855,7,0.247,9,0.456,16,2.097,17,0.718,21,0.855,22,2.346,23,2.236,25,1.287,27,1.287,29,1.51,37,1.645,39,3.125,42,2.074,44,1.419,47,0.482,48,0.819,56,1.378,62,0.555,63,0.019,64,0.658,65,0.807,66,0.74,67,0.61,68,0.863,71,1.355,72,0.696,73,1.624,85,0.343,86,0.528,95,0.303,96,0.428,97,0.582,103,1.01,109,1.744,132,0.864,138,0.906,140,2.021,141,3.04,147,1.522,151,1.952,154,1.378,156,1.155,169,0.673,170,1.204,171,1.64,172,1.287,173,1.524,174,0.855,177,0.855,178,0.706,179,0.855,180,0.453,181,0.855,182,1.421,183,1.122,184,0.855,185,0.706,186,0.855,187,0.673,188,1.287,189,0.706,190,0.855,191,0.673,192,0.477,193,0.855,194,0.706,195,0.855,196,0.453,197,0.855,198,0.706,199,0.855,200,0.706,201,0.855,202,0.706,203,0.855,204,0.642,205,0.855,206,0.706,207,0.815,208,0.855,209,0.453,210,0.673,211,0.855,212,0.01,213,0.012,280,3.04,285,0.429,289,1.848,298,1.474,301,1.34,315,0.92,320,2.548,370,1.405,375,1.706,386,3.04,402,1.161,415,1.601,425,1.744,427,1.226,429,2.012,435,1.898,440,2.677,441,2.973,445,1.287,446,2.492,447,1.569,452,1.226,469,1.492,470,1.843,473,2.099,477,1.287,502,3.181,503,5.88,504,5.247,505,2.264,506,2.548,507,5.302,508,4.096,509,3.964,510,3.964,511,5.302,512,5.974,513,5.302,514,5.302,515,5.302,516,5.135,517,3.964,518,4.765,519,3.964,520,3.964,521,2.767,522,4.765,523,5.974,524,3.566,525,4.64,526,4.765,527,5.302,528,3.964,529,5.685,530,2.634,531,2.493,532,2.21,533,2.767,534,2.634,535,2.634,536,3.407,537,3.964,538,3.964,539,3.964,540,3.964,541,2.634,542,3.04,543,1.569,544,5.947,545,5.302,546,3.063,547,3.964,548,2.634,549,5.302,550,2.767,551,3.04,552,3.964,553,3.964,554,3.04,555,2.727,556,3.04,557,3.964,558,3.964,559,3.407,560,3.964,561,3.407,562,2.767,563,3.964,564,2.634,565,3.04,566,2.634,567,2.956,568,4.557,569,3.408,570,1.693,571,2.548,572,2.634,573,3.964,574,3.964,575,2.634,576,2.767,577,3.964,578,2.634,579,2.634,580,2.634,581,3.964,582,2.634,583,2.634,584,2.634,585,1.693,586,2.021,587,2.634,588,2.634,589,2.634,590,2.634,591,2.021,592,2.634,593,2.634,594,2.634,595,2.634,596,2.634,597,3.964,598,2.634,599,2.634,600,2.634,601,2.634,602,1.469,603,2.634,604,2.634,605,2.634,606,2.634,607,1.839,608,1.839,609,2.634,610,2.634,611,2.634,612,4.765,613,3.964,614,2.634,615,2.634,616,2.634,617,2.634,618,2.634,619,2.634,620,2.634,621,2.767,622,3.964,623,3.407,624,2.634,625,2.634,626,2.264,627,2.634,628,3.964,629,2.634,630,2.634,631,2.634,632,2.634,633,2.634,634,4.765,635,2.634,636,3.964,637,3.964,638,3.964]],["title/interfaces/Course.html",[72,0.59,407,0.731]],["body/interfaces/Course.html",[2,0.353,3,0.353,7,0.255,9,0.721,12,1.691,17,1.043,45,0.8,47,0.586,48,0.466,63,0.019,64,0.559,65,0.96,66,0.969,67,0.821,72,1.091,75,0.881,77,0.727,78,1.336,85,0.528,95,0.741,96,0.293,103,0.772,132,0.661,136,1.262,138,1.017,139,0.721,147,0.853,156,1.043,164,1.961,170,1.094,180,0.697,183,0.749,192,1.094,196,0.834,209,0.466,212,0.012,213,0.01,250,1.075,266,1.262,267,2.103,285,0.442,300,2.023,301,1.849,305,1.781,315,0.941,322,1.254,356,1.381,367,2.658,370,1.587,371,1.262,382,1.075,388,0.693,389,2.52,390,0.925,401,2.129,402,1.403,407,1.272,408,1.337,409,1.42,410,0.971,411,1.631,412,1.451,413,2.394,414,1.691,415,2.074,416,1.42,417,2.975,418,2.502,419,2.809,420,2.368,421,1.075,422,2.28,423,2.815,424,1.194,425,1.783,426,1.826,427,1.781,428,2.658,429,1.316,430,2.304,431,1.783,432,1.783,433,2.244,434,1.783,435,2.162,436,2.131,437,1.575,438,1.381,439,1.826,440,1.737,441,1.605,442,1.921,443,1.42,444,1.194,445,1.316,446,1.132,447,1.075,448,2.282,449,1.194,450,1.42,451,1.42,452,2.245,453,1.132,454,1.691,455,1.996,456,1.42,457,2.389,458,1.021,459,1.194,460,1.194,461,2.023,462,1.795,463,1.262,464,0.971,465,1.262,466,1.021,467,1.605,468,1.075,469,1.021,470,1.262,471,1.42,472,1.42,473,1.075,474,1.337,475,1.42,476,1.42,477,2.089,478,1.194,479,1.337,480,1.42,481,1.781,482,1.42,483,1.42,484,1.132,485,1.42,486,1.132,487,1.783,488,2.815,489,2.815,490,3.16,491,2.12,492,1.996,493,1.996,494,2.809,495,1.194,496,1.996,497,1.605,498,2.975,499,2.975,500,1.996,501,1.525]],["title/components/CourseChipComponent.html",[0,0.465,185,1.083]],["body/components/CourseChipComponent.html",[0,0.809,1,0.898,2,0.436,3,0.436,4,0.942,5,1.087,6,1.087,7,0.315,9,0.63,16,2.756,21,1.087,22,2.421,23,2.307,25,1.533,27,1.533,29,1.332,32,2.363,34,2.566,37,1.583,47,0.479,48,0.94,49,2.407,60,2.326,62,0.994,63,0.019,64,0.957,65,0.712,66,0.712,67,0.63,68,0.855,71,1.398,72,1.118,83,2.058,84,2.407,85,0.773,86,0.671,90,1.26,93,1.474,95,0.386,96,0.361,97,1.21,99,1.397,103,0.9,118,5.586,120,4.059,132,1.169,138,1.027,143,2.326,151,1.65,156,0.99,169,0.856,170,0.855,171,1.461,172,1.533,173,1.679,174,1.087,177,1.087,178,0.898,179,1.087,180,0.576,181,1.087,182,0.898,183,0.517,184,1.087,185,1.592,186,1.087,187,0.856,188,1.533,189,0.898,190,1.087,191,0.856,192,0.606,193,1.087,194,0.898,195,1.087,196,0.576,197,1.087,198,0.898,199,1.087,200,0.898,201,1.087,202,0.898,203,1.087,204,0.816,205,1.087,206,0.898,207,1.036,208,1.087,209,0.576,210,0.856,211,1.087,212,0.011,213,0.016,285,0.546,286,1.691,289,1.461,298,1.837,322,2.109,324,1.474,375,1.691,377,2.573,389,1.97,390,1.609,401,1.751,407,0.606,415,1.742,417,2.926,418,2.912,429,1.928,440,2.126,452,1.837,462,0.898,473,1.87,481,1.937,494,2.544,639,4.661,640,5.122,641,2.879,642,4.722,643,4.722,644,6.263,645,6.498,646,5.106,647,5.94,648,1.867,649,4.722,650,3.349,651,3.818,652,4.722,653,4.722,654,4.722,655,4.722,656,3.349,657,3.622,658,3.349,659,3.349,660,2.879,661,3.349,662,3.349,663,3.349,664,3.349,665,3.349,666,5.94,667,4.722,668,2.879,669,4.722,670,3.622,671,3.349,672,3.349,673,3.349,674,3.349,675,3.349,676,3.349,677,3.349,678,1.999,679,3.349,680,2.879,681,1.752,682,2.338,683,2.879,684,4.059,685,3.622]],["title/components/CourseSelectionComponent.html",[0,0.465,187,1.032]],["body/components/CourseSelectionComponent.html",[0,0.628,1,0.644,2,0.313,3,0.313,4,0.675,5,0.78,6,0.78,7,0.423,9,0.582,13,2.579,17,0.669,21,0.78,22,2.314,23,2.205,25,1.2,27,1.2,29,1.097,32,2.268,33,3.242,37,1.687,44,1.323,47,0.298,48,0.413,53,1.34,59,2.218,61,1.207,62,1.264,63,0.019,64,0.829,65,0.845,66,0.658,67,0.277,68,1.087,69,1.462,70,1.954,71,1.734,72,1.117,73,1.259,74,2.645,75,1.462,76,2.06,77,0.991,83,1.391,85,0.658,86,0.481,90,0.904,91,1.544,95,0.277,96,0.259,97,1.517,98,1.34,99,2.889,103,0.704,109,2.402,132,1.119,137,1.843,138,0.798,143,2.688,147,0.506,151,2.218,155,2.835,156,0.815,164,1.949,169,0.614,170,0.916,171,2.073,172,1.2,173,1.463,174,0.78,177,0.78,178,0.644,179,0.78,180,0.413,181,0.78,182,0.644,183,0.696,184,0.78,185,0.644,186,0.78,187,1.292,188,1.2,189,0.644,190,0.78,191,0.614,192,0.435,193,0.78,194,0.644,195,0.78,196,0.413,197,0.78,198,0.644,199,0.78,200,0.644,201,0.78,202,0.644,203,0.78,204,0.585,205,0.78,206,0.644,207,0.743,208,0.78,209,0.413,210,0.614,211,0.78,212,0.016,213,0.013,267,0.743,285,0.392,286,1.612,289,1.143,298,1.143,301,1.534,305,1.09,315,0.858,329,1.677,352,1.434,369,3.618,375,0.86,377,1.463,386,1.843,402,1.462,407,0.435,411,1.097,415,1.355,427,1.143,429,2.175,430,1.612,435,1.81,448,1.535,452,1.783,469,1.391,481,0.743,492,1.82,493,1.82,494,2.351,496,2.491,498,3.253,499,3.301,524,4.354,555,2.856,556,2.835,569,4.49,570,3.509,571,3.705,591,1.843,626,2.065,639,4.788,670,1.843,684,3.177,685,2.835,686,5.262,687,1.843,688,2.835,689,3.696,690,3.177,691,3.177,692,6.49,693,5.056,694,5.458,695,6.197,696,5.458,697,4.503,698,3.878,699,3.696,700,3.696,701,2.065,702,3.696,703,2.402,704,2.579,705,3.696,706,3.696,707,2.835,708,5.056,709,2.402,710,3.258,711,2.376,712,5.056,713,3.696,714,2.402,715,6.197,716,3.696,717,2.579,718,3.177,719,2.065,720,6.197,721,2.402,722,2.402,723,2.402,724,2.402,725,2.402,726,2.402,727,2.402,728,2.402,729,2.402,730,2.402,731,2.402,732,2.402,733,2.065,734,2.402,735,2.402,736,1.677,737,1.544,738,2.402,739,4.503,740,2.402,741,3.696,742,2.402,743,1.257,744,3.696,745,1.677,746,2.402,747,2.402,748,2.402,749,2.402,750,2.402,751,2.402,752,1.843,753,2.402,754,2.402,755,2.402,756,3.696,757,2.065,758,1.677,759,1.434,760,2.402,761,2.402,762,2.402,763,4.503,764,2.402,765,2.402,766,3.696,767,3.696,768,2.402,769,2.402,770,2.402,771,3.696,772,2.402,773,3.696,774,2.402,775,2.402,776,2.402,777,3.454,778,2.402,779,1.82,780,3.696,781,3.696,782,3.696,783,3.696,784,5.056,785,3.696,786,3.696,787,3.696,788,3.696,789,3.696,790,3.696,791,3.696]],["title/injectables/CourseService.html",[32,1.311,277,1.685]],["body/injectables/CourseService.html",[2,0.344,3,0.344,7,0.248,9,0.688,13,2.772,17,0.719,24,1.698,29,1.386,32,1.289,37,1.73,44,1.709,49,1.748,54,2.96,60,2.615,62,1.344,63,0.019,64,0.901,65,0.778,66,0.891,67,0.735,68,0.961,69,1.289,70,1.422,71,1.769,72,1.118,73,1.354,84,1.748,85,0.517,86,0.529,95,0.304,96,0.614,97,1.444,103,0.757,106,1.577,109,1.748,112,2.553,132,1.217,138,1.071,143,1.956,147,0.836,156,1.205,171,1.642,183,0.408,187,1.357,212,0.01,213,0.01,270,2.026,277,1.991,285,0.431,289,1.229,298,1.229,301,1.342,307,2.553,315,1.108,318,3.068,322,2.35,375,2.038,377,1.573,390,1.354,396,3.047,397,4.072,401,1.829,402,1.293,407,0.478,411,0.967,412,2.381,415,1.903,427,0.817,430,2.419,435,1.422,437,1.848,445,2.072,448,1.354,461,1.657,462,1.783,463,2.22,464,1.709,465,2.22,466,1.796,481,2.117,495,1.162,497,2.102,531,2.777,532,1.473,554,2.026,555,1.162,607,3.705,657,4.072,660,3.414,680,2.27,681,1.382,682,3.705,683,2.27,698,2.026,704,3.705,736,1.844,752,4.072,777,4.366,792,2.27,793,3.972,794,3.972,795,3.972,796,3.047,797,5.718,798,5.309,799,5.309,800,5.309,801,5.309,802,5.309,803,3.972,804,3.972,805,3.972,806,3.972,807,3.972,808,3.972,809,3.972,810,2.641,811,3.972,812,2.641,813,3.972,814,3.972,815,3.972,816,2.641,817,3.972,818,3.412,819,3.569,820,3.972,821,2.641,822,4.587,823,5.309,824,5.309,825,4.072,826,3.972,827,2.641,828,4.563,829,3.972,830,2.641,831,3.972,832,3.972,833,2.641,834,3.972,835,2.641,836,2.641,837,2.641,838,2.641,839,2.641,840,2.641,841,2.27,842,3.972,843,2.641,844,2.641,845,2.27,846,2.641,847,2.641,848,1.844,849,4.773,850,2.641,851,2.641,852,2.641,853,2.641,854,2.641,855,2.27,856,2.641,857,2.641,858,3.972,859,2.641,860,2.641,861,4.773,862,5.309,863,2.641,864,2.641,865,2.641,866,2.641,867,2.27,868,2.641,869,2.641,870,2.641,871,2.641,872,2.27,873,2.27,874,2.641,875,2.641,876,2.641,877,3.972,878,3.973,879,3.414,880,2.27,881,2.641,882,4.773,883,2.27,884,4.563,885,2.772,886,3.972,887,2.641,888,2.026,889,2.27]],["title/components/CourseSidebarComponent.html",[0,0.465,189,1.083]],["body/components/CourseSidebarComponent.html",[0,0.761,1,0.947,2,0.46,3,0.46,4,0.993,5,1.146,6,1.146,7,0.332,9,0.648,21,1.146,22,2.436,23,2.328,25,1.591,27,1.591,29,1.371,32,2.35,34,2.6,37,1.555,47,0.491,48,0.842,49,2.476,54,3.389,62,1.032,63,0.019,64,0.839,65,0.733,66,0.733,67,0.648,68,1.227,69,2.073,70,2.426,71,1.834,72,1.132,78,1.084,83,2.118,84,2.476,85,0.791,86,0.708,90,1.329,93,1.554,95,0.407,96,0.529,97,1.244,99,1.473,103,0.934,114,3.036,115,5.825,116,3.036,117,3.036,132,0.991,138,0.933,147,1.28,153,4.212,156,1.101,169,0.902,170,0.887,171,1.741,172,1.591,173,1.629,174,1.146,177,1.146,178,0.947,179,1.146,180,0.607,181,1.146,182,0.947,183,0.545,184,1.146,185,0.947,186,1.146,187,1.632,188,1.591,189,1.629,190,1.146,191,0.902,192,0.639,193,1.146,194,0.947,195,1.146,196,0.607,197,1.146,198,0.947,199,1.146,200,0.947,201,1.146,202,0.947,203,1.146,204,0.86,205,1.146,206,0.947,207,1.093,208,1.146,209,0.607,210,0.902,211,1.146,212,0.012,213,0.012,285,0.576,286,1.754,289,1.516,324,1.554,373,3.944,375,2.015,377,2.617,388,1.252,401,1.445,402,1.194,407,0.639,531,2.944,536,4.837,639,4.613,648,1.969,688,4.317,845,4.212,890,5.069,891,3.036,892,4.901,893,6.386,894,6.079,895,6.079,896,4.901,897,3.532,898,3.532,899,3.532,900,3.532,901,2.732,902,3.532,903,3.532,904,4.901,905,3.532,906,6.386,907,3.532,908,3.036,909,5.628,910,4.901,911,3.532,912,3.532,913,2.709,914,3.532,915,3.532]],["title/interfaces/DiscoverOption.html",[407,0.731,426,1.52]],["body/interfaces/DiscoverOption.html",[2,0.366,3,0.366,7,0.264,9,0.789,12,2.066,17,1.108,45,0.829,47,0.586,48,0.483,63,0.019,64,0.388,65,0.97,66,0.973,67,0.835,72,1.033,75,0.912,77,0.753,78,1.438,85,0.541,95,0.748,96,0.303,103,0.793,132,0.458,136,1.307,138,1.024,139,0.748,147,0.592,156,0.897,164,1.35,170,1.108,180,0.715,183,0.642,192,0.753,196,0.851,209,0.483,212,0.012,213,0.01,250,1.113,266,1.307,267,2.12,285,0.458,300,1.735,301,1.78,305,1.226,315,1.15,322,1.287,356,1.418,367,1.83,370,1.614,371,1.307,382,1.113,388,0.718,389,2.552,390,0.958,401,2.14,402,1.542,407,1.29,408,1.384,409,1.47,410,1.006,411,1.689,412,1.489,413,2.473,414,1.735,415,2.07,416,1.47,417,2.878,418,2.717,419,2.717,420,2.409,421,1.113,422,2.314,423,3.057,424,1.83,425,2.179,426,2.06,427,2.054,428,2.861,429,1.608,430,2.483,431,2.179,432,2.179,433,2.712,434,2.571,435,2.092,436,2.574,437,1.608,438,1.418,439,1.864,440,1.773,441,1.647,442,1.961,443,1.47,444,1.236,445,1.35,446,1.172,447,1.113,448,2.085,449,1.236,450,1.47,451,1.47,452,2.167,453,1.172,454,1.735,455,2.049,456,1.47,457,2.439,458,1.057,459,1.236,460,1.236,461,1.735,462,1.467,463,1.307,464,1.006,465,1.307,466,1.057,467,1.647,468,1.113,469,1.057,470,1.307,471,1.47,472,1.47,473,1.113,474,1.384,475,1.47,476,1.47,477,2.11,478,1.236,479,1.384,480,1.47,481,1.532,482,1.47,483,1.47,484,1.172,485,1.47,486,1.172,487,1.236,488,1.47,489,1.47,490,2.176,491,1.47,492,1.384,493,1.384,494,1.934,495,1.236,496,1.384,497,1.113,498,2.049,499,2.049,500,1.384,501,1.057]],["title/interfaces/EditorTab.html",[407,0.731,442,1.6]],["body/interfaces/EditorTab.html",[2,0.381,3,0.381,7,0.275,9,0.738,12,1.788,17,1.124,45,0.863,47,0.586,48,0.503,63,0.019,64,0.404,65,0.927,66,0.94,67,0.836,72,1.04,75,0.95,77,0.784,78,1.373,85,0.558,95,0.757,96,0.316,103,0.817,132,0.477,136,1.361,138,1.04,139,0.738,147,0.616,156,0.918,164,1.391,170,1.191,180,0.737,183,0.783,192,0.776,196,0.872,209,0.503,212,0.012,213,0.01,250,1.159,266,1.361,267,2.138,285,0.477,300,1.788,301,1.803,305,1.264,315,0.995,322,1.326,356,1.46,367,1.886,370,1.646,371,1.361,382,1.159,388,0.748,389,2.675,390,0.997,401,2.152,402,1.447,407,1.299,408,1.441,409,1.531,410,1.048,411,1.661,412,1.534,413,2.488,414,1.788,415,2.067,416,1.531,417,2.926,418,2.596,419,2.763,420,2.456,421,1.159,422,2.353,423,2.92,424,1.288,425,1.886,426,1.908,427,1.92,428,2.732,429,1.391,430,2.354,431,1.886,432,1.886,433,2.328,434,1.886,435,1.998,436,2.21,437,1.646,438,1.46,439,1.908,440,2.127,441,2.008,442,2.21,443,2.242,444,2.456,445,1.646,446,1.788,447,2.21,448,2.116,449,1.288,450,1.531,451,1.531,452,2.184,453,1.221,454,1.788,455,2.111,456,1.531,457,2.498,458,1.101,459,1.288,460,1.288,461,1.788,462,1.496,463,1.361,464,1.048,465,1.361,466,1.101,467,1.697,468,1.159,469,1.101,470,1.361,471,1.531,472,1.531,473,1.159,474,1.441,475,1.531,476,1.531,477,2.135,478,1.288,479,1.441,480,1.531,481,1.569,482,1.531,483,1.531,484,1.221,485,1.531,486,1.221,487,1.288,488,1.531,489,1.531,490,2.242,491,1.531,492,1.441,493,1.441,494,1.993,495,1.288,496,1.441,497,1.159,498,2.111,499,2.111,500,1.441,501,1.101]],["title/components/ErrorPageComponent.html",[0,0.465,191,1.032]],["body/components/ErrorPageComponent.html",[0,0.788,1,1.161,2,0.564,3,0.564,4,1.218,5,1.406,6,1.406,7,0.407,9,0.499,16,2.473,17,1.018,21,1.406,22,2.487,23,2.37,25,1.825,27,1.825,29,1.52,33,3.734,37,1.055,47,0.454,48,0.745,49,2.746,61,1.77,62,0.912,63,0.019,64,0.861,65,0.564,66,0.732,67,0.718,69,1.825,72,0.912,78,1.243,83,2.348,84,2.746,85,0.732,86,0.868,91,2.784,95,0.499,96,0.467,97,0.958,98,2.415,138,1,139,0.647,167,3.134,169,1.107,170,1.018,171,1.739,172,1.825,173,1.77,174,1.406,177,1.406,178,1.161,179,1.406,180,0.745,181,1.406,182,1.161,183,0.669,184,1.406,185,1.161,186,1.406,187,1.107,188,1.825,189,1.161,190,1.406,191,1.687,192,1.376,193,1.406,194,1.161,195,1.406,196,0.745,197,1.406,198,1.161,199,1.406,200,1.161,201,1.406,202,1.161,203,1.406,204,1.055,205,1.406,206,1.161,207,1.34,208,1.406,209,0.745,210,1.107,211,1.406,212,0.014,213,0.014,262,4.609,322,1.739,350,3.134,411,1.608,701,3.723,916,3.723,917,5.621,918,6.843,919,4.331,920,4.311,921,3.923,922,6.603,923,5.621,924,4.331,925,5.621,926,5.621,927,3.134,928,4.311,929,4.331]],["title/interfaces/FixOption.html",[407,0.731,439,1.52]],["body/interfaces/FixOption.html",[2,0.366,3,0.366,7,0.264,9,0.789,12,2.066,17,1.108,45,0.829,47,0.586,48,0.483,63,0.019,64,0.388,65,0.97,66,0.967,67,0.835,72,1.033,75,0.912,77,0.753,78,1.438,85,0.541,95,0.748,96,0.303,103,0.793,132,0.458,136,1.307,138,1.033,139,0.729,147,0.592,156,0.897,164,1.35,170,1.108,180,0.715,183,0.642,192,0.753,196,0.851,209,0.483,212,0.012,213,0.01,250,1.113,266,1.307,267,2.12,285,0.458,300,1.735,301,1.78,305,1.226,315,1.15,322,1.287,356,1.418,367,1.83,370,1.723,371,1.307,382,1.113,388,0.718,389,2.552,390,0.958,401,2.14,402,1.542,407,1.29,408,1.384,409,1.47,410,1.006,411,1.689,412,1.489,413,2.473,414,1.735,415,2.07,416,1.47,417,2.878,418,2.717,419,2.717,420,2.409,421,1.113,422,2.314,423,3.057,424,1.236,425,2.179,426,1.864,427,2.054,428,2.861,429,1.608,430,2.483,431,2.179,432,2.179,433,2.712,434,2.571,435,2.092,436,2.574,437,1.777,438,1.688,439,2.06,440,1.773,441,1.647,442,1.961,443,1.47,444,1.236,445,1.35,446,1.172,447,1.113,448,2.085,449,1.236,450,1.47,451,1.47,452,2.167,453,1.172,454,1.735,455,2.049,456,1.47,457,2.439,458,1.057,459,1.236,460,1.236,461,1.735,462,1.467,463,1.307,464,1.006,465,1.307,466,1.057,467,1.647,468,1.113,469,1.057,470,1.307,471,1.47,472,1.47,473,1.113,474,1.384,475,1.47,476,1.47,477,2.11,478,1.236,479,1.384,480,1.47,481,1.532,482,1.47,483,1.47,484,1.172,485,1.47,486,1.172,487,1.236,488,1.47,489,1.47,490,2.176,491,1.47,492,1.384,493,1.384,494,1.934,495,1.236,496,1.384,497,1.113,498,2.049,499,2.049,500,1.384,501,1.057]],["title/modules/HomePageModule.html",[214,1.446,224,2.597]],["body/modules/HomePageModule.html",[2,0.635,3,0.635,7,0.458,47,0.393,55,2.91,63,0.019,66,0.635,68,0.883,85,0.984,86,0.977,89,2.145,95,0.794,96,0.526,121,1.835,169,1.246,178,2.036,180,1.243,191,1.941,192,0.883,204,1.761,209,1.243,212,0.015,213,0.015,214,2.169,216,2.718,217,4.238,218,3.134,224,4.946,227,3.895,232,4.229,233,4.229,238,2.034,251,4.191,257,3.74,258,3.403,259,3.74,261,3.403,262,3.403,263,4.191,350,2.718,380,2.55,421,1.93,930,4.191,931,4.191,932,4.191,933,4.191,934,4.648,935,3.403,936,4.648,937,4.875,938,4.875,939,5.667,940,5.667]],["title/interfaces/Issue.html",[138,0.59,407,0.731]],["body/interfaces/Issue.html",[2,0.359,3,0.359,7,0.259,9,0.724,12,1.712,17,1.05,45,0.814,47,0.584,48,0.474,63,0.019,64,0.381,65,0.951,66,0.965,67,0.841,72,1.03,75,0.896,77,0.74,78,1.344,85,0.534,95,0.744,96,0.298,103,0.782,132,0.45,136,1.283,138,1.068,139,0.744,147,0.581,156,0.982,164,1.332,170,1.236,180,0.705,183,0.634,192,0.743,196,0.933,209,0.474,212,0.013,213,0.01,250,1.092,266,1.283,267,2.111,285,0.45,300,1.712,301,1.63,305,1.21,315,0.952,322,1.88,356,2.071,367,1.806,370,1.6,371,1.908,382,1.092,388,1.049,389,2.756,390,0.94,401,2.155,402,1.638,407,1.276,408,1.359,409,1.443,410,0.988,411,1.716,412,1.469,413,2.467,414,1.712,415,2.063,416,1.443,417,2.994,418,2.523,419,2.697,420,2.959,421,1.092,422,2.736,423,2.838,424,1.214,425,1.806,426,1.844,427,1.794,428,2.846,429,1.332,430,2.315,431,1.806,432,1.806,433,2.263,434,1.806,435,1.942,436,2.148,437,1.761,438,1.398,439,2.042,440,1.754,441,1.625,442,1.94,443,1.443,444,1.214,445,1.332,446,1.151,447,1.092,448,2.071,449,1.214,450,1.443,451,1.443,452,2.16,453,1.151,454,1.712,455,2.021,456,1.443,457,2.672,458,1.038,459,1.214,460,1.214,461,2.043,462,1.554,463,1.908,464,1.469,465,1.908,466,1.544,467,1.94,468,1.625,469,1.544,470,1.908,471,2.147,472,2.838,473,1.625,474,2.021,475,2.147,476,2.838,477,2.099,478,1.214,479,1.359,480,1.443,481,1.516,482,1.443,483,1.443,484,1.151,485,1.443,486,1.151,487,1.214,488,1.443,489,1.443,490,2.147,491,1.443,492,1.359,493,1.359,494,1.908,495,1.214,496,1.359,497,1.092,498,2.021,499,2.021,500,1.359,501,1.038]],["title/components/IssueCardComponent.html",[0,0.465,194,1.083]],["body/components/IssueCardComponent.html",[0,0.821,1,0.913,2,0.444,3,0.444,4,0.958,5,1.106,6,1.106,7,0.562,9,0.55,19,4.108,21,1.106,22,2.426,23,2.312,25,1.551,27,1.551,29,1.345,32,2.335,37,1.634,47,0.386,48,0.949,49,2.103,62,0.717,63,0.019,64,0.762,65,0.936,66,0.622,67,0.752,68,1,69,1.792,70,2.256,71,1.411,72,0.955,85,0.719,86,0.683,90,1.282,95,0.392,96,0.596,97,0.753,103,1.14,126,2.103,132,1.028,138,1.042,139,0.801,169,0.871,170,0.865,171,2.021,172,1.551,173,1.604,174,1.106,177,1.106,178,0.913,179,1.106,180,0.586,181,1.106,182,0.913,183,0.526,184,1.106,185,0.913,186,1.106,187,0.871,188,1.551,189,0.913,190,1.106,191,0.871,192,0.617,193,1.106,194,1.604,195,1.106,196,0.586,197,1.106,198,0.913,199,1.106,200,1.48,201,1.106,202,0.913,203,1.106,204,0.83,205,1.106,206,0.913,207,1.054,208,1.106,209,0.586,210,0.871,211,1.106,212,0.012,213,0.012,214,2.142,280,3.666,285,0.555,286,1.711,289,1.478,320,3.847,324,1.499,375,1.22,388,1.221,390,1.629,401,1.628,407,0.617,411,1.458,412,2.524,413,1.629,415,0.913,429,1.792,445,1.551,452,1.478,453,2.629,454,1.994,461,1.994,462,1.89,477,2.046,479,2.948,481,1.478,484,1.994,502,3.185,531,2.5,550,3.336,555,2.103,569,3.847,570,2.19,571,3.072,648,1.9,685,3.666,718,5.417,819,3.572,822,3.666,828,4.108,941,4.088,942,5.253,943,2.929,944,6.302,945,4.779,946,4.779,947,6.302,948,6.534,949,5.985,950,4.779,951,3.407,952,3.407,953,3.407,954,4.779,955,4.779,956,3.407,957,4.779,958,4.108,959,5.521,960,3.336,961,3.407,962,4.779,963,3.407,964,3.407,965,3.407,966,3.407,967,4.177,968,5.144,969,3.336,970,3.407,971,3.407,972,3.407,973,3.407,974,3.407,975,3.407,976,3.407,977,3.407,978,3.407,979,3.407,980,3.407,981,4.108,982,4.108,983,3.666]],["title/components/IssueContainerComponent.html",[0,0.465,196,0.694]],["body/components/IssueContainerComponent.html",[0,0.693,1,0.649,2,0.315,3,0.315,4,1.272,5,0.786,6,0.786,7,0.228,9,0.631,21,0.786,22,2.317,23,2.231,25,1.207,27,1.207,29,1.102,32,2.017,34,2.266,37,1.612,44,1.331,47,0.467,48,0.416,49,1.992,54,2.073,61,0.997,62,1.069,63,0.019,64,0.858,65,0.713,66,0.829,67,0.762,68,1.047,69,1.648,70,2.224,71,0.95,72,0.88,78,1.123,83,1.703,84,1.992,85,0.713,86,0.485,90,0.911,93,1.066,95,0.279,96,0.724,97,1.279,98,1.35,99,1.01,103,0.708,132,1.164,138,1.111,143,1.193,147,1.069,151,1.193,154,1.267,156,0.919,169,0.619,170,0.919,171,1.789,172,1.207,173,1.361,174,0.786,177,0.786,178,0.649,179,0.786,180,0.416,181,0.786,182,0.649,183,0.699,184,0.786,185,0.649,186,0.786,187,0.619,188,1.207,189,0.649,190,0.786,191,0.619,192,0.438,193,0.786,194,0.649,195,0.786,196,0.873,197,0.786,198,0.649,199,0.786,200,0.649,201,0.786,202,0.649,203,0.786,204,0.59,205,0.786,206,0.649,207,0.749,208,0.786,209,0.416,210,0.619,211,0.786,212,0.009,213,0.009,281,2.073,285,0.943,289,1.15,298,1.4,301,1.272,320,2.39,322,2.077,352,3.031,356,1.267,364,3.823,369,2.073,370,1.497,375,1.62,388,1.477,390,1.267,394,1.69,396,2.852,397,2.852,401,1.615,402,1.102,407,0.438,411,1.584,412,1.331,413,1.542,415,1.743,419,1.729,422,0.959,427,1.15,428,2.234,429,1.469,430,1.62,435,1.818,437,2.207,439,0.911,440,1.818,441,2.289,445,1.648,447,0.959,448,1.267,457,1.193,461,1.551,463,2.361,464,2.281,465,2.963,466,2.266,470,2.105,477,1.207,481,1.15,500,1.831,502,3.122,508,3.89,516,4.364,532,1.35,542,2.852,546,2.39,555,1.636,567,2.073,569,3.264,570,1.557,571,2.39,607,2.595,681,3.402,710,3.031,736,1.69,779,1.831,819,2.219,872,3.196,873,3.196,879,2.082,883,2.082,884,2.082,888,1.858,908,3.196,927,2.073,928,2.852,941,4.007,983,2.852,984,5.15,985,2.082,986,3.718,987,5.478,988,5.077,989,5.077,990,3.718,991,5.077,992,3.718,993,3.718,994,5.077,995,3.718,996,5.782,997,2.422,998,2.422,999,2.422,1000,3.718,1001,2.073,1002,3.718,1003,3.718,1004,5.478,1005,2.422,1006,5.478,1007,2.422,1008,2.422,1009,3.718,1010,3.718,1011,2.422,1012,3.718,1013,3.718,1014,3.718,1015,3.718,1016,2.422,1017,5.077,1018,2.422,1019,3.718,1020,3.196,1021,2.852,1022,3.718,1023,2.595,1024,2.422,1025,2.422,1026,2.422,1027,2.422,1028,2.422,1029,2.422,1030,2.422,1031,2.422,1032,2.422,1033,2.422,1034,4.526,1035,2.422,1036,1.858,1037,2.422,1038,2.422,1039,2.422,1040,2.422,1041,2.422,1042,2.422,1043,2.422,1044,2.422,1045,2.422,1046,2.422,1047,6.371,1048,3.718,1049,2.422,1050,2.422,1051,2.422,1052,2.422,1053,2.422,1054,2.422,1055,3.196,1056,3.196,1057,5.077,1058,5.077]],["title/components/IssueDetailsComponent.html",[0,0.465,198,1.083]],["body/components/IssueDetailsComponent.html",[0,0.783,1,1.141,2,0.554,3,0.554,4,1.197,5,1.382,6,1.382,7,0.4,9,0.64,21,1.382,22,2.483,23,2.366,25,1.804,27,1.804,29,1.507,32,2.42,37,1.354,47,0.448,48,0.732,49,2.887,62,0.896,63,0.019,64,0.854,65,0.723,66,0.723,67,0.803,68,1.12,69,2.009,70,2.215,71,1.739,72,1.02,83,2.469,84,2.887,85,0.723,86,0.853,90,1.602,95,0.49,96,0.459,97,0.941,103,1.059,138,1.118,156,1.006,169,1.088,170,1.006,171,1.719,172,1.804,173,1.758,174,1.382,177,1.382,178,1.141,179,1.382,180,0.732,181,1.382,182,1.141,183,0.657,184,1.382,185,1.141,186,1.382,187,1.088,188,1.804,189,1.141,190,1.382,191,1.088,192,0.771,193,1.382,194,1.141,195,1.382,196,0.955,197,1.382,198,1.758,199,1.382,200,1.141,201,1.382,202,1.141,203,1.382,204,1.037,205,1.382,206,1.141,207,1.317,208,1.382,209,0.732,210,1.088,211,1.382,212,0.013,213,0.013,285,0.694,286,1.989,324,1.873,356,1.894,388,1.42,401,1.639,411,1.354,462,1.49,486,2.318,502,2.878,648,2.373,941,3.693,1059,4.746,1060,3.659,1061,5.557,1062,6.979,1063,4.257,1064,4.257,1065,4.257,1066,4.777,1067,5.557]],["title/interfaces/IssueItem.html",[407,0.731,462,1.083]],["body/interfaces/IssueItem.html",[2,0.368,3,0.368,7,0.265,9,0.73,12,1.741,17,1.06,45,0.833,47,0.586,48,0.718,63,0.019,64,0.39,65,0.945,66,0.935,67,0.826,72,1.042,75,1.355,77,0.757,78,1.355,85,0.543,95,0.749,96,0.305,103,0.795,132,0.46,136,1.313,138,1.066,139,0.765,147,0.595,156,0.899,164,1.355,170,1.11,180,0.718,183,0.645,192,0.756,196,0.854,209,0.485,212,0.012,213,0.01,250,1.118,266,1.941,267,2.206,285,0.46,300,1.741,301,1.646,305,1.231,315,0.969,322,1.291,356,1.423,367,1.837,370,1.618,371,1.313,382,1.118,388,0.722,389,2.557,390,0.962,401,2.178,402,1.426,407,1.281,408,1.391,409,1.477,410,1.011,411,1.647,412,1.494,413,2.475,414,1.741,415,2.068,416,1.477,417,3.019,418,2.552,419,2.949,420,2.415,421,1.118,422,2.318,423,2.871,424,1.243,425,1.837,426,1.869,427,1.811,428,2.697,429,1.355,430,2.331,431,1.837,432,1.837,433,2.289,434,1.837,435,1.964,436,2.173,437,1.612,438,1.693,439,1.869,440,1.778,441,1.653,442,1.967,443,1.477,444,1.243,445,1.355,446,1.178,447,1.118,448,2.219,449,1.243,450,1.477,451,1.477,452,2.258,453,1.178,454,2.072,455,2.446,456,1.477,457,2.446,458,1.063,459,1.243,460,1.243,461,1.741,462,1.569,463,1.313,464,1.011,465,1.313,466,1.063,467,1.967,468,1.118,469,1.063,470,1.313,471,1.477,472,1.477,473,1.118,474,1.391,475,1.477,476,1.477,477,2.331,478,1.837,479,2.056,480,2.871,481,1.962,482,2.871,483,2.871,484,1.741,485,1.477,486,1.741,487,1.243,488,1.477,489,1.477,490,2.184,491,1.477,492,1.391,493,1.391,494,1.941,495,1.243,496,1.391,497,1.118,498,2.056,499,2.056,500,1.391,501,1.063]],["title/components/IssueListComponent.html",[0,0.465,200,1.083]],["body/components/IssueListComponent.html",[0,0.757,1,1.03,2,0.5,3,0.5,4,1.081,5,1.248,6,1.248,7,0.361,9,0.598,21,1.248,22,2.458,23,2.342,25,1.686,27,1.686,29,1.433,32,2.383,37,1.651,44,1.376,47,0.508,48,0.661,60,3.103,61,1.392,62,0.809,63,0.019,64,0.908,65,0.82,66,0.676,68,1.065,69,1.909,70,2.105,71,1.681,72,1.085,85,0.766,86,0.77,90,1.446,95,0.442,96,0.415,97,0.85,103,0.99,107,4.464,132,0.847,138,1.079,143,2.897,156,0.94,169,0.982,170,0.94,171,1.606,172,1.686,173,1.688,174,1.248,177,1.248,178,1.03,179,1.248,180,0.661,181,1.248,182,1.03,183,0.594,184,1.248,185,1.03,186,1.248,187,0.982,188,1.686,189,1.03,190,1.248,191,0.982,192,0.696,193,1.248,194,1.03,195,1.248,196,0.661,197,1.248,198,1.03,199,1.248,200,1.688,201,1.248,202,1.03,203,1.248,204,0.936,205,1.248,206,1.03,207,1.189,208,1.248,209,0.661,210,0.982,211,1.248,212,0.013,213,0.013,285,0.627,286,1.859,289,1.606,305,1.531,315,0.892,324,1.691,375,1.376,401,1.133,407,0.696,411,1.265,438,1.77,448,1.77,462,1.688,466,1.954,477,1.686,481,1.819,495,1.691,502,3.223,569,4.049,570,2.471,571,3.338,648,2.143,779,2.558,927,2.895,928,3.983,941,4.137,1068,5.317,1069,3.304,1070,5.193,1071,5.193,1072,6.299,1073,6.299,1074,5.414,1075,6.299,1076,5.193,1077,3.844,1078,3.844,1079,3.844,1080,6.299,1081,3.844,1082,3.844,1083,3.844,1084,5.881,1085,5.193,1086,5.193,1087,3.844,1088,3.844,1089,3.844,1090,5.193,1091,5.193,1092,5.193,1093,5.193]],["title/components/IssueNavComponent.html",[0,0.465,202,1.083]],["body/components/IssueNavComponent.html",[0,0.662,1,0.726,2,0.353,3,0.353,4,0.762,5,0.88,6,0.88,7,0.255,9,0.619,16,1.782,17,0.733,21,0.88,22,2.356,23,2.245,25,1.314,27,1.314,29,1.181,32,2.234,33,3.64,34,2.618,37,1.631,44,0.97,47,0.505,48,0.833,52,2.118,59,1.994,61,1.299,62,1.021,63,0.019,64,0.794,65,0.786,66,0.7,67,0.695,68,1.26,69,1.96,70,2.303,71,1.737,72,1.078,73,1.652,74,2.813,75,1.573,76,2.702,77,1.299,78,1.072,85,0.814,86,0.811,90,1.02,91,1.742,93,1.192,95,0.312,96,0.292,97,1.422,103,0.772,112,1.742,132,1.163,138,1.085,139,0.466,147,1.271,156,1.212,161,1.335,169,0.692,170,0.733,171,1.252,172,1.314,173,1.795,174,0.88,177,0.88,178,0.726,179,0.88,180,0.466,181,0.88,182,0.726,183,0.419,184,0.88,185,0.726,186,0.88,187,0.692,188,1.314,189,0.726,190,0.88,191,0.692,192,0.491,193,0.88,194,0.726,195,0.88,196,0.466,197,0.88,198,0.726,199,0.88,200,0.726,201,0.88,202,1.441,203,0.88,204,0.66,205,0.88,206,0.726,207,0.838,208,0.88,209,0.466,210,0.692,211,0.88,212,0.01,213,0.01,238,2.61,285,0.442,286,2.303,289,1.252,298,1.499,307,2.603,315,0.629,318,3.881,324,1.192,352,2.417,356,1.38,359,4.125,361,4.125,362,4.125,364,2.826,367,1.782,373,3.435,374,4.934,375,1.925,377,2.279,379,2.079,380,3.273,381,3.106,382,2.129,388,1.374,401,1.429,411,0.986,419,2.501,437,2.088,462,1.822,464,2.161,478,1.782,495,1.192,502,3.161,648,1.511,681,2.118,682,2.826,855,3.48,913,2.079,941,4.056,981,3.48,982,3.48,983,3.106,1066,2.329,1074,3.48,1094,5.213,1095,2.329,1096,4.049,1097,4.049,1098,4.049,1099,5.377,1100,4.049,1101,4.049,1102,2.71,1103,2.71,1104,5.755,1105,5.755,1106,4.049,1107,4.049,1108,2.71,1109,2.71,1110,4.049,1111,2.71,1112,2.71,1113,2.71,1114,2.71,1115,2.71,1116,2.329,1117,2.329,1118,4.166,1119,4.166,1120,2.71,1121,3.48,1122,2.71,1123,2.71,1124,2.71,1125,4.049,1126,2.71,1127,2.71,1128,2.71,1129,5.377,1130,4.049,1131,4.049,1132,4.049,1133,4.049,1134,4.049,1135,4.622,1136,4.049,1137,4.049,1138,4.049,1139,4.049,1140,1.742,1141,2.329,1142,2.71,1143,1.335,1144,2.71,1145,2.826,1146,2.71,1147,2.71,1148,2.71,1149,2.71,1150,2.71,1151,2.71,1152,2.71,1153,2.71,1154,4.049,1155,4.049,1156,3.48]],["title/injectables/KatanaService.html",[33,2.113,277,1.685]],["body/injectables/KatanaService.html",[2,0.29,3,0.29,7,0.21,9,0.402,17,1.058,18,1.622,24,1.434,29,1.047,31,3.371,32,1.963,33,1.825,34,2.276,35,3.887,36,3.057,37,1.549,42,2.248,44,1.888,45,1.029,47,0.56,54,1.945,56,1.167,59,2.878,60,2.598,61,0.935,62,1.177,63,0.019,64,0.772,65,0.787,66,0.869,67,0.559,68,1.151,69,1.577,70,1.249,71,1.429,72,1.041,73,1.189,74,1.825,76,1.945,77,1.936,78,0.771,79,2.676,81,0.658,82,2.709,83,0.839,84,1.891,85,0.787,86,0.447,87,2.9,89,0.982,90,0.839,92,1.917,93,0.982,94,1.557,95,0.257,96,0.241,97,1.374,98,1.244,99,2.2,103,0.665,109,2.798,112,1.434,113,5.198,121,1.313,122,4.289,123,5.181,126,2.138,128,2.999,132,1.173,136,1.037,138,0.947,143,1.718,147,0.905,151,2.754,154,1.167,155,2.676,156,1.151,161,2.754,173,1.413,192,1.173,212,0.008,213,0.008,237,1.917,264,2.082,277,1.792,281,1.244,284,2.9,285,0.364,286,1.249,289,1.079,298,1.967,305,0.658,307,2.243,315,0.81,319,4.533,322,1.329,329,1.557,337,1.917,338,3.594,367,1.535,369,2.709,370,1.029,373,2.9,375,1.249,377,1.924,388,0.892,402,1.362,415,1.621,420,0.982,424,1.535,425,1.535,437,1.712,438,1.656,448,1.189,452,1.503,455,1.718,458,2.199,464,0.799,467,1.381,468,1.381,473,1.381,474,1.718,477,1.963,501,1.617,524,2.082,532,1.945,543,1.381,591,2.676,651,2.243,678,2.082,681,1.167,698,2.676,743,1.167,745,3.392,777,3.727,825,2.676,848,1.557,913,2.676,958,4.806,960,4.338,1135,1.917,1141,4.806,1157,1.917,1158,4.859,1159,3.489,1160,3.489,1161,3.489,1162,4.859,1163,3.489,1164,2.231,1165,4.859,1166,3.489,1167,4.297,1168,3.489,1169,3.489,1170,2.231,1171,3.489,1172,2.231,1173,3.489,1174,2.231,1175,3.489,1176,2.231,1177,2.999,1178,2.231,1179,3.489,1180,2.231,1181,3.489,1182,4.859,1183,3.489,1184,4.859,1185,2.231,1186,2.999,1187,3.693,1188,2.231,1189,4.297,1190,1.244,1191,4.297,1192,2.231,1193,2.231,1194,2.231,1195,2.999,1196,3.392,1197,4.859,1198,4.859,1199,2.231,1200,4.859,1201,3.489,1202,2.231,1203,2.231,1204,2.243,1205,2.231,1206,5.591,1207,5.591,1208,3.489,1209,2.231,1210,4.859,1211,3.489,1212,2.231,1213,2.231,1214,3.489,1215,2.231,1216,2.231,1217,2.231,1218,3.489,1219,2.231,1220,3.489,1221,5.591,1222,4.859,1223,2.435,1224,2.435,1225,2.435,1226,2.231,1227,3.489,1228,2.231,1229,2.082,1230,2.231,1231,1.557,1232,1.557,1233,2.231,1234,1.917,1235,1.711,1236,2.231,1237,2.231,1238,2.231,1239,2.231,1240,1.557,1241,1.331,1242,1.557,1243,3.489,1244,3.489,1245,3.489,1246,3.489,1247,4.297,1248,2.231,1249,1.434,1250,5.843,1251,3.489,1252,2.435,1253,3.489,1254,2.999,1255,3.489,1256,3.489,1257,3.489,1258,4.859,1259,3.489,1260,2.231,1261,3.489,1262,3.489,1263,2.999,1264,2.231,1265,2.231,1266,2.231,1267,2.231,1268,2.231,1269,2.231,1270,2.231,1271,2.231,1272,2.231,1273,1.557,1274,3.489,1275,2.231,1276,2.231,1277,2.231,1278,2.231,1279,2.231,1280,2.231,1281,2.231]],["title/classes/OptionModel.html",[96,0.436,422,1.6]],["body/classes/OptionModel.html",[2,0.627,3,0.627,7,0.452,9,0.692,29,1.597,37,1.597,39,3.146,44,1.724,45,1.773,62,1.014,63,0.019,64,0.665,65,0.627,66,1,67,0.692,68,1.089,85,0.627,95,0.554,96,0.649,97,1.065,103,1.146,132,0.98,196,1.034,204,1.465,212,0.015,213,0.015,281,2.685,285,0.785,289,1.86,298,2.186,315,1.118,352,4.302,370,1.773,401,2.213,420,3.11,421,1.907,422,2.381,428,3.172,1282,4.14,1283,6.013,1284,6.013,1285,6.013,1286,4.197,1287,6.867,1288,6.013,1289,6.013,1290,4.816,1291,6.013,1292,6.013,1293,6.556,1294,4.816,1295,4.816,1296,4.816,1297,4.816,1298,6.013,1299,4.816,1300,4.816]],["title/components/OptionsViewComponent.html",[0,0.465,204,0.984]],["body/components/OptionsViewComponent.html",[0,0.731,1,0.761,2,0.37,3,0.37,4,0.798,5,0.922,6,0.922,7,0.267,9,0.633,13,2.926,16,1.845,17,0.996,18,1.95,21,0.922,22,2.371,23,2.259,25,1.361,27,1.361,29,1.214,31,3.712,32,2.161,33,3.705,34,2.642,37,1.673,44,1.017,45,1.236,47,0.526,48,0.857,53,2.337,61,1.573,62,0.598,63,0.019,64,0.688,65,0.827,66,0.968,67,0.779,68,1.181,69,1.905,70,2.101,71,1.569,72,1.035,73,1.698,74,2.607,75,1.618,76,2.778,77,1.336,78,1.102,85,0.867,86,0.569,89,1.25,90,1.069,91,1.826,93,1.25,95,0.327,96,0.452,97,1.358,99,1.749,103,0.799,126,2.703,132,1.036,138,0.858,139,0.633,143,1.399,156,0.759,169,0.726,170,0.759,171,1.297,172,1.361,173,1.573,174,0.922,177,0.922,178,0.761,179,0.922,180,0.488,181,0.922,182,0.761,183,0.439,184,0.922,185,0.761,186,0.922,187,0.726,188,1.361,189,0.761,190,0.922,191,0.726,192,0.514,193,0.922,194,0.761,195,0.922,196,0.488,197,0.922,198,0.761,199,0.922,200,0.761,201,0.922,202,0.761,203,0.922,204,1.34,205,0.922,206,0.761,207,0.879,208,0.922,209,0.488,210,0.726,211,0.922,212,0.01,213,0.01,238,2.65,260,5.331,261,4.851,267,1.9,285,0.463,286,2.101,289,1.297,298,1.542,301,1.401,309,2.179,315,0.659,318,3.948,322,1.297,324,1.25,329,1.982,350,3.875,359,4.221,361,4.221,362,4.221,364,2.926,373,3.503,374,5.331,375,2.199,377,2.516,379,2.179,380,3.324,381,3.216,382,2.179,384,3.604,388,1.071,394,1.982,401,1.469,407,0.514,411,1.021,420,2.98,421,1.125,422,2.681,424,1.845,425,1.845,426,2.071,428,2.703,433,2.295,435,1.501,445,1.361,501,1.578,531,2.193,543,1.66,551,3.216,688,2.179,743,2.193,745,1.982,757,4.73,901,2.337,1055,3.604,1056,3.604,1118,4.283,1119,4.283,1156,3.604,1254,2.441,1301,2.179,1302,3.604,1303,3.604,1304,5.502,1305,5.502,1306,4.192,1307,2.84,1308,2.84,1309,4.192,1310,2.84,1311,3.216,1312,2.926,1313,4.192,1314,4.192,1315,2.84,1316,2.84,1317,2.84,1318,2.84,1319,2.84,1320,2.84,1321,2.84,1322,2.84,1323,2.84,1324,2.84,1325,2.84,1326,2.84,1327,2.84,1328,2.84,1329,2.84,1330,2.84,1331,2.84,1332,2.84,1333,2.84,1334,2.84,1335,2.84,1336,2.84,1337,2.84,1338,2.84,1339,4.192,1340,3.604,1341,4.192]],["title/modules/SidebarModule.html",[214,1.446,225,2.597]],["body/modules/SidebarModule.html",[2,0.673,3,0.673,7,0.486,55,3.085,63,0.019,68,0.936,72,0.989,85,0.975,86,1.035,89,2.274,95,0.81,96,0.557,121,1.945,169,1.321,185,1.965,187,1.874,189,2.051,212,0.015,213,0.015,214,2.248,216,2.881,217,4.349,218,3.322,225,4.9,227,4.037,232,4.383,233,4.383,238,2.156,259,3.964,380,2.703,640,3.964,686,3.964,890,3.964,934,4.817,935,3.607,936,4.817,1342,4.442,1343,4.442,1344,4.442,1345,5.168,1346,5.168,1347,5.168]],["title/components/StatBadgeComponent.html",[0,0.465,206,1.083]],["body/components/StatBadgeComponent.html",[0,0.778,1,1.119,2,0.544,3,0.544,4,1.174,5,1.356,6,1.356,7,0.392,9,0.481,21,1.356,22,2.478,23,2.362,25,1.782,27,1.782,29,1.647,37,1.647,44,1.965,47,0.443,48,0.718,63,0.019,64,0.758,65,0.848,66,0.544,72,0.896,85,0.544,86,0.837,95,0.481,96,0.45,138,0.988,169,1.067,170,0.994,171,1.698,172,1.782,173,1.745,174,1.356,177,1.356,178,1.119,179,1.356,180,0.718,181,1.356,182,1.119,183,0.645,184,1.356,185,1.119,186,1.356,187,1.067,188,1.782,189,1.119,190,1.356,191,1.067,192,0.756,193,1.356,194,1.119,195,1.356,196,0.718,197,1.356,198,1.119,199,1.356,200,1.119,201,1.356,202,1.119,203,1.356,204,1.017,205,1.356,206,1.745,207,2.189,208,1.356,209,0.718,210,1.067,211,1.356,212,0.013,213,0.013,285,0.681,315,1.274,388,1.402,411,1.749,413,2.366,415,1.861,429,1.99,461,2.289,481,2.221,502,3.229,818,3.528,888,4.21,1348,5.967,1349,5.325,1350,3.59,1351,6.942,1352,5.488,1353,5.488,1354,5.488,1355,4.347,1356,7.076,1357,7.076,1358,6.13,1359,5.488,1360,4.21,1361,4.176,1362,4.176,1363,4.176,1364,4.176,1365,4.176,1366,4.176,1367,4.176]],["title/injectables/ToastService.html",[35,2.597,277,1.685]],["body/injectables/ToastService.html",[2,0.58,3,0.58,7,0.419,9,0.728,17,1.279,20,4.922,24,2.866,29,1.682,35,3.681,37,1.541,52,2.996,62,1.206,63,0.019,64,0.79,66,0.745,68,1.037,73,1.951,77,1.195,79,5.64,80,6.074,85,0.745,86,0.893,87,2.661,95,0.513,96,0.481,97,1.266,101,5.438,122,3.42,123,3.42,132,1.088,192,1.331,212,0.014,213,0.014,238,1.86,277,2.639,285,0.727,289,2.065,373,2.661,375,2.05,380,2.332,402,1.086,411,1.773,415,1.195,430,2.53,458,2.79,678,4.121,736,3.112,796,5.42,848,3.112,880,3.832,1187,4.922,1234,3.832,1263,4.922,1368,3.832,1369,5.726,1370,5.726,1371,4.458,1372,5.726,1373,4.458,1374,5.726,1375,4.458,1376,5.726,1377,4.458,1378,4.458,1379,6.326,1380,5.726,1381,4.458,1382,4.458,1383,4.458,1384,4.458,1385,5.726,1386,5.726,1387,5.726,1388,5.726,1389,4.458,1390,4.458]],["title/interfaces/Tool.html",[47,0.326,407,0.731]],["body/interfaces/Tool.html",[2,0.352,3,0.352,7,0.254,9,0.782,12,1.686,17,1.132,45,1.192,47,0.601,48,0.465,63,0.019,64,0.373,65,0.96,66,0.963,67,0.843,72,1.026,75,0.878,77,1.084,78,1.421,85,0.526,95,0.74,96,0.292,103,0.77,132,0.441,136,1.88,138,1.034,139,0.756,147,0.569,156,0.877,164,1.312,170,1.132,180,0.832,183,0.624,192,0.732,196,0.988,209,0.695,212,0.012,213,0.01,250,1.071,266,1.258,267,2.206,285,0.441,300,2.019,301,1.616,305,1.192,315,0.938,322,1.251,356,1.378,367,1.779,370,1.779,371,1.258,382,1.601,388,0.691,389,2.681,390,0.922,401,2.128,402,1.401,407,1.282,408,1.332,409,1.415,410,0.968,411,1.694,412,2.058,413,2.46,414,2.398,415,2.074,416,1.415,417,2.972,418,2.674,419,2.806,420,2.364,421,1.071,422,2.277,423,3.156,424,1.19,425,1.779,426,2.473,427,1.779,428,2.655,429,1.312,430,2.301,431,1.779,432,1.779,433,2.241,434,1.779,435,1.923,436,2.127,437,1.744,438,1.378,439,2.473,440,1.923,441,1.917,442,2.545,443,1.415,444,1.19,445,1.572,446,1.128,447,1.071,448,2.281,449,2.364,450,2.115,451,2.115,452,2.172,453,1.686,454,2.019,455,2.385,456,1.415,457,2.385,458,1.521,459,1.779,460,2.364,461,1.686,462,1.44,463,1.258,464,0.968,465,1.258,466,1.018,467,1.601,468,1.071,469,1.018,470,1.258,471,1.415,472,1.415,473,1.071,474,1.332,475,1.415,476,1.415,477,2.087,478,1.19,479,1.332,480,1.415,481,1.498,482,1.415,483,1.415,484,1.128,485,1.415,486,1.128,487,1.19,488,1.415,489,1.415,490,2.115,491,1.415,492,1.332,493,1.332,494,1.88,495,1.19,496,1.332,497,1.071,498,1.991,499,1.991,500,1.332,501,1.018]],["title/modules/ToolPageModule.html",[214,1.446,226,2.597]],["body/modules/ToolPageModule.html",[2,0.611,3,0.611,7,0.441,47,0.379,55,2.803,63,0.019,68,0.85,85,0.992,86,0.941,89,2.066,95,0.746,96,0.507,121,1.767,138,1.025,169,1.2,182,1.92,183,0.725,194,1.92,196,1.231,198,1.92,200,1.92,202,1.92,206,1.92,207,1.453,210,1.83,212,0.014,213,0.014,214,2.119,216,2.618,217,4.166,218,3.019,226,4.969,227,3.805,232,4.131,233,4.131,238,1.959,253,3.019,256,3.278,257,3.602,380,2.457,421,1.859,502,2.184,504,3.602,933,4.036,934,4.54,935,3.278,936,4.54,939,5.571,940,5.571,942,3.602,984,3.602,1059,3.602,1068,3.602,1094,3.602,1349,3.602,1391,4.036,1392,4.036,1393,4.696,1394,4.696,1395,4.696,1396,4.696,1397,4.696,1398,4.696,1399,4.696]],["title/components/ToolSelectionComponent.html",[0,0.465,209,0.694]],["body/components/ToolSelectionComponent.html",[0,0.784,1,1.143,2,0.555,3,0.555,4,1.199,5,1.385,6,1.385,7,0.401,9,0.641,21,1.385,22,2.483,23,2.367,25,1.807,27,1.807,29,1.509,32,2.341,34,2.807,37,1.356,47,0.612,48,1.065,49,2.726,62,0.898,63,0.019,64,0.855,65,0.724,66,0.724,67,0.713,68,1.233,69,2.211,70,2.438,71,1.784,72,0.995,78,1.37,83,2.331,84,2.726,85,0.806,86,0.855,90,1.605,93,1.877,95,0.491,96,0.46,97,1.231,99,1.779,103,1.06,138,0.995,169,1.09,170,1.008,171,1.722,172,1.807,173,1.76,174,1.385,177,1.385,178,1.143,179,1.385,180,0.733,181,1.385,182,1.143,183,0.659,184,1.385,185,1.143,186,1.385,187,1.09,188,1.807,189,1.143,190,1.385,191,1.09,192,0.772,193,1.385,194,1.143,195,1.385,196,0.733,197,1.385,198,1.143,199,1.385,200,1.143,201,1.385,202,1.143,203,1.385,204,1.039,205,1.385,206,1.143,207,1.32,208,1.385,209,1.129,210,1.09,211,1.385,212,0.013,213,0.013,253,3.982,258,4.323,285,0.696,286,1.992,324,1.877,350,3.454,394,2.978,405,4.784,406,4.784,687,3.272,690,4.784,691,5.853,719,3.667,1186,3.884,1400,4.266]],["title/injectables/ToolService.html",[34,1.52,277,1.685]],["body/injectables/ToolService.html",[2,0.452,3,0.452,7,0.326,9,0.558,17,1.34,18,2.253,24,2.232,29,1.359,30,2.664,31,3.761,34,1.823,37,1.772,44,2.272,45,1.428,47,0.618,48,0.833,53,3.365,59,2.386,60,2.386,62,1.174,63,0.019,64,0.77,65,0.896,66,0.878,67,0.695,69,1.959,70,1.734,71,1.758,77,1.298,78,1.522,85,0.726,86,0.696,89,1.528,95,0.4,96,0.375,97,0.768,98,1.936,103,0.923,109,2.656,131,4.163,132,0.984,139,0.558,147,1.384,156,1.246,170,1.093,183,0.748,212,0.012,213,0.012,267,2.289,277,2.327,285,0.566,301,1.848,305,1.938,315,1.473,375,1.734,388,1.238,389,2.02,398,2.985,404,4.163,407,0.629,411,1.18,412,2.16,413,2.057,414,2.517,415,1.495,424,2.131,435,2.353,458,1.823,477,1.572,550,3.381,554,3.715,737,3.114,841,2.985,848,2.424,1186,3.381,1204,3.879,1360,3.715,1401,2.985,1402,6.035,1403,6.035,1404,6.035,1405,6.035,1406,6.035,1407,3.473,1408,3.473,1409,3.473,1410,3.381,1411,3.473,1412,4.163,1413,4.844,1414,4.163,1415,3.473,1416,4.844,1417,4.844,1418,3.473,1419,4.844,1420,3.473,1421,4.844,1422,3.473,1423,3.473,1424,4.163,1425,4.844,1426,3.473,1427,3.473,1428,3.473,1429,4.844,1430,3.473,1431,3.473,1432,3.473,1433,3.473,1434,6.347,1435,3.473,1436,5.578,1437,6.347,1438,3.473,1439,5.578,1440,4.844,1441,3.473,1442,3.473,1443,4.844,1444,3.473,1445,4.844,1446,3.473,1447,4.844,1448,4.844]],["title/components/ToolViewComponent.html",[0,0.465,210,1.032]],["body/components/ToolViewComponent.html",[0,0.767,1,1.069,2,0.519,3,0.519,4,1.121,5,1.294,6,1.294,7,0.375,9,0.613,21,1.294,22,2.467,23,2.351,25,1.728,27,1.728,29,1.459,32,2.397,34,2.795,37,1.557,47,0.605,48,1.145,62,0.839,63,0.019,64,0.827,65,0.78,66,0.693,68,1.241,69,2.224,70,2.453,71,1.788,72,1.052,78,1.325,85,0.78,86,0.799,90,1.5,93,1.754,95,0.459,96,0.43,97,1.177,103,1.014,112,2.563,132,1.117,138,1.022,143,2.622,156,1.267,169,1.019,170,0.964,171,1.646,172,1.728,173,1.713,174,1.294,177,1.294,178,1.069,179,1.294,180,0.685,181,1.294,182,1.069,183,0.616,184,1.294,185,1.069,186,1.294,187,1.019,188,1.728,189,1.069,190,1.294,191,1.019,192,0.722,193,1.294,194,1.069,195,1.294,196,0.685,197,1.294,198,1.069,199,1.294,200,1.069,201,1.294,202,1.069,203,1.294,204,0.971,205,1.294,206,1.069,207,1.233,208,1.294,209,0.685,210,1.634,211,1.294,212,0.013,213,0.013,253,4.282,256,4.649,285,0.65,286,2.384,289,1.646,324,1.754,388,1.36,438,1.814,445,1.728,462,1.069,502,3.098,646,5.495,648,2.223,657,4.082,682,3.715,797,4.575,867,3.427,1121,3.427,1301,3.058,1302,4.575,1303,4.575,1449,3.987,1450,3.987,1451,3.987,1452,3.987,1453,3.987,1454,3.987,1455,5.322,1456,5.322]],["title/coverage.html",[1457,4.615]],["body/coverage.html",[0,0.88,1,1.191,7,0.417,8,3.819,32,1.442,33,2.324,34,1.672,35,2.856,36,2.324,47,0.359,63,0.019,65,0.578,72,0.649,96,0.479,138,0.649,178,1.191,180,0.764,182,1.191,185,1.191,187,1.135,189,1.191,191,1.135,194,1.191,196,0.764,198,1.191,200,1.191,202,1.191,204,1.082,206,1.191,209,0.764,210,1.135,212,0.014,213,0.014,247,2.856,253,3.673,256,3.101,258,3.101,260,3.408,261,3.101,262,3.988,267,1.374,277,2.877,278,3.819,298,1.374,350,3.846,351,3.819,387,3.819,407,1.317,408,3.583,418,2.066,422,1.759,426,1.672,439,1.672,442,1.759,462,1.191,502,3.383,503,3.819,504,3.408,505,3.819,639,4.408,640,3.408,641,3.819,686,3.408,687,4.383,707,3.408,792,3.819,890,3.408,891,3.819,916,3.819,941,4.117,942,3.408,943,3.819,984,3.408,985,3.819,1059,3.408,1060,3.819,1068,3.408,1069,3.819,1094,3.408,1095,3.819,1157,3.819,1282,3.819,1301,4.383,1348,3.819,1349,3.408,1350,3.819,1368,3.819,1401,3.819,1457,3.819,1458,2.188,1459,4.443,1460,7.78,1461,4.443,1462,6.316,1463,6.897,1464,4.443,1465,4.443,1466,3.819,1467,3.101,1468,4.443,1469,5.714,1470,4.443,1471,4.443,1472,6.667,1473,5.714,1474,4.443,1475,6.667,1476,4.443,1477,4.443,1478,4.443,1479,5.714,1480,4.443,1481,4.443,1482,4.443,1483,4.443,1484,4.443]],["title/dependencies.html",[216,2.687,1485,2.963]],["body/dependencies.html",[63,0.019,75,2.016,81,1.832,86,1.017,89,2.233,167,2.83,212,0.015,213,0.015,216,2.83,230,5.339,231,4.764,235,4.362,238,2.591,239,4.362,240,4.764,242,3.893,380,3.659,402,1.236,421,2.01,452,1.57,935,3.542,1021,3.893,1116,4.362,1117,5.339,1177,4.362,1412,4.362,1486,5.075,1487,7.521,1488,5.075,1489,5.075,1490,5.075,1491,5.075,1492,5.075,1493,5.075,1494,5.075,1495,5.075,1496,6.211,1497,5.075,1498,5.075,1499,5.075,1500,5.075,1501,5.075,1502,5.075,1503,5.075,1504,5.075,1505,3.249,1506,5.075,1507,5.075,1508,5.075,1509,3.542,1510,5.075,1511,5.075,1512,5.075,1513,5.075,1514,5.075,1515,5.075,1516,6.211,1517,5.075,1518,6.211,1519,5.075,1520,5.075,1521,5.075,1522,5.075,1523,5.075,1524,5.075,1525,5.075,1526,5.075,1527,5.075,1528,5.075,1529,5.075,1530,5.075,1531,5.075,1532,5.075,1533,5.075,1534,5.075,1535,5.075,1536,5.075]],["title/index.html",[285,0.562,752,2.644,1229,2.058]],["body/index.html",[7,0.479,45,1.502,47,0.502,56,2.665,61,1.802,63,0.016,67,0.806,68,0.922,70,1.824,77,1.669,81,1.836,126,2.74,147,1.311,161,2.509,212,0.015,213,0.015,247,3.275,284,3.041,305,1.502,352,4.287,407,0.922,410,1.824,427,1.576,452,1.926,467,2.017,506,3.275,543,2.662,567,2.841,779,3.45,796,3.908,825,3.908,968,4.379,1021,4.776,1143,3.067,1190,2.841,1229,3.041,1235,3.908,1241,3.041,1458,3.067,1467,3.556,1537,5.779,1538,4.379,1539,5.095,1540,6.226,1541,5.095,1542,4.379,1543,5.779,1544,5.095,1545,5.095,1546,5.095,1547,5.095,1548,5.095,1549,5.095,1550,5.095,1551,4.002,1552,6.226,1553,7.003,1554,5.095,1555,5.095,1556,5.095,1557,5.095,1558,5.095,1559,6.723,1560,5.095,1561,5.095,1562,5.095,1563,3.041,1564,4.379,1565,5.095,1566,5.095,1567,3.556,1568,4.346,1569,5.095,1570,5.095,1571,1.736,1572,5.095,1573,5.095,1574,5.095,1575,5.095,1576,5.095,1577,5.095,1578,5.095,1579,5.095,1580,5.095,1581,5.352,1582,5.095,1583,3.556,1584,3.908,1585,7.003,1586,3.908]],["title/modules.html",[214,1.922]],["body/modules.html",[63,0.016,212,0.016,213,0.016,214,2.115,215,4.124,224,3.798,225,3.798,226,3.798,231,5.639,1587,7.351,1588,7.351,1589,7.351]],["title/overview.html",[1590,2.809]],["body/overview.html",[0,0.545,1,1.953,36,3.404,55,2.826,63,0.019,68,0.857,95,0.545,96,0.511,121,1.782,169,1.21,178,1.953,180,1.118,182,1.744,185,1.744,187,1.663,189,1.953,191,1.861,194,1.744,196,1.118,198,1.744,200,1.744,202,1.744,204,1.585,206,1.744,209,1.118,210,1.663,212,0.014,213,0.014,214,2.13,215,5.304,216,2.64,217,3.044,218,3.044,219,4.07,220,4.07,221,4.07,222,4.07,223,4.07,224,4.918,225,4.812,226,4.964,227,3.825,277,1.975,407,0.857,607,3.305,670,3.632,889,4.07,930,4.07,931,4.07,932,4.07,1342,4.07,1343,4.07,1344,4.07,1391,4.07,1392,4.07,1590,2.477,1591,4.735,1592,4.735]],["title/miscellaneous/variables.html",[1467,3.363,1593,2.963]],["body/miscellaneous/variables.html",[44,2.06,61,1.898,63,0.018,65,0.749,67,0.662,81,1.974,82,3.208,212,0.016,213,0.016,247,4.551,285,0.938,315,1.336,402,1.631,1241,3.434,1466,4.945,1467,4.016,1593,4.945,1594,5.753,1595,5.753,1596,5.753,1597,5.753,1598,5.753,1599,5.753,1600,5.753,1601,5.753,1602,5.753,1603,5.753,1604,5.753,1605,5.753,1606,5.753]],["title/additional-documentation/architecture.html",[139,0.397,1571,1.175,1586,2.644]],["body/additional-documentation/architecture.html",[63,0.016,77,1.595,212,0.017,213,0.017,1414,5.116,1458,3.363,1586,5.237,1590,3.114,1607,4.765,1608,5.952,1609,5.952,1610,5.952,1611,4.566,1612,3.826,1613,5.116,1614,4.155]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.806,139,0.346,1571,1.024,1614,2.098]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.016,77,1.844,212,0.017,213,0.017,370,1.779,410,2.16,1607,4.212,1614,4.802]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,139,0.276,437,0.777,438,0.816,1571,0.816,1615,2.058]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.553,63,0.017,67,0.689,212,0.017,213,0.017,437,1.944,438,2.041,1001,3.82,1563,3.574,1615,5.888,1616,5.988]],["title/additional-documentation/architecture/data-flow-diagram.html",[139,0.307,960,1.86,1571,0.908,1611,2.044,1617,2.291]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.016,212,0.017,213,0.017]],["title/additional-documentation/architecture/high-level-overview.html",[139,0.307,1571,0.908,1590,1.394,1612,1.713,1613,2.291]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.016,212,0.017,213,0.017]],["title/additional-documentation/setup.html",[139,0.397,1143,1.698,1571,1.175]],["body/additional-documentation/setup.html",[17,1.052,39,3.041,47,0.543,52,3.041,61,1.558,63,0.016,81,2.096,147,1.224,164,1.887,168,3.469,212,0.016,213,0.016,298,1.798,305,2.096,370,1.714,478,2.558,506,3.736,543,2.302,565,4.459,1001,3.755,1143,2.863,1458,3.317,1607,4.057,1618,4.996,1619,5.813,1620,4.996,1621,4.057,1622,4.057]],["title/additional-documentation/setup/setting-up-firebase.html",[81,0.786,139,0.307,147,0.561,543,1.055,1571,0.908]],["body/additional-documentation/setup/setting-up-firebase.html",[4,1.151,7,0.438,9,0.811,12,0.864,16,1.448,17,0.981,18,0.964,39,1.722,42,2.971,45,1.375,46,3.782,47,0.601,48,0.356,51,1.446,52,1.084,59,1.021,60,1.621,61,0.555,62,0.693,63,0.019,64,0.644,65,0.899,66,0.979,67,0.586,68,0.921,71,1.506,72,0.481,73,2.386,74,3.083,75,1.514,78,1.031,97,1.429,106,1.237,109,2.594,121,0.78,126,1.802,132,0.83,138,1.045,139,0.699,147,1.072,151,3.644,154,1.084,156,0.921,170,1.188,173,1.25,183,0.508,212,0.008,213,0.008,214,0.742,238,0.864,250,0.82,264,1.237,267,1.267,298,2.029,300,0.864,301,1.151,303,1.155,305,1.208,315,0.764,322,1.443,338,2.116,356,2.009,369,3.878,370,1.835,377,0.82,388,0.529,390,1.122,402,1.789,410,1.178,411,1.618,412,1.67,413,2.37,414,1.373,415,1.898,426,1.541,427,2.029,429,1.514,430,2.379,431,2.239,432,2.239,433,1.946,434,1.448,436,2.464,437,2.34,438,2.334,439,1.541,440,1.466,441,1.622,442,1.622,444,0.912,445,1.844,446,1.373,447,0.82,448,1.59,449,1.448,452,2.079,453,1.946,454,1.373,458,0.78,459,1.448,460,0.912,462,1.819,464,1.822,466,1.239,467,1.303,468,1.847,469,1.541,477,2.273,481,0.641,484,0.864,486,0.864,487,0.912,497,1.622,501,1.239,521,2.297,524,2.444,525,1.446,531,1.722,532,2.837,533,1.446,543,0.82,546,1.332,555,1.448,562,1.446,576,2.297,585,1.332,602,1.155,608,2.297,621,3.965,651,1.332,678,1.965,681,2.971,710,1.965,711,3.483,717,4.691,737,2.116,743,1.084,758,3.552,759,2.444,818,3.271,819,3.39,878,1.446,885,2.297,901,2.601,921,2.858,927,1.155,967,3.256,969,2.297,1001,2.837,1023,1.446,1140,2.116,1143,1.021,1145,2.297,1195,2.297,1196,3.256,1204,2.116,1223,2.297,1224,2.297,1225,2.297,1229,1.237,1231,1.446,1232,1.446,1240,2.297,1241,1.237,1242,2.297,1249,1.332,1252,1.446,1273,3.256,1286,1.446,1312,1.446,1355,1.332,1410,1.446,1458,1.021,1505,2.44,1509,1.446,1551,3.271,1563,2.444,1567,1.446,1568,1.446,1583,3.256,1590,1.084,1612,1.332,1621,1.446,1622,1.446,1623,3.256,1624,2.525,1625,1.589,1626,1.589,1627,1.589,1628,2.525,1629,1.589,1630,1.589,1631,1.589,1632,1.589,1633,2.525,1634,1.589,1635,1.589,1636,1.589,1637,5.587,1638,1.589,1639,1.589,1640,1.589,1641,2.525,1642,1.589,1643,3.141,1644,1.589,1645,2.858,1646,1.589,1647,1.589,1648,1.589,1649,1.589,1650,1.589,1651,1.589,1652,1.589,1653,2.525,1654,1.589,1655,1.589,1656,3.141,1657,1.589,1658,1.589,1659,2.525,1660,3.904,1661,3.256,1662,2.525,1663,1.589,1664,1.589,1665,3.141,1666,2.525,1667,3.578,1668,2.525,1669,1.446,1670,1.589,1671,2.525,1672,1.589,1673,2.525,1674,2.525,1675,1.589,1676,2.525,1677,2.525,1678,5.432,1679,1.589,1680,2.525,1681,1.589,1682,1.589,1683,1.589,1684,1.589,1685,1.589,1686,1.589,1687,1.589,1688,3.904,1689,1.589,1690,1.589,1691,2.525,1692,1.589,1693,1.589,1694,1.589,1695,2.525,1696,1.589,1697,1.589,1698,1.446,1699,1.589,1700,1.589,1701,1.589,1702,1.332,1703,1.589,1704,1.589,1705,1.589,1706,1.589,1707,1.589,1708,1.589,1709,1.589,1710,1.589,1711,1.589,1712,1.589,1713,1.589,1714,1.589]],["title/additional-documentation/setup/development-environment.html",[139,0.346,247,1.932,779,1.481,1571,1.024]],["body/additional-documentation/setup/development-environment.html",[4,1.151,7,0.438,9,0.811,12,0.864,16,1.448,17,0.981,18,0.964,39,1.722,42,2.971,45,1.375,46,3.782,47,0.601,48,0.356,51,1.446,52,1.084,59,1.021,60,1.621,61,0.555,62,0.693,63,0.019,64,0.644,65,0.899,66,0.979,67,0.586,68,0.921,71,1.506,72,0.481,73,2.386,74,3.083,75,1.514,78,1.031,97,1.429,106,1.237,109,2.594,121,0.78,126,1.802,132,0.83,138,1.045,139,0.699,147,1.072,151,3.644,154,1.084,156,0.921,170,1.188,173,1.25,183,0.508,212,0.008,213,0.008,214,0.742,238,0.864,250,0.82,264,1.237,267,1.267,298,2.029,300,0.864,301,1.151,303,1.155,305,1.208,315,0.764,322,1.443,338,2.116,356,2.009,369,3.878,370,1.835,377,0.82,388,0.529,390,1.122,402,1.789,410,1.178,411,1.618,412,1.67,413,2.37,414,1.373,415,1.898,426,1.541,427,2.029,429,1.514,430,2.379,431,2.239,432,2.239,433,1.946,434,1.448,436,2.464,437,2.34,438,2.334,439,1.541,440,1.466,441,1.622,442,1.622,444,0.912,445,1.844,446,1.373,447,0.82,448,1.59,449,1.448,452,2.079,453,1.946,454,1.373,458,0.78,459,1.448,460,0.912,462,1.819,464,1.822,466,1.239,467,1.303,468,1.847,469,1.541,477,2.273,481,0.641,484,0.864,486,0.864,487,0.912,497,1.622,501,1.239,521,2.297,524,2.444,525,1.446,531,1.722,532,2.837,533,1.446,543,0.82,546,1.332,555,1.448,562,1.446,576,2.297,585,1.332,602,1.155,608,2.297,621,3.965,651,1.332,678,1.965,681,2.971,710,1.965,711,3.483,717,4.691,737,2.116,743,1.084,758,3.552,759,2.444,818,3.271,819,3.39,878,1.446,885,2.297,901,2.601,921,2.858,927,1.155,967,3.256,969,2.297,1001,2.837,1023,1.446,1140,2.116,1143,1.021,1145,2.297,1195,2.297,1196,3.256,1204,2.116,1223,2.297,1224,2.297,1225,2.297,1229,1.237,1231,1.446,1232,1.446,1240,2.297,1241,1.237,1242,2.297,1249,1.332,1252,1.446,1273,3.256,1286,1.446,1312,1.446,1355,1.332,1410,1.446,1458,1.021,1505,2.44,1509,1.446,1551,3.271,1563,2.444,1567,1.446,1568,1.446,1583,3.256,1590,1.084,1612,1.332,1621,1.446,1622,1.446,1623,3.256,1624,2.525,1625,1.589,1626,1.589,1627,1.589,1628,2.525,1629,1.589,1630,1.589,1631,1.589,1632,1.589,1633,2.525,1634,1.589,1635,1.589,1636,1.589,1637,5.587,1638,1.589,1639,1.589,1640,1.589,1641,2.525,1642,1.589,1643,3.141,1644,1.589,1645,2.858,1646,1.589,1647,1.589,1648,1.589,1649,1.589,1650,1.589,1651,1.589,1652,1.589,1653,2.525,1654,1.589,1655,1.589,1656,3.141,1657,1.589,1658,1.589,1659,2.525,1660,3.904,1661,3.256,1662,2.525,1663,1.589,1664,1.589,1665,3.141,1666,2.525,1667,3.578,1668,2.525,1669,1.446,1670,1.589,1671,2.525,1672,1.589,1673,2.525,1674,2.525,1675,1.589,1676,2.525,1677,2.525,1678,5.432,1679,1.589,1680,2.525,1681,1.589,1682,1.589,1683,1.589,1684,1.589,1685,1.589,1686,1.589,1687,1.589,1688,3.904,1689,1.589,1690,1.589,1691,2.525,1692,1.589,1693,1.589,1694,1.589,1695,2.525,1696,1.589,1697,1.589,1698,1.446,1699,1.589,1700,1.589,1701,1.589,1702,1.332,1703,1.589,1704,1.589,1705,1.589,1706,1.589,1707,1.589,1708,1.589,1709,1.589,1710,1.589,1711,1.589,1712,1.589,1713,1.589,1714,1.589]],["title/additional-documentation/setup/node-tools.html",[47,0.243,139,0.346,1001,1.676,1571,1.024]],["body/additional-documentation/setup/node-tools.html",[4,1.151,7,0.438,9,0.811,12,0.864,16,1.448,17,0.981,18,0.964,39,1.722,42,2.971,45,1.375,46,3.782,47,0.601,48,0.356,51,1.446,52,1.084,59,1.021,60,1.621,61,0.555,62,0.693,63,0.019,64,0.644,65,0.899,66,0.979,67,0.586,68,0.921,71,1.506,72,0.481,73,2.386,74,3.083,75,1.514,78,1.031,97,1.429,106,1.237,109,2.594,121,0.78,126,1.802,132,0.83,138,1.045,139,0.699,147,1.072,151,3.644,154,1.084,156,0.921,170,1.188,173,1.25,183,0.508,212,0.008,213,0.008,214,0.742,238,0.864,250,0.82,264,1.237,267,1.267,298,2.029,300,0.864,301,1.151,303,1.155,305,1.208,315,0.764,322,1.443,338,2.116,356,2.009,369,3.878,370,1.835,377,0.82,388,0.529,390,1.122,402,1.789,410,1.178,411,1.618,412,1.67,413,2.37,414,1.373,415,1.898,426,1.541,427,2.029,429,1.514,430,2.379,431,2.239,432,2.239,433,1.946,434,1.448,436,2.464,437,2.34,438,2.334,439,1.541,440,1.466,441,1.622,442,1.622,444,0.912,445,1.844,446,1.373,447,0.82,448,1.59,449,1.448,452,2.079,453,1.946,454,1.373,458,0.78,459,1.448,460,0.912,462,1.819,464,1.822,466,1.239,467,1.303,468,1.847,469,1.541,477,2.273,481,0.641,484,0.864,486,0.864,487,0.912,497,1.622,501,1.239,521,2.297,524,2.444,525,1.446,531,1.722,532,2.837,533,1.446,543,0.82,546,1.332,555,1.448,562,1.446,576,2.297,585,1.332,602,1.155,608,2.297,621,3.965,651,1.332,678,1.965,681,2.971,710,1.965,711,3.483,717,4.691,737,2.116,743,1.084,758,3.552,759,2.444,818,3.271,819,3.39,878,1.446,885,2.297,901,2.601,921,2.858,927,1.155,967,3.256,969,2.297,1001,2.837,1023,1.446,1140,2.116,1143,1.021,1145,2.297,1195,2.297,1196,3.256,1204,2.116,1223,2.297,1224,2.297,1225,2.297,1229,1.237,1231,1.446,1232,1.446,1240,2.297,1241,1.237,1242,2.297,1249,1.332,1252,1.446,1273,3.256,1286,1.446,1312,1.446,1355,1.332,1410,1.446,1458,1.021,1505,2.44,1509,1.446,1551,3.271,1563,2.444,1567,1.446,1568,1.446,1583,3.256,1590,1.084,1612,1.332,1621,1.446,1622,1.446,1623,3.256,1624,2.525,1625,1.589,1626,1.589,1627,1.589,1628,2.525,1629,1.589,1630,1.589,1631,1.589,1632,1.589,1633,2.525,1634,1.589,1635,1.589,1636,1.589,1637,5.587,1638,1.589,1639,1.589,1640,1.589,1641,2.525,1642,1.589,1643,3.141,1644,1.589,1645,2.858,1646,1.589,1647,1.589,1648,1.589,1649,1.589,1650,1.589,1651,1.589,1652,1.589,1653,2.525,1654,1.589,1655,1.589,1656,3.141,1657,1.589,1658,1.589,1659,2.525,1660,3.904,1661,3.256,1662,2.525,1663,1.589,1664,1.589,1665,3.141,1666,2.525,1667,3.578,1668,2.525,1669,1.446,1670,1.589,1671,2.525,1672,1.589,1673,2.525,1674,2.525,1675,1.589,1676,2.525,1677,2.525,1678,5.432,1679,1.589,1680,2.525,1681,1.589,1682,1.589,1683,1.589,1684,1.589,1685,1.589,1686,1.589,1687,1.589,1688,3.904,1689,1.589,1690,1.589,1691,2.525,1692,1.589,1693,1.589,1694,1.589,1695,2.525,1696,1.589,1697,1.589,1698,1.446,1699,1.589,1700,1.589,1701,1.589,1702,1.332,1703,1.589,1704,1.589,1705,1.589,1706,1.589,1707,1.589,1708,1.589,1709,1.589,1710,1.589,1711,1.589,1712,1.589,1713,1.589,1714,1.589]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[81,0.786,139,0.307,164,0.865,168,1.591,1571,0.908]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.185,18,2.575,61,1.754,63,0.016,71,1.904,73,1.887,78,1.224,81,2.219,82,3.885,139,0.637,147,1.166,161,2.727,164,2.418,167,3.649,168,4.386,212,0.016,213,0.016,281,3.649,284,3.305,298,1.713,440,2.494,497,2.192,543,2.192,556,4.247,567,3.087,602,3.087,623,4.759,779,2.727,822,4.247,1355,3.559,1360,4.247,1584,4.247,1698,3.864,1715,4.759,1716,5.989,1717,6.545,1718,5.536,1719,4.759]],["title/additional-documentation/firebase.html",[81,1.016,139,0.397,1571,1.175]],["body/additional-documentation/firebase.html",[63,0.016,73,1.99,81,2.197,82,3.255,147,1.421,212,0.016,213,0.016,356,1.99,506,4.34,543,2.673,555,2.569,567,3.255,1190,3.255,1424,5.018,1458,3.325,1505,3.054,1551,3.753,1607,4.075,1720,5.838,1721,5.838,1722,5.838,1723,5.838,1724,4.075,1725,4.075]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.886,82,1.676,139,0.346,1571,1.024]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.71,17,1.26,39,2.618,47,0.404,53,2.79,54,2.79,56,2.618,61,1.95,63,0.015,67,0.823,78,1.107,81,2.052,82,4.057,83,1.883,137,5.117,139,0.768,140,3.839,161,3.286,162,4.474,163,5.27,164,2.474,165,4.302,167,2.79,168,2.987,212,0.015,213,0.015,281,3.433,282,4.302,283,5.734,284,4.155,298,1.905,303,3.433,305,2.052,377,1.982,427,1.548,506,3.217,543,2.641,561,4.302,585,3.217,586,3.839,602,2.79,704,3.493,711,3.217,743,2.618,779,2.465,1020,4.302,1140,3.217,1249,3.217,1311,3.839,1340,5.293,1542,4.302,1590,2.618,1611,3.839,1617,4.302,1623,4.298,1702,3.217,1715,5.293,1716,4.302,1726,5.005,1727,5.005,1728,5.005,1729,5.005,1730,5.005,1731,5.005,1732,5.005,1733,5.005,1734,5.005,1735,5.005,1736,6.158,1737,4.302,1738,5.005,1739,5.005,1740,6.158,1741,4.302,1742,5.005,1743,5.005,1744,5.005]],["title/additional-documentation/firebase/database-structure.html",[139,0.346,1190,1.676,1571,1.024,1724,2.098]],["body/additional-documentation/firebase/database-structure.html",[9,0.578,17,1.262,42,2.628,47,0.498,61,1.952,63,0.015,67,0.769,69,2.169,77,1.654,81,1.82,83,1.89,87,2.999,121,2.323,126,2.716,156,1.319,161,3.634,162,4.295,164,1.631,212,0.015,213,0.015,309,3.853,382,2.646,389,2.095,402,1.224,407,0.91,410,1.798,413,1.712,436,1.989,462,1.346,469,2.323,473,2.921,501,1.89,550,3.506,551,3.853,555,2.211,559,4.318,565,3.853,567,3.725,586,3.853,707,4.735,733,4.318,745,3.506,759,3.684,779,2.474,920,5.586,1036,3.853,1143,2.474,1186,4.308,1190,4.113,1311,3.853,1458,3.04,1505,2.628,1538,4.318,1564,4.318,1614,3.506,1620,5.744,1661,3.506,1669,3.506,1702,3.229,1719,4.318,1724,4.664,1725,4.664,1737,4.318,1745,5.024,1746,5.024,1747,5.024,1748,6.172,1749,6.172,1750,5.024,1751,5.024,1752,5.024,1753,5.024,1754,5.024,1755,4.318,1756,5.024,1757,5.024,1758,4.318,1759,5.024]],["title/additional-documentation/firebase/firestore-wrapper.html",[139,0.346,1505,1.573,1571,1.024,1725,2.098]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.686,17,1.079,23,1.468,45,1.4,47,0.383,48,0.816,50,4.08,61,1.597,62,1.255,63,0.016,67,0.856,68,0.859,69,2.114,73,2.512,75,1.934,76,2.646,78,1.318,81,1.4,83,2.242,95,0.546,99,1.98,121,1.786,126,2.089,132,1.062,149,4.08,154,3.407,161,3.689,167,2.646,183,0.733,212,0.014,213,0.016,264,3.557,284,2.833,286,1.699,289,1.843,307,3.051,320,3.051,375,2.445,382,2.359,402,1.664,410,1.699,436,1.879,468,2.359,473,1.879,478,2.089,555,2.866,568,4.08,668,4.08,704,3.313,743,2.483,759,2.833,779,2.338,901,2.646,920,4.996,927,2.646,960,5.145,1143,2.338,1190,4.004,1485,4.08,1505,3.681,1537,5.122,1563,2.833,1581,5.122,1584,3.641,1618,4.08,1645,3.313,1724,4.159,1725,5.145,1741,4.08,1755,4.08,1758,5.122,1760,4.747,1761,4.747,1762,4.747,1763,5.959,1764,4.747,1765,4.747,1766,4.747,1767,4.747,1768,4.747,1769,6.513,1770,4.747,1771,4.747,1772,4.747,1773,4.747,1774,4.747,1775,4.747,1776,4.747,1777,5.959,1778,4.747,1779,4.747,1780,4.747,1781,4.747,1782,6.513,1783,5.959,1784,4.747,1785,4.747,1786,4.747,1787,4.747,1788,4.747]],["title/additional-documentation/firebase/firebase-functions.html",[73,1.024,81,0.886,139,0.346,1571,1.024]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.644,16,2.46,17,1.192,53,3.117,54,3.117,61,1.499,63,0.016,67,0.644,68,1.012,73,2.544,76,3.117,81,2.172,87,3.929,126,2.46,156,1.192,162,4.232,163,3.902,164,2.345,167,3.117,212,0.016,213,0.016,281,3.117,303,3.117,427,1.73,435,2.001,542,4.289,543,2.214,544,4.806,567,3.67,602,3.67,710,3.337,901,3.117,1036,4.289,1190,3.117,1235,4.289,1543,5.658,1789,5.591,1790,5.591,1791,5.591,1792,5.591,1793,5.591,1794,5.591,1795,5.591]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1080,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1389,"title":{},"body":{"injectables/ToastService.html":{}}}],["17",{"_index":1591,"title":{},"body":{"overview.html":{}}}],["2",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":911,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3/3",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":889,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1390,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1592,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_log(collectiontitl",{"_index":1787,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1402,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1403,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1152,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abil",{"_index":1636,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["abov",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["abstract",{"_index":1672,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ac",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":682,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1455,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":164,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":637,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":786,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1571,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":1759,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1637,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1695,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1697,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1729,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1726,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["angular",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1313,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1663,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1583,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":215,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["approut",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1586,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":500,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":385,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1715,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["b",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["background",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1352,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1398,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1353,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1354,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1350,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1362,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1361,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1363,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1359,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1349,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{}}}],["be",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1562,"title":{},"body":{"index.html":{}}}],["befor",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behind",{"_index":1657,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1623,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1621,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1753,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":908,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":499,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1286,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":938,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":178,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1546,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1589,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1376,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1537,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["c.id",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1561,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1660,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1665,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1693,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1676,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1630,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1394,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":267,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["categories'},{'nam",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":180,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1509,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1680,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chip",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1347,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:20",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:28",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:42",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:58",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["chosen",{"_index":1421,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":96,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1381,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["clickabl",{"_index":1650,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1555,"title":{},"body":{"index.html":{}}}],["close",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1746,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1154,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1342,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1343,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1344,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1391,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1392,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditorcompon",{"_index":182,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1730,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1788,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1572,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compodoc",{"_index":1609,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1667,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1584,"title":{},"body":{"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1377,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1164,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1288,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1397,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:115",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:129",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:139",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:44",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:64",{"_index":999,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:96",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1567,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":789,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":791,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":684,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":787,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":788,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1454,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":790,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1710,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursechipcompon",{"_index":185,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":894,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":784,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":187,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":982,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":189,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["cover",{"_index":1607,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1457,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1742,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1642,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1653,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":960,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["data.st",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1190,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1610,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["datatyp",{"_index":1749,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1769,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1624,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":216,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1543,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deprec",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["describ",{"_index":1563,"title":{},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1632,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1395,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1061,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1062,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1060,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1063,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1064,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1059,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":779,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1611,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["direct",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1568,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":438,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover(canvasitem",{"_index":1662,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1638,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1159,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":426,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1380,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1569,"title":{},"body":{"index.html":{}}}],["div",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["do",{"_index":1416,"title":{},"body":{"injectables/ToolService.html":{}}}],["document",{"_index":1458,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1388,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1104,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1099,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1412,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":678,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1382,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1384,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1385,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["earlier",{"_index":1707,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1761,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1750,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1399,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:105",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:128",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":442,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1779,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1686,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":168,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["end",{"_index":1574,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1614,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1700,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":247,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1160,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":191,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["esseci",{"_index":1628,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["etc",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["even",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":1714,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ex",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exist",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1773,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1783,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1701,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["feedback",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1447,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1652,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1649,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1706,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase.auth",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["firestor",{"_index":1725,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1771,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1767,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1770,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fit",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":437,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix(canvasitem",{"_index":1674,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1616,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1634,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1673,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1696,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1161,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":439,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1581,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1617,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1551,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["form",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1293,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1285,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1300,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":939,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1685,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1631,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["four",{"_index":1772,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1541,"title":{},"body":{"index.html":{}}}],["front",{"_index":1573,"title":{},"body":{"index.html":{}}}],["full",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1576,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1791,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1733,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1312,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":752,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1074,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1426,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1430,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1162,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1554,"title":{},"body":{"index.html":{}}}],["github",{"_index":1764,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["github:byuitechops/canva",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["github:byuitechops/logg",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["gmail",{"_index":1738,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1383,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1295,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1298,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["header",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1283,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":501,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1646,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1612,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["highlight",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":224,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1747,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlelement",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1167,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1165,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["icon",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1549,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["idtoken",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1675,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["imag",{"_index":1678,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1692,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1683,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1689,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1682,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1681,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1690,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":285,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["infinit",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1781,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":277,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('index",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('searchphras",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('sid",{"_index":1367,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1365,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1364,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1366,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1553,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instanceof",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1735,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{}}}],["instructor",{"_index":494,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1540,"title":{},"body":{"index.html":{}}}],["integr",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":407,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1782,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["intial",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isad",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":929,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":138,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1691,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":681,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":983,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":194,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":196,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1065,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":198,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":462,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":680,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1668,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":981,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1072,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":495,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":200,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1073,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":202,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":683,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1410,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1752,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1379,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1723,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1608,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["katana/server/node_tool",{"_index":1704,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1708,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1718,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["last",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1413,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1575,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1659,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1538,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["letter",{"_index":1626,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1613,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["lighten",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1585,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1393,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1070,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1071,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1069,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":1081,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":1076,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:23",{"_index":1079,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:30",{"_index":1078,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":1077,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1068,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":386,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1441,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1443,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1445,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1577,"title":{},"body":{"index.html":{}}}],["locat",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["log",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logger",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["logic",{"_index":1656,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["loguserstatu",{"_index":1163,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1785,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1424,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1736,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":1625,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1669,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1417,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1550,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1545,"title":{},"body":{"index.html":{}}}],["major",{"_index":1655,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manual",{"_index":1744,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1544,"title":{},"body":{"index.html":{}}}],["master",{"_index":783,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["matter",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1086,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["meet",{"_index":1666,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1717,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["middlewar",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1670,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":887,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1593,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1688,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["modal",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1304,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":214,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1694,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["more",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1684,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mute",{"_index":1582,"title":{},"body":{"index.html":{}}}],["n",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":674,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":675,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1096,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1396,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1097,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1098,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1095,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1101,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1102,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1103,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1094,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1699,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1648,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1619,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":910,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1565,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":1001,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["node_tool_template.j",{"_index":1705,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1557,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1712,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1711,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1713,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1739,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["normal",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["nosql",{"_index":1748,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1645,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1762,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1369,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1559,"title":{},"body":{"index.html":{}}}],["null",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["numer",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object:const",{"_index":1709,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1618,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1075,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1305,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1309,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":685,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["opportun",{"_index":1732,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option'",{"_index":1641,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1297,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":422,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1687,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":204,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1643,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["outsid",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":907,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1590,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1795,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1485,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":139,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":916,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:21",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:23",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:31",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1348,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":493,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["persist",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1780,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1351,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1448,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1414,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1579,"title":{},"body":{"index.html":{}}}],["posit",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1671,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1622,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pre",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1404,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1566,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1661,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1564,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["project",{"_index":1716,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1766,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["purpos",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1292,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1741,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.11",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1284,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":940,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{}}}],["recommend",{"_index":1786,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1664,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1793,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1720,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.searchphras",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1677,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":785,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":895,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1556,"title":{},"body":{"index.html":{}}}],["repres",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1768,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1679,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resolv",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1792,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1360,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1719,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1419,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1639,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1425,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1435,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1405,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1429,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1438,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1400,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1100,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1765,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/settings.json",{"_index":1580,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1755,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1158,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1775,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1436,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1439,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":147,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":896,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1432,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1387,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":1143,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["sever",{"_index":1731,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["short",{"_index":1651,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1355,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1346,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":892,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":893,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":891,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:15",{"_index":897,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":898,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:59",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":890,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":225,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1756,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1620,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1702,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1658,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{}}}],["size",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1760,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1745,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1570,"title":{},"body":{"index.html":{}}}],["split",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":782,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1282,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1289,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1290,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:114",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:126",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:143",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:159",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:36",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:48",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:50",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:64",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:83",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:96",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1157,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:116",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:131",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:215",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:26",{"_index":1166,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:308",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:64",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:89",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1345,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1368,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1371,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1375,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1373,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1401,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1411,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1415,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1418,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1423,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1422,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1408,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1409,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1420,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1427,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1428,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1431,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1433,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1407,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1728,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1737,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1229,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1784,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":206,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1356,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1357,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1552,"title":{},"body":{"index.html":{}}}],["still",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1703,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["structur",{"_index":1724,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":496,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1314,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1740,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["suit",{"_index":1734,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["support",{"_index":1587,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1757,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1539,"title":{},"body":{"index.html":{}}}],["tab",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":636,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1291,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1311,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1542,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1721,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1560,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1727,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":498,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1558,"title":{},"body":{"index.html":{}}}],["text",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1633,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["the_tool_nam",{"_index":1629,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["then((cours",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcategori",{"_index":1434,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1437,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1446,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":677,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":676,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":679,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1083,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":914,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1453,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":909,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":915,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":913,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1066,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1067,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"maxlin",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"minlin",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandl",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.get(`/api/tool",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/us",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1084,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1085,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":381,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1294,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1296,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":383,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchphras",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1444,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1751,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1640,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["time",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1358,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1386,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1372,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1370,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1374,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1287,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1794,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["tool.icon",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1440,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1758,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1776,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":226,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":209,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1456,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1058,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":384,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":210,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1406,"title":{},"body":{"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["true",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["two",{"_index":1654,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1378,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1777,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":778,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":497,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["underscor",{"_index":1627,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["unexpectedli",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["univers",{"_index":1548,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1743,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":543,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1754,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1778,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["util",{"_index":1635,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["valid",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1299,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1467,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["verifi",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["verifynewus",{"_index":1790,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["via",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1302,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1303,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1301,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1449,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1451,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1452,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1450,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1318,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1316,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1306,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1317,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1315,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1307,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1308,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1310,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('editor",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1082,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["virtual",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["visibl",{"_index":638,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wait",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1698,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1578,"title":{},"body":{"index.html":{}}}],["white",{"_index":888,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1442,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":912,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":781,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["word",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1615,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1505,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1774,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.j",{"_index":1763,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["written",{"_index":1789,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["yellow",{"_index":1644,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1647,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1722,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1547,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to \nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nBeing used in app.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to \n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     * \n     * This will also retrieve the list of tools from the Katana service when it is\n     * created. \n     * \n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Being used in app.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                // document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                // document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    // document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    // document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /** \n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            let provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                })\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Being used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Being used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the \nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor) \ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can \ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is \ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /** \n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor) \n     * can also be passed in.\n     */\n    @Input('searchPhrase') searchPhrase: string;\n\n    /**\n     * Element reference to the editor div itself so we can \n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is \n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded: boolean = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        let EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        let searchBox = window['ace'].require('ace/searchbox');\n\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            let code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption(\"minLines\", 10);\n        this.editor.setOption(\"maxLines\", 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.searchPhrase) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.searchPhrase, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption(\"maxLines\", this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open.\nBeing used in course-chip.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:28\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-chip.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open.\n     * Being used in course-chip.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:126\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:36\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\nBeing used in course-sidebar.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        // let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        // document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Being used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n    \n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Being used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is intialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is intialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            }\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:308\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\nDEPRECATED\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     * DEPRECATED\n     */\n    logUserStatus(userEmail: string, message: string) {\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/api/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            () => { },\n            this.errorHandler)\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            var userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The \n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                let data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    let course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                let data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    let course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular-lazy-for : ^1.1.5\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-infinite-scroll : ^0.3.5\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-virtual-scroll : ^0.3.4\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : github:byuitechops/canvas-api-wrapper\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nUse npm start to spin up Katana\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nFlags\n\n\n\nFlag\nPurpose\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nDocumentation\nClient (Angular)\n\nLinkName \nArchitecture\nLinkName\nHow To...\nLinkName\nFirebase Integration\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: \"AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc\",\n        authDomain: \"katana-24a36.firebaseapp.com\",\n        databaseURL: \"https://katana-24a36.firebaseio.com\",\n        projectId: \"katana-24a36\",\n        storageBucket: \"katana-24a36.appspot.com\"\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid account added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
