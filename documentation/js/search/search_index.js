var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.125,1,0.704]],["body/components/AppComponent.html",[0,0.209,1,1.182,2,0.192,3,0.164,4,0.828,5,0.828,6,0.828,7,0.136,8,2.464,9,0.772,10,1.87,11,1.758,12,1.261,13,1.176,14,4.152,15,1.176,16,4.152,17,0.221,18,0.518,19,1.971,20,0.541,21,2.162,22,1.879,23,1.172,24,2.073,25,1.359,26,3.569,27,3.004,28,0.646,29,2.922,30,0.534,31,0.028,32,0.573,33,0.272,34,0.313,35,1.021,36,0.952,37,0.887,38,2.922,39,0.389,40,0.164,41,3.485,42,4.829,43,2.922,44,0.828,45,1.021,46,0.887,47,1.267,48,2.464,49,1.095,50,2.162,51,0.164,52,0.156,53,1.275,54,2.922,55,2.922,56,2.922,57,2.496,58,1.607,59,3.501,60,2.283,61,2.162,62,2.162,63,0.923,64,2.922,65,1.095,66,1.94,67,2.922,68,3.501,69,4.152,70,2.162,71,1.021,72,2.922,73,0.847,74,1.176,75,2.922,76,2.283,77,3.501,78,4.152,79,1.321,80,4.152,81,2.922,82,1.367,83,2.464,84,4.434,85,0.61,86,3.501,87,4.683,88,2.464,89,3.501,90,2.922,91,2.464,92,2.162,93,2.922,94,2.922,95,2.496,96,2.922,97,2.464,98,2.922,99,2.922,100,1.607,101,0.281,102,2.922,103,2.922,104,2.922,105,2.922,106,2.464,107,2.464,108,1.757,109,1.687,110,1.757,111,2.922,112,2.464,113,2.922,114,0.952,115,2.922,116,2.922,117,2.922,118,2.922,119,2.922,120,2.922,121,2.258,122,2.922,123,2.922,124,2.464,125,2.162,126,1.021,127,2.464,128,2.922,129,2.922,130,2.922,131,2.922,132,1.757,133,2.464,134,2.922,135,2.162,136,2.464,137,1.267,138,2.922,139,2.922,140,2.922,141,2.922,142,3.072,143,0.719,144,0.82,145,1.176,146,1.176,147,1.388,148,0.828,149,0.828,150,0.622,151,0.828,152,0.622,153,0.828,154,0.622,155,0.828,156,0.622,157,1.176,158,0.622,159,0.828,160,0.622,161,0.828,162,0.622,163,0.828,164,0.622,165,0.828,166,0.622,167,0.828,168,0.622,169,0.828,170,0.622,171,0.828,172,0.622,173,0.772,174,0.828,175,0.622,176,0.622,177,0.828,178,0.016,179,0.016]],["title/modules/AppModule.html",[180,1.82,181,2.194]],["body/modules/AppModule.html",[0,0.209,1,1.359,2,0.191,3,0.163,7,0.136,27,2.999,31,0.028,34,0.312,39,0.449,40,0.163,44,0.823,50,2.151,51,0.294,52,0.109,57,2.487,60,1.599,63,0.862,70,2.151,73,0.59,85,0.464,143,0.715,150,1.226,152,1.261,154,1.226,156,1.226,158,1.226,160,1.226,162,1.226,164,1.226,166,1.226,168,1.226,170,1.261,172,1.226,173,0.767,175,1.261,176,1.261,178,0.016,179,0.016,180,2.275,181,4.579,182,1.927,183,4.06,184,4.06,185,2.895,186,2.451,187,2.451,188,2.451,189,2.451,190,3.463,191,3.488,192,2.907,193,4.136,194,2.151,195,1.927,196,4.136,197,2.907,198,4.136,199,2.451,200,4.136,201,2.451,202,4.815,203,4.815,204,1.359,205,2.275,206,2.451,207,4.136,208,1.599,209,1.927,210,1.599,211,2.907,212,2.451,213,4.136,214,2.907,215,4.136,216,2.451,217,2.151,218,2.907,219,1.015,220,2.907,221,2.151,222,2.907,223,2.151,224,2.907,225,2.151,226,2.907,227,2.151,228,2.907,229,2.151,230,2.907,231,2.907,232,2.907,233,2.151,234,4.136,235,2.151,236,4.136,237,2.151,238,2.907,239,2.151,240,2.907,241,2.151,242,2.151,243,2.151,244,2.907,245,2.151,246,2.907,247,2.451,248,4.136,249,4.857,250,0.823,251,4.136,252,4.06,253,4.136,254,2.275,255,2.451,256,2.907,257,2.907,258,2.907,259,2.907,260,2.907]],["title/injectables/AuthGuardService.html",[27,1.675,261,0.559]],["body/injectables/AuthGuardService.html",[2,0.206,3,0.176,7,0.147,17,0.237,18,0.469,20,0.655,22,2.109,27,2.747,28,0.961,30,0.574,31,0.028,32,0.373,33,0.374,34,0.237,36,1.023,37,0.954,39,0.387,40,0.176,44,0.89,51,0.176,52,0.118,53,0.83,60,2.403,62,3.233,66,2.063,71,1.754,76,2.986,79,0.719,101,0.604,108,3.264,121,1.469,137,1.362,178,0.017,179,0.017,185,1.889,209,2.083,210,2.403,216,2.65,219,2.063,255,4.981,261,0.848,262,2.65,263,1.858,264,5.706,265,5.711,266,5.429,267,1,268,5.429,269,5.429,270,3.143,271,5.907,272,4.369,273,4.369,274,6.059,275,6.42,276,6.059,277,3.684,278,4.578,279,4.017,280,5.706,281,3.138,282,3.143,283,3.233,284,4.369,285,1.154,286,3.143,287,5.109,288,4.369,289,1.327,290,3.143,291,4.369,292,4.578,293,3.143,294,2.325,295,1.59,296,1.178,297,3.143,298,3.143,299,3.143,300,3.233,301,3.143,302,5.023,303,3.143,304,3.143,305,4.369,306,3.143,307,3.143,308,2.65,309,3.143,310,3.143,311,3.143,312,3.143,313,3.143,314,4.369,315,3.143,316,3.143,317,1.638,318,2.65,319,2.65,320,3.143,321,3.143,322,3.143,323,3.143,324,3.143,325,3.143,326,3.143,327,1.59,328,3.143,329,3.143]],["title/components/BreadcrumbsComponent.html",[0,0.125,150,0.704]],["body/components/BreadcrumbsComponent.html",[0,0.208,1,0.613,2,0.189,3,0.161,4,0.816,5,0.816,6,0.816,7,0.134,9,0.761,10,1.867,11,1.74,13,1.164,15,1.164,17,0.217,18,0.441,20,0.376,21,2.133,22,2.003,25,1.472,27,3.059,28,0.893,30,0.751,31,0.028,32,0.62,33,0.269,34,0.362,36,0.938,37,0.875,39,0.377,40,0.161,44,0.816,49,1.08,50,2.133,51,0.161,52,0.108,60,2.874,62,3.042,63,0.859,65,1.08,66,1.007,71,2.065,73,0.788,74,0.816,79,1.097,85,0.461,101,0.569,108,3.141,109,1.674,112,3.467,137,2.395,142,3.042,143,0.709,144,0.812,145,1.164,146,1.164,147,1.38,148,0.816,149,0.816,150,1.112,151,0.816,152,0.613,153,0.816,154,0.613,155,0.816,156,0.613,157,1.164,158,0.613,159,0.816,160,0.613,161,0.816,162,0.613,163,0.816,164,0.613,165,0.816,166,0.613,167,0.816,168,0.613,169,0.816,170,0.613,171,0.816,172,0.613,173,0.761,174,0.816,175,0.613,176,0.613,177,0.816,178,0.016,179,0.016,205,1.585,208,1.585,210,1.585,249,3.467,252,3.467,254,2.261,263,1.56,265,4.406,267,0.941,277,4.659,283,4.617,285,1.265,287,4.406,294,2.133,317,1.959,330,2.43,331,2.425,332,3.463,333,5.225,334,4.111,335,6.24,336,2.08,337,4.111,338,4.111,339,3.866,340,4.111,341,3.866,342,3.866,343,4.111,344,3.467,345,4.111,346,3.467,347,4.111,348,2.882,349,2.261,350,4.111,351,3.042,352,3.042,353,4.111,354,3.467,355,2.882,356,3.038,357,4.472,358,1.339,359,2.882,360,3.322,361,3.546,362,2.882,363,2.133,364,2.313,365,3.042,366,3.042,367,2.882,368,4.111,369,3.467,370,4.111]],["title/pipes/BypassSanitize.html",[190,1.99,371,2.194]],["body/pipes/BypassSanitize.html",[2,0.316,3,0.27,7,0.225,9,1.272,28,0.749,30,0.881,31,0.027,32,0.731,33,0.316,34,0.364,35,1.516,39,0.378,40,0.27,51,0.27,52,0.181,65,1.806,101,0.555,178,0.023,179,0.023,190,3.841,194,3.565,195,3.193,243,4.264,267,1.103,295,2.438,371,4.087,372,4.264,373,4.063,374,4.818,375,5.763,376,4.818,377,4.818,378,6.165,379,5.763,380,5.763,381,4.818,382,4.818]],["title/components/CategoriesComponent.html",[0,0.125,152,0.704]],["body/components/CategoriesComponent.html",[0,0.227,1,0.789,2,0.243,3,0.208,4,1.051,5,1.051,6,1.051,7,0.173,9,0.98,10,1.924,11,1.794,13,1.385,15,1.385,17,0.28,18,0.524,20,0.484,23,1.249,25,1.513,28,0.85,30,0.894,31,0.028,32,0.689,33,0.321,34,0.413,39,0.359,40,0.208,46,1.127,49,1.391,51,0.208,52,0.14,53,1.291,63,0.939,66,1.296,73,0.78,74,1.051,79,1.119,85,0.527,101,0.527,108,2.231,109,1.708,143,0.913,144,0.965,145,1.385,146,1.385,147,1.535,148,1.051,149,1.051,150,0.789,151,1.051,152,1.237,153,1.051,154,0.789,155,1.051,156,0.789,157,1.385,158,0.789,159,1.051,160,0.789,161,1.051,162,0.789,163,1.051,164,0.789,165,1.051,166,0.789,167,1.051,168,0.789,169,1.051,170,0.789,171,1.051,172,0.789,173,0.98,174,1.051,175,0.789,176,0.789,177,1.051,178,0.019,179,0.019,250,1.818,263,1.592,267,1.119,285,0.98,296,1.391,364,1.494,383,3.129,384,4.89,385,4.89,386,4.89,387,2.459,388,3.71,389,4.123,390,3.71,391,3.71,392,1.735,393,1.127,394,2.04,395,3.71,396,3.71,397,3.71,398,3.71,399,4.89,400,2.689]],["title/interfaces/Category.html",[250,0.937,401,0.758]],["body/interfaces/Category.html",[2,0.221,3,0.189,7,0.158,12,1.026,17,0.255,18,0.492,19,2.52,22,1.699,24,1.18,25,0.773,31,0.028,33,0.384,35,1.693,39,0.342,40,0.189,44,0.957,47,1.464,51,0.328,52,0.127,53,1.594,65,1.266,73,0.835,79,1.051,85,0.325,100,2.525,101,0.442,126,1.18,144,0.906,178,0.018,179,0.018,219,1.18,250,1.71,261,0.775,285,1.478,289,1.026,331,2.64,392,1.579,393,1.584,400,2.525,401,1.34,402,1.857,403,2.64,404,3.941,405,2.439,406,1.603,407,2.525,408,2.76,409,2.323,410,2.323,411,1.1,412,2.031,413,1.1,414,1.266,415,3.136,416,2.031,417,1.495,418,2.031,419,2.031,420,1.026,421,2.031,422,2.031,423,2.76,424,2.031,425,2.031,426,2.031,427,1.579,428,2.031,429,1.857,430,2.031,431,2.031,432,2.031,433,2.031,434,2.031,435,3.519,436,2.031,437,3.136,438,2.031,439,3.519,440,2.031,441,3.136,442,2.76,443,2.031,444,2.031,445,2.76,446,2.031,447,2.76,448,2.031,449,1.849,450,2.76,451,2.525,452,2.76]],["title/interfaces/Course.html",[85,0.319,401,0.758]],["body/interfaces/Course.html",[2,0.164,3,0.14,7,0.116,12,0.758,17,0.188,18,0.397,19,1.387,20,0.325,23,0.492,31,0.028,32,0.296,33,0.401,34,0.468,35,1.663,39,0.289,40,0.14,45,2.139,51,0.273,52,0.094,53,0.977,58,1.372,63,0.964,71,1.541,76,1.372,79,0.847,82,1.731,85,0.642,101,0.613,109,1.821,110,1.5,114,1.205,126,1.293,137,1.604,178,0.015,179,0.015,204,1.167,250,0.707,254,1.372,261,0.625,281,2.685,285,1.533,289,1.483,327,2.47,336,1.262,349,2.685,364,2.2,393,1.34,394,1.372,401,1.117,403,1.966,406,0.871,411,1.779,413,0.812,414,0.935,417,1.205,420,1.124,449,1.005,453,1.5,454,2.935,455,3.236,456,3.236,457,2.685,458,2.935,459,3.099,460,1.777,461,1.372,462,2.063,463,3.504,464,1.5,465,1.654,466,1.654,467,1.654,468,1.654,469,1.654,470,1.654,471,1.654,472,1.654,473,1.654,474,1.654,475,2.925,476,1.654,477,1.654,478,1.654,479,1.5,480,1.372,481,1.654,482,3.004,483,1.654,484,1.654,485,1.654,486,1.5,487,1.654,488,2.47,489,1.654,490,1.873,491,1.654,492,1.654,493,1.654,494,2.453,495,1.654,496,1.654,497,1.654,498,2.925,499,3.236,500,1.654,501,1.654,502,1.654,503,2.225,504,2.036,505,3.236,506,2.453,507,2.225,508,1.654,509,2.453,510,2.653,511,2.453,512,2.453,513,2.225,514,1.654,515,1.654,516,1.654,517,1.5,518,1.5,519,1.167,520,1.5,521,1.654,522,1.654,523,1.654,524,2.685,525,2.225,526,2.653,527,1.5,528,2.47,529,1.654,530,1.654,531,1.654,532,2.233,533,1.5,534,2.427,535,1.5,536,2.427,537,1.654,538,2.427,539,1.654,540,1.654,541,2.453,542,1.654,543,1.654,544,2.453,545,3.456,546,3.002,547,2.225,548,1.372,549,1.654,550,2.935,551,2.925,552,1.5,553,1.081,554,2.935,555,2.453,556,2.453,557,1.654,558,1.654,559,1.654,560,1.372,561,1.654]],["title/components/CourseChipComponent.html",[0,0.125,154,0.704]],["body/components/CourseChipComponent.html",[0,0.216,1,0.682,2,0.21,3,0.179,4,0.908,5,0.908,6,0.908,7,0.15,9,0.846,10,1.892,11,1.764,13,1.255,15,1.255,17,0.242,18,0.475,20,0.418,22,1.984,23,1.272,25,1.395,28,0.924,30,0.81,31,0.028,32,0.682,33,0.333,34,0.383,39,0.359,40,0.179,44,0.908,45,1.12,46,0.974,49,1.202,51,0.179,52,0.121,59,3.736,63,0.924,66,1.547,73,0.632,74,0.908,85,0.638,89,3.736,101,0.614,114,1.443,121,1.499,143,0.788,144,0.875,145,1.255,146,1.255,147,1.517,148,0.908,149,0.908,150,0.682,151,0.908,152,0.682,153,0.908,154,1.165,155,0.908,156,0.682,157,1.255,158,0.682,159,0.908,160,0.682,161,0.908,162,0.682,163,0.908,164,0.682,165,0.908,166,0.682,167,0.908,168,0.682,169,0.908,170,0.682,171,0.908,172,0.682,173,0.846,174,0.908,175,0.682,176,0.682,177,0.908,178,0.018,179,0.018,237,4.508,263,1.443,267,1.014,296,1.202,358,1.044,457,1.763,463,2.792,488,1.622,518,1.927,519,1.499,520,1.927,562,4.038,563,2.703,564,4.43,565,4.43,566,5.944,567,4.617,568,5.476,569,2.771,570,1.622,571,4.43,572,3.206,573,4.43,574,3.206,575,3.206,576,3.206,577,3.206,578,3.206,579,3.206,580,3.206,581,3.206,582,5.476,583,4.43,584,3.206,585,4.43,586,2.663,587,3.206,588,3.206,589,3.206,590,3.206,591,3.206,592,3.206,593,3.206,594,2.703,595,3.206,596,3.736,597,3.278]],["title/components/CourseSelectionComponent.html",[0,0.125,156,0.704]],["body/components/CourseSelectionComponent.html",[0,0.182,1,0.445,2,0.137,3,0.117,4,0.593,5,0.593,6,0.593,7,0.151,9,0.553,10,1.777,11,1.656,13,0.918,15,0.918,17,0.158,18,0.348,20,0.273,23,1.193,24,1.783,28,0.959,30,0.933,31,0.028,32,0.632,33,0.378,34,0.337,35,1.098,36,1.055,37,0.984,39,0.26,40,0.117,46,0.636,47,0.908,51,0.117,52,0.079,53,0.553,63,0.751,65,0.785,66,2.155,71,0.731,73,0.462,74,0.593,79,1.105,85,0.643,101,0.582,107,1.766,109,1.783,114,1.572,121,1.854,125,2.398,132,1.949,137,0.908,142,1.549,143,0.515,144,0.783,145,0.918,146,0.918,147,1.275,148,0.593,149,0.593,150,0.445,151,0.593,152,0.445,153,0.593,154,0.445,155,0.593,156,0.95,157,0.918,158,0.445,159,0.593,160,0.445,161,0.593,162,0.445,163,0.593,164,0.445,165,0.593,166,0.445,167,0.593,168,0.445,169,0.593,170,0.445,171,0.593,172,0.445,173,0.553,174,0.593,175,0.445,176,0.445,177,0.593,178,0.021,179,0.018,219,0.731,235,4.566,250,0.593,263,1.291,267,0.742,281,2.655,285,1.275,295,1.64,300,1.549,308,1.766,317,0.785,332,1.388,351,3.573,358,1.055,360,1.949,364,2.366,392,0.979,393,1.356,406,0.731,411,1.291,414,1.215,454,3.469,457,2.455,458,3.395,459,1.06,464,1.949,482,2.181,504,1.152,507,1.259,546,1.06,553,0.908,562,4.09,569,1.64,586,1.259,596,2.733,597,2.398,598,1.549,599,3.344,600,2.733,601,2.733,602,5.325,603,4.464,604,4.828,605,5.029,606,5.502,607,4.828,608,3.965,609,3.303,610,3.241,611,3.764,612,3.241,613,2.094,614,3.241,615,2.094,616,4.464,617,2.094,618,2.094,619,3.241,620,2.094,621,4.606,622,3.573,623,3.778,624,2.094,625,2.094,626,2.094,627,2.094,628,2.094,629,2.094,630,2.094,631,1.766,632,2.094,633,2.094,634,2.094,635,2.094,636,2.094,637,3.2,638,2.094,639,1.549,640,1.766,641,2.733,642,2.094,643,2.094,644,2.094,645,1.766,646,2.094,647,2.094,648,2.094,649,3.965,650,2.094,651,3.241,652,2.094,653,1.766,654,3.241,655,1.549,656,2.094,657,2.094,658,2.094,659,2.094,660,2.094,661,2.094,662,2.094,663,2.934,664,2.094,665,2.094,666,2.094,667,3.241,668,4.464,669,2.094,670,2.094,671,1.766,672,1.766,673,1.766,674,2.094,675,2.094,676,2.094,677,3.965,678,2.094,679,2.094,680,3.241,681,3.241,682,2.094,683,2.094,684,2.094,685,3.241,686,2.094,687,3.241,688,2.094,689,1.766,690,3.241,691,2.094,692,2.094,693,2.094,694,2.094,695,2.094,696,2.094,697,3.241,698,3.241,699,3.241,700,3.241,701,3.241,702,3.241,703,3.241,704,4.464,705,3.241,706,3.241,707,3.241,708,3.241,709,3.241,710,3.241,711,3.241]],["title/injectables/CourseService.html",[23,0.653,261,0.559]],["body/injectables/CourseService.html",[2,0.151,3,0.128,7,0.107,12,0.697,17,0.173,18,0.373,19,1.304,20,0.548,23,0.687,28,0.984,30,1.036,31,0.028,32,0.688,33,0.361,34,0.446,35,1.567,36,1.367,37,1.275,39,0.275,40,0.128,45,1.979,51,0.262,52,0.086,53,0.918,58,1.263,63,0.947,71,1.466,76,1.263,79,1.072,82,1.626,85,0.65,101,0.632,109,1.758,110,1.381,114,1.133,126,1.215,137,1.508,178,0.014,179,0.014,204,1.074,250,0.65,254,1.263,261,0.709,267,0.796,281,1.263,285,1.496,289,0.697,327,1.162,336,1.162,349,1.263,358,1.367,364,2.133,393,1.528,394,1.263,401,0.961,403,1.886,406,0.802,411,1.367,413,0.748,414,0.861,417,1.133,420,1.056,449,0.925,453,1.381,454,1.381,455,1.522,456,1.522,457,1.263,458,1.381,459,2.935,460,1.691,461,1.263,462,1.963,463,3.564,464,1.381,465,1.522,466,1.522,467,1.522,468,1.522,469,3.104,470,3.104,471,3.104,472,3.104,473,3.104,474,2.305,475,2.783,476,1.522,477,1.522,478,1.522,479,1.381,480,1.263,481,1.522,482,2.912,483,1.522,484,1.522,485,1.522,486,1.381,487,1.522,488,2.37,489,1.522,490,1.76,491,1.522,492,1.522,493,1.522,494,2.305,495,1.522,496,1.522,497,2.305,498,2.783,499,3.104,500,1.522,501,1.522,502,2.305,503,2.091,504,1.913,505,3.104,506,2.305,507,2.091,508,1.522,509,2.305,510,2.524,511,2.305,512,2.305,513,2.091,514,2.305,515,1.522,516,1.522,517,1.381,518,1.381,519,1.074,520,1.381,521,2.305,522,1.522,523,1.522,524,2.576,525,2.091,526,2.524,527,1.381,528,2.37,529,2.305,530,1.522,531,1.522,532,2.125,533,1.381,534,2.309,535,1.381,536,2.309,537,1.522,538,2.309,539,1.522,540,1.522,541,2.305,542,1.522,543,2.305,544,2.305,545,3.336,546,2.935,547,2.091,548,1.263,549,1.522,550,2.816,551,2.783,552,1.381,553,0.995,554,2.816,555,2.305,556,2.305,557,1.522,558,2.305,559,1.522,560,1.263,561,1.522,609,1.699,712,3.478,713,3.478,714,3.478,715,3.478,716,3.478,717,3.478,718,3.478,719,2.296,720,2.296,721,2.296,722,2.296,723,2.296,724,2.296,725,2.296,726,2.296,727,2.296,728,2.296,729,2.296,730,2.296,731,2.296,732,1.936,733,2.296,734,2.296,735,1.936,736,2.296,737,2.296]],["title/components/CourseSidebarComponent.html",[0,0.125,158,0.704]],["body/components/CourseSidebarComponent.html",[0,0.223,1,0.678,2,0.209,3,0.178,4,0.903,5,0.903,6,0.903,7,0.149,9,0.841,10,1.891,11,1.77,13,1.25,15,1.25,17,0.24,18,0.473,20,0.416,22,1.981,23,1.271,25,1.392,28,0.892,30,0.806,31,0.028,32,0.648,33,0.332,34,0.382,39,0.376,40,0.178,44,0.903,46,0.968,49,1.195,51,0.178,52,0.166,63,0.892,66,1.767,73,0.63,74,1.25,84,2.687,85,0.649,86,4.267,87,2.687,88,2.687,101,0.526,109,1.541,124,3.72,143,0.784,144,0.871,145,1.433,146,1.25,147,1.442,148,0.903,149,0.903,150,0.678,151,0.903,152,0.678,153,0.903,154,0.678,155,0.903,156,0.678,157,1.25,158,1.162,159,0.903,160,0.678,161,0.903,162,0.678,163,0.903,164,0.678,165,0.903,166,0.678,167,0.903,168,0.678,169,0.903,170,0.678,171,0.903,172,0.678,173,0.841,174,0.903,175,0.678,176,0.678,177,0.903,178,0.017,179,0.017,221,4.39,263,1.437,267,1.01,296,1.195,344,4.606,356,3.004,358,1.648,360,3.284,393,1.34,417,1.437,490,2.561,562,3.932,570,1.613,735,3.72,738,2.687,739,4.412,740,4.412,741,5.462,742,5.462,743,4.412,744,5.061,745,3.187,746,3.187,747,3.187,748,3.187,749,3.187,750,2.687,751,3.187,752,4.412,753,2.687,754,3.187,755,3.187,756,5.735,757,3.187,758,2.687,759,5.061,760,4.412,761,3.187,762,3.187,763,2.358,764,3.187,765,3.187]],["title/interfaces/DiscoverOption.html",[401,0.758,405,1.548]],["body/interfaces/DiscoverOption.html",[2,0.213,3,0.182,7,0.152,12,0.989,17,0.246,18,0.48,19,2.509,22,1.666,24,1.137,25,0.745,31,0.028,33,0.427,34,0.338,35,1.697,39,0.335,40,0.182,44,0.922,47,1.411,51,0.323,52,0.123,53,1.577,65,1.22,73,0.825,79,1.025,85,0.313,100,2.462,101,0.431,126,1.137,144,0.884,178,0.018,179,0.018,219,1.137,250,1.637,261,0.756,285,1.577,289,0.989,331,3.022,392,1.522,393,1.755,400,2.462,401,1.323,402,1.791,403,2.547,404,3.802,405,2.577,406,2.018,407,3.178,408,3.474,409,2.924,410,2.266,411,1.06,412,1.957,413,1.06,414,1.22,415,3.077,416,1.957,417,1.458,418,1.957,419,1.957,420,0.989,421,1.957,422,1.957,423,2.692,424,1.957,425,1.957,426,1.957,427,1.522,428,1.957,429,1.791,430,1.957,431,1.957,432,1.957,433,1.957,434,1.957,435,3.474,436,1.957,437,3.077,438,1.957,439,3.474,440,1.957,441,3.077,442,2.692,443,1.957,444,1.957,445,2.692,446,1.957,447,2.692,448,1.957,449,1.803,450,2.692,451,2.462,452,2.692]],["title/interfaces/FixOption.html",[401,0.758,410,1.675]],["body/interfaces/FixOption.html",[2,0.213,3,0.182,7,0.152,12,0.989,17,0.246,18,0.48,19,2.509,22,1.666,24,1.137,25,0.745,31,0.028,33,0.427,34,0.338,35,1.697,39,0.335,40,0.182,44,0.922,47,1.411,51,0.323,52,0.123,53,1.577,65,1.22,73,0.825,79,1.025,85,0.313,100,2.462,101,0.431,126,1.137,144,0.884,178,0.018,179,0.018,219,1.137,250,1.637,261,0.756,285,1.577,289,0.989,331,3.022,392,1.522,393,1.755,400,2.462,401,1.323,402,1.791,403,2.547,404,3.802,405,2.393,406,2.018,407,3.178,408,3.474,409,2.924,410,2.59,411,1.06,412,1.957,413,1.06,414,1.22,415,3.077,416,1.957,417,1.458,418,1.957,419,1.957,420,0.989,421,1.957,422,1.957,423,2.692,424,1.957,425,1.957,426,1.957,427,1.522,428,1.957,429,1.791,430,1.957,431,1.957,432,1.957,433,1.957,434,1.957,435,3.474,436,1.957,437,3.077,438,1.957,439,3.474,440,1.957,441,3.077,442,2.692,443,1.957,444,1.957,445,2.692,446,1.957,447,2.692,448,1.957,449,1.803,450,2.692,451,2.462,452,2.692]],["title/interfaces/Issue.html",[63,0.515,401,0.758]],["body/interfaces/Issue.html",[2,0.168,3,0.143,7,0.119,12,0.777,17,0.193,18,0.404,19,1.975,20,0.334,23,0.505,31,0.028,32,0.303,33,0.383,34,0.458,35,1.635,39,0.294,40,0.143,45,1.925,51,0.277,52,0.096,53,0.996,58,1.407,63,0.979,71,1.564,76,1.407,79,0.863,82,1.763,85,0.642,101,0.616,109,1.84,110,1.538,114,1.228,126,1.317,137,1.635,178,0.015,179,0.015,204,1.196,250,0.725,254,1.407,261,0.637,281,1.407,285,1.305,289,0.777,327,1.295,336,2.501,349,1.407,364,2.22,393,1.6,394,1.407,401,1.131,403,1.99,406,0.893,411,1.458,413,0.833,414,0.959,417,1.228,420,1.145,449,1.03,453,1.538,454,1.538,455,1.696,456,1.696,457,1.407,458,1.538,459,3.022,460,2.356,461,1.407,462,2.736,463,3.583,464,2.971,465,3.276,466,3.276,467,1.696,468,1.696,469,1.696,470,1.696,471,1.696,472,1.696,473,1.696,474,1.696,475,2.968,476,1.696,477,1.696,478,1.696,479,1.538,480,1.407,481,1.696,482,3.032,483,1.696,484,1.696,485,1.696,486,1.538,487,1.696,488,2.501,489,1.696,490,1.908,491,1.696,492,1.696,493,1.696,494,2.499,495,1.696,496,1.696,497,1.696,498,2.968,499,3.276,500,1.696,501,1.696,502,1.696,503,2.267,504,2.074,505,3.276,506,2.499,507,2.267,508,1.696,509,2.499,510,2.692,511,2.499,512,2.499,513,2.267,514,1.696,515,1.696,516,1.696,517,1.538,518,1.538,519,1.196,520,1.538,521,1.696,522,1.696,523,1.696,524,2.718,525,2.267,526,2.692,527,1.538,528,2.501,529,1.696,530,1.696,531,1.696,532,2.266,533,1.538,534,2.463,535,1.538,536,2.463,537,1.696,538,2.463,539,1.696,540,1.696,541,2.499,542,1.696,543,1.696,544,2.499,545,3.492,546,3.022,547,2.267,548,1.407,549,1.696,550,2.971,551,2.968,552,1.538,553,1.109,554,2.971,555,2.499,556,2.499,557,1.696,558,1.696,559,1.696,560,1.407,561,1.696]],["title/components/IssueCardComponent.html",[0,0.125,160,0.704]],["body/components/IssueCardComponent.html",[0,0.214,1,0.665,2,0.205,3,0.175,4,0.885,5,0.885,6,0.885,7,0.253,9,0.825,10,1.886,11,1.759,13,1.233,15,1.233,17,0.236,18,0.537,20,0.407,23,1.266,28,0.941,30,0.571,31,0.028,32,0.594,33,0.397,34,0.328,39,0.285,40,0.175,45,2.059,46,0.949,51,0.175,52,0.164,61,2.312,63,1.006,71,1.091,73,0.621,74,0.885,85,0.482,95,1.878,101,0.521,108,3.423,143,0.769,144,0.859,145,1.418,146,1.233,147,1.43,148,0.885,149,0.885,150,0.665,151,0.885,152,0.665,153,0.885,154,0.665,155,0.885,156,0.665,157,1.233,158,0.665,159,0.885,160,1.152,161,0.885,162,0.665,163,0.885,164,0.665,165,0.885,166,0.665,167,0.885,168,0.665,169,0.885,170,0.665,171,0.885,172,0.665,173,0.825,174,0.885,175,0.665,176,0.665,177,0.885,178,0.017,179,0.017,180,2.978,225,4.565,263,1.417,267,0.996,295,2.534,296,1.171,358,1.017,403,1.258,420,1.521,459,2.202,479,1.878,490,1.581,510,1.878,524,1.718,525,1.878,526,3.256,527,1.878,569,2.881,570,1.581,597,3.22,599,4.567,611,4.567,621,4.007,622,2.312,623,3.22,637,2.071,671,4.567,766,3.393,767,2.635,768,4.352,769,4.352,770,5.896,771,5.896,772,4.352,773,3.125,774,3.125,775,3.125,776,3.125,777,3.125,778,2.071,779,3.125,780,3.125,781,3.125,782,2.635,783,4.352,784,3.125,785,3.125,786,5.416,787,5.008,788,5.416,789,4.352,790,4.352,791,4.352,792,3.125,793,4.352,794,3.125,795,3.125,796,3.125,797,2.312,798,3.125,799,3.125,800,3.125,801,3.125,802,3.125,803,3.125,804,3.125,805,3.125,806,3.125,807,3.125,808,3.67,809,3.67,810,3.22]],["title/components/IssueContainerComponent.html",[0,0.125,162,0.704]],["body/components/IssueContainerComponent.html",[0,0.197,1,0.536,2,0.165,3,0.141,4,0.714,5,0.714,6,0.714,7,0.118,9,0.665,10,1.831,11,1.707,13,1.056,15,1.056,17,0.19,18,0.4,19,1.398,20,0.329,23,1.12,25,1.255,28,0.906,30,0.897,31,0.028,32,0.691,33,0.322,34,0.428,35,1.395,37,1.133,39,0.322,40,0.141,46,0.765,49,0.945,51,0.141,52,0.213,63,1.02,65,0.945,66,0.88,71,0.88,73,0.532,74,0.714,85,0.528,101,0.561,121,1.179,132,2.242,135,1.865,143,0.62,144,0.736,145,1.056,146,1.056,147,1.295,148,0.714,149,0.714,150,0.536,151,0.714,152,0.536,153,0.714,154,0.536,155,0.714,156,0.536,157,1.056,158,0.536,159,0.714,160,0.536,161,0.714,162,1.044,163,0.714,164,0.536,165,0.714,166,0.536,167,0.714,168,0.536,169,0.714,170,0.536,171,0.714,172,0.536,173,0.665,174,0.714,175,0.536,176,0.536,177,0.714,178,0.015,179,0.015,219,1.302,239,4.402,267,1.016,285,0.665,295,1.887,317,0.945,346,2.125,358,1.445,387,1.671,392,1.179,411,1.214,417,1.214,420,1.133,460,1.015,461,1.386,480,1.386,519,2.83,528,3.01,532,3.01,533,2.242,534,3.272,535,2.242,536,2.698,538,2.441,546,2.246,547,1.515,550,2.242,552,1.515,553,1.092,554,1.515,560,1.386,569,2.483,621,3.63,622,1.865,623,2.76,663,2.76,758,3.145,766,3.272,778,2.942,810,2.76,811,2.125,812,3.145,813,3.729,814,3.729,815,4.906,816,3.729,817,4.906,818,3.63,819,3.729,820,3.729,821,3.729,822,2.52,823,3.729,824,4.906,825,2.52,826,4.906,827,2.52,828,2.52,829,3.729,830,2.52,831,2.52,832,3.729,833,2.52,834,3.743,835,2.52,836,2.52,837,2.52,838,2.52,839,2.52,840,2.52,841,2.52,842,4.439,843,2.52,844,2.52,845,2.52,846,2.52,847,2.52,848,2.52,849,5.949,850,2.52,851,2.52,852,3.729,853,2.52,854,2.52,855,2.52,856,2.52,857,2.52,858,3.145,859,3.145,860,4.906,861,4.906,862,3.145,863,3.145]],["title/components/IssueDetailsComponent.html",[0,0.125,164,0.704]],["body/components/IssueDetailsComponent.html",[0,0.229,1,0.812,2,0.25,3,0.213,4,1.08,5,1.08,6,1.08,7,0.178,9,1.007,10,1.93,11,1.799,13,1.41,15,1.41,17,0.288,18,0.534,20,0.497,23,1.31,28,0.862,30,0.697,31,0.028,32,0.657,33,0.326,34,0.376,39,0.326,40,0.213,46,1.158,51,0.213,52,0.144,63,1.044,73,0.71,74,1.08,85,0.534,101,0.367,143,0.938,144,0.983,145,1.41,146,1.41,147,1.552,148,1.08,149,1.08,150,0.812,151,1.08,152,0.812,153,1.08,154,0.812,155,1.08,156,0.812,157,1.41,158,0.812,159,1.08,160,0.812,161,1.08,162,0.812,163,1.08,164,1.25,165,1.08,166,0.812,167,1.08,168,0.812,169,1.08,170,0.812,171,1.08,172,0.812,173,1.007,174,1.08,175,0.812,176,0.812,177,1.08,178,0.02,179,0.02,227,4.348,263,1.621,267,1.14,295,2.52,296,1.43,336,2.52,358,1.242,570,1.93,766,3.232,778,3.674,818,4.348,864,3.217,865,4.979,866,4.979,867,3.815,868,3.815,869,3.815,870,4.199,871,4.979]],["title/interfaces/IssueItem.html",[45,1.156,401,0.758]],["body/interfaces/IssueItem.html",[2,0.171,3,0.146,7,0.121,12,0.79,17,0.196,18,0.409,19,1.989,20,0.339,23,0.514,31,0.028,32,0.309,33,0.364,34,0.288,35,1.638,39,0.297,40,0.146,45,2.002,51,0.279,52,0.098,53,1.008,58,1.431,63,1.01,71,1.58,76,1.431,79,0.874,82,1.786,85,0.643,101,0.618,109,1.853,110,1.565,114,1.243,126,1.334,137,1.655,178,0.015,179,0.015,204,1.217,250,1.411,254,1.431,261,0.645,281,1.431,285,1.316,289,0.79,327,1.317,336,1.317,349,1.431,364,2.234,393,1.374,394,2.74,401,1.141,403,2.007,406,0.909,411,1.473,413,0.847,414,0.976,417,1.243,420,1.16,449,1.048,453,1.565,454,1.565,455,1.725,456,1.725,457,1.431,458,1.565,459,3.196,460,1.822,461,1.431,462,2.115,463,3.529,464,1.565,465,1.725,466,1.725,467,3.303,468,3.303,469,1.725,470,1.725,471,1.725,472,1.725,473,1.725,474,1.725,475,2.998,476,1.725,477,1.725,478,1.725,479,1.565,480,1.431,481,1.725,482,3.05,483,1.725,484,1.725,485,1.725,486,1.565,487,1.725,488,2.521,489,1.725,490,1.932,491,1.725,492,1.725,493,1.725,494,2.531,495,1.725,496,1.725,497,1.725,498,2.998,499,3.303,500,1.725,501,1.725,502,1.725,503,2.296,504,2.1,505,3.303,506,2.531,507,2.296,508,1.725,509,2.531,510,2.719,511,2.531,512,2.531,513,2.296,514,1.725,515,1.725,516,1.725,517,1.565,518,1.565,519,1.217,520,1.565,521,1.725,522,1.725,523,1.725,524,2.74,525,2.296,526,2.719,527,1.565,528,2.521,529,1.725,530,1.725,531,1.725,532,2.289,533,1.565,534,2.487,535,1.565,536,2.487,537,1.725,538,2.487,539,1.725,540,1.725,541,2.531,542,1.725,543,1.725,544,2.531,545,3.517,546,3.035,547,2.296,548,1.431,549,1.725,550,2.996,551,2.998,552,1.565,553,1.128,554,2.996,555,2.531,556,2.531,557,1.725,558,1.725,559,1.725,560,1.431,561,1.725]],["title/components/IssueListComponent.html",[0,0.125,166,0.704]],["body/components/IssueListComponent.html",[0,0.226,1,0.772,2,0.238,3,0.203,4,1.028,5,1.028,6,1.028,7,0.169,9,0.959,10,1.92,11,1.79,13,1.365,15,1.365,17,0.274,18,0.517,20,0.473,23,1.3,28,0.841,30,0.664,31,0.027,32,0.711,33,0.316,34,0.364,39,0.316,40,0.203,46,1.103,51,0.203,52,0.137,63,1.037,73,0.822,74,1.028,77,4.064,85,0.623,101,0.35,114,1.569,126,1.683,132,2.898,143,0.893,144,0.951,145,1.365,146,1.365,147,1.522,148,1.028,149,1.028,150,0.772,151,1.028,152,0.772,153,1.028,154,0.772,155,1.028,156,0.772,157,1.365,158,0.772,159,1.028,160,0.772,161,1.028,162,0.772,163,1.028,164,0.772,165,1.028,166,1.226,167,1.028,168,0.772,169,1.028,170,0.772,171,1.028,172,0.772,173,0.959,174,1.028,175,0.772,176,0.772,177,1.028,178,0.019,179,0.019,219,1.683,223,4.265,263,1.569,267,1.103,289,1.464,295,2.439,296,1.361,358,1.182,411,1.569,420,1.464,538,2.651,570,1.837,766,3.17,778,3.586,818,4.265,862,4.064,863,4.064,872,3.062,873,4.82,874,4.82,875,3.631,876,3.631,877,3.631,878,4.82,879,4.82,880,4.064,881,4.82,882,4.82]],["title/components/IssueNavComponent.html",[0,0.125,168,0.704]],["body/components/IssueNavComponent.html",[0,0.197,1,0.472,2,0.145,3,0.124,4,0.959,5,0.628,6,0.628,7,0.103,9,0.585,10,1.794,11,1.673,13,0.959,15,0.959,17,0.167,18,0.441,20,0.289,22,1.77,23,1.176,24,2.111,25,1.383,28,0.951,30,0.906,31,0.028,32,0.645,33,0.356,34,0.394,35,1.413,36,1.103,37,1.029,39,0.367,40,0.19,44,0.628,45,0.774,46,0.673,47,0.961,49,0.831,51,0.124,52,0.083,53,0.585,63,1.023,66,0.774,71,0.774,73,0.483,74,0.628,82,1.037,85,0.523,101,0.606,143,0.545,144,0.669,145,0.959,146,0.959,147,1.547,148,0.628,149,0.628,150,0.472,151,0.628,152,0.472,153,0.628,154,0.472,155,0.628,156,0.472,157,0.959,158,0.472,159,0.628,160,0.472,161,0.628,162,0.472,163,0.628,164,0.472,165,0.628,166,0.472,167,0.628,168,0.979,169,0.628,170,0.472,171,0.628,172,0.472,173,0.585,174,0.628,175,0.472,176,0.472,177,0.628,178,0.013,179,0.016,205,1.219,208,1.219,229,4.574,263,1.825,267,0.775,278,1.87,289,0.673,296,0.831,317,1.724,332,2.245,336,1.714,339,3.404,341,3.404,342,2.506,349,1.863,352,2.506,356,2.26,357,3.667,358,1.613,360,2.471,361,3.041,363,1.641,364,1.853,365,2.506,366,2.506,394,1.219,406,0.774,417,0.722,420,1.248,449,0.893,463,1.863,486,2.036,488,1.714,519,2.443,524,1.219,528,2.906,532,2.906,534,1.863,536,1.863,548,1.219,553,0.961,569,1.122,570,1.122,586,1.333,639,1.641,641,1.87,689,1.87,763,1.641,766,3.4,797,1.641,808,2.856,809,2.856,810,2.506,834,4.405,870,1.87,883,1.87,884,3.387,885,3.387,886,3.387,887,4.6,888,4.6,889,3.387,890,4.6,891,3.387,892,3.387,893,3.387,894,2.217,895,2.217,896,3.387,897,2.217,898,2.217,899,3.387,900,2.217,901,3.387,902,3.387,903,2.217,904,3.387,905,2.217,906,2.217,907,2.217,908,3.387,909,2.217,910,2.217,911,2.217,912,2.217,913,1.87,914,1.87,915,1.87,916,3.387,917,1.87,918,1.87,919,1.87,920,2.217,921,2.217,922,2.217,923,2.217,924,2.217,925,1.87,926,2.217,927,2.856,928,2.217,929,2.217,930,2.217,931,3.387,932,2.217,933,2.217,934,2.217,935,4.6,936,3.387,937,3.387,938,3.387,939,3.387,940,3.387,941,3.879,942,3.387,943,3.387,944,3.387,945,3.387,946,2.217,947,1.87,948,2.217,949,2.217,950,4.11,951,4.11,952,2.217,953,3.387,954,2.217,955,2.217,956,2.217,957,2.217,958,2.217,959,2.217,960,2.217,961,2.217,962,3.387,963,3.387,964,2.856]],["title/injectables/KatanaService.html",[24,1.156,261,0.559]],["body/injectables/KatanaService.html",[2,0.149,3,0.127,7,0.106,12,0.688,17,0.171,18,0.369,20,0.295,22,1.783,23,1.081,24,1.202,25,1.253,26,3.292,28,0.851,30,0.85,31,0.028,32,0.552,33,0.305,34,0.452,35,0.847,36,1.121,37,1.519,39,0.379,40,0.127,41,3.083,44,0.642,45,0.791,46,0.688,48,1.91,49,0.849,51,0.127,52,0.085,53,0.598,61,3.081,63,0.851,65,0.849,66,1.624,73,0.855,79,1.39,82,1.059,83,4.757,85,0.623,92,4.175,95,2.504,97,2.903,101,0.598,109,1.624,114,1.121,121,2.463,125,3.702,126,1.624,133,1.91,135,1.676,136,2.903,137,2.016,147,1.099,178,0.014,179,0.014,185,1.362,201,1.91,209,1.502,210,1.246,247,2.903,261,0.703,267,0.788,289,0.688,292,1.91,294,1.676,317,2.166,318,3.922,319,4.218,327,1.146,351,2.548,352,1.676,356,2.558,364,1.873,393,1.6,411,1.121,413,0.738,417,1.121,420,1.413,427,2.463,429,1.246,462,1.059,480,1.893,482,2.558,503,2.504,513,1.362,519,1.059,528,2.107,532,1.146,605,1.91,609,2.548,637,2.76,655,1.676,763,2.548,782,4.442,812,2.903,880,2.903,925,1.91,941,1.91,947,3.511,965,1.91,966,4.652,967,3.443,968,3.443,969,4.652,970,2.266,971,4.652,972,3.443,973,3.443,974,3.443,975,2.266,976,3.443,977,2.266,978,3.443,979,2.266,980,2.903,981,2.266,982,3.443,983,4.652,984,3.511,985,2.266,986,3.443,987,2.266,988,2.266,989,2.266,990,2.266,991,2.266,992,2.266,993,2.266,994,2.266,995,1.91,996,3.443,997,2.266,998,2.266,999,2.266,1000,2.266,1001,4.164,1002,4.164,1003,4.164,1004,2.266,1005,3.443,1006,3.443,1007,3.443,1008,3.443,1009,5.268,1010,2.266,1011,3.443,1012,3.443,1013,4.164,1014,2.266,1015,2.266,1016,5.475,1017,3.443,1018,3.443,1019,3.443,1020,2.903,1021,3.443,1022,3.443,1023,3.443,1024,3.443,1025,3.443,1026,3.443,1027,4.652,1028,3.443,1029,2.266,1030,3.443,1031,3.443,1032,2.903,1033,2.266,1034,2.266,1035,2.266,1036,2.266,1037,2.266,1038,2.266,1039,2.266,1040,2.266,1041,3.443,1042,2.266,1043,2.266,1044,2.266]],["title/classes/OptionModel.html",[52,0.125,460,1.333]],["body/classes/OptionModel.html",[2,0.294,3,0.251,7,0.21,12,1.364,17,0.339,18,0.592,20,0.72,28,0.93,30,0.821,31,0.028,32,0.533,33,0.294,34,0.498,36,1.462,37,1.364,39,0.362,40,0.251,51,0.309,52,0.225,101,0.532,178,0.022,179,0.022,204,2.1,261,0.932,267,1.264,279,3.323,317,2.241,413,1.462,460,2.224,462,2.1,1045,3.323,1046,5.26,1047,4.656,1048,5.522,1049,4.491,1050,5.042,1051,2.977,1052,3.787,1053,3.787,1054,3.787,1055,3.787,1056,4.656,1057,3.787,1058,3.787]],["title/injectables/OptionsService.html",[261,0.559,1051,2.194]],["body/injectables/OptionsService.html",[2,0.31,3,0.265,7,0.221,12,1.438,20,0.798,28,0.736,31,0.028,34,0.43,39,0.374,40,0.265,51,0.319,52,0.215,101,0.456,178,0.023,179,0.023,204,2.214,261,1.033,279,3.503,317,2.294,413,1.541,460,1.907,462,2.214,1045,3.503,1046,3.992,1047,3.992,1050,5.16,1051,3.779,1052,3.992,1053,3.992,1054,3.992,1055,3.992,1056,4.808,1057,3.992,1058,3.992,1059,4.734]],["title/components/OptionsViewComponent.html",[0,0.125,170,0.704]],["body/components/OptionsViewComponent.html",[0,0.21,1,0.561,2,0.173,3,0.147,4,0.746,5,0.746,6,0.746,7,0.123,9,0.696,10,1.843,11,1.719,13,1.091,15,1.091,17,0.199,18,0.489,20,0.344,22,1.874,23,1.136,24,2.189,25,1.419,28,0.975,30,0.482,31,0.028,32,0.54,33,0.365,34,0.488,35,0.648,36,1.255,37,1.17,39,0.377,40,0.147,41,1.747,44,0.746,46,0.8,47,1.142,49,0.988,51,0.147,52,0.099,53,0.696,63,0.829,66,1.346,73,0.715,74,1.29,79,1.043,85,0.579,95,2.317,101,0.536,109,1.751,114,0.858,121,1.232,143,0.648,144,0.761,145,1.091,146,1.091,147,1.408,148,0.746,149,0.746,150,0.561,151,0.746,152,0.561,153,0.746,154,0.561,155,0.746,156,0.561,157,1.091,158,0.561,159,0.746,160,0.561,161,0.746,162,0.561,163,0.746,164,0.561,165,0.746,166,0.561,167,0.746,168,0.561,169,0.746,170,1.066,171,0.746,172,0.561,173,0.696,174,0.746,175,0.561,176,0.561,177,0.746,178,0.015,179,0.018,185,1.585,205,1.449,208,1.449,242,4.684,250,1.578,263,1.737,267,1.043,285,1.323,289,0.8,296,0.988,300,1.95,317,1.708,331,1.95,339,3.709,341,3.709,342,3.709,356,2.933,357,4.258,358,1.484,360,3.014,361,3.371,363,1.95,364,1.835,365,2.852,366,2.852,369,3.25,372,4.684,387,1.747,405,2.344,406,0.92,407,2.757,460,2.376,461,1.449,462,2.344,490,1.95,553,1.142,569,1.334,586,1.585,639,1.95,653,3.25,655,1.95,672,3.25,753,2.222,797,2.852,858,3.25,859,3.25,915,2.222,917,3.25,918,3.842,919,2.222,964,3.25,995,2.222,1020,2.222,1060,1.95,1061,3.25,1062,3.25,1063,5.013,1064,5.013,1065,5.013,1066,3.854,1067,2.636,1068,2.636,1069,2.636,1070,2.636,1071,2.636,1072,2.636,1073,2.636,1074,2.636,1075,2.636,1076,2.636,1077,2.636,1078,2.636,1079,2.636,1080,2.636,1081,2.636,1082,3.854,1083,2.636,1084,2.636,1085,2.636,1086,2.636,1087,2.636,1088,2.636,1089,2.636,1090,2.636,1091,2.636,1092,2.636,1093,2.636,1094,2.636,1095,2.636,1096,2.636,1097,2.636,1098,3.854,1099,3.854,1100,3.854,1101,3.854]],["title/components/StatBadgeComponent.html",[0,0.125,172,0.704]],["body/components/StatBadgeComponent.html",[0,0.228,1,0.795,2,0.245,3,0.209,4,1.058,5,1.058,6,1.058,7,0.174,9,0.986,10,1.926,11,1.795,13,1.391,15,1.391,17,0.282,20,0.716,28,0.941,31,0.028,32,0.583,33,0.382,34,0.282,35,1.529,36,1.599,37,1.492,39,0.245,40,0.209,51,0.209,52,0.141,63,0.941,73,0.701,74,1.058,85,0.528,143,0.919,144,0.97,145,1.391,146,1.391,147,1.539,148,1.058,149,1.058,150,0.795,151,1.058,152,0.795,153,1.058,154,0.795,155,1.058,156,0.795,157,1.391,158,0.795,159,1.058,160,0.795,161,1.058,162,0.795,163,1.058,164,0.795,165,1.058,166,0.795,167,1.058,168,0.795,169,1.058,170,0.795,171,1.058,172,1.24,173,1.673,174,1.058,175,0.795,176,0.795,177,1.058,178,0.019,179,0.019,245,4.6,451,2.701,459,2.485,560,2.701,569,2.777,1102,5.241,1103,3.15,1104,4.912,1105,4.912,1106,4.912,1107,5.487,1108,6.336,1109,6.336,1110,5.487,1111,4.912,1112,3.736,1113,3.736,1114,3.736,1115,3.736,1116,3.736,1117,3.736,1118,3.736]],["title/injectables/ToastService.html",[26,1.99,261,0.559]],["body/injectables/ToastService.html",[2,0.267,3,0.228,7,0.19,12,1.237,17,0.307,18,0.557,20,0.746,26,3.123,28,0.936,30,0.949,31,0.028,32,0.616,33,0.267,34,0.392,36,1.326,37,1.237,39,0.34,40,0.228,41,2.699,51,0.228,52,0.153,68,4.822,79,1.189,91,3.434,92,3.013,101,0.58,178,0.021,179,0.021,205,2.24,208,2.24,261,0.966,267,1.189,285,1.51,327,2.628,356,2.24,358,1.691,413,1.326,427,1.904,546,3.148,548,2.24,553,1.765,594,5.079,984,4.38,1032,4.38,1119,3.434,1120,6.023,1121,5.719,1122,5.194,1123,5.194,1124,5.194,1125,4.073,1126,5.194,1127,4.073,1128,5.194,1129,5.194,1130,5.194,1131,5.194,1132,4.073,1133,4.073,1134,4.073,1135,4.073,1136,5.194,1137,4.073,1138,5.194,1139,5.194,1140,5.194,1141,5.194,1142,4.073,1143,4.073]],["title/interfaces/Tool.html",[73,0.472,401,0.758]],["body/interfaces/Tool.html",[2,0.21,3,0.179,7,0.149,12,0.972,17,0.242,18,0.475,19,2.504,22,1.652,24,1.118,25,0.733,31,0.028,33,0.422,34,0.334,35,1.703,39,0.333,40,0.179,44,0.907,47,1.388,51,0.321,52,0.12,53,1.569,65,1.2,73,0.848,79,1.013,85,0.308,100,2.434,101,0.426,126,1.118,144,0.874,178,0.018,179,0.018,219,1.118,250,1.758,261,0.747,285,1.445,289,0.972,331,3.006,392,1.497,393,1.745,400,2.434,401,1.315,402,1.761,403,2.617,404,3.906,405,2.902,406,1.546,407,2.434,408,2.661,409,2.24,410,2.907,411,1.782,412,3.291,413,1.043,414,1.2,415,3.05,416,1.925,417,1.441,418,1.925,419,1.925,420,0.972,421,1.925,422,1.925,423,2.661,424,1.925,425,1.925,426,1.925,427,1.497,428,1.925,429,1.761,430,1.925,431,1.925,432,1.925,433,1.925,434,1.925,435,3.454,436,1.925,437,3.05,438,1.925,439,3.454,440,1.925,441,3.05,442,2.661,443,1.925,444,1.925,445,2.661,446,1.925,447,2.661,448,1.925,449,1.783,450,2.661,451,2.434,452,2.661]],["title/components/ToolSelectionComponent.html",[0,0.125,175,0.704]],["body/components/ToolSelectionComponent.html",[0,0.231,1,0.83,2,0.256,3,0.218,4,1.105,5,1.105,6,1.105,7,0.182,9,1.03,10,1.935,11,1.804,13,1.431,15,1.431,17,0.294,18,0.542,20,0.509,23,1.264,25,1.525,28,0.786,30,0.713,31,0.027,32,0.665,33,0.331,34,0.381,39,0.367,40,0.218,46,1.185,49,1.463,51,0.218,52,0.147,63,0.955,66,1.363,73,0.926,74,1.105,85,0.54,109,1.765,143,0.96,144,0.998,145,1.431,146,1.431,147,1.565,148,1.105,149,1.105,150,0.83,151,1.105,152,0.83,153,1.105,154,0.83,155,1.105,156,0.83,157,1.431,158,0.83,159,1.105,160,0.83,161,1.105,162,0.83,163,1.105,164,0.83,165,1.105,166,0.83,167,1.105,168,0.83,169,1.105,170,0.83,171,1.105,172,0.83,173,1.03,174,1.105,175,1.261,176,0.83,177,1.105,178,0.02,179,0.02,241,4.147,263,1.646,296,1.463,387,2.587,598,2.888,600,4.261,601,4.261,631,3.291,1144,4.147,1145,3.903,1146,5.054,1147,5.054]],["title/injectables/ToolService.html",[25,0.758,261,0.559]],["body/injectables/ToolService.html",[2,0.182,3,0.155,7,0.13,12,0.843,17,0.209,18,0.429,19,2.521,20,0.362,21,2.054,22,1.847,24,0.969,25,0.916,28,1.001,30,0.858,31,0.028,32,0.557,33,0.406,34,0.354,35,1.65,36,1.773,37,1.653,39,0.308,40,0.155,44,0.786,47,1.203,51,0.305,52,0.104,53,1.609,65,1.04,73,0.883,79,1.176,85,0.385,100,2.201,101,0.494,126,0.969,144,1.014,178,0.016,179,0.016,219,0.969,250,1.775,261,0.792,285,1.58,289,1.56,331,2.375,358,1.303,389,2.341,392,1.298,393,1.425,400,2.201,401,1.176,402,1.527,403,2.627,404,3.922,405,2.194,406,1.398,407,2.201,408,2.406,409,2.025,410,2.025,411,0.904,412,1.669,413,0.904,414,1.5,415,3.41,416,2.406,417,1.672,418,2.406,419,2.406,420,1.215,421,2.406,422,2.406,423,3.088,424,3.088,425,3.088,426,1.669,427,1.298,428,1.669,429,2.825,430,3.088,431,3.088,432,3.088,433,3.088,434,2.406,435,3.274,436,1.669,437,2.821,438,2.406,439,3.274,440,1.669,441,2.821,442,2.406,443,1.669,444,1.669,445,2.406,446,1.669,447,2.406,448,1.669,449,1.612,450,2.406,451,2.201,452,2.406,732,2.341,1148,2.776,1149,2.776,1150,2.776,1151,2.776,1152,2.776,1153,2.776,1154,2.776,1155,2.776,1156,2.776,1157,2.776,1158,2.776,1159,2.776,1160,2.776,1161,2.776,1162,2.776,1163,2.776,1164,2.776]],["title/components/ToolViewComponent.html",[0,0.125,176,0.704]],["body/components/ToolViewComponent.html",[0,0.226,1,0.773,2,0.238,3,0.203,4,1.03,5,1.03,6,1.03,7,0.17,9,0.96,10,1.92,11,1.79,13,1.366,15,1.366,17,0.274,18,0.517,20,0.474,23,1.3,25,1.518,28,0.897,30,0.665,31,0.028,32,0.642,33,0.355,34,0.364,39,0.355,40,0.203,45,1.27,46,1.104,49,1.363,51,0.203,52,0.137,63,0.933,73,0.912,74,1.533,82,1.7,85,0.555,101,0.594,114,1.571,143,0.894,144,0.952,145,1.366,146,1.366,147,1.523,148,1.03,149,1.03,150,0.773,151,1.03,152,0.773,153,1.03,154,0.773,155,1.03,156,0.773,157,1.366,158,0.773,159,1.03,160,0.773,161,1.03,162,0.773,163,1.03,164,0.773,165,1.03,166,0.773,167,1.03,168,0.773,169,1.03,170,0.773,171,1.03,172,0.773,173,0.96,174,1.03,175,0.773,176,1.227,177,1.03,178,0.019,179,0.019,233,4.441,263,1.954,267,1.104,296,1.363,488,2.441,517,2.186,567,4.863,570,1.84,927,3.066,1060,2.69,1061,4.068,1062,4.068,1144,4.441,1165,3.636,1166,3.636,1167,3.636,1168,3.636,1169,3.636,1170,3.636,1171,4.824,1172,4.824]],["title/coverage.html",[1173,3.818]],["body/coverage.html",[0,0.253,1,0.777,7,0.17,8,3.078,23,0.721,24,1.275,25,0.836,26,2.195,27,1.847,31,0.028,33,0.239,45,1.275,52,0.137,63,0.568,73,0.521,85,0.351,114,2.266,150,0.777,152,0.777,154,0.777,156,0.777,158,0.777,160,0.777,162,0.777,164,0.777,166,0.777,168,0.777,170,0.777,172,0.777,175,0.777,176,0.777,178,0.019,179,0.019,190,2.195,217,4.014,221,2.701,223,2.701,225,2.701,227,2.701,229,2.701,233,2.701,235,2.701,237,2.701,239,2.701,241,2.701,242,2.701,243,2.701,245,2.701,250,1.034,261,1.043,262,3.078,317,1.368,330,3.078,371,2.419,372,3.579,373,3.078,383,3.078,401,1.442,402,3.305,405,1.707,409,1.847,410,1.847,453,3.473,460,1.47,562,3.596,563,3.078,598,3.579,640,3.078,738,3.078,766,3.305,767,3.078,811,3.078,864,3.078,872,3.078,883,3.078,965,3.078,1045,3.579,1051,2.419,1060,3.579,1102,3.078,1103,3.078,1119,3.078,1144,3.579,1173,3.078,1174,3.65,1175,3.65,1176,3.65,1177,4.837,1178,3.65,1179,3.65,1180,3.078,1181,4.447,1182,6.176,1183,3.65,1184,3.65,1185,6.01,1186,4.837,1187,3.65,1188,4.837,1189,4.837,1190,3.65,1191,4.837,1192,5.425,1193,3.65,1194,3.65,1195,3.65,1196,3.65,1197,4.837,1198,3.65,1199,3.65,1200,3.078,1201,3.078,1202,4.079,1203,3.078,1204,3.65]],["title/dependencies.html",[182,2.64,1205,2.758]],["body/dependencies.html",[31,0.028,40,0.252,44,1.276,178,0.022,179,0.022,182,2.986,194,4.094,195,3.667,199,3.799,204,2.107,205,3.043,206,3.799,208,3.043,209,3.667,210,2.478,212,3.799,637,2.986,645,3.799,750,3.799,913,3.799,914,4.666,980,3.799,1206,4.506,1207,6.726,1208,4.506,1209,4.506,1210,4.506,1211,4.506,1212,4.506,1213,4.506,1214,4.506,1215,4.506,1216,4.506,1217,4.506,1218,4.506,1219,4.506,1220,4.506,1221,4.506,1222,4.506,1223,4.506,1224,4.506,1225,4.506,1226,4.506,1227,4.506,1228,4.506,1229,4.506,1230,5.533,1231,4.506,1232,5.533,1233,4.506,1234,4.506,1235,4.506,1236,4.506,1237,4.506,1238,4.506,1239,4.506,1240,4.506,1241,4.506,1242,4.506,1243,4.506,1244,4.506,1245,4.506]],["title/index.html",[17,0.208,127,2.326,504,1.517]],["body/index.html",[0,0.227,3,0.257,7,0.215,11,1.214,31,0.022,32,0.545,58,2.528,60,2.528,71,2.11,95,3.991,106,3.877,132,2.764,178,0.022,179,0.022,219,1.606,283,3.402,317,1.723,332,4.273,354,3.877,414,1.723,427,2.619,663,3.402,673,3.877,1246,5.602,1247,6.289,1248,6.042,1249,6.042,1250,4.597,1251,4.597,1252,6.638,1253,4.597,1254,4.597,1255,4.597,1256,4.597,1257,4.597,1258,4.597,1259,4.597,1260,4.597,1261,4.597,1262,4.597,1263,4.597,1264,4.597,1265,3.877,1266,5.602,1267,6.447,1268,5.602,1269,5.602,1270,4.597,1271,6.289,1272,4.597,1273,4.597,1274,4.597,1275,6.042,1276,4.597]],["title/modules.html",[180,2.49]],["body/modules.html",[31,0.024,178,0.024,179,0.024,180,2.96,181,3.567,195,3.567,1277,5.382,1278,5.382,1279,5.382]],["title/overview.html",[1280,3.818]],["body/overview.html",[0,0.16,1,1.389,27,2.952,31,0.027,51,0.238,52,0.16,57,2.556,60,2.338,70,3.146,114,1.384,143,1.046,150,1.241,152,1.241,154,1.241,156,1.241,158,1.241,160,1.241,162,1.241,164,1.241,166,1.241,168,1.241,170,1.241,172,1.241,175,1.241,176,1.241,178,0.021,179,0.021,180,2.935,181,4.664,182,2.818,183,3.585,184,3.585,185,2.556,186,3.585,187,3.585,188,3.585,189,3.585,190,3.507,191,4.5,261,0.718,371,2.818,401,0.973,586,3.507,1280,3.585,1281,4.251,1282,4.251,1283,4.251]],["title/routes.html",[57,2.722]],["body/routes.html",[31,0.024,57,3.268,178,0.024,179,0.024]],["title/miscellaneous/variables.html",[1181,2.948,1284,2.326]],["body/miscellaneous/variables.html",[17,0.352,31,0.028,33,0.414,36,2.058,37,1.92,79,1.069,121,2.644,178,0.022,179,0.022,210,2.567,217,5.006,219,2.124,393,1.998,409,3.078,1180,3.937,1181,3.455,1200,3.937,1201,3.937,1202,3.937,1203,5.129,1265,4.768,1284,3.937,1285,5.654,1286,4.669,1287,4.669,1288,4.669,1289,4.669,1290,4.669,1291,4.669,1292,4.669,1293,4.669,1294,4.669,1295,4.669,1296,4.669,1297,4.669,1298,4.669,1299,4.669,1300,4.669,1301,4.669]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.100.2",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":586,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["15",{"_index":1281,"title":{},"body":{"overview.html":{}}}],["15.1.10",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1142,"title":{},"body":{"injectables/ToastService.html":{}}}],["2",{"_index":553,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["2.4.1",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["2/8",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":649,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":761,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":548,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{}}}],["3.2.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["330px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":550,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["4.0.0",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["4/9",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":561,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["5.0.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1143,"title":{},"body":{"injectables/ToastService.html":{}}}],["6",{"_index":1282,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":1251,"title":{},"body":{"index.html":{}}}],["6.0.7",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1283,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":579,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":744,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_sanit",{"_index":381,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["_selectedcategori",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":470,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["_selectedtool",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["a.download",{"_index":961,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":960,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":682,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["acc",{"_index":488,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":940,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1171,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":547,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["accessor",{"_index":732,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":669,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["action",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["activatedrout",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_compon",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add",{"_index":490,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["add_circl",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":712,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":497,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["address",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["adjust",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["afauth",{"_index":264,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afterviewinit",{"_index":599,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["again",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":915,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["alphabet",{"_index":684,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["angular",{"_index":1248,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":750,"title":{},"body":{"components/CourseSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":271,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":645,"title":{},"body":{"components/CourseSelectionComponent.html":{},"dependencies.html":{}}}],["apikey",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["app.compon",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":996,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":181,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":532,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["approveal",{"_index":908,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["array",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1090,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1100,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["artifact",{"_index":1259,"title":{},"body":{"index.html":{}}}],["assign",{"_index":786,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["async",{"_index":608,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach_fil",{"_index":802,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":670,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["auth",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1022,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().getredirectresult",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().onauthstatechanged((us",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth/authguard.servic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["auth/firebase.auth",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["authdomain",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguardservic",{"_index":27,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["automat",{"_index":1256,"title":{},"body":{"index.html":{}}}],["b",{"_index":681,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":683,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["background",{"_index":557,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["badg",{"_index":1104,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["badge.component.css",{"_index":1105,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1106,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1103,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:10",{"_index":1112,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:11",{"_index":1114,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:12",{"_index":1111,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:9",{"_index":1113,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["bar",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["base",{"_index":797,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["be",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["befor",{"_index":653,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["between",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["blank",{"_index":511,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blob",{"_index":956,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":957,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":758,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":545,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["blueprint",{"_index":454,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["bodi",{"_index":980,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":285,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["bootstrap",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["box",{"_index":665,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":333,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":337,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":338,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["breadcrumbscompon",{"_index":150,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brows",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":854,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":332,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"index.html":{}}}],["buildhtml(messag",{"_index":1129,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":566,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":340,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":347,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["button",{"_index":346,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{}}}],["bypasssanit",{"_index":190,"title":{"pipes/BypassSanitize.html":{}},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["byu",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["byui",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["c.id",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call_missed_outgo",{"_index":535,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["campu",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["canactiv",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":964,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":637,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["card",{"_index":526,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["card'},{'nam",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":768,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":769,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":767,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":773,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:13",{"_index":774,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:15",{"_index":772,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:17",{"_index":777,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:24",{"_index":776,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:45",{"_index":775,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":751,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":273,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch((",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["catch(console.error",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catcherror",{"_index":988,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categori",{"_index":250,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["categories'},{'nam",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescompon",{"_index":152,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1093,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1089,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1092,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["chalk",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"index.html":{}}}],["charact",{"_index":643,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["check",{"_index":663,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{}}}],["check_circl",{"_index":531,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["check_circle_outlin",{"_index":533,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["cheerio",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["chip",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["chip.component.css",{"_index":564,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":565,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":563,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:12",{"_index":571,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:14",{"_index":576,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:18",{"_index":575,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:22",{"_index":572,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":574,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/CourseChipComponent.html":{},"coverage.html":{}}}],["choic",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["choice.text",{"_index":860,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["circl",{"_index":652,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":52,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1133,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["cli",{"_index":1249,"title":{},"body":{"index.html":{}}}],["click",{"_index":672,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["close",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":341,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud_download",{"_index":962,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["color",{"_index":541,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["compat",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":782,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":911,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["console.error(",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(`${course.course_cod",{"_index":1026,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(err",{"_index":1003,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["const",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":270,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":570,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":970,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":613,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["constructor(opt",{"_index":1047,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["constructor(priv",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":863,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":812,"title":{},"body":{"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["container'},{'nam",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["container.component.css",{"_index":813,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":814,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":811,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:13",{"_index":822,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:14",{"_index":821,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:20",{"_index":828,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:35",{"_index":833,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:46",{"_index":825,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:61",{"_index":830,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:71",{"_index":827,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":995,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["contentkey",{"_index":917,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["context",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":1099,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["control",{"_index":844,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":846,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":848,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["core",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":656,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["correctli",{"_index":784,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["count",{"_index":505,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["cours",{"_index":85,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["course.account",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":596,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1016,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":482,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":928,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":933,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1040,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":926,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1170,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1035,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":455,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_id",{"_index":467,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["course_nam",{"_index":456,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursechipcompon",{"_index":154,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":496,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseeditopen",{"_index":473,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseid",{"_index":494,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coursenam",{"_index":495,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseoverlay",{"_index":741,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":602,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1034,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1013,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1029,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":156,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":472,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["courseservic",{"_index":23,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courseeditopen",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.foreach(cours",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":809,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":878,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":879,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["courseset",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["coursesidebarcompon",{"_index":158,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":469,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["coverag",{"_index":1173,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["credenti",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":951,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":912,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":948,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":931,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":954,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["current",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["d3",{"_index":913,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":552,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["data",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["databaseurl",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":622,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["defin",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delet",{"_index":503,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["delete_outlin",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["depend",{"_index":182,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":331,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["desir",{"_index":512,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["desiredstatu",{"_index":826,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":336,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["details'},{'nam",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":865,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":866,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":864,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:11",{"_index":869,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":868,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:9",{"_index":867,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["determin",{"_index":524,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["dev",{"_index":1254,"title":{},"body":{"index.html":{}}}],["develop",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{}}}],["devmod",{"_index":1120,"title":{},"body":{"injectables/ToastService.html":{}}}],["direct",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1258,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1262,"title":{},"body":{"index.html":{}}}],["discov",{"_index":880,"title":{},"body":{"components/IssueListComponent.html":{},"injectables/KatanaService.html":{}}}],["discoveri",{"_index":1004,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissu",{"_index":967,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":974,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":405,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["discuss",{"_index":787,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["dismiss",{"_index":1131,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":464,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["dist",{"_index":1261,"title":{},"body":{"index.html":{}}}],["document",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["document.documentelement.style.setproperti",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":955,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1083,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1141,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":754,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["dogooglelogin",{"_index":268,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["domsanit",{"_index":380,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["don't",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":1136,"title":{},"body":{"injectables/ToastService.html":{}}}],["download",{"_index":950,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":888,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dsv",{"_index":914,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dynam",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":594,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/ToastService.html":{}}}],["e.messag",{"_index":1134,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1137,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1138,"title":{},"body":{"injectables/ToastService.html":{}}}],["e2",{"_index":1272,"title":{},"body":{"index.html":{}}}],["each",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["effect",{"_index":853,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":621,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":824,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["emit",{"_index":1081,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["enabl",{"_index":345,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["end",{"_index":1271,"title":{},"body":{"index.html":{}}}],["entir",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["environ",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1001,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["error('socket",{"_index":1031,"title":{},"body":{"injectables/KatanaService.html":{}}}],["event",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["execut",{"_index":1268,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1015,"title":{},"body":{"injectables/KatanaService.html":{}}}],["explor",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["express",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":538,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{}}}],["failed'].includes(this.issue.statu",{"_index":855,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fall",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":335,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":953,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["firebas",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["fix",{"_index":528,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["fixabl",{"_index":1033,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1038,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1044,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissu",{"_index":968,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":976,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["fixopt",{"_index":410,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["flag",{"_index":1264,"title":{},"body":{"index.html":{}}}],["flatissuedetail",{"_index":935,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["folder",{"_index":788,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["formcontrol",{"_index":1050,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["formgroup",{"_index":462,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{}}}],["formgroup(group",{"_index":1058,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["formsmodul",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["function",{"_index":1128,"title":{},"body":{"injectables/ToastService.html":{}}}],["further",{"_index":1274,"title":{},"body":{"index.html":{}}}],["gavel",{"_index":803,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":1247,"title":{},"body":{"index.html":{}}}],["get",{"_index":504,"title":{"index.html":{}},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbackgroundcolorclass",{"_index":713,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":558,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getbuttonclass",{"_index":816,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":823,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":609,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":714,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":514,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["getcourses(bodi",{"_index":978,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":567,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":573,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":889,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":896,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getmod",{"_index":890,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1158,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":733,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1161,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":715,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":529,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettextcolorclass",{"_index":716,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":543,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettoollist",{"_index":969,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":717,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":521,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["gettypeicon",{"_index":771,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["github:byuitechops/logg",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":507,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["go",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["goe",{"_index":1135,"title":{},"body":{"injectables/ToastService.html":{}}}],["googl",{"_index":275,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["green",{"_index":549,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["grey",{"_index":551,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["group",{"_index":1053,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["group[option.key",{"_index":1056,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["handl",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["header",{"_index":947,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":997,"title":{},"body":{"injectables/KatanaService.html":{}}}],["help",{"_index":1275,"title":{},"body":{"index.html":{}}}],["help_outlin",{"_index":804,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["here",{"_index":1101,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["home",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["home/tool",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["htmlelement",{"_index":752,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1091,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["http",{"_index":973,"title":{},"body":{"injectables/KatanaService.html":{}}}],["http://localhost:4200",{"_index":1255,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":971,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":986,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["https://katana",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.",{"_index":527,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["icon",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["id",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["identifi",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":921,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["immedi",{"_index":426,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["implement",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"pipes/BypassSanitize.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":542,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inject",{"_index":261,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":569,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{}}}],["input('sid",{"_index":1118,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1116,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1115,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('titlecolor",{"_index":1117,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert_drive_fil",{"_index":800,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instanceof",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instructor",{"_index":457,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["instructornam",{"_index":582,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["interfac",{"_index":401,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["isad",{"_index":610,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":616,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":817,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn't",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["issu",{"_index":63,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issue.formgroup",{"_index":1041,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1042,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":941,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.questionmodel",{"_index":1043,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":519,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.titl",{"_index":810,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":160,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":162,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuedetail",{"_index":815,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":164,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":45,"title":{"interfaces/IssueItem.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["issueitem'",{"_index":798,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":943,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":486,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":927,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":518,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["issueitem.issues.foreach(issu",{"_index":925,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issueitem.issues.includes(issu",{"_index":929,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":517,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":942,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":944,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.titl",{"_index":808,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1036,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issuelistcompon",{"_index":166,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":168,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":520,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["it'",{"_index":923,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["item",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["item_id",{"_index":468,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["item_typ",{"_index":799,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["j",{"_index":934,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["json.parse(event.data",{"_index":1025,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1017,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":500,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["karma",{"_index":1270,"title":{},"body":{"index.html":{}}}],["katana",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["katana.servic",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["katanaservic",{"_index":24,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.socket",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["key.includes('katana_cours",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["languag",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["last",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":603,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["left",{"_index":510,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["legend",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["lighten",{"_index":554,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{}}}],["link",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["list",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["list').subscribe((toollist",{"_index":992,"title":{},"body":{"injectables/KatanaService.html":{}}}],["list'},{'nam",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":873,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":874,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":872,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":875,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:12",{"_index":877,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:14",{"_index":876,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["live",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["load",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["local",{"_index":492,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["locat",{"_index":344,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["log",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{}}}],["logger",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":276,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["make",{"_index":641,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{}}}],["master",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["materializeact",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["messag",{"_index":1130,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":267,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{}}}],["mint",{"_index":559,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["miscellan",{"_index":1284,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":339,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalcont",{"_index":919,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1064,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["modalnam",{"_index":901,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["modalopen",{"_index":1063,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["modifi",{"_index":638,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":180,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"components/IssueCardComponent.html":{},"modules.html":{},"overview.html":{}}}],["moduleitem",{"_index":793,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["more",{"_index":673,"title":{},"body":{"components/CourseSelectionComponent.html":{},"index.html":{}}}],["more_vert",{"_index":963,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":945,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["name1",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":585,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":589,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":590,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":591,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":588,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":884,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":885,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":886,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":883,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":909,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:20",{"_index":893,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:22",{"_index":906,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:23",{"_index":910,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:24",{"_index":907,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:27",{"_index":898,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:35",{"_index":900,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:39",{"_index":894,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:51",{"_index":905,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:63",{"_index":897,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:71",{"_index":903,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:77",{"_index":895,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["navig",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"index.html":{}}}],["navigationend",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["newli",{"_index":477,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["newstatu",{"_index":834,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["newwidth",{"_index":760,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1252,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":611,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":818,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["none",{"_index":584,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["null",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["number",{"_index":459,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["numer",{"_index":679,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":936,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":487,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1086,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":843,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["observ",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["octet/stream",{"_index":958,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":918,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["onc",{"_index":674,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":819,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":829,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":778,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{}}}],["onlyself",{"_index":847,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onsubmit",{"_index":1065,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":597,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":568,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":342,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["openmodal(modalnam",{"_index":899,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["option",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["option.descript",{"_index":859,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1055,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["option.titl",{"_index":858,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":831,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":460,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1078,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":839,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.categories.push(category.id",{"_index":1094,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options.servic",{"_index":461,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1087,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsservic",{"_index":1051,"title":{"injectables/OptionsService.html":{}},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"coverage.html":{}}}],["optionsviewcompon",{"_index":170,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":465,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["order",{"_index":676,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":779,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["outsid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["overlay",{"_index":753,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":756,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":757,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1280,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1205,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/IssueCardComponent.html":{}}}],["pair",{"_index":937,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":938,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":939,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":537,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["param",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["parser",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["pathmatch",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["piec",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pipe",{"_index":371,"title":{"pipes/BypassSanitize.html":{}},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":379,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["place",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["pleas",{"_index":862,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["popul",{"_index":639,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["posit",{"_index":671,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":920,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pre",{"_index":1014,"title":{},"body":{"injectables/KatanaService.html":{}}}],["prevent",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["privat",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["process",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["processingmessag",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["prod",{"_index":1263,"title":{},"body":{"index.html":{}}}],["product",{"_index":1265,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1246,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["prop",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["protractor",{"_index":1273,"title":{},"body":{"index.html":{}}}],["provid",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"overview.html":{}}}],["providedin",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":263,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["queri",{"_index":650,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":792,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":801,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1039,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quiz",{"_index":790,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quizquest",{"_index":791,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["quizz",{"_index":789,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["rc.11",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1276,"title":{},"body":{"index.html":{}}}],["red",{"_index":555,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["redirect",{"_index":274,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["redirectto",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":479,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["refresh",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["reject",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["reload",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"index.html":{}}}],["remov",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["remove_circl",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":742,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":718,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":502,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["render",{"_index":781,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":647,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["report",{"_index":952,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["request",{"_index":1095,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["requir",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":994,"title":{},"body":{"injectables/KatanaService.html":{}}}],["resolve(data",{"_index":1000,"title":{},"body":{"injectables/KatanaService.html":{}}}],["result",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":989,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retriev",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["return",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["revers",{"_index":675,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["right",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":57,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{}}}],["rxj",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":990,"title":{},"body":{"injectables/KatanaService.html":{}}}],["safehtml",{"_index":378,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["same",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{}}}],["sanitize.pip",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitize.pipe.t",{"_index":373,"title":{},"body":{"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["sanitize.pipe.ts:12",{"_index":376,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["save",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["scaffold",{"_index":1257,"title":{},"body":{"index.html":{}}}],["search",{"_index":605,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["search_term",{"_index":644,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":604,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchtext",{"_index":606,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{}}}],["select",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selectedcategori",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedcours",{"_index":474,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedcourse(cours",{"_index":478,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selecteddiscoveropt",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedfixopt",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":471,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["selectedmod",{"_index":887,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectedtool",{"_index":438,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["selection.component.css",{"_index":600,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":601,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":598,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:10",{"_index":1145,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:103",{"_index":617,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:107",{"_index":618,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:11",{"_index":630,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:12",{"_index":631,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":624,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":629,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":627,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":628,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":626,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":614,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":625,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":615,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:67",{"_index":620,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["selection/tool",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":891,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":902,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":655,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["sent",{"_index":1132,"title":{},"body":{"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":882,"title":{},"body":{"components/IssueListComponent.html":{}}}],["serv",{"_index":1253,"title":{},"body":{"index.html":{}}}],["server",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{}}}],["serverdomain",{"_index":966,"title":{},"body":{"injectables/KatanaService.html":{}}}],["servic",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcategori",{"_index":437,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":481,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["sessionstorage.selectedtool",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":499,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["set",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["setapprov",{"_index":892,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setapproved(newstatu",{"_index":904,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["setissuestatu",{"_index":820,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":832,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":743,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":735,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1163,"title":{},"body":{"injectables/ToolService.html":{}}}],["setter",{"_index":476,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["settimeout",{"_index":1140,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":949,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["shown",{"_index":525,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{}}}],["side",{"_index":1107,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["sidebar",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.component.css",{"_index":739,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":740,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":738,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:12",{"_index":745,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":749,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":746,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":748,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":747,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sign",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["signinwithredirect(provid",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":269,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["singl",{"_index":508,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["skip",{"_index":534,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["socket",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1024,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":1012,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":1030,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1023,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sort",{"_index":668,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":612,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":619,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":1006,"title":{},"body":{"injectables/KatanaService.html":{}}}],["specifi",{"_index":513,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["split",{"_index":581,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../environment.prod.t",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.auth.t",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/authguard.service.t",{"_index":262,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/auth/authguard.service.ts:11",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:12",{"_index":272,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:19",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:57",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:69",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/authguard.service.ts:89",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/auth/firebase.auth.t",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.t",{"_index":330,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:22",{"_index":343,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:30",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:36",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:43",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/breadcrumbs/breadcrumbs.component.ts:52",{"_index":348,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["src/app/categories/categories.component.t",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/categories/categories.component.ts:10",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:12",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:20",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/cours",{"_index":562,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/course.service.t",{"_index":453,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"coverage.html":{}}}],["src/app/course.service.ts:108",{"_index":722,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:126",{"_index":725,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:136",{"_index":723,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:151",{"_index":724,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:165",{"_index":721,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:44",{"_index":730,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:45",{"_index":727,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:46",{"_index":731,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:47",{"_index":729,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:48",{"_index":728,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:50",{"_index":734,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:55",{"_index":736,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:63",{"_index":737,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:65",{"_index":719,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:76",{"_index":720,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":726,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/issu",{"_index":766,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":965,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:130",{"_index":977,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:17",{"_index":972,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:25",{"_index":985,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:30",{"_index":981,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:42",{"_index":979,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:63",{"_index":975,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/opt",{"_index":372,"title":{},"body":{"pipes/BypassSanitize.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["src/app/options.service.t",{"_index":1045,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{},"coverage.html":{}}}],["src/app/options.service.ts:12",{"_index":1048,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/options.service.ts:17",{"_index":1049,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/options.service.ts:7",{"_index":1059,"title":{},"body":{"injectables/OptionsService.html":{}}}],["src/app/stat",{"_index":1102,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["src/app/toast.service.t",{"_index":1119,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:12",{"_index":1127,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:38",{"_index":1125,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:9",{"_index":1123,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":1144,"title":{},"body":{"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:100",{"_index":1162,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:104",{"_index":1164,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:107",{"_index":1148,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:49",{"_index":1151,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:79",{"_index":1152,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:80",{"_index":1153,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:81",{"_index":1157,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:84",{"_index":1156,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:86",{"_index":1149,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:87",{"_index":1150,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:88",{"_index":1154,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:89",{"_index":1155,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:91",{"_index":1159,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:95",{"_index":1160,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/environments/environment.prod.t",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":127,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["stat",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":172,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1108,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statement",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1109,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":463,"title":{},"body":{"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["statuscolor",{"_index":544,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statuscolors[statu",{"_index":556,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicon",{"_index":530,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["statusicons[statu",{"_index":540,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["still",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":493,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["storagebucket",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":1260,"title":{},"body":{"index.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"pipes/BypassSanitize.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subaccount",{"_index":607,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["subscrib",{"_index":999,"title":{},"body":{"injectables/KatanaService.html":{}}}],["support",{"_index":1277,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":664,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["svg",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":851,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["syllabu",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tabl",{"_index":640,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["tag_fac",{"_index":881,"title":{},"body":{"components/IssueListComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tempvalu",{"_index":466,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["term",{"_index":458,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["test",{"_index":1267,"title":{},"body":{"index.html":{}}}],["text",{"_index":546,"title":{},"body":{"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{}}}],["then((cours",{"_index":666,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["thing",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this._sanitizer.bypasssecuritytrusthtml(v",{"_index":382,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["this._selectedcategori",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":475,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitem",{"_index":484,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":485,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this._selectedtool",{"_index":439,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.afauth.auth",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":661,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.closemod",{"_index":930,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":593,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":578,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":583,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":587,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":580,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":592,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":595,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":667,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":678,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":680,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":522,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.courseservice.addcourse(cours",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courseeditopen",{"_index":1007,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.courses.find(c",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":932,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":764,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1084,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1169,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":759,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1027,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":765,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":763,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1028,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.foreach(issueitem",{"_index":924,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":870,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":871,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":498,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.coursesobj[key",{"_index":489,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.dogooglelogin",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.formgroup",{"_index":1079,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1088,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":523,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.http.get('/tool",{"_index":991,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/cours",{"_index":998,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":837,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":840,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":845,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":857,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":838,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":841,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":849,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":842,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":856,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":836,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1096,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":658,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.katanaservice.gettoollist",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastsortedbi",{"_index":677,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.modalopen",{"_index":1082,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1085,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1052,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["this.optionmodel",{"_index":1077,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1080,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1054,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["this.removecourse(cours",{"_index":501,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.router.navig",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1097,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":654,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":662,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":646,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":651,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":515,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":516,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedissueitem",{"_index":483,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["this.selectedmod",{"_index":916,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.signout",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.sockets.push(socket",{"_index":1011,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":659,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":660,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.devmod",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toast('y",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1002,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1009,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1008,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1020,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1019,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":993,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":785,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":794,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["three",{"_index":642,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["through",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["throwerror",{"_index":987,"title":{},"body":{"injectables/KatanaService.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["titlecolor",{"_index":1110,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":1121,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1139,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1124,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1122,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1126,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":26,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":850,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toggl",{"_index":755,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1046,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["tool",{"_index":73,"title":{"interfaces/Tool.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["tool.icon",{"_index":1146,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":442,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["tool.servic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1147,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1018,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolcategori",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolid",{"_index":1005,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["toolselectioncompon",{"_index":175,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":25,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1172,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1098,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":861,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toolviewopen",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":783,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["toolview",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":176,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["top",{"_index":796,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["total",{"_index":509,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["track",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":374,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["transform(v",{"_index":375,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["true",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"pipes/BypassSanitize.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeicon",{"_index":770,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":807,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["types/d3",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":795,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["unapprov",{"_index":922,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["undefin",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":506,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["unexpectedli",{"_index":1032,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["unit",{"_index":1266,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":536,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["up",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["updat",{"_index":480,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{}}}],["uri",{"_index":657,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":349,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{}}}],["us",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"index.html":{}}}],["user",{"_index":265,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["user'",{"_index":491,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["user.email.includes('@byui.edu",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["userdetail",{"_index":266,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1021,"title":{},"body":{"injectables/KatanaService.html":{}}}],["v",{"_index":377,"title":{},"body":{"pipes/BypassSanitize.html":{}}}],["valid",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["validators.requir",{"_index":1057,"title":{},"body":{"classes/OptionModel.html":{},"injectables/OptionsService.html":{}}}],["valu",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["variabl",{"_index":1181,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifi",{"_index":277,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["version",{"_index":1250,"title":{},"body":{"index.html":{}}}],["via",{"_index":1269,"title":{},"body":{"index.html":{}}}],["view",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view'},{'nam",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":1061,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1062,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1060,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:10",{"_index":1165,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:12",{"_index":1167,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:13",{"_index":1168,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:15",{"_index":1166,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:17",{"_index":1075,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:18",{"_index":1074,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:19",{"_index":1071,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:22",{"_index":1073,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:23",{"_index":1066,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:25",{"_index":1076,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:26",{"_index":1072,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:41",{"_index":1070,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:45",{"_index":1067,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:50",{"_index":1068,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:54",{"_index":1069,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/bypass",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"pipes/BypassSanitize.html":{},"coverage.html":{}}}],["view/opt",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":805,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":806,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":623,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":634,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('issuedetail",{"_index":835,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":636,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":635,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":632,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":633,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":780,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["void",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["warn",{"_index":539,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{}}}],["wave",{"_index":852,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":984,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/discov",{"_index":1010,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/tool/fix",{"_index":1037,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":334,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whether",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["white",{"_index":560,"title":{},"body":{"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":648,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window.alert('y",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["window.location.hostname.replace(/www",{"_index":982,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/DiscoverOption.html":{},"interfaces/FixOption.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":762,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":983,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":577,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":959,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["winter",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["without",{"_index":946,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["wrapper",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["ws",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService, IssueItem } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './auth/authguard.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /***************************************************************************************\n     * Constructor for the AppComponent class. Sets up listeners to handle route changes,\n     * clearing out data to prevent issues between routes.\n     ***************************************************************************************/\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseEditOpen = false;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Retrieve the tool list on start\n        this.katanaService.getToolList()\n            .catch((e) => {\n                this.toastService.devMode = true;\n                this.toastService.toast('You are in development mode.');\n                console.error(e);\n            });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n\n    title = 'app';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLoading Tools...\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading Tools...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                BypassSanitize\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport 'materialize-css';\nimport { MaterializeModule } from 'angular2-materialize';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './auth/firebase.auth';\nimport { AuthGuardService } from './auth/authguard.service';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { BypassSanitize } from './options-view/bypass-sanitize.pipe';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools',\n        component: ToolSelectionComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CourseSidebarComponent,\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolViewComponent,\n        CourseSelectionComponent,\n        CourseChipComponent,\n        IssueContainerComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        BypassSanitize,\n        StatBadgeComponent,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpModule,\n        HttpClientModule,\n        MaterializeModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authguard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authguard.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the AuthGuardService. Catches the redirect from\ngoogle login and verifies that the user is logged in with a valid\nBYUI google account.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Used to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Redirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Signs the user out of Katana and redirects them to the Google login\npage.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/authguard.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private user: Observable;\n    private userDetails: User = null;\n\n    /**\n     * Constructor for the AuthGuardService. Catches the redirect from\n     * google login and verifies that the user is logged in with a valid\n     * BYUI google account.\n     */\n    constructor(public afAuth: AngularFireAuth, public router: Router) {\n        this.user = afAuth.authState;\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                this.userDetails = user;\n            } else {\n                this.userDetails = null;\n            }\n            this.router.navigate(['/']);\n        })\n\n        auth().onAuthStateChanged((user) => {\n            // If there isn't a user signed in, redirect to login\n            if (!user) {\n                this.doGoogleLogin();\n\n                // If there is a user signed in, but it isn't a BYUI address, same thing\n            } else if (!user.email.includes('@byui.edu')) {\n                window.alert('You must use a BYU-I google account!');\n                this.signOut()\n                    .then(this.doGoogleLogin)\n\n                // Set the current user to who is signed in\n            } else {\n                auth().updateCurrentUser(user);\n            }\n        });\n\n    }\n\n    /**\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     */\n    canActivate(): boolean {\n        if (this.userDetails !== null && this.userDetails.email.includes('@byui.edu')) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     */\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            let provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                })\n        });\n    }\n\n    /**\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     */\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/breadcrumbs/breadcrumbs.component.ts:30\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from '../auth/authguard.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button.\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BypassSanitize.html":{"url":"pipes/BypassSanitize.html","title":"pipe - BypassSanitize","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  BypassSanitize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/options-view/bypass-sanitize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        bypassSanitize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/bypass-sanitize.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeHtml\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'bypassSanitize'\n})\nexport class BypassSanitize implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/categories/categories.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/categories/categories.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/categories/categories.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /************************************************************\n     * This sets the selected category on the Tool service.\n     * @param {object} category - The {@link Category} to be set as the selected category\n     * @returns {false} - This is so it doesn't refresh the entire page\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n    fixMessage?: string\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object,\n    optionModel?: OptionModel,\n    formGroup?: FormGroup,\n    optionValues?: any,\n    tempValues?: any\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssueCount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the background color for an issue card.\n     **********************************************************************/\n    getBackgroundColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-chip/course-chip.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-chip/course-chip.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n    @Input() course: Course;\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private router: Router) { }\n\n    openCourse() {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    buildInstructorName() {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n\n        return instructorName;\n    }\n\n    getIssueCount(status) {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-selection/course-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-selection/course-selection.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-selection/course-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { KatanaService } from '../katana.service';\nimport { Course, CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent implements AfterViewInit {\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    @ViewChild('term') private term: ElementRef;\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    @ViewChild('searchText') private searchText: ElementRef;\n    @ViewChild('searchBy') private searchBy: ElementRef;\n\n    searching: boolean = false;\n    lastSortedBy: string;\n\n    courseResults: Course[] = [];\n\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /*************************************************************************\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     *************************************************************************/\n    async getCourses() {\n        /* Canvas makes you have an input of at least three characters to use the search_term in the API */\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            /* Replace any whitespaces with '%20' for the query parameter */\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            /* Set the loading circle to display before retrieving the courses */\n            this.searching = true;\n\n            /* Send the search parameters to the katana service to build the correct URI */\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /******************************************************************\n     * Sorts the courseResults array according to the \n     * course attribute defined by 'param'\n     * @param {string} param - The object key to be sorted\n     * @returns {number} - The new position of the object in the array\n     ******************************************************************/\n    sortBy(param) {\n        /* If they click on the same category more than once, it will reverse the order of the results */\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        /* Sort numerically */\n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            /* Sort alphabetically */\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /************************************************************\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course - The course that is being checked\n     * @returns {boolean} - Whether the course is already added\n     ************************************************************/\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n\n    ngAfterViewInit() { }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseEditOpen\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:65\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:165\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseEditOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseEditOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:50\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:63\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object,\n    optionModel?: OptionModel,\n    formGroup?: FormGroup,\n    optionValues?: any,\n    tempValues?: any\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssueCount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the background color for an issue card.\n     **********************************************************************/\n    getBackgroundColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-sidebar/course-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-sidebar/course-sidebar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-sidebar/course-sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService, Course } from '../course.service';\nimport { ToolService } from '../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n    fixMessage?: string\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n    fixMessage?: string\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object,\n    optionModel?: OptionModel,\n    formGroup?: FormGroup,\n    optionValues?: any,\n    tempValues?: any\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssueCount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the background color for an issue card.\n     **********************************************************************/\n    getBackgroundColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-card/issue-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-card/issue-card.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService, IssueItem } from '../course.service';\n\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    // Issue Item\n    @Input() issueItem: IssueItem;\n    // Card Position\n    @Input() position: number;\n    // Reference to the typeIcon\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    constructor(public courseService: CourseService) { }\n\n    /***********************************************************************\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly.\n     **********************************************************************/\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     **********************************************************************/\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-container/issue-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-container/issue-container.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-container/issue-container.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Issue, CourseService } from '../course.service';\nimport { OptionModel } from '../options.service';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    @Input() // Issue\n    issue: Issue;\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) {\n    }\n\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    // TODO Switch this to use the methods from course service \n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                \n            \n        \n\n\n    \n\n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                            {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-details/issue-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-details/issue-details.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-details/issue-details.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OptionModel } from './options.service';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Issue {\n    title: string,\n    status: string,\n    display: string,\n    details: object,\n    optionModel?: OptionModel,\n    formGroup?: FormGroup,\n    optionValues?: any,\n    tempValues?: any\n}\n\nexport interface IssueItem {\n    title: string,\n    course_id: number,\n    item_id: number,\n    category: string,\n    link: string,\n    issues: Issue[]\n}\n\nexport interface Course {\n    id: number,\n    course_name: string,\n    course_code: string,\n    instructor: string,\n    issueItems: IssueItem[],\n    url: string\n    account?: string,\n    term?: string\n    blueprint?: boolean,\n    processing?: boolean,\n    error?: string,\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    coursesObj: object = {};\n    _selectedCourse: Course;\n    selectedIssueItem: IssueItem;\n    courseSelectionOpen: boolean = false;\n    courseEditOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    // This setter changes the selected item to the first item of the newly selected course\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    constructor() { }\n\n    /*****************************************************************\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    *****************************************************************/\n    addCourse(course: Course) {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /*****************************************************************\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     *****************************************************************/\n    removeCourse(course: Course) {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getCourseIssueCount(status) {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /*****************************************************************\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     ****************************************************************/\n    getTotalIssueCount(status) {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     **********************************************************************/\n    getStatusIcon(status) {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     **********************************************************************/\n    getTextColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /***********************************************************************\n     * This is used to determine the background color for an issue card.\n     **********************************************************************/\n    getBackgroundColorClasses(status) {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\n\nexport class IssueListComponent implements OnInit {\n\n    constructor(public courseService: CourseService) { }\n\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-nav/issue-nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                selectedModal\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                getModal\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                            \n                                setApproved\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-nav/issue-nav.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal(modalName: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalName\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setApproved\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetApproved(newStatus: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedModal:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'approveAll'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/issue-nav/issue-nav.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    selectedModal: string = 'approveAll';\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n    getModal() {\n        return this.selectedModal;\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     ****************************************************************/\n    openModal(modalName) {\n        this.selectedModal = modalName;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /*****************************************************************\n     * Approves all issues for the course to be fixed if possible, ignoring skipped and fixed items.\n     * @param {string} newStatus - Either 'approved' or 'unapproved', determines the new status\n     * Process:\n     * 1. For each issue items, get its issues\n     * 2. For each issue on the issue item, see if it is skipped or fixed\n     * 3. If not, set it's status to approved\n     ****************************************************************/\n    setApproved(newStatus: string) {\n        this.courseService.selectedCourse.issueItems.forEach(issueItem => {\n            issueItem.issues.forEach(issue => {\n                if (newStatus === 'approved' && issue.status === 'untouched') {\n                    issue.status = newStatus;\n                } else if (newStatus === 'untouched' && issue.status === 'approved') {\n                    issue.status = newStatus;\n                }\n            });\n        });\n    }\n\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService, IssueItem, Course } from './course.service';\nimport { ToolService, Tool } from './tool.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class KatanaService {\n\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private toastService: ToastService) { }\n\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise((resolve, reject) => {\n            this.http.get('/tool-list').subscribe((toolList: any): any => {\n                this.toolService.toolList = toolList;\n                resolve();\n            }, reject);\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n            this.http.post('/course-retrieval', body, { headers: headers }).subscribe(\n                (data) => {\n                    resolve(data);\n                },\n                (err) => {\n                    this.toastService.toastError(err);\n                    console.error(err);\n                });\n        });\n    }\n\n    /*****************************************************************\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     ****************************************************************/\n    discoverIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/discover`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n\n    /*****************************************************************\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     ****************************************************************/\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            this.courseService.courseEditOpen = false;\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/tool/fix`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    // Save the option values for each issue, but remove the formGroup and questionModel\n                    course.issueItems.forEach(issueItem => {\n                        issueItem.issues.forEach(issue => {\n                            if (issue.formGroup) {\n                                issue.optionValues = issue.formGroup.value;\n                                delete issue.formGroup;\n                                delete issue.questionModel;\n                            }\n                        });\n                    });\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                console.error(err);\n            };\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/options.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OptionsService {\n    constructor() { }\n}\n\nexport class OptionModel {\n    options = [];\n    constructor(options) {\n        this.options = options;\n    }\n\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsService.html":{"url":"injectables/OptionsService.html","title":"injectable - OptionsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  OptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/options.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/options.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OptionsService {\n    constructor() { }\n}\n\nexport class OptionModel {\n    options = [];\n    constructor(options) {\n        this.options = options;\n    }\n\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/options-view/options-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                modalOpen\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/options-view/options-view.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OptionModel } from '../options.service';\nimport { ToolService, DiscoverOption } from '../tool.service';\nimport { CourseService } from '../course.service';\nimport { KatanaService } from '../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\n\nexport class OptionsViewComponent {\n\n    options: DiscoverOption[];\n    optionModel: OptionModel;\n    formGroup;\n\n    // This allows the modal to open and close\n    modalActions = new EventEmitter();\n    modalOpen: boolean = false;\n\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /*****************************************************************\n     * Opens and closes the modal. Populates the modal based on the input.\n     * @param {string} contentKey - Should match one of the keys of the modalContents property on this component\n     * Process:\n     * 1. Sets the contents of the modal based on the provided contentKey\n     * 2. Emits the \"open\" event for the modal (or close, for the close method)\n     ****************************************************************/\n    openModal() {\n        this.modalOpen = true;\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n    closeModal() {\n        this.modalOpen = false;\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    modalIsOpen() {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    onSubmit() {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stat-badge/stat-badge.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/stat-badge/stat-badge.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/stat-badge/stat-badge.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    @Input('statTitle') statTitle: string;\n    @Input('statCount') statCount: number;\n    @Input('titleColor') titleColor: string = 'white';\n    @Input('side') side: string = 'right';\n\n    constructor() { }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                devMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devMode:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    devMode: boolean = false;\n    constructor() { }\n\n    toastError(e) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${message}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n    fixMessage?: string\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-selection/tool-selection.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-selection/tool-selection.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-selection/tool-selection.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../tool.service';\nimport { CourseService } from '../course.service';\n\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                selectedFixOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFixOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedFixOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:81\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:91\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:95\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:100\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:104\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\n\nexport interface DiscoverOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface FixOption {\n    title: string,\n    key: string,\n    description: string,\n    type: string,\n    choices: object[],\n    defaultText?: string,\n    required: boolean\n}\n\nexport interface Tool {\n    id: string,\n    title: string,\n    description: string,\n    icon: string,\n    categories: string[],\n    toolCategory: string,\n    discoverOptions: DiscoverOption[],\n    fixOptions: object[],\n    fixMessage?: string\n};\n\nexport interface Category {\n    icon: string,\n    title: string,\n    toolCategory: string\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToolService {\n\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'title',\n        title: 'Titles',\n        toolCategory: 'titles'\n    }, {\n        icon: 'create',\n        title: 'Create',\n        toolCategory: 'create'\n    }, {\n        icon: 'delete_outline',\n        title: 'Remove',\n        toolCategory: 'remove'\n    }, {\n        icon: 'language',\n        title: 'Course Settings',\n        toolCategory: 'courseSettings'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }, {\n        icon: 'explore',\n        title: 'Syllabus',\n        toolCategory: 'syllabus'\n    }];\n\n    processing: boolean = false;\n    processingMessage: string = '';\n    toolViewOpen: boolean = false;\n\n    // The Tool List (set immediately by Katana service when server is live)\n    toolList: Tool[] = [];\n\n    _selectedCategory: Category;\n    _selectedTool: Tool;\n    selectedDiscoverOptions;\n    selectedFixOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    constructor(private router: Router) {\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-view/tool-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-view/tool-view.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-view/tool-view.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { ToolService } from '../tool.service';\n\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/auth/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/auth/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/app/options-view/bypass-sanitize.pipe.ts\n            \n            \n                pipe\n            \n            \n                BypassSanitize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/options.service.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/options.service.ts\n            \n            \n                injectable\n            \n            \n                OptionsService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : ^3.2.0\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis project was generated with Angular CLI version 6.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nAppModule -->\n\nBreadcrumbsComponent->AppModule\n\n\n\n\n\nBypassSanitize\n\nBypassSanitize\n\nAppModule -->\n\nBypassSanitize->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nAppModule -->\n\nCourseChipComponent->AppModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nAppModule -->\n\nCourseSelectionComponent->AppModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nAppModule -->\n\nCourseSidebarComponent->AppModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nAppModule -->\n\nIssueCardComponent->AppModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nAppModule -->\n\nIssueContainerComponent->AppModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nAppModule -->\n\nIssueDetailsComponent->AppModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nAppModule -->\n\nIssueListComponent->AppModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nAppModule -->\n\nIssueNavComponent->AppModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nAppModule -->\n\nOptionsViewComponent->AppModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nAppModule -->\n\nStatBadgeComponent->AppModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nAppModule -->\n\nToolSelectionComponent->AppModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nAppModule -->\n\nToolViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/auth/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: \"AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc\",\n        authDomain: \"katana-24a36.firebaseapp.com\",\n        databaseURL: \"https://katana-24a36.firebaseio.com\",\n        projectId: \"katana-24a36\",\n        storageBucket: \"katana-24a36.appspot.com\"\n    }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
